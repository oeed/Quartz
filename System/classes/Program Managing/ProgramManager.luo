
class ProgramManager 
    
	property Table programs = {}
	property QuartzApplication owner


    function initialise( owner )
        self.owner = owner
    end

    function run( program )
        program.programManager = self
        local programView = ProgramView( { x = 1, y = 15, width = "320", height = 200-14, program = program } )
        program.programView = programView
        local programs = self.programs
        table.insert( programs, program )
        program.index = #programs
        program:run()
        self.owner.container:insert( programView )
        self.application.event:handleEvent( ProgramOpenedInterfaceEvent( program ) )
    end

    function onProgramClosed( closingProgram )
        local programs = self.programs
        local programOrder = program
        local previousIndex
        local changeIndex = false
        for i, program in ipairs( programs ) do
            if changeIndex then
                program.index = i - 1
            elseif program == closingProgram then
                previousIndex = i
                table.remove( programs, i )
                changeIndex = true
            end
        end
        
        local programView = closingProgram.programView
        if programView.isFocused then
            programView:closeFlyUp(function()
                if #programs == 0 then
                    -- TODO: activate the home
                    self.application.container.homeContainer:focus()
                elseif programs[previousIndex] then
                    programs[previousIndex]:focus()
                    log("activate "..previousIndex)
                elseif programs[previousIndex - 1] then
                    log("activate "..previousIndex - 1)
                    programs[previousIndex - 1]:focus()
                end
            end)
        end
    end

    function update()
        local programs = self.programs
        for i, program in ipairs( programs ) do
            program:update()
        end
    end

end