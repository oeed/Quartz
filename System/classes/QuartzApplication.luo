class QuartzApplication extends Application 
	
	default name = "Quartz"
	default interfaceName = "quartz"
	property ProgramManager programManager

	-- For the demo the below code isn't really needed, it's just for debug

	--[[
		@constructor
		@desc Initialise the custom application
	]]
	function initialise()
		super()
		self.programManager = ProgramManager( self )
		self:event( CharacterEvent, self.onChar )
		self.programManager:run( SilicaProgram( Bundle( "/applications/About.application" ) ) )
	end

	function initialiseSettings()
		self.settings = QuartzSettings()
	end

	function update()
		super()
		self.programManager:update()
	end

	--[[
		@instance
		@desc React to a character being fired
		@param [Event] event -- description
		@return [boolean] stopPropagation
	]]
	function onChar( CharacterEvent event, Event.phases phase )
		if event.character == 'r' then
			-- self.programManager:run( Program( Bundle( "/applications/Test.application" ) ) )
			self.programManager:run( SilicaProgram( Bundle( "/applications/About.application" ) ) )
		elseif event.character == 'f' then
			-- self.programManager:run( Program( Bundle( "/applications/Test.application" ) ) )
			self.programManager:run( SilicaProgram( Bundle( "/applications/Files.application" ) ) )
		elseif event.character == '\\' then
			os.reboot()
		end
		return false
	end

end