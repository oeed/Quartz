function _C_0(m)error(m,3)end function _C_1(_,k)_C_0("attempted to access non-existant enum '"..k.."' of class '"..tostring(_).."'")end function _C_2(_,k,v)_C_0("attempted to mutate class '"..tostring(_).."' using key '"..k.."'")end function _C_3(_)_C_0("attempted to access value from interface '"..tostring(_).."'")end function _C_4(_,k)_C_0("attempted to mutate interface '"..tostring(_).."' using key '"..k.."'")end function _C_5()return function(_,k)_C_0("attempted to access non-existant property '"..k.."' of '"..tostring(_).."'")end end function _C_6()return function(_,k,v)_C_0("attempted to set non-existant property '"..k.."' of '"..tostring(_).."' to '"..v.."'")end end function _C_7(_,k,v)_C_0("attempted to set value of function '"..k.."' of '"..tostring(_).."' to '"..v.."'")end function _C_8(_,k)_C_0("attempted to access non-existant key '"..k.."' from enum '"..tostring(_).."'")end function _C_9(_,k,v)_C_0("attempted to mutate enum '"..tostring(_).."' key '"..tostring(k).."' to '"..v.."'")end function _C_A(_,k)if k=="super"then _C_0("tried to access super of '" .. tostring(_) .. "', which does not have a super")else _C_0("attempted to access invalid index '" .. k .. "' of super '" .. tostring(_) .. "'")end end function _C_B(_,k,v)_C_0("attempted to mutate super '"..tostring(_).."' using key '"..k.."'")end function _C_C(_,k,v)_C_0("attempted to set read only property '"..k.."' of '"..tostring(_).."' to '"..v.."'")end function _C_D(_,k,t,v)_C_0("attempted to set property '"..k.."' of '"..tostring(_).."' to an invalid value '"..tostring(v).."', expected type '"..t.."'")end function _C_E(_,k,t,v)_C_0("default value of property '"..k.."' of '"..tostring(_).."' was an invalid value '"..tostring(v).."', expected type '"..t.."'")end function _C_F(_,k,f,t,v)_C_0("attempted to pass parameter '"..k.."' of '"..tostring(_).."."..f.."' an invalid value '"..tostring(v).."', expected type '"..t.."'")end function _C_G(_,k,t,v)_C_0("enum '".._.."' has an invalid value '"..tostring(v).."' for key '"..k.."', expected type '"..t.."'")end function _C_H(_,k,t,v)_C_0("return value from getter '"..k.."' of '"..tostring(_).."' was an invalid value '"..tostring(v).."', expected type '"..t.."'")end function _C_I(_,k,i,v,t)_C_0("return value "..i.." from function '"..k.."' of '"..tostring(_).."' was an invalid value '"..tostring(v).."', expected type '"..t.."'")end function _C_J(f,e,...)return setfenv(f, e)(...)end function _C_K(name, startLine, str, env)
	local func, err = loadstring(str)
	if not func then
		local line, message = err:match("^%[.+%]:(%d+): (.+)$")
		if not line then
			line, message = err:match("^.+:%d+: %[.+%]:(%d+): (.+)$")
		end
		if line then
			error(name .. ":" .. startLine + line - 1 .. ": " .. message, 0)
		else
			error(err, 0)
		end
	end
	local okay, res = xpcall(setfenv(func, env), function(err)
		local lineNumber, msg = err:match(":(%d+): (.*)$")
		if not lineNumber then
			return err
		else
			return name .. ":" .. lineNumber + startLine - 1 .. ": " .. msg
		end
	end)
	if not okay then
		print(res)
		--error(res, 0)
	else
		return res
	end
end local _C_L=setmetatable({},{__mode="k"})local _C_M=setmetatable({},{__mode="k"})function typeOf(i,t)local j=_C_L[i]if j then return j[t] and true or false else local s=_C_M[i]if s then return s[t] and true or false end return false end end local function _C_O(instance, funcs, instanceEnvironment, supers, supers__tostrings)
	local isFirst = true
	local superFuncs = {}
	local stack = {}
	local n = 1
	local f
	for i = 1, #supers + 1 do
		local func = funcs[i]
		if func then
			if not isFirst then
				stack[n] = {i, func}
				n = n + 1
			else
				f = func
				isFirst = false
			end
		end
	end
	for i = n - 1, 1, -1 do
		local details = stack[i]
		local superI = details[1]
		local func = setfenv(details[2](supers[superI], superFuncs[i + 1]), instanceEnvironment)
		local super = superFuncs[i + 1]
		local __index
		if super then
			__index = function(_, k, v)
				if k == "super" then
					return super
				else
					_C_B(_, k, v) -- _C_error_function_super_no_index
				end
			end
		else
			__index = _C_B
		end
		superFuncs[i] = setmetatable({}, {__index = __index, __newindex = _C_8, __tostring = supers__tostrings[superI], __call = function(_, ...)return func(super, ...) end})
	end
	return setfenv(f(instance, superFuncs[1]), instanceEnvironment)
end

local function _C_N(instance, instanceType, instanceVariables, instanceFunctions, instanceEventHandles, defaultValues, defaultTypes, environmentClass, name, instance__index, instance__newindex, supers_names, propertyMethodFunctions, typeOfTree, ...)
	(instanceType == "static" and _C_M or _C_L)[instance] = typeOfTree -- instancesID/staticInstancesID
	local instanceEnvironment
	if instanceVariables then
		instanceEnvironment = setmetatable({}, {
			__index = function(_, k)
				if not instanceVariables[k] then -- if an instance variable is nil and there is an upvalue local with the same name the instance variable will hide the upvalue, even when nil
					return environmentClass[k]
				end
			end,
			__newindex = function(_, k, v)
				if not instanceVariables[k] then -- all instance variables hide upvalues, regardless of their value
					environmentClass[k] = v -- TODO: should this be the class environment, or _G?
				else
					rawset(_, k, v)
				end
			end
		})
		for k, v in pairs(instanceVariables) do
			instanceEnvironment[k] = setfenv(v, environmentClass)()
		end
	else
		instanceEnvironment = environmentClass
	end

	local values = {}
	local getLocks, setLocks = {}, {}
	local __tostring = instanceType .. " of '" .. name .. "': " .. tostring(instance):sub(8)
	local getMethods, willSetMethods, setMethods, didSetMethods = {}, {}, {}, {}
	setmetatable(instance, {
		__index = function(_,k)
			return instance__index[k](instance, k, values, getMethods, getLocks)
		end,
		__newindex = function(_,k,v)
			instance__newindex[k](instance, k, v, values, willSetMethods, setMethods, didSetMethods, setLocks)
		end,
		__tostring = function() return __tostring end
	})

	if defaultValues then
		for k,v in pairs(defaultValues) do
			local newValue = setfenv(v, environmentClass)()
			local neededType = defaultTypes[k]
			if neededType and neededType[1](newValue) then
				_C_E(instance,k,neededType[2],newValue)
			end
			values[k] = newValue
		end
	end

	local supers = {}
	local supers__tostrings = {}
	local supersEnvironments = {}
	local supersValues = {}
	if supers_names then
		for i, super_name in ipairs(supers_names) do
			local super = {}
			-- local superValues = setmetatable({}, {__index = values, __newindex = function(_,k,v)values[k] = v end})
			local super__tostring = "super '" .. super_name .. "': " .. tostring(super):sub(8) .. " of " .. __tostring
			local super__tostring_func = function() return super__tostring end
			setmetatable(super, {
				__index = function(_,k)
					return instance__index[k](super, k, values, instanceEnvironment, getLocks)
				end,
				__newindex = function(_,k,v)
					instance__newindex[k](super, k, v, values, instanceEnvironment, setLocks)
				end,
				__tostring = super__tostring_func
			})
			supers[i +1] = super
			supers__tostrings[i +1] = super__tostring_func
		end
	end
	if propertyMethodFunctions then
		-- getMethods, willSetMethods, setMethods, didSetMethods = {}, {}, {}, {}
		local propertyMethods = {get = getMethods, willSet = willSetMethods, set = setMethods, didSet = didSetMethods}
		for methodName, properties in pairs(propertyMethodFunctions) do
			for propertyName, funcs in pairs(properties) do
				propertyMethods[methodName][propertyName] = _C_O(instance, funcs, instanceEnvironment, supers, supers__tostrings)
			end
		end
	end

	local eventHandles = {}
	values._C_eventHandles = eventHandles
	if instanceEventHandles then
		for k, funcs in pairs(instanceEventHandles) do
			eventHandles[k] = _C_O(instance, funcs, instanceEnvironment, supers, supers__tostrings)
		end
	end

	if instanceFunctions then
		for k, funcs in pairs(instanceFunctions) do
			values[k] = _C_O(instance, funcs, instanceEnvironment, supers, supers__tostrings)
		end
	end

	values.typeOf = function(_,other)
		return typeOfTree[other] == 1
	end

	local initialiseFunction = values.initialise
	if initialiseFunction then
		initialiseFunction(instance,...)
	end
	return instance
end _C_P=setmetatable({},{__index=_G})_C_Q=setmetatable({},{__index=_G})_C_R=setmetatable({},{__index=_G})_C_S=setmetatable({},{__index=_G})_C_T=setmetatable({},{__index=_G})_C_U=setmetatable({},{__index=_G})_C_V=setmetatable({},{__index=_G})_C_W=setmetatable({},{__index=_G})_C_X=setmetatable({},{__index=_G})_C_Y=setmetatable({},{__index=_G})_C_Z=setmetatable({},{__index=_G})_C_a=setmetatable({},{__index=_G})_C_b=setmetatable({},{__index=_G})_C_c=setmetatable({},{__index=_G})_C_d=setmetatable({},{__index=_G})_C_e=setmetatable({},{__index=_G})_C_f=setmetatable({},{__index=_G})_C_g=setmetatable({},{__index=_G})_C_h=setmetatable({},{__index=_G})_C_i=setmetatable({},{__index=_G})_C_j=setmetatable({},{__index=_G})_C_k=setmetatable({},{__index=_G})_C_l=setmetatable({},{__index=_G})_C_m=setmetatable({},{__index=_G})_C_n=setmetatable({},{__index=_G})_C_o=setmetatable({},{__index=_G})_C_p=setmetatable({},{__index=_G})_C_q=setmetatable({},{__index=_G})_C_r=setmetatable({},{__index=_G})_C_s=setmetatable({},{__index=_G})_C_t=setmetatable({},{__index=_G})_C_u=setmetatable({},{__index=_G})_C_v=setmetatable({},{__index=_G})_C_w=setmetatable({},{__index=_G})_C_x=setmetatable({},{__index=_G})_C_y=setmetatable({},{__index=_G})_C_z=setmetatable({},{__index=_G})_C_00=setmetatable({},{__index=_G})_C_01=setmetatable({},{__index=_G})_C_02=setmetatable({},{__index=_G})_C_03=setmetatable({},{__index=_G})_C_04=setmetatable({},{__index=_G})_C_05=setmetatable({},{__index=_G})_C_06=setmetatable({},{__index=_G})_C_07=setmetatable({},{__index=_G})_C_08=setmetatable({},{__index=_G})_C_09=setmetatable({},{__index=_G})_C_0A=setmetatable({},{__index=_G})_C_0B=setmetatable({},{__index=_G})_C_0C=setmetatable({},{__index=_G})_C_0D=setmetatable({},{__index=_G})_C_0E=setmetatable({},{__index=_G})_C_0F=setmetatable({},{__index=_G})_C_0G=setmetatable({},{__index=_G})_C_0H=setmetatable({},{__index=_G})_C_0I=setmetatable({},{__index=_G})_C_0J=setmetatable({},{__index=_G})_C_0K=setmetatable({},{__index=_G})_C_0L=setmetatable({},{__index=_G})_C_0M=setmetatable({},{__index=_G})_C_0N=setmetatable({},{__index=_G})_C_0O=setmetatable({},{__index=_G})_C_0P=setmetatable({},{__index=_G})_C_0Q=setmetatable({},{__index=_G})_C_0R=setmetatable({},{__index=_G})_C_0S=setmetatable({},{__index=_G})_C_0T=setmetatable({},{__index=_G})_C_0U=setmetatable({},{__index=_G})_C_0V=setmetatable({},{__index=_G})_C_0W=setmetatable({},{__index=_G})_C_0X=setmetatable({},{__index=_G})_C_0Y=setmetatable({},{__index=_G})_C_0Z=setmetatable({},{__index=_G})_C_0a=setmetatable({},{__index=_G})_C_0b=setmetatable({},{__index=_G})_C_0c=setmetatable({},{__index=_G})_C_0d=setmetatable({},{__index=_G})_C_0e=setmetatable({},{__index=_G})_C_0f=setmetatable({},{__index=_G})_C_0g=setmetatable({},{__index=_G})_C_0h=setmetatable({},{__index=_G})_C_0i=setmetatable({},{__index=_G})_C_0j=setmetatable({},{__index=_G})_C_0k=setmetatable({},{__index=_G})_C_0l=setmetatable({},{__index=_G})_C_0m=setmetatable({},{__index=_G})_C_0n=setmetatable({},{__index=_G})_C_0o=setmetatable({},{__index=_G})_C_0p=setmetatable({},{__index=_G})_C_0q=setmetatable({},{__index=_G})_C_0r=setmetatable({},{__index=_G})_C_0s=setmetatable({},{__index=_G})_C_0t=setmetatable({},{__index=_G})_C_0u=setmetatable({},{__index=_G})_C_0v=setmetatable({},{__index=_G})_C_0w=setmetatable({},{__index=_G})_C_0x=setmetatable({},{__index=_G})_C_0y=setmetatable({},{__index=_G})_C_0z=setmetatable({},{__index=_G})_C_10=setmetatable({},{__index=_G})_C_11=setmetatable({},{__index=_G})_C_12=setmetatable({},{__index=_G})_C_13=setmetatable({},{__index=_G})_C_14=setmetatable({},{__index=_G})_C_15=setmetatable({},{__index=_G})_C_16=setmetatable({},{__index=_G})_C_17=setmetatable({},{__index=_G})_C_18=setmetatable({},{__index=_G})_C_19=setmetatable({},{__index=_G})_C_1A=setmetatable({},{__index=_G})_C_1B=setmetatable({},{__index=_G})_C_1C=setmetatable({},{__index=_G})_C_1D=setmetatable({},{__index=_G})_C_1E=setmetatable({},{__index=_G})_C_1F=setmetatable({},{__index=_G})_C_1G=setmetatable({},{__index=_G})_C_1H=setmetatable({},{__index=_G})_C_1I=setmetatable({},{__index=_G})_C_1J=setmetatable({},{__index=_G})_C_1K=setmetatable({},{__index=_G})_C_1L=setmetatable({},{__index=_G})_C_1M=setmetatable({},{__index=_G})_C_1N=setmetatable({},{__index=_G})_C_1O=setmetatable({},{__index=_G})_C_1P=setmetatable({},{__index=_G})_C_1Q=setmetatable({},{__index=_G})_C_1R=setmetatable({},{__index=_G})_C_1S=setmetatable({},{__index=_G})_C_1T=setmetatable({},{__index=_G})_C_1U=setmetatable({},{__index=_G})_C_1V=setmetatable({},{__index=_G})_C_1W=setmetatable({},{__index=_G})_C_1X=setmetatable({},{__index=_G})_C_1Y=setmetatable({},{__index=_G})_C_1Z=setmetatable({},{__index=_G})_C_1a=setmetatable({},{__index=_G})_C_1b=setmetatable({},{__index=_G})_C_1c=setmetatable({},{__index=_G})_C_1d=setmetatable({},{__index=_G})_C_1e=setmetatable({},{__index=_G})_C_1f=setmetatable({},{__index=_G})_C_1g=setmetatable({},{__index=_G})_C_1h=setmetatable({},{__index=_G})_C_1i=setmetatable({},{__index=_G})_C_1j=setmetatable({},{__index=_G})_C_1k=setmetatable({},{__index=_G})_C_1l=setmetatable({},{__index=_G})_C_1m=setmetatable({},{__index=_G})_C_1n=setmetatable({},{__index=_G})_C_1o=setmetatable({},{__index=_G})_C_1p=setmetatable({},{__index=_G})_C_1q=setmetatable({},{__index=_G})_C_1r=setmetatable({},{__index=_G})_C_1s=setmetatable({},{__index=_G})_C_1t=setmetatable({},{__index=_G})_C_1u=setmetatable({},{__index=_G})_C_1v=setmetatable({},{__index=_G})_C_1w=setmetatable({},{__index=_G})_C_1x=setmetatable({},{__index=_G})_C_1y=setmetatable({},{__index=_G})_C_1z=setmetatable({},{__index=_G})_C_20=setmetatable({},{__index=_G})_C_21=setmetatable({},{__index=_G})_C_22=setmetatable({},{__index=_G})_C_23=setmetatable({},{__index=_G})_C_24=setmetatable({},{__index=_G})_C_25=setmetatable({},{__index=_G})_C_26=setmetatable({},{__index=_G})_C_27=setmetatable({},{__index=_G})_C_28=setmetatable({},{__index=_G})_C_29=setmetatable({},{__index=_G})_C_2A=setmetatable({},{__index=_G})_C_2B=setmetatable({},{__index=_G})_C_2C=setmetatable({},{__index=_G})_C_2D=setmetatable({},{__index=_G})_C_2E=setmetatable({},{__index=_G})_C_2F=setmetatable({},{__index=_G})_C_2G=setmetatable({},{__index=_G})_C_2H=setmetatable({},{__index=_G})_C_2I=setmetatable({},{__index=_G})_C_2J=setmetatable({},{__index=_G})_C_2K=setmetatable({},{__index=_G})_C_2L=setmetatable({},{__index=_G})_C_2M=setmetatable({},{__index=_G})_C_2N=setmetatable({},{__index=_G})_C_2O=setmetatable({},{__index=_G})_C_2P=setmetatable({},{__index=_G})_C_2Q=setmetatable({},{__index=_G})_C_2R=setmetatable({},{__index=_G})_C_2S=setmetatable({},{__index=_G})_C_2T=setmetatable({},{__index=_G})_C_2U=setmetatable({},{__index=_G})_C_2V=setmetatable({},{__index=_G})_C_2W=setmetatable({},{__index=_G})_C_2X=setmetatable({},{__index=_G})_C_2Y=setmetatable({},{__index=_G})_C_2Z=setmetatable({},{__index=_G})_C_2a=setmetatable({},{__index=_G})_C_2b=setmetatable({},{__index=_G})_C_2c=setmetatable({},{__index=_G})_C_2d=setmetatable({},{__index=_G})_C_2e=setmetatable({},{__index=_G})_C_2f=setmetatable({},{__index=_G})_C_2g=setmetatable({},{__index=_G})_C_2h=setmetatable({},{__index=_G})_C_2i=setmetatable({},{__index=_G})_C_2j=setmetatable({},{__index=_G})_C_2k=setmetatable({},{__index=_G})_C_2l=setmetatable({},{__index=_G})_C_2m=setmetatable({},{__index=_G})_C_2n=setmetatable({},{__index=_G})_C_2o=setmetatable({},{__index=_G})_C_2p=setmetatable({},{__index=_G})_C_2q=setmetatable({},{__index=_G})_C_2r=setmetatable({},{__index=_G})_C_2s=setmetatable({},{__index=_G})_C_2t=setmetatable({},{__index=_G})_C_2u=setmetatable({},{__index=_G})_C_2v=setmetatable({},{__index=_G})_C_2w=setmetatable({},{__index=_G})_C_2x=setmetatable({},{__index=_G})_C_2y=setmetatable({},{__index=_G})_G.FakeFileAssociation={}_C_2z="class 'FakeFileAssociation': "..tostring(FakeFileAssociation):sub(8)_C_30={}_G.BitmapFont={}_C_31="class 'BitmapFont': "..tostring(BitmapFont):sub(8)_C_32={}_G.Symbol={}_C_33="class 'Symbol': "..tostring(Symbol):sub(8)_C_34={}_G.Mask={}_C_35="class 'Mask': "..tostring(Mask):sub(8)_C_36={}_G.ChildRepositionedInterfaceEvent={}_C_37="class 'ChildRepositionedInterfaceEvent': "..tostring(ChildRepositionedInterfaceEvent):sub(8)_C_38={}_G.ResizeVerticalCursor={}_C_39="class 'ResizeVerticalCursor': "..tostring(ResizeVerticalCursor):sub(8)_C_3A={}_G.ArgumentValueTypeParsingClassException={}_C_3B="class 'ArgumentValueTypeParsingClassException': "..tostring(ArgumentValueTypeParsingClassException):sub(8)_C_3C={}_G.TextBox={}_C_3D="class 'TextBox': "..tostring(TextBox):sub(8)_C_3E={}_G.Icon={}_C_3F="class 'Icon': "..tostring(Icon):sub(8)_C_3G={}_G.ProgramEnvironment={}_C_3H="class 'ProgramEnvironment': "..tostring(ProgramEnvironment):sub(8)_C_3I={}_G.ClipboardData={}_C_3J="class 'ClipboardData': "..tostring(ClipboardData):sub(8)_C_3K={}_G.ISwitchableView={}_C_3L="interface 'ISwitchableView': "..tostring(ISwitchableView):sub(8)_G.View={}_C_3M="class 'View': "..tostring(View):sub(8)_C_3N={}_G.ScaleableCanvas={}_C_3O="class 'ScaleableCanvas': "..tostring(ScaleableCanvas):sub(8)_C_3P={}_G.FileAssociation={}_C_3Q="class 'FileAssociation': "..tostring(FileAssociation):sub(8)_C_3R={}_G.BridgedCursor={}_C_3S="class 'BridgedCursor': "..tostring(BridgedCursor):sub(8)_C_3T={}_G.CharacterEvent={}_C_3U="class 'CharacterEvent': "..tostring(CharacterEvent):sub(8)_C_3V={}_G.Document={}_C_3W="class 'Document': "..tostring(Document):sub(8)_C_3X={}_G.SegmentButton={}_C_3Y="class 'SegmentButton': "..tostring(SegmentButton):sub(8)_C_3Z={}_G.LayoutContainer={}_C_3a="class 'LayoutContainer': "..tostring(LayoutContainer):sub(8)_C_3b={}_G.Cursor={}_C_3c="class 'Cursor': "..tostring(Cursor):sub(8)_C_3d={}_G.ExitedInterfaceMouseEvent={}_C_3e="class 'ExitedInterfaceMouseEvent': "..tostring(ExitedInterfaceMouseEvent):sub(8)_C_3f={}_G.ThemeChangedInterfaceEvent={}_C_3g="class 'ThemeChangedInterfaceEvent': "..tostring(ThemeChangedInterfaceEvent):sub(8)_C_3h={}_G.Canvas={}_C_3i="class 'Canvas': "..tostring(Canvas):sub(8)_C_3j={}_G.File={}_C_3k="class 'File': "..tostring(File):sub(8)_C_3l={}_G.SegmentContainer={}_C_3m="class 'SegmentContainer': "..tostring(SegmentContainer):sub(8)_C_3n={}_G.ArgumentCountClassException={}_C_3o="class 'ArgumentCountClassException': "..tostring(ArgumentCountClassException):sub(8)_C_3p={}_G.SettingsException={}_C_3q="class 'SettingsException': "..tostring(SettingsException):sub(8)_C_3r={}_G.RightSymbol={}_C_3s="class 'RightSymbol': "..tostring(RightSymbol):sub(8)_C_3t={}_G.IDraggableView={}_C_3u="interface 'IDraggableView': "..tostring(IDraggableView):sub(8)_G.ToolbarSymbolButton={}_C_3v="class 'ToolbarSymbolButton': "..tostring(ToolbarSymbolButton):sub(8)_C_3w={}_G.QuartzProxy={}_C_3x="class 'QuartzProxy': "..tostring(QuartzProxy):sub(8)_C_3y={}_G.BridgedFileAssociation={}_C_3z="class 'BridgedFileAssociation': "..tostring(BridgedFileAssociation):sub(8)_C_40={}_G.Container={}_C_41="class 'Container': "..tostring(Container):sub(8)_C_42={}_G.QuartzApplication={}_C_43="class 'QuartzApplication': "..tostring(QuartzApplication):sub(8)_C_44={}_G.UpKeyEvent={}_C_45="class 'UpKeyEvent': "..tostring(UpKeyEvent):sub(8)_C_46={}_G.MultipleInstancesSettingsException={}_C_47="class 'MultipleInstancesSettingsException': "..tostring(MultipleInstancesSettingsException):sub(8)_C_48={}_G.OutlineMask={}_C_49="class 'OutlineMask': "..tostring(OutlineMask):sub(8)_C_4A={}_G.Settings={}_C_4B="class 'Settings': "..tostring(Settings):sub(8)_C_4C={}_G.ResizeHorizontalCursor={}_C_4D="class 'ResizeHorizontalCursor': "..tostring(ResizeHorizontalCursor):sub(8)_C_4E={}_G.CircleMask={}_C_4F="class 'CircleMask': "..tostring(CircleMask):sub(8)_C_4G={}_G.AlertWindow={}_C_4H="class 'AlertWindow': "..tostring(AlertWindow):sub(8)_C_4I={}_G.FileAssociationRegisteredInterfaceEvent={}_C_4J="class 'FileAssociationRegisteredInterfaceEvent': "..tostring(FileAssociationRegisteredInterfaceEvent):sub(8)_C_4K={}_G.WindowButton={}_C_4L="class 'WindowButton': "..tostring(WindowButton):sub(8)_C_4M={}_G.MaximiseWindowButton={}_C_4N="class 'MaximiseWindowButton': "..tostring(MaximiseWindowButton):sub(8)_C_4O={}_G.CloseWindowButton={}_C_4P="class 'CloseWindowButton': "..tostring(CloseWindowButton):sub(8)_C_4Q={}_G.SilicaProgram={}_C_4R="class 'SilicaProgram': "..tostring(SilicaProgram):sub(8)_C_4S={}_G.ActionInterfaceEvent={}_C_4T="class 'ActionInterfaceEvent': "..tostring(ActionInterfaceEvent):sub(8)_C_4U={}_G.SymbolSegmentButton={}_C_4V="class 'SymbolSegmentButton': "..tostring(SymbolSegmentButton):sub(8)_C_4W={}_G.IDragDropDestination={}_C_4X="interface 'IDragDropDestination': "..tostring(IDragDropDestination):sub(8)_G.FolderIcon={}_C_4Y="class 'FolderIcon': "..tostring(FolderIcon):sub(8)_C_4Z={}_G.LoadingClassException={}_C_4a="class 'LoadingClassException': "..tostring(LoadingClassException):sub(8)_C_4b={}_G.SymbolButton={}_C_4c="class 'SymbolButton': "..tostring(SymbolButton):sub(8)_C_4d={}_G.Graphics={}_C_4e="class 'Graphics': "..tostring(Graphics):sub(8)_C_4f={}_G.SeparatorView={}_C_4g="class 'SeparatorView': "..tostring(SeparatorView):sub(8)_C_4h={}_G.SeparatorMenuItem={}_C_4i="class 'SeparatorMenuItem': "..tostring(SeparatorMenuItem):sub(8)_C_4j={}_G.SearchBox={}_C_4k="class 'SearchBox': "..tostring(SearchBox):sub(8)_C_4l={}_G.UnknownFileAssociation={}_C_4m="class 'UnknownFileAssociation': "..tostring(UnknownFileAssociation):sub(8)_C_4n={}_G.ToolbarSegmentContainer={}_C_4o="class 'ToolbarSegmentContainer': "..tostring(ToolbarSegmentContainer):sub(8)_C_4p={}_G.Radio={}_C_4q="class 'Radio': "..tostring(Radio):sub(8)_C_4r={}_G.ProgressBar={}_C_4s="class 'ProgressBar': "..tostring(ProgressBar):sub(8)_C_4t={}_G.MenuItem={}_C_4u="class 'MenuItem': "..tostring(MenuItem):sub(8)_C_4v={}_G.MenuButton={}_C_4w="class 'MenuButton': "..tostring(MenuButton):sub(8)_C_4x={}_G.MenuBarItem={}_C_4y="class 'MenuBarItem': "..tostring(MenuBarItem):sub(8)_C_4z={}_G.TopBarSeparatorView={}_C_50="class 'TopBarSeparatorView': "..tostring(TopBarSeparatorView):sub(8)_C_51={}_G.MaskedTextBox={}_C_52="class 'MaskedTextBox': "..tostring(MaskedTextBox):sub(8)_C_53={}_G.ScrollMouseEvent={}_C_54="class 'ScrollMouseEvent': "..tostring(ScrollMouseEvent):sub(8)_C_55={}_G.Label={}_C_56="class 'Label': "..tostring(Label):sub(8)_C_57={}_G.ParentChangedInterfaceEvent={}_C_58="class 'ParentChangedInterfaceEvent': "..tostring(ParentChangedInterfaceEvent):sub(8)_C_59={}_G.RectangleMask={}_C_5A="class 'RectangleMask': "..tostring(RectangleMask):sub(8)_C_5B={}_G.DragView={}_C_5C="class 'DragView': "..tostring(DragView):sub(8)_C_5D={}_G.WindowContainer={}_C_5E="class 'WindowContainer': "..tostring(WindowContainer):sub(8)_C_5F={}_G.FileSystemItem={}_C_5G="class 'FileSystemItem': "..tostring(FileSystemItem):sub(8)_C_5H={}_G.Window={}_C_5I="class 'Window': "..tostring(Window):sub(8)_C_5J={}_G.Metadata={}_C_5K="class 'Metadata': "..tostring(Metadata):sub(8)_C_5L={}_G.IFlowItem={}_C_5M="interface 'IFlowItem': "..tostring(IFlowItem):sub(8)_G.HomeContainer={}_C_5N="class 'HomeContainer': "..tostring(HomeContainer):sub(8)_C_5O={}_G.FileAssociationManager={}_C_5P="class 'FileAssociationManager': "..tostring(FileAssociationManager):sub(8)_C_5Q={}_G.MenuChangedInterfaceEvent={}_C_5R="class 'MenuChangedInterfaceEvent': "..tostring(MenuChangedInterfaceEvent):sub(8)_C_5S={}_G.KeyboardShortcutManager={}_C_5T="class 'KeyboardShortcutManager': "..tostring(KeyboardShortcutManager):sub(8)_C_5U={}_G.ITreeChild={}_C_5V="interface 'ITreeChild': "..tostring(ITreeChild):sub(8)_G.ClockItem={}_C_5W="class 'ClockItem': "..tostring(ClockItem):sub(8)_C_5X={}_G.RoundedRectangleMask={}_C_5Y="class 'RoundedRectangleMask': "..tostring(RoundedRectangleMask):sub(8)_C_5Z={}_G.ContainerReadyInterfaceEvent={}_C_5a="class 'ContainerReadyInterfaceEvent': "..tostring(ContainerReadyInterfaceEvent):sub(8)_C_5b={}_G.ClickableCursor={}_C_5c="class 'ClickableCursor': "..tostring(ClickableCursor):sub(8)_C_5d={}_G.VectorFont={}_C_5e="class 'VectorFont': "..tostring(VectorFont):sub(8)_C_5f={}_G.TreeContainer={}_C_5g="class 'TreeContainer': "..tostring(TreeContainer):sub(8)_C_5h={}_G.TreeClipboardData={}_C_5i="class 'TreeClipboardData': "..tostring(TreeClipboardData):sub(8)_C_5j={}_G.ArgumentTypeClassException={}_C_5k="class 'ArgumentTypeClassException': "..tostring(ArgumentTypeClassException):sub(8)_C_5l={}_G.TreeFoldedSymbol={}_C_5m="class 'TreeFoldedSymbol': "..tostring(TreeFoldedSymbol):sub(8)_C_5n={}_G.ToolbarContainer={}_C_5o="class 'ToolbarContainer': "..tostring(ToolbarContainer):sub(8)_C_5p={}_G.HomeItemContainer={}_C_5q="class 'HomeItemContainer': "..tostring(HomeItemContainer):sub(8)_C_5r={}_G.Exception={}_C_5s="class 'Exception': "..tostring(Exception):sub(8)_C_5t={}_G.LoadedInterfaceEvent={}_C_5u="class 'LoadedInterfaceEvent': "..tostring(LoadedInterfaceEvent):sub(8)_C_5v={}_G.ToolbarSymbolSegmentButton={}_C_5w="class 'ToolbarSymbolSegmentButton': "..tostring(ToolbarSymbolSegmentButton):sub(8)_C_5x={}_G.Menu={}_C_5y="class 'Menu': "..tostring(Menu):sub(8)_C_5z={}_G.ToolbarStaticSpace={}_C_60="class 'ToolbarStaticSpace': "..tostring(ToolbarStaticSpace):sub(8)_C_61={}_G.ProgramManager={}_C_62="class 'ProgramManager': "..tostring(ProgramManager):sub(8)_C_63={}_G.Scrollbar={}_C_64="class 'Scrollbar': "..tostring(Scrollbar):sub(8)_C_65={}_G.ToolbarSegmentButton={}_C_66="class 'ToolbarSegmentButton': "..tostring(ToolbarSegmentButton):sub(8)_C_67={}_G.ProgramException={}_C_68="class 'ProgramException': "..tostring(ProgramException):sub(8)_C_69={}_G.ConfigurationFatalProgramException={}_C_6A="class 'ConfigurationFatalProgramException': "..tostring(ConfigurationFatalProgramException):sub(8)_C_6B={}_G.EnumValueTypeClassException={}_C_6C="class 'EnumValueTypeClassException': "..tostring(EnumValueTypeClassException):sub(8)_C_6D={}_G.ToolbarDynamicSpace={}_C_6E="class 'ToolbarDynamicSpace': "..tostring(ToolbarDynamicSpace):sub(8)_C_6F={}_G.ToolbarButton={}_C_6G="class 'ToolbarButton': "..tostring(ToolbarButton):sub(8)_C_6H={}_G.TerminateEvent={}_C_6I="class 'TerminateEvent': "..tostring(TerminateEvent):sub(8)_C_6J={}_G.ListContainer={}_C_6K="class 'ListContainer': "..tostring(ListContainer):sub(8)_C_6L={}_G.InterfaceEvent={}_C_6M="class 'InterfaceEvent': "..tostring(InterfaceEvent):sub(8)_C_6N={}_G.HomeSymbol={}_C_6O="class 'HomeSymbol': "..tostring(HomeSymbol):sub(8)_C_6P={}_G.ProgramView={}_C_6Q="class 'ProgramView': "..tostring(ProgramView):sub(8)_C_6R={}_G.IToolbarItem={}_C_6S="interface 'IToolbarItem': "..tostring(IToolbarItem):sub(8)_G.StripeMask={}_C_6T="class 'StripeMask': "..tostring(StripeMask):sub(8)_C_6U={}_G.IToolbarDynamicItem={}_C_6V="interface 'IToolbarDynamicItem': "..tostring(IToolbarDynamicItem):sub(8)_G.SplitHandleView={}_C_6W="class 'SplitHandleView': "..tostring(SplitHandleView):sub(8)_C_6X={}_G.EventManager={}_C_6Y="class 'EventManager': "..tostring(EventManager):sub(8)_C_6Z={}_G.SplitContainer={}_C_6a="class 'SplitContainer': "..tostring(SplitContainer):sub(8)_C_6b={}_G.QuartzApplicationContainer={}_C_6c="class 'QuartzApplicationContainer': "..tostring(QuartzApplicationContainer):sub(8)_C_6d={}_G.ProgramClosedInterfaceEvent={}_C_6e="class 'ProgramClosedInterfaceEvent': "..tostring(ProgramClosedInterfaceEvent):sub(8)_C_6f={}_G.MenuOpenSymbol={}_C_6g="class 'MenuOpenSymbol': "..tostring(MenuOpenSymbol):sub(8)_C_6h={}_G.ProgramInformationChangedInterfaceEvent={}_C_6i="class 'ProgramInformationChangedInterfaceEvent': "..tostring(ProgramInformationChangedInterfaceEvent):sub(8)_C_6j={}_G.ScrollView={}_C_6k="class 'ScrollView': "..tostring(ScrollView):sub(8)_C_6l={}_G.ScrollContainer={}_C_6m="class 'ScrollContainer': "..tostring(ScrollContainer):sub(8)_C_6n={}_G.MenuBar={}_C_6o="class 'MenuBar': "..tostring(MenuBar):sub(8)_C_6p={}_G.LineMask={}_C_6q="class 'LineMask': "..tostring(LineMask):sub(8)_C_6r={}_G.FatalException={}_C_6s="class 'FatalException': "..tostring(FatalException):sub(8)_C_6t={}_G.ChildAddedInterfaceEvent={}_C_6u="class 'ChildAddedInterfaceEvent': "..tostring(ChildAddedInterfaceEvent):sub(8)_C_6v={}_G.ListItem={}_C_6w="class 'ListItem': "..tostring(ListItem):sub(8)_C_6x={}_G.ListClipboardData={}_C_6y="class 'ListClipboardData': "..tostring(ListClipboardData):sub(8)_C_6z={}_G.ContainerEventManager={}_C_70="class 'ContainerEventManager': "..tostring(ContainerEventManager):sub(8)_C_71={}_G.ProgramOpenedInterfaceEvent={}_C_72="class 'ProgramOpenedInterfaceEvent': "..tostring(ProgramOpenedInterfaceEvent):sub(8)_C_73={}_G.DeleteCursor={}_C_74="class 'DeleteCursor': "..tostring(DeleteCursor):sub(8)_C_75={}_G.SettingsSymbol={}_C_76="class 'SettingsSymbol': "..tostring(SettingsSymbol):sub(8)_C_77={}_G.GridContainer={}_C_78="class 'GridContainer': "..tostring(GridContainer):sub(8)_C_79={}_G.FontWindowContainer={}_C_7A="class 'FontWindowContainer': "..tostring(FontWindowContainer):sub(8)_C_7B={}_G.PathMask={}_C_7C="class 'PathMask': "..tostring(PathMask):sub(8)_C_7D={}_G.FlowContainer={}_C_7E="class 'FlowContainer': "..tostring(FlowContainer):sub(8)_C_7F={}_G.ApplicationContainer={}_C_7G="class 'ApplicationContainer': "..tostring(ApplicationContainer):sub(8)_C_7H={}_G.Checkbox={}_C_7I="class 'Checkbox': "..tostring(Checkbox):sub(8)_C_7J={}_G.IHomeItem={}_C_7K="interface 'IHomeItem': "..tostring(IHomeItem):sub(8)_G.ParentResizedInterfaceEvent={}_C_7L="class 'ParentResizedInterfaceEvent': "..tostring(ParentResizedInterfaceEvent):sub(8)_C_7M={}_G.XML={}_C_7N="class 'XML': "..tostring(XML):sub(8)_C_7O={}_G.Validator={}_C_7P="class 'Validator': "..tostring(Validator):sub(8)_C_7Q={}_G.Resource={}_C_7R="class 'Resource': "..tostring(Resource):sub(8)_C_7S={}_G.ThumbnailIcon={}_C_7T="class 'ThumbnailIcon': "..tostring(ThumbnailIcon):sub(8)_C_7U={}_G.InvalidValueTypeClassException={}_C_7V="class 'InvalidValueTypeClassException': "..tostring(InvalidValueTypeClassException):sub(8)_C_7W={}_G.HomeTile={}_C_7X="class 'HomeTile': "..tostring(HomeTile):sub(8)_C_7Y={}_G.ILockableLayout={}_C_7Z="interface 'ILockableLayout': "..tostring(ILockableLayout):sub(8)_G.ReadyInterfaceEvent={}_C_7a="class 'ReadyInterfaceEvent': "..tostring(ReadyInterfaceEvent):sub(8)_C_7b={}_G.FatalProgramException={}_C_7c="class 'FatalProgramException': "..tostring(FatalProgramException):sub(8)_C_7d={}_G.DoubleClickMouseEvent={}_C_7e="class 'DoubleClickMouseEvent': "..tostring(DoubleClickMouseEvent):sub(8)_C_7f={}_G.ThemeOutlet={}_C_7g="class 'ThemeOutlet': "..tostring(ThemeOutlet):sub(8)_C_7h={}_G.Event={}_C_7i="class 'Event': "..tostring(Event):sub(8)_C_7j={}_G.ClassException={}_C_7k="class 'ClassException': "..tostring(ClassException):sub(8)_C_7l={}_G.Theme={}_C_7m="class 'Theme': "..tostring(Theme):sub(8)_C_7n={}_G.TimerEvent={}_C_7o="class 'TimerEvent': "..tostring(TimerEvent):sub(8)_C_7p={}_G.UpSymbol={}_C_7q="class 'UpSymbol': "..tostring(UpSymbol):sub(8)_C_7r={}_G.TreeExpandedSymbol={}_C_7s="class 'TreeExpandedSymbol': "..tostring(TreeExpandedSymbol):sub(8)_C_7t={}_G.Program={}_C_7u="class 'Program': "..tostring(Program):sub(8)_C_7v={}_G.Path={}_C_7w="class 'Path': "..tostring(Path):sub(8)_C_7x={}_G.ApplicationEventManager={}_C_7y="class 'ApplicationEventManager': "..tostring(ApplicationEventManager):sub(8)_C_7z={}_G.ListSymbol={}_C_80="class 'ListSymbol': "..tostring(ListSymbol):sub(8)_C_81={}_G.SearchSymbol={}_C_82="class 'SearchSymbol': "..tostring(SearchSymbol):sub(8)_C_83={}_G.MenuCloseSymbol={}_C_84="class 'MenuCloseSymbol': "..tostring(MenuCloseSymbol):sub(8)_C_85={}_G.Interface={}_C_86="class 'Interface': "..tostring(Interface):sub(8)_C_87={}_G.IToolbarPressableItem={}_C_88="interface 'IToolbarPressableItem': "..tostring(IToolbarPressableItem):sub(8)_G.ISerialiseable={}_C_89="interface 'ISerialiseable': "..tostring(ISerialiseable):sub(8)_G.ForwardSymbol={}_C_8A="class 'ForwardSymbol': "..tostring(ForwardSymbol):sub(8)_C_8B={}_G.ProgramItem={}_C_8C="class 'ProgramItem': "..tostring(ProgramItem):sub(8)_C_8D={}_G.DownSymbol={}_C_8E="class 'DownSymbol': "..tostring(DownSymbol):sub(8)_C_8F={}_G.SymbolMask={}_C_8G="class 'SymbolMask': "..tostring(SymbolMask):sub(8)_C_8H={}_G.DragMouseEvent={}_C_8I="class 'DragMouseEvent': "..tostring(DragMouseEvent):sub(8)_C_8J={}_G.CloseSymbol={}_C_8K="class 'CloseSymbol': "..tostring(CloseSymbol):sub(8)_C_8L={}_G.BackSymbol={}_C_8M="class 'BackSymbol': "..tostring(BackSymbol):sub(8)_C_8N={}_G.KeyboardShortcutEvent={}_C_8O="class 'KeyboardShortcutEvent': "..tostring(KeyboardShortcutEvent):sub(8)_C_8P={}_G.Folder={}_C_8Q="class 'Folder': "..tostring(Folder):sub(8)_C_8R={}_G.ConstructionClassException={}_C_8S="class 'ConstructionClassException': "..tostring(ConstructionClassException):sub(8)_C_8T={}_G.LeftSymbol={}_C_8U="class 'LeftSymbol': "..tostring(LeftSymbol):sub(8)_C_8V={}_G.Image={}_C_8W="class 'Image': "..tostring(Image):sub(8)_C_8X={}_G.MouseEvent={}_C_8Y="class 'MouseEvent': "..tostring(MouseEvent):sub(8)_C_8Z={}_G.UnknownTypeValidationException={}_C_8a="class 'UnknownTypeValidationException': "..tostring(UnknownTypeValidationException):sub(8)_C_8b={}_G.IAutomaticLayout={}_C_8c="interface 'IAutomaticLayout': "..tostring(IAutomaticLayout):sub(8)_G.TextMask={}_C_8d="class 'TextMask': "..tostring(TextMask):sub(8)_C_8e={}_G.SeparatorMask={}_C_8f="class 'SeparatorMask': "..tostring(SeparatorMask):sub(8)_C_8g={}_G.TreeNode={}_C_8h="class 'TreeNode': "..tostring(TreeNode):sub(8)_C_8i={}_G.KeyEvent={}_C_8j="class 'KeyEvent': "..tostring(KeyEvent):sub(8)_C_8k={}_G.Font={}_C_8l="class 'Font': "..tostring(Font):sub(8)_C_8m={}_G.Bundle={}_C_8n="class 'Bundle': "..tostring(Bundle):sub(8)_C_8o={}_G.ScreenCanvas={}_C_8p="class 'ScreenCanvas': "..tostring(ScreenCanvas):sub(8)_C_8q={}_G.QuartzSettings={}_C_8r="class 'QuartzSettings': "..tostring(QuartzSettings):sub(8)_C_8s={}_G.MoveMouseEvent={}_C_8t="class 'MoveMouseEvent': "..tostring(MoveMouseEvent):sub(8)_C_8u={}_G.SplashApplicationContainer={}_C_8v="class 'SplashApplicationContainer': "..tostring(SplashApplicationContainer):sub(8)_C_8w={}_G.HomeItem={}_C_8x="class 'HomeItem': "..tostring(HomeItem):sub(8)_C_8y={}_G.DragDropManager={}_C_8z="class 'DragDropManager': "..tostring(DragDropManager):sub(8)_C_90={}_G.TextChangedInterfaceEvent={}_C_91="class 'TextChangedInterfaceEvent': "..tostring(TextChangedInterfaceEvent):sub(8)_C_92={}_G.TopBarContainer={}_C_93="class 'TopBarContainer': "..tostring(TopBarContainer):sub(8)_C_94={}_G.SilicaProgramEnvironment={}_C_95="class 'SilicaProgramEnvironment': "..tostring(SilicaProgramEnvironment):sub(8)_C_96={}_G.EnteredInterfaceMouseEvent={}_C_97="class 'EnteredInterfaceMouseEvent': "..tostring(EnteredInterfaceMouseEvent):sub(8)_C_98={}_G.SiblingRemovedInterfaceEvent={}_C_99="class 'SiblingRemovedInterfaceEvent': "..tostring(SiblingRemovedInterfaceEvent):sub(8)_C_9A={}_G.Package={}_C_9B="class 'Package': "..tostring(Package):sub(8)_C_9C={}_G.PseudoReferenceClassException={}_C_9D="class 'PseudoReferenceClassException': "..tostring(PseudoReferenceClassException):sub(8)_C_9E={}_G.ValueTypeClassException={}_C_9F="class 'ValueTypeClassException': "..tostring(ValueTypeClassException):sub(8)_C_9G={}_G.TextCursor={}_C_9H="class 'TextCursor': "..tostring(TextCursor):sub(8)_C_9I={}_G.FocusesChangedInterfaceEvent={}_C_9J="class 'FocusesChangedInterfaceEvent': "..tostring(FocusesChangedInterfaceEvent):sub(8)_C_9K={}_G.UpMouseEvent={}_C_9L="class 'UpMouseEvent': "..tostring(UpMouseEvent):sub(8)_C_9M={}_G.MathParser={}_C_9N="class 'MathParser': "..tostring(MathParser):sub(8)_C_9O={}_G.SiblingAddedInterfaceEvent={}_C_9P="class 'SiblingAddedInterfaceEvent': "..tostring(SiblingAddedInterfaceEvent):sub(8)_C_9Q={}_G.DownMouseEvent={}_C_9R="class 'DownMouseEvent': "..tostring(DownMouseEvent):sub(8)_C_9S={}_G.HeldMouseEvent={}_C_9T="class 'HeldMouseEvent': "..tostring(HeldMouseEvent):sub(8)_C_9U={}_G.ChildRemovedInterfaceEvent={}_C_9V="class 'ChildRemovedInterfaceEvent': "..tostring(ChildRemovedInterfaceEvent):sub(8)_C_9W={}_G.TopBarItem={}_C_9X="class 'TopBarItem': "..tostring(TopBarItem):sub(8)_C_9Y={}_G.KeyboardShortcut={}_C_9Z="class 'KeyboardShortcut': "..tostring(KeyboardShortcut):sub(8)_C_9a={}_G.Button={}_C_9b="class 'Button': "..tostring(Button):sub(8)_C_9c={}_G.ValidationException={}_C_9d="class 'ValidationException': "..tostring(ValidationException):sub(8)_C_9e={}_G.IEditableFileSystemItem={}_C_9f="interface 'IEditableFileSystemItem': "..tostring(IEditableFileSystemItem):sub(8)_G.Application={}_C_9g="class 'Application': "..tostring(Application):sub(8)_C_9h={}_G.MenuNotSpecifiedException={}_C_9i="class 'MenuNotSpecifiedException': "..tostring(MenuNotSpecifiedException):sub(8)_C_9j={}_G.DownKeyEvent={}_C_9k="class 'DownKeyEvent': "..tostring(DownKeyEvent):sub(8)_C_9l={}_G.HomeSearchBox={}_C_9m="class 'HomeSearchBox': "..tostring(HomeSearchBox):sub(8)_C_9n={}_G.StyleClassException={}_C_9o="class 'StyleClassException': "..tostring(StyleClassException):sub(8)_C_9p={}_G.Animation={}_C_9q="class 'Animation': "..tostring(Animation):sub(8)_C_9r={}_G.TreeItem={}_C_9s="class 'TreeItem': "..tostring(TreeItem):sub(8)_C_9t={}_G.ThumbnailSymbol={}_C_9u="class 'ThumbnailSymbol': "..tostring(ThumbnailSymbol):sub(8)_C_9v={}local _C_9w={[FakeFileAssociation]=true,[BitmapFont]=true,[Symbol]=true,[Mask]=true,[ChildRepositionedInterfaceEvent]=true,[ResizeVerticalCursor]=true,[ArgumentValueTypeParsingClassException]=true,[TextBox]=true,[Icon]=true,[ProgramEnvironment]=true,[ClipboardData]=true,[ISwitchableView]=true,[View]=true,[ScaleableCanvas]=true,[FileAssociation]=true,[BridgedCursor]=true,[CharacterEvent]=true,[Document]=true,[SegmentButton]=true,[LayoutContainer]=true,[Cursor]=true,[ExitedInterfaceMouseEvent]=true,[ThemeChangedInterfaceEvent]=true,[Canvas]=true,[File]=true,[SegmentContainer]=true,[ArgumentCountClassException]=true,[SettingsException]=true,[RightSymbol]=true,[IDraggableView]=true,[ToolbarSymbolButton]=true,[QuartzProxy]=true,[BridgedFileAssociation]=true,[Container]=true,[QuartzApplication]=true,[UpKeyEvent]=true,[MultipleInstancesSettingsException]=true,[OutlineMask]=true,[Settings]=true,[ResizeHorizontalCursor]=true,[CircleMask]=true,[AlertWindow]=true,[FileAssociationRegisteredInterfaceEvent]=true,[WindowButton]=true,[MaximiseWindowButton]=true,[CloseWindowButton]=true,[SilicaProgram]=true,[ActionInterfaceEvent]=true,[SymbolSegmentButton]=true,[IDragDropDestination]=true,[FolderIcon]=true,[LoadingClassException]=true,[SymbolButton]=true,[Graphics]=true,[SeparatorView]=true,[SeparatorMenuItem]=true,[SearchBox]=true,[UnknownFileAssociation]=true,[ToolbarSegmentContainer]=true,[Radio]=true,[ProgressBar]=true,[MenuItem]=true,[MenuButton]=true,[MenuBarItem]=true,[TopBarSeparatorView]=true,[MaskedTextBox]=true,[ScrollMouseEvent]=true,[Label]=true,[ParentChangedInterfaceEvent]=true,[RectangleMask]=true,[DragView]=true,[WindowContainer]=true,[FileSystemItem]=true,[Window]=true,[Metadata]=true,[IFlowItem]=true,[HomeContainer]=true,[FileAssociationManager]=true,[MenuChangedInterfaceEvent]=true,[KeyboardShortcutManager]=true,[ITreeChild]=true,[ClockItem]=true,[RoundedRectangleMask]=true,[ContainerReadyInterfaceEvent]=true,[ClickableCursor]=true,[VectorFont]=true,[TreeContainer]=true,[TreeClipboardData]=true,[ArgumentTypeClassException]=true,[TreeFoldedSymbol]=true,[ToolbarContainer]=true,[HomeItemContainer]=true,[Exception]=true,[LoadedInterfaceEvent]=true,[ToolbarSymbolSegmentButton]=true,[Menu]=true,[ToolbarStaticSpace]=true,[ProgramManager]=true,[Scrollbar]=true,[ToolbarSegmentButton]=true,[ProgramException]=true,[ConfigurationFatalProgramException]=true,[EnumValueTypeClassException]=true,[ToolbarDynamicSpace]=true,[ToolbarButton]=true,[TerminateEvent]=true,[ListContainer]=true,[InterfaceEvent]=true,[HomeSymbol]=true,[ProgramView]=true,[IToolbarItem]=true,[StripeMask]=true,[IToolbarDynamicItem]=true,[SplitHandleView]=true,[EventManager]=true,[SplitContainer]=true,[QuartzApplicationContainer]=true,[ProgramClosedInterfaceEvent]=true,[MenuOpenSymbol]=true,[ProgramInformationChangedInterfaceEvent]=true,[ScrollView]=true,[ScrollContainer]=true,[MenuBar]=true,[LineMask]=true,[FatalException]=true,[ChildAddedInterfaceEvent]=true,[ListItem]=true,[ListClipboardData]=true,[ContainerEventManager]=true,[ProgramOpenedInterfaceEvent]=true,[DeleteCursor]=true,[SettingsSymbol]=true,[GridContainer]=true,[FontWindowContainer]=true,[PathMask]=true,[FlowContainer]=true,[ApplicationContainer]=true,[Checkbox]=true,[IHomeItem]=true,[ParentResizedInterfaceEvent]=true,[XML]=true,[Validator]=true,[Resource]=true,[ThumbnailIcon]=true,[InvalidValueTypeClassException]=true,[HomeTile]=true,[ILockableLayout]=true,[ReadyInterfaceEvent]=true,[FatalProgramException]=true,[DoubleClickMouseEvent]=true,[ThemeOutlet]=true,[Event]=true,[ClassException]=true,[Theme]=true,[TimerEvent]=true,[UpSymbol]=true,[TreeExpandedSymbol]=true,[Program]=true,[Path]=true,[ApplicationEventManager]=true,[ListSymbol]=true,[SearchSymbol]=true,[MenuCloseSymbol]=true,[Interface]=true,[IToolbarPressableItem]=true,[ISerialiseable]=true,[ForwardSymbol]=true,[ProgramItem]=true,[DownSymbol]=true,[SymbolMask]=true,[DragMouseEvent]=true,[CloseSymbol]=true,[BackSymbol]=true,[KeyboardShortcutEvent]=true,[Folder]=true,[ConstructionClassException]=true,[LeftSymbol]=true,[Image]=true,[MouseEvent]=true,[UnknownTypeValidationException]=true,[IAutomaticLayout]=true,[TextMask]=true,[SeparatorMask]=true,[TreeNode]=true,[KeyEvent]=true,[Font]=true,[Bundle]=true,[ScreenCanvas]=true,[QuartzSettings]=true,[MoveMouseEvent]=true,[SplashApplicationContainer]=true,[HomeItem]=true,[DragDropManager]=true,[TextChangedInterfaceEvent]=true,[TopBarContainer]=true,[SilicaProgramEnvironment]=true,[EnteredInterfaceMouseEvent]=true,[SiblingRemovedInterfaceEvent]=true,[Package]=true,[PseudoReferenceClassException]=true,[ValueTypeClassException]=true,[TextCursor]=true,[FocusesChangedInterfaceEvent]=true,[UpMouseEvent]=true,[MathParser]=true,[SiblingAddedInterfaceEvent]=true,[DownMouseEvent]=true,[HeldMouseEvent]=true,[ChildRemovedInterfaceEvent]=true,[TopBarItem]=true,[KeyboardShortcut]=true,[Button]=true,[ValidationException]=true,[IEditableFileSystemItem]=true,[Application]=true,[MenuNotSpecifiedException]=true,[DownKeyEvent]=true,[HomeSearchBox]=true,[StyleClassException]=true,[Animation]=true,[TreeItem]=true,[ThumbnailSymbol]=true}local function _C_9x(_,k,v)return v[k] end local _C_9y={__index=_C_1,__newindex=_C_2}local _C_9z={__index=_C_5,__newindex=_C_6}local _C_A0 local _C_A1={}local _C_A2 local _C_A3={}local _C_A4 local _C_A5={}local _C_A6 local _C_A7={}local _C_A8 local _C_A9={}local _C_AA local _C_AB={}local _C_AC local _C_AD={}local _C_AE local _C_AF={}local _C_AG local _C_AH={}local _C_AI local _C_AJ={}local _C_AK local _C_AL={}local _C_AM local _C_AN={}local _C_AO local _C_AP={}local _C_AQ local _C_AR={}local _C_AS local _C_AT={}local _C_AU local _C_AV={}local _C_AW local _C_AX={}local _C_AY local _C_AZ={}local _C_Aa local _C_Ab={}local _C_Ac local _C_Ad={}_C_Af={}_C_Ag={}local function _C_Ai(v)return type(v)~="string"end function _C_Ah(self,super)return function(_C_self_passed,serialisedContent)if _C_Ai(serialisedContent)then _C_F(self,"serialisedContent","unserialise","String",serialisedContent)end 
		local info = textutils.unserialise( serialisedContent )
		return BridgedFileAssociation( info )
	end end
_C_Aj={["unserialise"]={_C_Ah,}}_C_Ak={[FileAssociation]=1,[_C_3R]=1,[ISerialiseable]=1}_C_Al={["argumentFormat"]=loadstring("return { true }\
\
\9\
"),}local function _C_An(v)return type(v)~="table"end function _C_Ao(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Icon])end  function _C_Ap(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Bundle])end  local function _C_Aq(v)return v~=nil and type(v)~="string"end local function _C_Ar(v)return type(v)~="number"end _C_Am={["argumentFormat"]={_C_An,"Table"},["icon"]={_C_Ao,"Icon (allowsNil)"},["programBundle"]={_C_Ap,"Bundle (allowsNil)"},["mime"]={_C_Aq,"String (allowsNil)"},["extensions"]={_C_An,"Table"},["name"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}local function _C_At(v)return v~=nil and type(v)~="table"end function _C_Au(v)local j=_C_L[v]return not(j and j[Bundle])end  function _C_As(self,super)return function(_C_self_passed,name,mime,icon,extensions,argumentFormat,programBundle)if _C_Ai(name)then _C_F(self,"name","initialise","String",name)end if _C_Ai(mime)then _C_F(self,"mime","initialise","String",mime)end if _C_Ao(icon)then _C_F(self,"icon","initialise","Icon (allowsNil)",icon)end if _C_An(extensions)then _C_F(self,"extensions","initialise","Table",extensions)end if _C_At(argumentFormat)then _C_F(self,"argumentFormat","initialise","Table (allowsNil)",argumentFormat)end if _C_Au(programBundle)then _C_F(self,"programBundle","initialise","Bundle",programBundle)end 
		self.id = n
		n = n + 1
		self.name = name
		self.mime = mime
		self.icon = icon
		self.extensions = extensions
		self.programBundle = programBundle
		self.argumentFormat = argumentFormat
	end end
function _C_Av(self,super)return function(_C_self_passed)
		local icon = self.icon
		local programBundle = self.programBundle
		return textutils.serialise( {
			id = self.id;
			name = self.name;
			mime = self.mime;
			icon = icon and icon.contents;
			extensions = self.extensions;
		} )
	end end
_C_Aw={["initialise"]={_C_As,},["serialise"]={_C_Av,}}function _C_Ax(_,k,n,v)if _C_An(n)then _C_D(_,k,"Table",n)end v[k]=n end function _C_Ay(_,k,n,v)if _C_Ao(n)then _C_D(_,k,"Icon (allowsNil)",n)end v[k]=n end function _C_Az(_,k,n,v)if _C_Ap(n)then _C_D(_,k,"Bundle (allowsNil)",n)end v[k]=n end function _C_B0(_,k,n,v)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end v[k]=n end function _C_B1(_,k,n,v)if _C_Ai(n)then _C_D(_,k,"String",n)end v[k]=n end function _C_B2(_,k,n,v)if _C_Ar(n)then _C_D(_,k,"Number",n)end v[k]=n end _C_B3=setmetatable({["argumentFormat"]=_C_9x,["icon"]=_C_9x,["programBundle"]=_C_9x,["mime"]=_C_9x,["extensions"]=_C_9x,["name"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x,["serialise"]=_C_9x},_C_9z)_C_B4=setmetatable({["argumentFormat"]=_C_Ax,["icon"]=_C_Ay,["programBundle"]=_C_Az,["mime"]=_C_B0,["extensions"]=_C_Ax,["name"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7,["serialise"]=_C_7},_C_9z)_C_B5={[FileAssociation]=1,[ISerialiseable]=1}_C_B7={}_C_B8={}_C_B9={["unserialise"]={[2]=_C_Ah,}}_C_BA={[FakeFileAssociation]=1,[_C_30]=1,[FileAssociation]=1,[_C_3R]=1,[ISerialiseable]=1}_C_BB={"FileAssociation"}_C_BC={["argumentFormat"]=loadstring("return { true }\
\
\9\
"),}_C_BD={["argumentFormat"]={_C_An,"Table"},["icon"]={_C_Ao,"Icon (allowsNil)"},["programBundle"]={_C_Ap,"Bundle (allowsNil)"},["mime"]={_C_Aq,"String (allowsNil)"},["extensions"]={_C_An,"Table"},["name"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_BF(v)local j=_C_L[v]return not(j and j[Icon])end  function _C_BE(self,super)return function(_C_self_passed,mime,icon,extensions)if _C_Ai(mime)then _C_F(self,"mime","initialise","String",mime)end if _C_BF(icon)then _C_F(self,"icon","initialise","Icon",icon)end if extensions==nil then extensions={}  end if _C_An(extensions)then _C_F(self,"extensions","initialise","Table",extensions)end 
		self.mime = mime
		self.icon = icon
		self.extensions = extensions
		self.programBundle = nil
		self.argumentFormat = {}
	end end
_C_BG={["initialise"]={_C_BE,_C_As,},["serialise"]={[2]=_C_Av,}}_C_BH=setmetatable({["argumentFormat"]=_C_9x,["icon"]=_C_9x,["programBundle"]=_C_9x,["mime"]=_C_9x,["extensions"]=_C_9x,["name"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x,["serialise"]=_C_9x},_C_9z)_C_BI=setmetatable({["argumentFormat"]=_C_Ax,["icon"]=_C_Ay,["programBundle"]=_C_Az,["mime"]=_C_B0,["extensions"]=_C_Ax,["name"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7,["serialise"]=_C_7},_C_9z)_C_BJ={[FakeFileAssociation]=1,[FileAssociation]=1,[ISerialiseable]=1}_C_BK={"FileAssociation"}_C_BM={["cache"]=loadstring("return {}\
\9\
\
\9\
\
\
\
\
\
\
\9\
"),}function _C_BO(v)local j=_C_L[v]return not(j and j[Font])end  _C_BN={["cache"]={_C_An,"Table"},["systemFont"]={_C_BO,"Font"},}function _C_BP(self,super)return function(_C_self_passed,h,characters,height,metadata)
		if h then
			for k, v in pairs( metadata or {} ) do
				h.write( 0 )
				writestring( h, tostring( k ) )
				h.write( 0 )
				writestring( h, tostring( v ) )
				h.write( 0 )
			end
			h.write( 1 )
			h.write( height )
			local bytes
			if metadata.fontType == "vector" then
				bytes = VectorFont.static:encodeSet( characters, height )
			else
				bytes = BitmapFont.static:encodeSet( characters, height )
			end
			for _, byte in ipairs( bytes ) do
				h.write( byte )
			end
			h.close()
			return true
		end
	end end
function _C_BQ(self,super)return function(_C_self_passed,file,characters,height,metadata)
		local h = fs.open( file, "wb" )
		return Font.encodeHandle( handle, characters, height, metadata)
	end end
function _C_BR(self,super)return function(_C_self_passed)
		-- TODO: make this come from the theme
		-- Font.systemFont = Font( "Napier" )
		Font.static.systemFont = Font.static:fromName( "Auckland", "systemFont" )
	end end
function _C_BS(self,super)return function(_C_self_passed,file)
		local h = fs.open( file, "rb" )
		return Font.static:decodeHandle( h )
	end end
function _C_BT(self,super)return function(_C_self_passed,h)
		if h then
			local metadata = {}
			local v = h.read()
			while v == 0 do
				local key, value = readstring( h ), readstring( h )
				metadata[key] = value
				v = h.read()
			end
			local height = h.read()
			local bytes = {}
			for byte in h.read do
				bytes[#bytes + 1] = byte
			end

			local fontType = metadata.fontType
			local characters

			if fontType == "bitmap" then
				characters = BitmapFont.static:decodeSet( bytes, height )
			else
				characters = VectorFont.static:decodeSet( bytes, height )
			end
			return characters, height, metadata
		end
	end end
function _C_BU(self,super)return function(_C_self_passed,resource)
		-- log(resource)
		local contents = resource.contents
		-- log(resource.path)
		-- log(contents)
		if contents then
			local i = 1
			local contentsLen = #contents
			local b = string.byte
			local sub = string.sub
			local h = {}

			function h.read()
				if i <= contentsLen then
					local value = b( sub( contents, i, i ) )
					i = i + 1
					return value
				end
			end

			return Font.static:decodeHandle( h )
		end
	end end
function _C_BV(self,super)return function(_C_self_passed,file)
		local h = fs.open( file, "rb" )
		if h then
			local metadata = {}
			local v = h.read()
			while v == 0 do
				local key, value = readstring( h ), readstring( h )
				metadata[key] = value
				v = h.read()
			end
			h.close()
			return metadata
		end
	end end
function _C_BW(self,super)return function(_C_self_passed,name,alias)if _C_Ai(name)then _C_F(self,"name","fromName","String",name)end if _C_Aq(alias)then _C_F(self,"alias","fromName","String (allowsNil)",alias)end 
		local cache = self.cache
		local cacheValue = cache[name]
		if cacheValue then return cacheValue end
		local font = Font( name )
		cache[name] = font
		if alias then
			cache[alias] = font
		end
		return font
	end end
_C_BX={["encodeHandle"]={_C_BP,},["encodeFile"]={_C_BQ,},["initialisePresets"]={_C_BR,},["decodeFile"]={_C_BS,},["decodeResource"]={_C_BU,},["decodeHandle"]={_C_BT,},["readMetadata"]={_C_BV,},["fromName"]={_C_BW,}}function _C_BY(_,k,n,v)if _C_BO(n)then _C_D(_,k,"Font",n)end v[k]=n end _C_BZ=setmetatable({["cache"]=_C_9x,["systemFont"]=_C_9x,["encodeHandle"]=_C_9x,["encodeFile"]=_C_9x,["initialisePresets"]=_C_9x,["decodeFile"]=_C_9x,["decodeResource"]=_C_9x,["decodeHandle"]=_C_9x,["readMetadata"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_Ba=setmetatable({["cache"]=_C_Ax,["systemFont"]=_C_BY,["encodeHandle"]=_C_7,["encodeFile"]=_C_7,["initialisePresets"]=_C_7,["decodeFile"]=_C_7,["decodeResource"]=_C_7,["decodeHandle"]=_C_7,["readMetadata"]=_C_7,["fromName"]=_C_7},_C_9z)_C_Bb={[Font]=1,[_C_8m]=1}_C_Bc={["desiredHeight"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 0\
\9\
"),["spacing"]=loadstring("return 1\
\9\
"),}_C_Bd={["scale"]={_C_Ar,"Number"},["spacing"]={_C_Ar,"Number"},["characters"]={_C_An,"Table"},["height"]={_C_Ar,"Number"},["desiredHeight"]={_C_Ar,"Number"},}function _C_Be(self,super)return function(_C_self_passed,name,desiredHeight,reload)
		local characters, height
		desiredHeight = desiredHeight or 8
		if cache[name] and cache[name][desiredHeight] and not reload then
			characters, height = cache[name][desiredHeight][1], cache[name][desiredHeight][2]
		else
			local resource = Resource( name, Metadata.mimes.SFONT, "fonts" )
			characters, height = BitmapFont.static:decodeResource( resource )
			cache[name] = cache[name] or {}
			cache[name][desiredHeight] = { characters, height }
		end
		self.characters = characters
		self.height = height
		self.desiredHeight = desiredHeight or height
		self.scale = ( desiredHeight or height ) / height
	end end
function _C_Bf(self,super)return function(_C_self_passed,text)
		if not text then return 0 end
		local width = 0
		local scale, characters, desiredHeight, spacing = self.scale, self.characters, self.desiredHeight, self.spacing
		for i = 1, #text do
			local char = text:byte( i )
			local scale, bitmap = scale -- localise scale so it can be changed if the character isn't defined
			if characters[char] then
				bitmap = characters[char]
			else
				bitmap = NO_CHAR_MAP
				scale = desiredHeight / 6
			end
			width = width + bitmap.width * scale
		end
		return width
	end end
function _C_Bg(self,super)return function(_C_self_passed,text,withLastSpace)
		if not text then return 0 end
		local width = 0
		local scale, characters, desiredHeight, spacing = self.scale, self.characters, self.desiredHeight, self.spacing
		for i = 1, #text do
			local char = text:byte( i )
			local scale, bitmap = scale -- localise scale so it can be changed if the character isn't defined
			if characters[char] then
				bitmap = characters[char]
			else
				bitmap = NO_CHAR_MAP
				scale = desiredHeight / 6
			end
			width = width + bitmap.width * scale + spacing * scale
		end
		return width - ( withLastSpace and 0 or spacing * scale )
	end end
_C_Bh={["initialise"]={_C_Be,},["getRawWidth"]={_C_Bf,},["getWidth"]={_C_Bg,}}_C_Bi=setmetatable({["scale"]=_C_9x,["spacing"]=_C_9x,["characters"]=_C_9x,["height"]=_C_9x,["desiredHeight"]=_C_9x,["initialise"]=_C_9x,["getRawWidth"]=_C_9x,["getWidth"]=_C_9x},_C_9z)_C_Bj=setmetatable({["scale"]=_C_B2,["spacing"]=_C_B2,["characters"]=_C_Ax,["height"]=_C_B2,["desiredHeight"]=_C_B2,["initialise"]=_C_7,["getRawWidth"]=_C_7,["getWidth"]=_C_7},_C_9z)_C_Bk={[Font]=1}_C_Bm={["cache"]=loadstring("return {}\
\9\
\
\9\
\
\
\
\
\
\
\9\
"),}_C_Bn={["cache"]={_C_An,"Table"},["systemFont"]={_C_BO,"Font"},}function _C_Bo(self,super)return function(_C_self_passed,bytes,width,height)
		local character = {}
		local s = ceil( height / 8 )
		local function hasbit( x, y )
			local byte = ( x - 1 ) * s + ceil( y / 8 )
			local index = y % 8
			if index == 0 then index = 8 end
			local s = ""
			for i = 1, 8 do
				-- log(bytes[byte])
				s = s .. ( bhasbit( bytes[byte], i ) and 1 or 0 )
			end
			return bhasbit( bytes[byte], index )
		end
		character.width = width
		for y = 1, height do
			character[y] = {}
			for x = 1, width do
				character[y][x] = hasbit( x, y )
			end
		end
		return character
	end end
function _C_Bp(self,super)return function(_C_self_passed,file,characters,height,metadata)
		local h = fs.open( file, "wb" )
		if h then
			for k, v in pairs( metadata or {} ) do
				h.write( 0 )
				writestring( h, tostring( k ) )
				h.write( 0 )
				writestring( h, tostring( v ) )
				h.write( 0 )
			end
			h.write( 1 )
			h.write( height )
			for _, byte in ipairs( BitmapFont.static:encodeSet( characters, height ) ) do
				h.write( byte )
			end
			h.close()
			return true
		end
	end end
function _C_Bq(self,super)return function(_C_self_passed,file)
		local h = fs.open( file, "rb" )
		if h then
			local metadata = {}
			local v = h.read()
			while v == 0 do
				local key, value = readstring( h ), readstring( h )
				metadata[key] = value
				v = h.read()
			end
			local height = h.read()
			local bytes = {}
			for byte in h.read do
				bytes[#bytes + 1] = byte
			end
			local characters = BitmapFont.static:decodeSet( bytes, height )
			return characters, height, metadata
		end
	end end
function _C_Br(self,super)return function(_C_self_passed,input,output,charsetStart,height,metadata)
		local newchar = colours.red
		local filled = colours.white
		local image = paintutils.loadImage( input )
		local n = charsetStart or 0

		local chars = { [n] = {} }
		for x = 1, #image[1] do
			if image[1][x] == newchar then
				n = n + 1
				chars[n] = {}
			else
				for y = 1, #image do
					chars[n][y] = chars[n][y] or {}
					chars[n][y][#chars[n][y] + 1] = image[y][x] == filled
				end
			end
		end

		return BitmapFont.encodeFile( output, chars, height, metadata )
	end end
function _C_Bs(self,super)return function(_C_self_passed,character,width,height)
		local bytes = {}
		for x = 1, width do
			local byte = {}
			local function close()
				if #byte == 0 then return end
				local n = 0
				for i = 1, #byte do
					n = n * 2 + byte[i]
				end
				byte = {}
				bytes[#bytes + 1] = n
			end
			local function append( b )
				byte[#byte + 1] = b and 1 or 0
				if #byte == 8 then
					close()
				end
			end
			for y = 1, ceil( height / 8 ) * 8 do
				if character[y] then
					append( character[y][x] )
				else
					append()
				end
			end
			close()
		end
		return bytes
	end end
function _C_Bt(self,super)return function(_C_self_passed,characters,height)
		local bytes = {}
		for k, v in pairs( characters ) do
			local width = v.width or ( v[1] and #v[1] or 0 )
			bytes[#bytes + 1] = k
			bytes[#bytes + 1] = width
			for _, byte in ipairs( BitmapFont.encodeCharacter( v, width, height ) ) do
				bytes[#bytes + 1] = byte
			end
		end
		return bytes
	end end
function _C_Bu(self,super)return function(_C_self_passed,bytes,height)
		local hf = ceil( height / 8 )
		local characters = {}
		while bytes[1] do
			local character = bytes[1]
			local width = bytes[2]
			table.remove( bytes, 1 )
			table.remove( bytes, 1 )
			local bitmapcount = hf * width
			characters[character] = BitmapFont.static:decodeCharacter( bytes, width, height )
			for i = 1, bitmapcount do
				table.remove( bytes, 1 )
			end
		end
		return characters
	end end
_C_Bv={["readMetadata"]={[2]=_C_BV,},["initialisePresets"]={[2]=_C_BR,},["decodeFile"]={_C_Bq,_C_BS,},["encodeCharacter"]={_C_Bs,},["decodeResource"]={[2]=_C_BU,},["encodeHandle"]={[2]=_C_BP,},["encodeFile"]={_C_Bp,_C_BQ,},["decodeHandle"]={[2]=_C_BT,},["fromName"]={[2]=_C_BW,},["convertFile"]={_C_Br,},["decodeSet"]={_C_Bu,},["decodeCharacter"]={_C_Bo,},["encodeSet"]={_C_Bt,}}_C_Bw=setmetatable({["cache"]=_C_9x,["systemFont"]=_C_9x,["readMetadata"]=_C_9x,["initialisePresets"]=_C_9x,["decodeFile"]=_C_9x,["encodeCharacter"]=_C_9x,["decodeResource"]=_C_9x,["encodeHandle"]=_C_9x,["encodeFile"]=_C_9x,["decodeHandle"]=_C_9x,["fromName"]=_C_9x,["convertFile"]=_C_9x,["decodeSet"]=_C_9x,["decodeCharacter"]=_C_9x,["encodeSet"]=_C_9x},_C_9z)_C_Bx=setmetatable({["cache"]=_C_Ax,["systemFont"]=_C_BY,["readMetadata"]=_C_7,["initialisePresets"]=_C_7,["decodeFile"]=_C_7,["encodeCharacter"]=_C_7,["decodeResource"]=_C_7,["encodeHandle"]=_C_7,["encodeFile"]=_C_7,["decodeHandle"]=_C_7,["fromName"]=_C_7,["convertFile"]=_C_7,["decodeSet"]=_C_7,["decodeCharacter"]=_C_7,["encodeSet"]=_C_7},_C_9z)_C_By={[BitmapFont]=1,[_C_32]=1,[Font]=1,[_C_8m]=1}_C_Bz={"Font"}_C_C0={["desiredHeight"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 0\
\9\
"),["spacing"]=loadstring("return 1\
\9\
"),}_C_C1={["scale"]={_C_Ar,"Number"},["spacing"]={_C_Ar,"Number"},["characters"]={_C_An,"Table"},["height"]={_C_Ar,"Number"},["desiredHeight"]={_C_Ar,"Number"},}_C_C2={["initialise"]={[2]=_C_Be,},["getRawWidth"]={[2]=_C_Bf,},["getWidth"]={[2]=_C_Bg,}}_C_C3=setmetatable({["scale"]=_C_9x,["spacing"]=_C_9x,["characters"]=_C_9x,["height"]=_C_9x,["desiredHeight"]=_C_9x,["initialise"]=_C_9x,["getRawWidth"]=_C_9x,["getWidth"]=_C_9x},_C_9z)_C_C4=setmetatable({["scale"]=_C_B2,["spacing"]=_C_B2,["characters"]=_C_Ax,["height"]=_C_B2,["desiredHeight"]=_C_B2,["initialise"]=_C_7,["getRawWidth"]=_C_7,["getWidth"]=_C_7},_C_9z)_C_C5={[BitmapFont]=1,[Font]=1}_C_C6={"Font"}_C_C8={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"\"\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}function _C_CA(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Path])end  _C_C9={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_CB(self,super)return function(_C_self_passed,path)if _C_CA(path)then _C_F(self,"path","initialise","Path (allowsNil)",path)end 
		if path then
			local symbolName = self.symbolName
			if not symbolName then
				error( "Symbol '" .. tostring( self ) .. "' does not have a symbolName.", 0 )
			end

			if symbolClasses[symbolName] then
				error( "Symbol '" .. tostring( self ) .. "' attempted to overwite symbol with name '" .. symbolName .. "' ('" .. tostring( symbolClasses[symbolName] ) .. "')", 0 )
			end

			self.path = path
			symbolClasses[symbolName] = self
		end
	end end
function _C_CC(self,super)return function(_C_self_passed,name)if _C_Ai(name)then _C_F(self,"name","fromName","String",name)end 
		local symbol = symbolClasses[name]
		if not symbol then
			error( "Unable to find symbol with name '" .. name .. "'", 3 )
		end
		return symbol
	end end
_C_CD={["initialise"]={_C_CB,},["fromName"]={_C_CC,}}function _C_CE(_,k,n,v)if _C_CA(n)then _C_D(_,k,"Path (allowsNil)",n)end v[k]=n end _C_CF=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_CG=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_CH={[Symbol]=1,[_C_34]=1}_C_CI={}_C_CJ={}_C_CK={[Symbol]=1}_C_CM={}_C_CN={}_C_CO={[Mask]=1,[_C_36]=1}_C_CP={}_C_CQ={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_CR(self,super)return function(_C_self_passed,x,y,width,height,pixels)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if pixels==nil then pixels={}  end if _C_An(pixels)then _C_F(self,"pixels","initialise","Table",pixels)end 
		self.x = x
		self.y = y
		self.width = width
		self.height = height
		self.pixels = pixels	
	end end
function _C_CT(v)local j=_C_L[v]return not(j and j[Mask])end  local function _C_CU(v)return v~=nil and type(v)~="number"end function _C_CS(self,super)return function(_C_self_passed,mask,x,y)if _C_CT(mask)then _C_F(self,"mask","exclude","Mask",mask)end if _C_CU(x)then _C_F(self,"x","exclude","Number (allowsNil)",x)end if _C_CU(y)then _C_F(self,"y","exclude","Number (allowsNil)",y)end 
		return shapeMode( self, mask, x, y, function( selfPixel, maskPixel ) return ( not selfPixel and maskPixel ) or ( selfPixel and not maskPixel ) end ) -- can't use ~= as it might be nil
	end end
function _C_CV(self,super)return function(_C_self_passed,mask,x,y)if _C_CT(mask)then _C_F(self,"mask","subtract","Mask",mask)end if _C_CU(x)then _C_F(self,"x","subtract","Number (allowsNil)",x)end if _C_CU(y)then _C_F(self,"y","subtract","Number (allowsNil)",y)end 
		return shapeMode( self, mask, x, y, function( selfPixel, maskPixel ) return selfPixel and not maskPixel end )
	end end
function _C_CW(self,super)return function(_C_self_passed,mask,x,y)if _C_CT(mask)then _C_F(self,"mask","intersect","Mask",mask)end if _C_CU(x)then _C_F(self,"x","intersect","Number (allowsNil)",x)end if _C_CU(y)then _C_F(self,"y","intersect","Number (allowsNil)",y)end 
		return shapeMode( self, mask, x, y, function( selfPixel, maskPixel ) return selfPixel and maskPixel end )
	end end
function _C_CX(self,super)return function(_C_self_passed,mask,x,y)if _C_CT(mask)then _C_F(self,"mask","add","Mask",mask)end if _C_CU(x)then _C_F(self,"x","add","Number (allowsNil)",x)end if _C_CU(y)then _C_F(self,"y","add","Number (allowsNil)",y)end 
		return shapeMode( self, mask, x, y, function( selfPixel, maskPixel ) return selfPixel or maskPixel end )
	end end
_C_CY={["initialise"]={_C_CR,},["exclude"]={_C_CS,},["subtract"]={_C_CV,},["intersect"]={_C_CW,},["add"]={_C_CX,}}_C_CZ=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_Ca=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_Cb={[Mask]=1}_C_Cd={["eventType"]=loadstring("return \"\"\
\9\
"),}_C_Ce={["eventType"]={_C_Ai,"String"},}_C_Cf={["eventClasses"]=loadstring([[return {}

	
]])}function _C_Cg(self,super)return function(_C_self_passed)
		local eventType = self.eventManagerType
		if eventType then
			Event.static:register( self.eventManagerType, self.class )
		end
	end end
function _C_Ch(self,super)return function(_C_self_passed,eventType,...)
		if not eventType then error( "No event type given to Event.create!", 0 ) end

		local eventClass = eventClasses[eventType]
		local event
		if eventClass then
			event = eventClass( ... )
		else
			event = Event()
		end
		event.eventType = eventType
		return event
	end end
function _C_Ci(self,super)return function(_C_self_passed,eventType,subclass)
		eventClasses[eventType] = subclass
	end end
_C_Cj={["initialise"]={_C_Cg,},["create"]={_C_Ch,},["register"]={_C_Ci,}}_C_Ck=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_Cl=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_Cm={[Event]=1,[_C_7j]=1}_C_Cn={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}local function _C_Cp(v)return type(v)~="boolean"end local function _C_Cq(v)return not _C_L[v]end function _C_Cr(v)local j=_C_L[v]return not(j and j[View])end  _C_Co={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}function _C_Cs(self,super)return function(_C_self_passed,view)
		self.relativeView = view
	end end
_C_Ct={["makeRelative"]={_C_Cs,}}function _C_Cu(_,k,n,v)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end v[k]=n end function _C_Cv(_,k,n,v)if _C_Cq(n)then _C_D(_,k,"Instance",n)end v[k]=n end function _C_Cw(_,k,n,v)if _C_Cr(n)then _C_D(_,k,"View",n)end v[k]=n end _C_Cx=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_Cy=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_Cz={[Event]=1}_C_D1={["eventType"]=loadstring("return \"\"\
\9\
"),}_C_D2={["eventType"]={_C_Ai,"String"},}_C_D3={["eventClasses"]=loadstring([[return {}

	
]])}_C_D4={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_D5=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_D6=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_D7={[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_D8={"Event"}_C_D9={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_DA={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}_C_DB={["makeRelative"]={[2]=_C_Cs,}}_C_DC=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_DD=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_DE={[InterfaceEvent]=1,[Event]=1}_C_DF={"Event"}_C_DH={["eventType"]=loadstring("return \"interface_child_repositioned\";\
\9\
\9\
"),}_C_DI={["eventType"]={_C_Ai,"String"},}_C_DJ={["eventClasses"]=loadstring([[return {}

	
]])}_C_DK={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_DL=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_DM=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_DN={[ChildRepositionedInterfaceEvent]=1,[_C_38]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_DO={"InterfaceEvent","Event"}_C_DP={["isSentToChildren"]=loadstring("return false\
\9\
"),["isSentToSender"]=loadstring("return true\
\9\
"),["isSentToParents"]=loadstring("return false\
\
\9\
"),}_C_DQ={["isSentToChildren"]={_C_Cp,"Boolean"},["childView"]={_C_Cr,"View"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}function _C_DR(self,super)return function(_C_self_passed,childView)if _C_Cr(childView)then _C_F(self,"childView","initialise","View",childView)end 
		self.childView = childView
	end end
_C_DS={["initialise"]={_C_DR,},["makeRelative"]={[3]=_C_Cs,}}_C_DT=setmetatable({["isSentToChildren"]=_C_9x,["childView"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_DU=setmetatable({["isSentToChildren"]=_C_Cu,["childView"]=_C_Cw,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_DV={[ChildRepositionedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_DW={"InterfaceEvent","Event"}_C_DY={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}function _C_Da(v)local j=_C_L[v]return not(j and j[EventManager])end  function _C_Db(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Image])end  function _C_Dc(v)local j=_C_L[v]return not(j and j[ThemeOutlet])end  _C_DZ={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}function _C_De(v)local j=_C_L[v]return not(j and j[ThemeChangedInterfaceEvent])end  function _C_Df(v)return not _C_A3[v] end function _C_Dd(self,super)return function(_C_self_passed,event,phase)if _C_De(event)then _C_F(self,"event","onThemeChanged","ThemeChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onThemeChanged","Event.phases",phase)end 
		self:updateAppearance()
	end end
function _C_Dh(v)local j=_C_L[v]return not(j and j[Canvas])end  function _C_Dg(self,super)return function(_C_self_passed,canvas,x,y)if _C_Dh(canvas)then _C_F(self,"canvas","drawTo","Canvas",canvas)end if _C_Ar(x)then _C_F(self,"x","drawTo","Number",x)end if _C_Ar(y)then _C_F(self,"y","drawTo","Number",y)end 
		local image = self.image
		if image then
			canvas:image( image, x - self.hotSpotX + 1, y - self.hotSpotY + 1 )
		end
	end end
function _C_Di(self,super)return function(_C_self_passed)
		local theme = self.theme
		self.image = theme:value( "image" )
		self.hotSpotX = theme:value( "hotSpotX" )
		self.hotSpotY = theme:value( "hotSpotY" )
		local applicationContainer = self.application.container
		if applicationContainer then
			self.hasUpdatedApperance = true
			applicationContainer.needsCursorUpdate = true
		end
	end end
function _C_Dj(self,super)return function(_C_self_passed)
		self.theme = ThemeOutlet( self )
		local event = EventManager( self )
		self.eventManager = event
		event:connectGlobal( ThemeChangedInterfaceEvent, self.onThemeChanged )
	end end
function _C_Dk(self,super)return function(_C_self_passed)
		self:setup()
		for i, subclass in ipairs( Cursor.subclasses ) do
			subclass.static:setup()
		end
	end end
_C_Dl={["onThemeChanged"]={_C_Dd,},["drawTo"]={_C_Dg,},["updateAppearance"]={_C_Di,},["setup"]={_C_Dj,},["setupAll"]={_C_Dk,}}function _C_Dm(_,k,n,v)if _C_Da(n)then _C_D(_,k,"EventManager",n)end v[k]=n end function _C_Dn(_,k,n,v)if _C_Db(n)then _C_D(_,k,"Image (allowsNil)",n)end v[k]=n end function _C_Do(_,k,n,v)if _C_Dc(n)then _C_D(_,k,"ThemeOutlet",n)end v[k]=n end _C_Dp=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["setup"]=_C_9x,["setupAll"]=_C_9x},_C_9z)_C_Dq=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["setup"]=_C_7,["setupAll"]=_C_7},_C_9z)_C_Dr={[Cursor]=1,[_C_3d]=1}_C_Ds={}_C_Dt={}_C_Du={[Cursor]=1}_C_Dw={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}_C_Dx={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}_C_Dy={["onThemeChanged"]={[2]=_C_Dd,},["drawTo"]={[2]=_C_Dg,},["updateAppearance"]={[2]=_C_Di,},["setup"]={[2]=_C_Dj,},["setupAll"]={[2]=_C_Dk,}}_C_Dz=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["setup"]=_C_9x,["setupAll"]=_C_9x},_C_9z)_C_E0=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["setup"]=_C_7,["setupAll"]=_C_7},_C_9z)_C_E1={[ResizeVerticalCursor]=1,[_C_3A]=1,[Cursor]=1,[_C_3d]=1}_C_E2={"Cursor"}_C_E3={}_C_E4={}_C_E5={[ResizeVerticalCursor]=1,[Cursor]=1}_C_E6={"Cursor"}_C_E8={}_C_E9={}_C_EA={[Exception]=1,[_C_5t]=1}_C_EB={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_EC={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_ED(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if level==nil then level=1  end if _C_Ar(level)then _C_F(self,"level","initialise","Number",level)end 
		self.message = message
		level = level == 0 and level or level + 1
		self.level = level
		self.id = nextID
		nextID = nextID + 1

		local traceback = self.traceback
		for i = 1, 15 do
			local src = select( 2, pcall( error, "", i + level ) )
			if src == "pcall: " then
				break
			else
				traceback[i] = src:gsub( ":%s$", "", 1 )
			end
		end

		-- throw the exception
		-- TODO: check that these won't leak out of OS programs (maybe .. self.application and compare the application id)
		local id = self.id
		thrownExceptions[id] = self
											   -- TODO: \/ this is just temporary
		error( "SilicaException: " .. self.id .. ": "..self.message .. textutils.serialize(traceback), 0 )
	end end
_C_EE={["initialise"]={_C_ED,}}_C_EF=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_EG=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_EH={[Exception]=1}_C_EJ={}_C_EK={}_C_EL={[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_EM={"Exception"}_C_EN={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_EO={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_EP={["initialise"]={[2]=_C_ED,}}_C_EQ=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_ER=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_ES={[FatalException]=1,[Exception]=1}_C_ET={"Exception"}_C_EV={}_C_EW={}_C_EX={[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_EY={"FatalException","Exception"}_C_EZ={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_Ea={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_Eb={["initialise"]={[3]=_C_ED,}}_C_Ec=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_Ed=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_Ee={[ClassException]=1,[FatalException]=1,[Exception]=1}_C_Ef={"FatalException","Exception"}_C_Eh={}_C_Ei={}_C_Ej={[ArgumentValueTypeParsingClassException]=1,[_C_3C]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_Ek={"ClassException","FatalException","Exception"}_C_El={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_Em={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_En(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Incorrect declaration of function or argument: " .. message
		super( message, level )
	end end
_C_Eo={["initialise"]={_C_En,[4]=_C_ED,}}_C_Ep=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_Eq=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_Er={[ArgumentValueTypeParsingClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_Es={"ClassException","FatalException","Exception"}_C_Eu={}_C_Ev={}_C_Ew={[View]=1,[_C_3N]=1}_C_Ex={["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_Ez(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Cursor])end  local function _C_F0(v)return v~=nil and type(v)~="boolean"end function _C_F1(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Container])end  function _C_F2(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Mask])end  _C_Ey={["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["theme"]={_C_Dc,"ThemeOutlet"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["height"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["y"]={_C_Ar,"Number"},["isFocused"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["parsedPins"]={_C_An,"Table"},}local function _C_F4(v)return v~=nil end function _C_F3(self,super)return function(_C_self_passed,x,y,parent)if _C_Ar(x)then _C_F(self,"x","getCoordinates","Number",x)end if _C_Ar(y)then _C_F(self,"y","getCoordinates","Number",y)end if parent==nil then parent=self.application.container  end if _C_F4(parent)then _C_F(self,"parent","getCoordinates","Any",parent)end 
		local currentParrent = self
		while currentParrent and currentParrent ~= parent do
			x = x - currentParrent.x + 1
			y = y - currentParrent.y + 1
			currentParrent = currentParrent.parent
		end

		return x, y
	end end
function _C_F5(self,super)return function(_C_self_passed,filter)
		self.application:focus( self, filter )
	end end
function _C_F6(self,super)return function(_C_self_passed)
		self.canvas = Canvas( self.width, self.height, self )
	end end
function _C_F7(self,super)return function(_C_self_passed)
		self.application:unfocus( self )
	end end
function _C_F8(self,super)return function(_C_self_passed,x,y,parent)if _C_Ar(x)then _C_F(self,"x","getCoordinatesTo","Number",x)end if _C_Ar(y)then _C_F(self,"y","getCoordinatesTo","Number",y)end if parent==nil then parent=self.application.container  end if _C_F4(parent)then _C_F(self,"parent","getCoordinatesTo","Any",parent)end 
		local currentParrent = { parent = self }
		while currentParrent.parent and currentParrent.parent ~= parent do
			currentParrent = currentParrent.parent
			x = x + currentParrent.x - 1
			y = y + currentParrent.y - 1
		end
		return x, y
	end end
function _C_F9(self,super)return function(_C_self_passed)
		self.canvas:clear()
		self:onDraw() -- we have no children, just draw our own content
	end end
function _C_FB(v)local j=_C_L[v]return not(j and j[UpMouseEvent])end  function _C_FA(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalUpSpecialMouseEvents","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalUpSpecialMouseEvents","Event.phases",phase)end 
		self.specialMouseTimes.up[event.mouseButton] = os.clock()
	end end
function _C_FC(self,super)return function(_C_self_passed,dt)
		local animations = self.animations
		for i = #animations, 1, -1 do
			local animation = animations[i]
			animation.animation:update( dt )
			if animation.animation.time >= animation.animation.duration then
				table.remove( animations, i )
				if animation.onFinish then
					animation.onFinish( self )
				end
			end
		end
	end end
local function _C_FE(v)return v~=nil and type(v)~="function"end function _C_FF(v)return not _C_Ad[v] end function _C_FD(self,super)return function(_C_self_passed,x,y,time,onFinish,easing,delay)if _C_Ar(x)then _C_F(self,"x","animateMove","Number",x)end if _C_Ar(y)then _C_F(self,"y","animateMove","Number",y)end if time==nil then time=ANIMATION_DEFAULT_TIME end if _C_Ar(time)then _C_F(self,"time","animateMove","Number",time)end if _C_FE(onFinish)then _C_F(self,"onFinish","animateMove","Function (allowsNil)",onFinish)end if easing==nil then easing=DEFAULT_EASING end if _C_FF(easing)then _C_F(self,"easing","animateMove","Animation.easings",easing)end if delay==nil then delay=0  end if _C_Ar(delay)then _C_F(self,"delay","animateMove","Number",delay)end 
		self:animate( "x", x, time, onFinish, easing, delay )
		self:animate( "y", y, time, nil, easing, delay )
	end end
function _C_FG(self,super)return function(_C_self_passed,properties)if _C_At(properties)then _C_F(self,"properties","initialise","Table (allowsNil)",properties)end 
		self:initialiseEventManager()
		self.theme = ThemeOutlet( self )
		self:initialiseCanvas()

		if properties then
			for k, v in pairs(properties) do
				self[k] = v
			end
		end

		local setPins = {
			[pins.LEFT] = self.leftPin;
			[pins.RIGHT] = self.rightPin;
			[pins.TOP] = self.topPin;
			[pins.BOTTOM] = self.bottomPin;
		}
		local parsedPins = self.parsedPins
		for k, v in pairs( setPins ) do
			parsedPins[k] = MathParser( v )
		end

		self:event( DownMouseEvent, self.onDownSpecialMouseEvents )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalUpSpecialMouseEvents )
	end end
function _C_FH(self,super)return function(_C_self_passed,_class)
		local siblings = {}

		for i, sibling in ipairs( self.siblings ) do
			if sibling:typeOf( _class ) then
				siblings[#siblings + 1] = sibling
			end
		end

		return siblings
	end end
function _C_FJ(v)local j=_C_L[v]return not(j and j[Event])end  function _C_FI(self,super)return function(_C_self_passed,event,parent)if _C_FJ(event)then _C_F(self,"event","hitTestEvent","Event",event)end if parent==nil then parent=self.parent  end if _C_F4(parent)then _C_F(self,"parent","hitTestEvent","Any",parent)end 
		if not parent then
			return false
		elseif event:typeOf( MouseEvent ) then
			event:makeRelative( parent )
			local x, y = event.x, event.y
			return self:hitTest( x, y )
		else
			return true
		end
	end end
function _C_FK(self,super)return function(_C_self_passed)
		self.eventManager:dispose()

		local parent = self.parent
		if parent then
			parent:remove( self )
		end

		if self.isFocused then
			self:unfocus()
		end
	end end
function _C_FM(v)local j=_C_L[v]return not(j and j[DownMouseEvent])end  function _C_FL(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onDownSpecialMouseEvents","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onDownSpecialMouseEvents","Event.phases",phase)end 
		local eventManager = self.eventManager
		local hasHeld, hasDouble = eventManager:hasConnections( HeldMouseEvent ), eventManager:hasConnections( DoubleClickMouseEvent )
		if hasHeld or hasDouble then
			local mouseButton, time = event.mouseButton, os.clock()
			local specialMouseTimes = self.specialMouseTimes
			local down, timers = specialMouseTimes.down, specialMouseTimes.timers
			local lastMouseDown = down[mouseButton]
			down[mouseButton] = time

			if hasDouble then
				if lastMouseDown and time - lastMouseDown < MAX_DOUBLE_CLICK_TIME then
					-- double click
					if eventManager:handleEvent( DoubleClickMouseEvent( mouseButton, event.x, event.y, event.globalX, event.globalY ) ) then
						return true
					end
				end
			end
				
			-- start a held timer
			if hasHeld then
				local application = self.application 
				local timer = timers[mouseButton]
				if timer then
					application:unschedule( timer )
				end

				local x, y, globalX, globalY = event.x, event.y, event.globalX, event.globalY
				timer = application:schedule( function()
					timers[mouseButton] = nil
					local lastMouseUp = specialMouseTimes.up[mouseButton]
					if not lastMouseUp or lastMouseUp < time then
						if eventManager:handleEvent( HeldMouseEvent( mouseButton, x, y, globalX, globalY ) ) then
							return true
						end
					end
				end, MIN_MOUSE_HOLD_TIME )
				timers[mouseButton] = timer
			end
		end
	end end
function _C_FN(self,super)return function(_C_self_passed,parent)if parent==nil then parent=self.application.container  end if _C_F4(parent)then _C_F(self,"parent","getPosition","Any",parent)end 
		local selfParent = self.parent
		if not selfParent or parent == selfParent then
			return self.x, self.y
		else
			local x, y = self:getCoordinatesTo( 1, 1, parent )
			return x, y
		end
	end end
function _C_FO(self,super)return function(_C_self_passed)
		self.eventManager = EventManager( self )
	end end
function _C_FP(self,super)return function(_C_self_passed,filter)
		self.application:clearFocus( filter )
	end end
function _C_FQ(self,super)return function(_C_self_passed)
		self.application:addFocus( self )
	end end
function _C_FS(v)local j=_C_L[v]return not(j and j[MouseEvent])end  function _C_FT(v)local j=_C_L[v]return not(j and j[ClipboardData])end  function _C_FR(self,super)return function(_C_self_passed,event,data,hideSource,completion,views)if _C_FS(event)then _C_F(self,"event","startDragDrop","MouseEvent",event)end if _C_FT(data)then _C_F(self,"data","startDragDrop","ClipboardData",data)end if hideSource==nil then hideSource=true end if _C_Cp(hideSource)then _C_F(self,"hideSource","startDragDrop","Boolean",hideSource)end if _C_FE(completion)then _C_F(self,"completion","startDragDrop","Function (allowsNil)",completion)end if _C_At(views)then _C_F(self,"views","startDragDrop","Table (allowsNil)",views)end 
		self.application.dragDropManager:start( views or { self }, data, event.globalX, event.globalY, hideSource, completion )
	end end
function _C_FU(self,super)return function(_C_self_passed)

	end end
function _C_FV(self,super)return function(_C_self_passed,propertyName,value,time,onFinish,easing,delay,round)if _C_Ai(propertyName)then _C_F(self,"propertyName","animate","String",propertyName)end if _C_Ar(value)then _C_F(self,"value","animate","Number",value)end if time==nil then time=ANIMATION_DEFAULT_TIME end if _C_Ar(time)then _C_F(self,"time","animate","Number",time)end if _C_FE(onFinish)then _C_F(self,"onFinish","animate","Function (allowsNil)",onFinish)end if easing==nil then easing=DEFAULT_EASING end if _C_FF(easing)then _C_F(self,"easing","animate","Animation.easings",easing)end if delay==nil then delay=0 end if _C_Ar(delay)then _C_F(self,"delay","animate","Number",delay)end if round==nil then round=true  end if _C_Cp(round)then _C_F(self,"round","animate","Boolean",round)end 
		-- if the value hasn't changed then just call the callback and return
		if self[propertyName] == value then
			if onFinish then
				onFinish( self )
			end
			return
		end

		local addAnimation = function()
			local animations = self.animations
			for i = #animations, 1, -1 do
				if animations[i].label == propertyName then
					table.remove( animations, i )
				end
			end
			
			local animation = Animation( time, self, { [propertyName] = value }, easing, round )
			animations[#animations + 1] = { label = propertyName, animation = animation, onFinish = onFinish }
		end

		if delay <= 0 then
			addAnimation()
		else
			self.application:schedule( addAnimation, delay )
		end
	end end
function _C_FW(self,super)return function(_C_self_passed,width,height,time,onFinish,easing,delay)if _C_Ar(width)then _C_F(self,"width","animateResize","Number",width)end if _C_Ar(height)then _C_F(self,"height","animateResize","Number",height)end if time==nil then time=ANIMATION_DEFAULT_TIME end if _C_Ar(time)then _C_F(self,"time","animateResize","Number",time)end if _C_FE(onFinish)then _C_F(self,"onFinish","animateResize","Function (allowsNil)",onFinish)end if easing==nil then easing=DEFAULT_EASING end if _C_FF(easing)then _C_F(self,"easing","animateResize","Animation.easings",easing)end if delay==nil then delay=0  end if _C_Ar(delay)then _C_F(self,"delay","animateResize","Number",delay)end 
		self:animate( "width", width, time, onFinish, easing, delay )
		self:animate( "height", height, time, nil, easing, delay )
	end end
function _C_FX(self,super)return function(_C_self_passed,x,y)if _C_Ar(x)then _C_F(self,"x","hitTest","Number",x)end if _C_Ar(y)then _C_F(self,"y","hitTest","Number",y)end 
		local _x, _y = self.x, self.y
		return self.isVisible and _x <= x
		   and x <= _x + self.width - 1
		   and _y <= y and y <= _y + self.height - 1
		   and ( not self.isCanvasHitTested or self.canvas:hitTest( x - _x + 1, y - _y + 1 ) )
	end end
_C_FY={["getCoordinates"]={_C_F3,},["focus"]={_C_F5,},["initialiseCanvas"]={_C_F6,},["unfocus"]={_C_F7,},["getCoordinatesTo"]={_C_F8,},["draw"]={_C_F9,},["onGlobalUpSpecialMouseEvents"]={_C_FA,},["update"]={_C_FC,},["animateMove"]={_C_FD,},["initialise"]={_C_FG,},["siblingsOfType"]={_C_FH,},["hitTestEvent"]={_C_FI,},["dispose"]={_C_FK,},["onDownSpecialMouseEvents"]={_C_FL,},["getPosition"]={_C_FN,},["initialiseEventManager"]={_C_FO,},["clearFocus"]={_C_FP,},["addFocus"]={_C_FQ,},["startDragDrop"]={_C_FR,},["onDraw"]={_C_FU,},["animate"]={_C_FV,},["animateResize"]={_C_FW,},["hitTest"]={_C_FX,}}function _C_FZ(self,super)return function(_C_self_passed)
		return self.parent and self.isVisible -- if we don't have a parent we're effectively not visible
	end end function _C_Fa(self,super)return function(_C_self_passed)
		if not self.isEnabled then
			return false
		else
			local parent = self.parent
			if parent and not parent.isEnabled then
				return false
			else
				return true
			end
		end
	end end function _C_Fb(self,super)return function(_C_self_passed)
		return self.index == 1
	end end function _C_Fc(self,super)return function(_C_self_passed)
		local parent = self.parent
		if parent then
			for i, child in ipairs( parent.children ) do
				if child == self then
					return i
				end
			end
		end
		return 1
	end end function _C_Fd(self,super)return function(_C_self_passed)
		return self.canvas.contentMask -- self.canvas.mask is the mask of the currently drawn pixels to the canvas, i.e. everything will cast a shadow
	end end function _C_Fe(self,super)return function(_C_self_passed)
		local siblings = {}

		if self.parent then
			for i, child in ipairs( self.parent.children ) do
				if child ~= self then
					siblings[#siblings + 1] = child
				end
			end
		end

		return siblings
	end end function _C_Ff(self,super)return function(_C_self_passed)
		local parent = self.parent
		return parent and (self.index == #parent.children) or false
	end end function _C_Fg(self,super)return function(_C_self_passed,width)
		if self.width ~= width then
			self.width = width
			self.canvas.width = width
			self.needsDraw = true
			local parent = self.parent
			if parent then
				if not self.rightPin then
					local selfReferences = parent.childPins.references[self]
					if selfReferences and selfReferences[pins.RIGHT] then
						parent.needsHorizontalPinUpdate = true
					end
				end
				parent.event:handleEvent( ChildRepositionedInterfaceEvent( self ) )
			end
		end
	end end function _C_Fh(self,super)return function(_C_self_passed,y)
		if self.y ~= y then
			self.y = y
			local parent = self.parent
			if parent then
				if not self.topPin then
					local selfReferences = parent.childPins.references[self]
					if selfReferences and ( selfReferences[pins.TOP] or selfReferences[pins.BOTTOM] ) then
						parent.needsVerticalPinUpdate = true
					end
				end
				parent.needsDraw = true
				parent.event:handleEvent( ChildRepositionedInterfaceEvent( self ) )
			end
		end
	end end function _C_Fi(self,super)return function(_C_self_passed,isFocused)
		local wasFocused = self.isFocused
		if wasFocused ~= isFocused then
			self.isFocused = isFocused
			if self:isDefinedfunction( "updateThemeStyle" ) then
				self:updateThemeStyle()
			end
		end
	end end function _C_Fj(self,super)return function(_C_self_passed,topPin)
	    self.topPin = topPin
	    if topPin then
		    local parsed = MathParser( topPin )
		    self.parsedPins[pins.TOP] = parsed
		    local parent = self.parent
		    if parent then
		    	local childPinTable = parent.childPins[self]
		    	if childPinTable then
		    		childPinTable[pins.TOP] = parsed
		    	end
		    	parent.needsVerticalPinUpdate = true
		    end
		end
	end end function _C_Fk(self,super)return function(_C_self_passed,rightPin)
	    self.rightPin = rightPin
	    if rightPin then
		    local parsed = MathParser( rightPin )
		    self.parsedPins[pins.RIGHT] = parsed
		    local parent = self.parent
		    if parent then
		    	local childPinTable = parent.childPins[self]
		    	if childPinTable then
		    		childPinTable[pins.RIGHT] = parsed
		    	end
		    	parent.needsHorizontalPinUpdate = true
		    end
		end
	end end function _C_Fl(self,super)return function(_C_self_passed,isVisible)
		self.isVisible = isVisible
		local parent = self.parent
		if parent then
			self.parent.needsDraw = true
		end
	end end function _C_Fm(self,super)return function(_C_self_passed,leftPin)
	    self.leftPin = leftPin
	    if leftPin then
		    local parsed = MathParser( leftPin )
		    self.parsedPins[pins.LEFT] = parsed
		    local parent = self.parent
		    if parent then
		    	local childPinTable = parent.childPins[self]
		    	if childPinTable then
		    		childPinTable[pins.LEFT] = parsed
		    	end
		    	parent.needsHorizontalPinUpdate = true
		    end
		end
	end end function _C_Fn(self,super)return function(_C_self_passed,bottomPin)
	    self.bottomPin = bottomPin
	    if bottomPin then
		    local parsed = MathParser( bottomPin )
		    self.parsedPins[pins.BOTTOM] = parsed
		    local parent = self.parent
		    if parent then
		    	local childPinTable = parent.childPins[self]
		    	if childPinTable then
		    		childPinTable[pins.BOTTOM] = parsed
		    	end
		    	parent.needsVerticalPinUpdate = true
		    end
		end
	end end function _C_Fo(self,super)return function(_C_self_passed,index)
		local parent = self.parent
		if parent then
			local containerChildren = parent.children
			index = math.max( math.min( index, #containerChildren), 1 )

			local currentIndex
			for i, child in ipairs( containerChildren ) do
				if child == self then
					currentIndex = i
					break
				end
			end

			if currentIndex ~= index then
				table.remove( containerChildren, currentIndex )
				table.insert( containerChildren, index, self )
			end
		end
	end end function _C_Fp(self,super)return function(_C_self_passed,needsDraw)
		self.needsDraw = needsDraw
		if needsDraw then
			local parent = self.parent
			if parent then
				parent.needsDraw = needsDraw -- if we need to draw the parent also has to redraw
			end
		end
	end end function _C_Fq(self,super)return function(_C_self_passed,x)
		if self.x ~= x then
			self.x = x
			local parent = self.parent
			if parent then
				if not self.leftPin then
					local selfReferences = parent.childPins.references[self]
					if selfReferences and ( selfReferences[pins.LEFT] or selfReferences[pins.RIGHT] ) then
						parent.needsHorizontalPinUpdate = true
					end
				end
				parent.needsDraw = true
				parent.event:handleEvent( ChildRepositionedInterfaceEvent( self ) )
			end
		end
	end end function _C_Fr(self,super)return function(_C_self_passed,height)
		if self.height ~= height then
			self.height = height
			self.canvas.height = height
			self.needsDraw = true
			local parent = self.parent
			if parent then
				if not self.bottomPin then
					local selfReferences = parent.childPins.references[self]
					if selfReferences and selfReferences[pins.BOTTOM] then
						parent.needsVerticalPinUpdate = true
					end
				end
				parent.event:handleEvent( ChildRepositionedInterfaceEvent( self ) )
			end
		end
	end end function _C_Fs(self,super)return function(_C_self_passed,shadowSize)
		self.shadowSize = shadowSize
		self.needsDraw = true 
	end end _C_Ft={set={["x"]={_C_Fq},["y"]={_C_Fh},["leftPin"]={_C_Fm},["isFocused"]={_C_Fi},["shadowSize"]={_C_Fs},["height"]={_C_Fr},["width"]={_C_Fg},["rightPin"]={_C_Fk},["bottomPin"]={_C_Fn},["index"]={_C_Fo},["topPin"]={_C_Fj},["isVisible"]={_C_Fl},["needsDraw"]={_C_Fp}},get={["isFirst"]={_C_Fb},["siblings"]={_C_Fe},["shadowMask"]={_C_Fd},["isEnabled"]={_C_Fa},["index"]={_C_Fc},["isVisible"]={_C_FZ},["isLast"]={_C_Ff}}}function _C_Fu(_,k,n,v)if _C_Ez(n)then _C_D(_,k,"Cursor (allowsNil)",n)end v[k]=n end function _C_Fv(_,k,n,v)if _C_F0(n)then _C_D(_,k,"Boolean (allowsNil)",n)end v[k]=n end function _C_Fw(_,k,n,v)if _C_F1(n)then _C_D(_,k,"Container (allowsNil)",n)end v[k]=n end function _C_Fx(_,k,n,v)if _C_Dh(n)then _C_D(_,k,"Canvas",n)end v[k]=n end function _C_Fy(_,k,n,v)if _C_F2(n)then _C_D(_,k,"Mask (allowsNil)",n)end v[k]=n end function _C_Fz(_,k,n,v)if _C_At(n)then _C_D(_,k,"Table (allowsNil)",n)end v[k]=n end _C_G0=setmetatable({["cursor"]=_C_9x,["x"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["needsDraw"]=_C_9x,["topPin"]=_C_9x,["width"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["parent"]=_C_9x,["specialMouseTimes"]=_C_9x,["canvas"]=_C_9x,["theme"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["identifier"]=_C_9x,["animations"]=_C_9x,["isCanvasHitTested"]=_C_9x,["eventManager"]=_C_9x,["height"]=_C_9x,["interfaceProperties"]=_C_9x,["y"]=_C_9x,["isFocused"]=_C_9x,["isSingleFocusOnly"]=_C_9x,["isFocusDismissable"]=_C_9x,["isMouseInView"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["leftPin"]=_C_9x,["rightPin"]=_C_9x,["parsedPins"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["dispose"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["onDraw"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_G1=setmetatable({["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["specialMouseTimes"]=_C_Ax,["canvas"]=_C_Fx,["theme"]=_C_Do,["shadowMask"]=_C_Fy,["identifier"]=_C_B0,["animations"]=_C_Ax,["isCanvasHitTested"]=_C_Cu,["eventManager"]=_C_Dm,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isSingleFocusOnly"]=_C_Cu,["isFocusDismissable"]=_C_Cu,["isMouseInView"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parsedPins"]=_C_Ax,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["dispose"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["onDraw"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_G2={[View]=1}_C_G4={}_C_G5={}_C_G6={[TextBox]=1,[_C_3E]=1,[View]=1,[_C_3N]=1}_C_G7={"View"}_C_G8={["cursor"]=loadstring("return TextCursor.static\
\
\9\
"),["width"]=loadstring("return 120\
\9\
"),["selectionVisible"]=loadstring("return false\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["cursorX"]=loadstring("return 0\
\9\
"),["scroll"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["cursorFlashCounter"]=loadstring("return 0\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["cursorColour"]=loadstring("return Graphics.colours.BLACK;\
\
\9\
"),["height"]=loadstring("return 15\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["selectionWidth"]=loadstring("return 0\
\9\
"),["isMasked"]=loadstring("return false \
\
\9\
"),["text"]=loadstring("return \"\"\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["cursorPosition"]=loadstring("return 1\
\9\
"),["maxScroll"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_GA(v)return not _C_AP[v] end _C_G9={["selectionVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["placeholder"]={_C_Aq,"String (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["cursorColour"]={_C_GA,"Graphics.colours"},["cursorPosition"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["maxScroll"]={_C_Ar,"Number"},["x"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["scroll"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["animations"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["selectionPosition"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["isMasked"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["isMouseInView"]={_C_Cp,"Boolean"},["selectionWidth"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["selectionX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["cursorFlashCounter"]={_C_Ar,"Number"},}function _C_GB(self,super)return function(_C_self_passed,text)
		local t = {}
		local valid = self.isValidChar
		local s = ""
		for i = 1, #text do
			local char = sub( text, 1, 1 )
			if valid( self, char ) then
				s = s .. char
			end
		end
		local text = self.text
		local cursorPosition, selectionPosition = self.cursorPosition, self.selectionPosition
		if selectionPosition then
			-- selectionPosition = selectionPosition - 1
			local left, right = math.min( cursorPosition, selectionPosition ), math.max( cursorPosition, selectionPosition )
			self.text = text:sub( 1, left - 1 ) .. s .. text:sub( right )
			self.selectionPosition = nil
			self.cursorPosition =  math.min( cursorPosition, selectionPosition ) + #s
		else
			self.text = text:sub( 1, cursorPosition - 1 ) .. s .. text:sub( cursorPosition )
			self.cursorPosition =  cursorPosition + #s
		end
	end end
function _C_GC(self,super)return function(_C_self_passed)
		local theme = self.theme
		self.maxScroll = theme:value( "font" ):getWidth( self.text ) - ( self.width - theme:value( "leftMargin" ) - theme:value( "rightMargin" ) )
	end end
function _C_GD(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onKeyboardShortcut","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onKeyboardShortcut","Event.phases",phase)end 
		if self.isFocused then
			if event:matchesKeys( { "ctrl", "left" } ) or event:matchesKeys( { "home" } ) then
				self.selectionPosition = nil
				self.cursorPosition = 1
			elseif event:matchesKeys( { "ctrl", "right" } ) or event:matchesKeys( { "end" } ) then
				self.selectionPosition = nil
				self.cursorPosition = #self.text + 1
			elseif event:matchesKeys( { "ctrl", "shift", "left" } ) then
				self.selectionPosition = 1
			elseif event:matchesKeys( { "ctrl", "shift", "right" } ) then
				self.selectionPosition = #self.text + 1
			elseif event:matchesKeys( { "alt", "left" } ) then
				self.cursorPosition = self:wordPosition( self.cursorPosition, SELECTION_DIRECTIONS.LEFT )
			elseif event:matchesKeys( { "alt", "right" } ) then
				local _, right = self:wordPosition( self.cursorPosition, SELECTION_DIRECTIONS.RIGHT )
				self.cursorPosition = right
			elseif event:matchesKeys( { "alt", "shift", "left" } ) then
				self.selectionPosition = self:wordPosition( math.min( self.cursorPosition, self.selectionPosition or math.huge ), SELECTION_DIRECTIONS.LEFT )
			elseif event:matchesKeys( { "alt", "shift", "right" } ) then
				local _, right = self:wordPosition( math.max( self.cursorPosition, self.selectionPosition or 0), SELECTION_DIRECTIONS.RIGHT )
				self.selectionPosition = right
			elseif event:matchesKeys( { "shift", "left" } ) then
				local selectionPosition = self.selectionPosition
				if selectionPosition then
					self.selectionPosition = math.max( 1, selectionPosition - 1 )
				else
					self.selectionPosition = math.max( 1, self.cursorPosition - 1 )
				end
			elseif event:matchesKeys( { "shift", "right" } ) then
				local selectionPosition = self.selectionPosition
				if selectionPosition then
					self.selectionPosition = math.min( #self.text + 1, selectionPosition + 1 )
				else
					self.selectionPosition = math.min( #self.text + 1, self.cursorPosition + 1 )
				end
			elseif event:matchesKeys( { "ctrl", "a" } ) then
				self.cursorPosition = 1
				self.selectionPosition = #self.text + 1
			elseif event:matchesKeys( { "ctrl", "backspace" } ) then
				local cursorPosition = self.cursorPosition
				self.selectionPosition = nil
				self.cursorPosition = 1
				self.text = self.text:sub( cursorPosition )
			else
				return false
			end
			return true
		end
	end end
function _C_GF(v)local j=_C_L[v]return not(j and j[ScrollMouseEvent])end  function _C_GE(self,super)return function(_C_self_passed,event,phase)if _C_GF(event)then _C_F(self,"event","onMouseScroll","ScrollMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseScroll","Event.phases",phase)end 
		if self.isEnabled then
			self.scroll = self.scroll + event.direction * SCROLL_SPEED
		end
		return true
	end end
function _C_GG(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )

		if self.isFocused then
			local cursorFlashCounter = self.cursorFlashCounter
			local visible = cursorFlashCounter % 2 < 1
			local rem = cursorFlashCounter % 1
			if rem > .85 then
				if visible then
					self.cursorColour = ( rem > .95 and Graphics.colours.LIGHT_GREY ) or Graphics.colours.GREY
				else
					self.cursorColour = ( rem > .95 and Graphics.colours.GREY ) or Graphics.colours.LIGHT_GREY
					visible = true
				end
			elseif not visible then
				self.cursorColour = Graphics.colours.WHITE
			else
				self.cursorColour = Graphics.colours.BLACK
			end
			self.cursorFlashCounter = cursorFlashCounter + deltaTime * 2
		end
	end end
function _C_GI(v)local j=_C_L[v]return not(j and j[UpKeyEvent])end  function _C_GH(self,super)return function(_C_self_passed,event,phase)if _C_GI(event)then _C_F(self,"event","onKeyUp","UpKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onKeyUp","Event.phases",phase)end 
		if self.isFocused then
			
		end
	end end
function _C_GJ(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( UpKeyEvent, self.onKeyUp )
		self:event( DownKeyEvent, self.onKeyDown )
		self:event( CharacterEvent, self.onCharacter )
		self:event( DownMouseEvent, self.onMouseDown )
		self:event( UpMouseEvent, self.onMouseUp )
		self:event( DragMouseEvent, self.onMouseDrag )
		self:event( ScrollMouseEvent, self.onMouseScroll )
		self:event( KeyboardShortcutEvent, self.onKeyboardShortcut )
		self:event( DoubleClickMouseEvent, self.onMouseDoubleClick )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
function _C_GK(self,super)return function(_C_self_passed,x)
		if x <= 0 then
			return 1
		end
		local theme = self.theme
		x = x - theme:value( "leftMargin" ) + self.scroll
		local font = theme:value( "font" )
		local getWidth = font.getWidth
		local text = self.isMasked and string.rep( string.char( 149 ), #self.text ) or self.text
		for i = 1, #text do
			local characterWidth = getWidth( font, text:sub( i, i ), true )
			if x <= characterWidth / 2 then
				return i
			end
			x = x - characterWidth
		end
		return #text + 1
	end end
function _C_GL(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseUp","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self:focus( TextBox )
		end
		return true
	end end
function _C_GM(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled and self:hitTestEvent( event ) then
				return self.eventManager:handleEvent( event )
			end
		end
	end end
function _C_GN(self,super)return function(_C_self_passed,char)
		local text = self.isMasked and string.rep( string.char( 149 ), #self.text ) or self.text
		return self.theme:value( "font" ):getWidth( text:sub( 1, char - 1 ) ) + 1
	end end
function _C_GO(self,super)return function(_C_self_passed)
		local selectionPosition = self.selectionPosition
		local isVisible = self.selectionVisible
		local cursorX = math.max( self:charToViewCoords( self.cursorPosition ) - 1, 0 )
		local selectionX = selectionPosition and math.max( self:charToViewCoords( selectionPosition ) - 1, 0 )
		local _x = self.selectionX
		if not isVisible and selectionPosition then
			if selectionX and not _x then self.selectionX = selectionX end
			self.selectionVisible = true
		end

		local x, width, f
		if not selectionPosition or cursorX == selectionX then
			local _width = self.selectionWidth
			if not selectionPosition and not _x then
				self.selectionX = cursorX
				self.selectionWidth = 0
				return
			end
			x = cursorX
			width = 0
			f = function() self.selectionVisible = false end
		else
			x = math.min( cursorX, selectionX )
			width = math.max( cursorX, selectionX ) - x
		end
		self:animate( "selectionX", x, CURSOR_ANIMATION_SPEED, nil, CURSOR_ANIMATION_EASING )
		self:animate( "selectionWidth", width, CURSOR_ANIMATION_SPEED, f, CURSOR_ANIMATION_EASING )
	end end
function _C_GP(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, isFocused = self.width, self.height, self.theme, self.canvas, self.isFocused
		local font, text = theme:value( "font" ), ( self.isMasked and string.rep( string.char( 149 ), #self.text ) or self.text )

		local roundedRectangle = RoundedRectangleMask( 1, 1, width, height, theme:value( "cornerRadius" ) )
		local fillColour = theme:value( "fillColour" )
		canvas:fill( fillColour, roundedRectangle )

		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )

		local outlineThickness = theme:value( "outlineThickness" )
		if #text == 0 then
			local placeholder = self.placeholder
			if placeholder then
				canvas:fill( theme:value( "placeholderColour" ),  roundedRectangle:intersect( TextMask( leftMargin + 1, topMargin + 1, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.placeholder, font ) ) )
			end
		else
			local scroll = self.scroll
			if isFocused then
				local fontHeight = font.height
				local contentMask = RectangleMask( leftMargin - 1, 1 + outlineThickness, width - leftMargin - rightMargin + 4, height - 2 * outlineThickness )
				if self.selectionVisible then
					local selectionWidth = self.selectionWidth
					if selectionWidth > 0 then
						local selectionLeftMargin, selectionRightMargin, selectionTopMargin, selectionBottomMargin = theme:value( "selectionLeftMargin" ), theme:value( "selectionRightMargin" ), theme:value( "selectionTopMargin" ), theme:value( "selectionBottomMargin" )
						local selectionMask = RoundedRectangleMask( leftMargin + 1 + self.selectionX - scroll - selectionLeftMargin, math.floor( fontHeight / 2 ) - selectionTopMargin, selectionWidth + selectionLeftMargin + selectionRightMargin, fontHeight + selectionTopMargin + selectionBottomMargin, theme:value( "selectionRadius" ) )
						canvas:fill( theme:value( "selectionColour" ), selectionMask:intersect( contentMask ) )
					end
				else
					local cursorPosition = self.cursorPosition
					local cursorColour = self.cursorColour
					if cursorColour ~= fillColour then
						local cursorMask = RectangleMask( leftMargin + 1 + self.cursorX - scroll, math.floor( fontHeight / 2 ), 1, fontHeight + 1 )
						canvas:fill( cursorColour, cursorMask:intersect( contentMask ) )
					end
				end
			end

			local textMask = roundedRectangle:intersect( TextMask( leftMargin + 1 - scroll, topMargin + 1, font:getWidth( text ), height - topMargin - bottomMargin, text, font ) )
			canvas:fill( theme:value( "textColour" ), textMask	)
			canvas:fill( theme:value( "fadeOneColour" ), OutlineMask( leftMargin, topMargin, width - leftMargin - rightMargin + 2, height - topMargin - bottomMargin + 2 * outlineThickness ):intersect( textMask )	 )
			canvas:fill( theme:value( "fadeTwoColour" ), OutlineMask( leftMargin - 1, topMargin - 1, width - leftMargin - rightMargin + 4, height - topMargin - bottomMargin + 4 * outlineThickness ):intersect( textMask )	 )
			canvas:fill( theme:value( "fillColour" ), OutlineMask( 1 + outlineThickness, 1 + outlineThickness, width - 2 * outlineThickness, height - 2 * outlineThickness, leftMargin - 2 - outlineThickness, topMargin - 2 - outlineThickness, rightMargin - 2 - outlineThickness, bottomMargin - 2 - outlineThickness ):intersect( textMask ) )
		end
		canvas:outline( theme:value( "outlineColour" ), roundedRectangle, outlineThickness )
	end end
function _C_GR(v)local j=_C_L[v]return not(j and j[DownKeyEvent])end  function _C_GQ(self,super)return function(_C_self_passed,event,phase)if _C_GR(event)then _C_F(self,"event","onKeyDown","DownKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onKeyDown","Event.phases",phase)end 
		if self.isFocused then
			local keyCode = event.keyCode
			local text = self.text
			local cursorPosition = self.cursorPosition
			local selectionPosition = self.selectionPosition

			if keyCode == keys.backspace then
				if selectionPosition then
					self:write ""
				elseif cursorPosition > 1 then
					self.text = text:sub( 1, cursorPosition - 2 ) .. text:sub( cursorPosition )
					self.cursorPosition = cursorPosition - 1
				end
			elseif keyCode == keys.enter then
				self.eventManager:handleEvent( ActionInterfaceEvent( self, event ) )
				self:unfocus()
			elseif keyCode == keys.left then
				if selectionPosition then
					self.selectionPosition = nil
					self.cursorPosition = math.min( cursorPosition, selectionPosition )
				else
					self.cursorPosition = cursorPosition - 1
				end
			elseif keyCode == keys.right then
				if selectionPosition then
					self.selectionPosition = nil
					self.cursorPosition = math.max( cursorPosition, selectionPosition )
				else
					self.cursorPosition = cursorPosition + 1
				end
			elseif keyCode == keys.delete then
				if selectionPosition then
					self:write ""
				elseif cursorPosition < #text + 1 then
					self.text = text:sub( 1, cursorPosition - 1 ) .. text:sub( cursorPosition + 1 )
				end
			end
		end
	end end
function _C_GS(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseDrag","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDrag","Event.phases",phase)end 
		if self.isPressed and self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
			self.selectionPosition = self:viewToCharCoords( event.x )
		end
		return true
	end end
function _C_GT(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or ( self.isFocused and "focused" or "default" ) ) or "disabled"
	end end
function _C_GU(self,super)return function(_C_self_passed)
		local value = math.max( self:charToViewCoords( self.selectionPosition or self.cursorPosition ) - 1, 0 )
		self:animate( "cursorX", value, CURSOR_ANIMATION_SPEED, nil, CURSOR_ANIMATION_EASING )
	end end
function _C_GV(self,super)return function(_C_self_passed,character)
		return true
	end end
function _C_GW(self,super)return function(_C_self_passed,fromPosition,direction,allowMiddlePunctuation)if _C_Ar(fromPosition)then _C_F(self,"fromPosition","wordPosition","Number",fromPosition)end if _C_Ar(direction)then _C_F(self,"direction","wordPosition","Number",direction)end if allowMiddlePunctuation==nil then allowMiddlePunctuation=true  end if _C_Cp(allowMiddlePunctuation)then _C_F(self,"allowMiddlePunctuation","wordPosition","Boolean",allowMiddlePunctuation)end 
		local text = self.text
		local left, right
		local function go( from, to, dir )
			local offset = 0
			local hasFound = false
			for i = from, to, dir do
				local char = text:sub( i - 1, i - 1 )
				local isPunctuation = char:match( "%p" )
				local isSpace = char:match( "[%s%c]" )
				if hasFound and ( isSpace or ( not allowMiddlePunctuation and isPunctuation ) ) then
					return i - offset
				elseif allowMiddlePunctuation and isPunctuation then
					offset = dir
				elseif not isSpace and not isPunctuation then
					hasFound = true
					offset = 0
				end
			end
			return to
		end
		if direction == SELECTION_DIRECTIONS.LEFT or direction == SELECTION_DIRECTIONS.BOTH then
			left = go( fromPosition, 1, -1 )
		end
		if direction == SELECTION_DIRECTIONS.RIGHT or direction == SELECTION_DIRECTIONS.BOTH then
			right = go( fromPosition + 1, #text + 2, 1 ) - 1
		end
		return left, right
	end end
function _C_GY(v)local j=_C_L[v]return not(j and j[CharacterEvent])end  function _C_GX(self,super)return function(_C_self_passed,event,phase)if _C_GY(event)then _C_F(self,"event","onCharacter","CharacterEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onCharacter","Event.phases",phase)end 
		if self.isFocused then
			self:write( event.character )
		end
	end end
function _C_GZ(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseDoubleClick","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDoubleClick","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			local left, right = self:wordPosition( self:viewToCharCoords( event.x ), SELECTION_DIRECTIONS.BOTH )
			if left ~= right then
				self.selectionPosition = right
				self.cursorPosition = left
			end
		end
		return true
	end end
function _C_Ga(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
			if self.application.keyboardShortcutManager:isOnlyKeyDown( "shift" ) then
				self.selectionPosition = self:viewToCharCoords( event.x )
			else
				self.selectionPosition = nil
				self.cursorPosition = self:viewToCharCoords( event.x )
			end
		end
		return true
	end end
_C_Gb={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["write"]={_C_GB,},["updateMaxScroll"]={_C_GC,},["unfocus"]={[2]=_C_F7,},["onKeyboardShortcut"]={_C_GD,},["clearFocus"]={[2]=_C_FP,},["update"]={_C_GG,_C_FC,},["animateMove"]={[2]=_C_FD,},["animateResize"]={[2]=_C_FW,},["onMouseDown"]={_C_Ga,},["onMouseUp"]={_C_GL,},["onMouseDoubleClick"]={_C_GZ,},["updateSelection"]={_C_GO,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["onMouseDrag"]={_C_GS,},["updateThemeStyle"]={_C_GT,},["updateCursorPosition"]={_C_GU,},["wordPosition"]={_C_GW,},["initialiseCanvas"]={[2]=_C_F6,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalMouseUp"]={_C_GM,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["addFocus"]={[2]=_C_FQ,},["onKeyUp"]={_C_GH,},["initialise"]={_C_GJ,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["startDragDrop"]={[2]=_C_FR,},["onKeyDown"]={_C_GQ,},["animate"]={[2]=_C_FV,},["onDraw"]={_C_GP,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["dispose"]={[2]=_C_FK,},["viewToCharCoords"]={_C_GK,},["isValidChar"]={_C_GV,},["charToViewCoords"]={_C_GN,},["onCharacter"]={_C_GX,},["onMouseScroll"]={_C_GE,},["hitTest"]={[2]=_C_FX,}}function _C_Gc(self,super)return function(_C_self_passed,maxScroll)
		self.maxScroll = math.max( maxScroll, 0 )
		self.scroll = self.scroll -- this will check that the scroll value is okay
	end end function _C_Gd(self,super)return function(_C_self_passed,cursorColour)
		if self.cursorColour ~= cursorColour then
			self.cursorColour = cursorColour
			self.needsDraw = true
		end
	end end function _C_Ge(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_Gf(self,super)return function(_C_self_passed,cursorX)
		self.cursorX = cursorX

		-- if the cursor is extending past the visible bounds adjust scroll to keep it visible
		local width, scroll = self.width, self.scroll
		local relativeX = cursorX - scroll
		if relativeX < 0 then
			-- the cursor is to the left of the screen
			self.scroll = scroll + relativeX
		else
			local theme = self.theme
			local leftMargin, rightMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" )
			local rightOverflow = relativeX - width + leftMargin + rightMargin + 1
			if rightOverflow > 0 then
				self.scroll = scroll + rightOverflow
			else
				self.needsDraw = true -- we can put this here because setting scroll does it, so it's not always needed
			end
		end
	end end function _C_Gg(self,super)return function(_C_self_passed,isMasked)
		self.isMasked = isMasked
		self.needsDraw = true
	end end function _C_Gh(self,super)return function(_C_self_passed,cursorPosition)
		cursorPosition = math.max( math.min( cursorPosition, #self.text + 1 ), 1 )
		self.cursorPosition = cursorPosition
		self.cursorFlashCounter = 0
		self:updateSelection()
		self:updateCursorPosition()
	end end function _C_Gi(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		if not isEnabled then
			self:unfocus( TextBox )
		end
		self:updateThemeStyle()
	end end function _C_Gj(self,super)return function(_C_self_passed,selectionWidth)
		self.selectionWidth = selectionWidth
		self.needsDraw = true
	end end function _C_Gk(self,super)return function(_C_self_passed,selectionPosition)
		self.selectionPosition = selectionPosition
		self.cursorFlashCounter = 0
		self:updateSelection()
		self.needsDraw = true
	end end function _C_Gl(self,super)return function(_C_self_passed,isFocused)
		self.isFocused = isFocused
		self.cursorPosition = self.cursorPosition or 1
		self:updateThemeStyle()
	end end function _C_Gm(self,super)return function(_C_self_passed,selectionX)
		self.selectionX = selectionX
		self.needsDraw = true
	end end function _C_Gn(self,super)return function(_C_self_passed,placeholder)
		self.placeholder = placeholder
		self.needsDraw = true
	end end function _C_Go(self,super)return function(_C_self_passed,text)
		self.text = text
		self:updateMaxScroll()
		self.needsDraw = true
	end end function _C_Gp(self,super)return function(_C_self_passed,scroll)
		self.scroll = math.max( math.min( scroll, self.maxScroll ), 0 )
		self.needsDraw = true
	end end _C_Gq={set={["maxScroll"]={_C_Gc},["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["cursorX"]={_C_Gf},["scroll"]={_C_Gp},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_Ge},["selectionPosition"]={_C_Gk},["isFocused"]={_C_Gl,_C_Fi},["text"]={_C_Go},["placeholder"]={_C_Gn},["topPin"]={[2]=_C_Fj},["cursorColour"]={_C_Gd},["selectionWidth"]={_C_Gj},["width"]={[2]=_C_Fg},["height"]={[2]=_C_Fr},["shadowSize"]={[2]=_C_Fs},["isMasked"]={_C_Gg},["cursorPosition"]={_C_Gh},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_Gi},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["selectionX"]={_C_Gm},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}local function _C_Gr(_,k,n,v)v[k]=n end _C_Gs=setmetatable({["selectionVisible"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["selectionPosition"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["cursorColour"]=_C_9x,["cursorPosition"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["cursorFlashCounter"]=_C_9x,["placeholder"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["y"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["scroll"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["isFocusDismissable"]=_C_9x,["maximumLength"]=_C_9x,["canvas"]=_C_9x,["isMouseInView"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["animations"]=_C_9x,["maxScroll"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isMasked"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["selectionWidth"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["selectionX"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["write"]=_C_9x,["updateMaxScroll"]=_C_9x,["unfocus"]=_C_9x,["onKeyboardShortcut"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["animateResize"]=_C_9x,["onMouseDown"]=_C_9x,["onMouseUp"]=_C_9x,["onMouseDoubleClick"]=_C_9x,["updateSelection"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onMouseDrag"]=_C_9x,["updateThemeStyle"]=_C_9x,["updateCursorPosition"]=_C_9x,["wordPosition"]=_C_9x,["initialiseCanvas"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["addFocus"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["startDragDrop"]=_C_9x,["onKeyDown"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["dispose"]=_C_9x,["viewToCharCoords"]=_C_9x,["isValidChar"]=_C_9x,["charToViewCoords"]=_C_9x,["onCharacter"]=_C_9x,["onMouseScroll"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Gt=setmetatable({["selectionVisible"]=_C_Cu,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionPosition"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["cursorColour"]=function(_,k,n,v,w,s,d,l)if _C_GA(n)then _C_D(_,k,"Graphics.colours",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorPosition"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorFlashCounter"]=_C_B2,["placeholder"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["scroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocusDismissable"]=_C_Cu,["maximumLength"]=_C_Gr,["canvas"]=_C_Fx,["isMouseInView"]=_C_Cu,["shadowMask"]=_C_Fy,["isSingleFocusOnly"]=_C_Cu,["animations"]=_C_Ax,["maxScroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isMasked"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["selectionWidth"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionX"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["write"]=_C_7,["updateMaxScroll"]=_C_7,["unfocus"]=_C_7,["onKeyboardShortcut"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["animateResize"]=_C_7,["onMouseDown"]=_C_7,["onMouseUp"]=_C_7,["onMouseDoubleClick"]=_C_7,["updateSelection"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onMouseDrag"]=_C_7,["updateThemeStyle"]=_C_7,["updateCursorPosition"]=_C_7,["wordPosition"]=_C_7,["initialiseCanvas"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalMouseUp"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["addFocus"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["startDragDrop"]=_C_7,["onKeyDown"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["dispose"]=_C_7,["viewToCharCoords"]=_C_7,["isValidChar"]=_C_7,["charToViewCoords"]=_C_7,["onCharacter"]=_C_7,["onMouseScroll"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Gu={[TextBox]=1,[View]=1}_C_Gv={"View"}_C_Gx={}_C_Gy={}function _C_Gz(self,super)return function(_C_self_passed,mime)if _C_Aq(mime)then _C_F(self,"mime","isMIME","String (allowsNil)",mime)end 
		return mime and availableMimes[mime] or false
	end end
function _C_H1(v)local j=_C_L[v]return not(j and j[Resource])end  function _C_H0(self,super)return function(_C_self_passed,resource)if _C_H1(resource)then _C_F(self,"resource","fromResource","Resource",resource)end 
		local mime = resource.mime
		if mime == mimes.UCG then
			return Image.static:fromUniversalCompressedGraphics( resource.binaryContents )
		elseif mime == mimes.SICON then
			return Icon.static:fromIcon( resource.binaryContents )
		elseif mime == mimes.IMAGE then
			return Image.static:fromPaintFormat( resource.contents )
		end
	end end
function _C_H2(self,super)return function(_C_self_passed,path,bundle)if _C_Ai(path)then _C_F(self,"path","fromPathInBundle","String",path)end if _C_F4(bundle)then _C_F(self,"bundle","fromPathInBundle","Any",bundle)end 
		return Image.static:fromFile( bundle:fileFromPath( path ) )
	end end
function _C_H3(self,super)return function(_C_self_passed,width,height)
		local TRANSPARENT = TRANSPARENT
		local pixels = {}
		for i = 1, width * height do
			pixels[i] = TRANSPARENT
		end
		return Image( pixels, width, height )
	end end
function _C_H5(v)local j=_C_L[v]return not(j and j[File])end  function _C_H4(self,super)return function(_C_self_passed,file)if _C_H5(file)then _C_F(self,"file","fromFile","File",file)end 
		local mime = file.metadata.mime
		if mime == mimes.UCG then
			return Image.static:fromUniversalCompressedGraphics( file.binaryContents )
		elseif mime == mimes.SICON then
			return Icon.static:fromIcon( file.binaryContents )
		elseif mime == mimes.IMAGE then
			return Image.static:fromPaintFormat( file.contents )
		end
	end end
function _C_H6(self,super)return function(_C_self_passed,path)if _C_Ai(path)then _C_F(self,"path","fromPath","String",path)end 
		return Image.static:fromFile( File( path ) )
	end end
function _C_H7(self,super)return function(_C_self_passed,contents)
		local lines = split( contents, "\n" )
		local pixels = {}
		local width = 0
		for y, line in ipairs( lines ) do
			width = math.max( width, #line )
		end

		for y, line in pairs( lines ) do
			for x = 1, #line do
				pixels[(y - 1) * width + x] = getColourOf( line:sub( x, x ) )
			end
		end

		return Image( pixels, width, #lines, contents )
	end end
function _C_H8(self,super)return function(_C_self_passed,bytes)if _C_An(bytes)then _C_F(self,"bytes","fromUniversalCompressedGraphics","Table",bytes)end 
		-- Henceforth is ardera's code from libimg v1.2.7 with minor modifications
		local buffer = newBuffer("r", bytes)
		local readNumber, readWord, readBits, readBit, readByte = buffer.readNumber, buffer.readWord, buffer.readBits, buffer.readBit, buffer.readByte
		
		if readNumber(24) ~= ucgValues.SIGNATURE then
			error( "invalid signature! "..tostring(n) )
		end
		
		local version = readByte()
		local w, h
		local pixels = {}
		if version == 3 then
			local flags = readBits(8)
			w, h = readWord(), readWord()
			
			local function serCode(c, c2)
				local s = ""
				local c3 = c
				if c2 then
					c3 = {unpack(c)}
					c3[#c3 +1] = c2
				end
				for a = 1, #c3 do
					s = s..c3[a]
				end
				return s
			end
			
			local function readHuffmanTree(readValue)
				local tricodes = {}
				local toread = {0}
				local toread2
				local depth = 0
				
				if readBit() == 1 then
					return readValue(), true
				end
				
				local ternary, digitValue, c0, c1
				while #toread > 0 do
					toread2 = {}
					digitValue = 3^depth
					
					for a = 1, #toread do
						ternary = toread[a]
						c0, c1 = ternary + digitValue, ternary + 2*digitValue
						
						if readBit() == 1 then
							local v = readValue()
							tricodes[c0] = v
						else
							toread2[#toread2 +1] = c0
						end
						
						if readBit() == 1 then
							local v = readValue()
							tricodes[c1] = v
						else
							toread2[#toread2 +1] = c1
						end
					end
					depth = depth +1
					toread = toread2
				end
				
				return tricodes
			end
			
			local colorcodes, monocolor = readHuffmanTree(function()
				local b = readNumber(5)
				if b == 16 then
					return 0
				else
					return 2^b
				end
			end)
			
			local lengthcodes, monolength = readHuffmanTree(function()
				local b = readNumber(4)
				if b <= 12 then
					return b
				elseif b == 13 then
					return readNumber(5)
				elseif b == 14 then
					return readNumber(8)
				elseif b == 15 then
					return readNumber(16)
				end
			end)
			
			local debX, debY, debColor
			
			local function lexHuffcode(dictionary, nodedictionary)
				local ternary = 0
				local depth = 0
				local v
				while not v do
					local bi = readBit()
					ternary = ternary + (bi+1)*(3^depth)
					depth = depth +1
					v = dictionary[ternary]
				end
				return v
			end
			
			for y = 1, h do
				local x = 0
				while x < w do
					debX, debY = x, y
					local color
					if monocolor then
						color = colorcodes
					else
						color = lexHuffcode(colorcodes, colornodecodes)
						debColor = color
					end
					local len
					if monolength then
						len = lengthcodes
					else
						len = lexHuffcode(lengthcodes, lengthnodecodes)
						debX, debY, debColor = nil, nil, nil
					end
					for a = 1, len do
						pixels[(y - 1) * w + x + a] = color
					end
					x = x + len
				end
			end
		else
			error( "unsupported version: "..(tostring(version) or "unknown") )
		end
		return Image( pixels, w, h, bytes )
	end end
function _C_H9(self,super)return function(_C_self_passed,name,bundle)if _C_Ai(name)then _C_F(self,"name","fromNameInBundle","String",name)end if _C_F4(bundle)then _C_F(self,"bundle","fromNameInBundle","Any",bundle)end 
		return Image.static:fromFile( bundle:file( name, IMAGE_MIMES ) )
	end end
function _C_HA(self,super)return function(_C_self_passed,pixels,width,height)
		return Image( pixels, width, height )
	end end
function _C_HB(self,super)return function(_C_self_passed,name)if _C_Ai(name)then _C_F(self,"name","fromName","String",name)end 
		local resource = Resource( name, IMAGE_MIMES )
		if resource then
			return Image.static:fromResource( resource )
		end
	end end
_C_HC={["isMIME"]={_C_Gz,},["fromResource"]={_C_H0,},["fromPathInBundle"]={_C_H2,},["blank"]={_C_H3,},["fromFile"]={_C_H4,},["fromPath"]={_C_H6,},["fromPaintFormat"]={_C_H7,},["fromUniversalCompressedGraphics"]={_C_H8,},["fromNameInBundle"]={_C_H9,},["fromPixels"]={_C_HA,},["fromName"]={_C_HB,}}_C_HD={[Image]=1,[_C_8X]=1}_C_HE={["scaledCache"]=loadstring("return {}\
\9\
"),}_C_HF={["scaledCache"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["contents"]={nil,"Any (allowsNil)"},["height"]={_C_Ar,"Number"},}function _C_HG(self,super)return function(_C_self_passed,pixels,width,height,contents)if _C_An(pixels)then _C_F(self,"pixels","initialise","Table",pixels)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end 
		local newPixels = {}
		local maxLength = width * height
		for i, pixel in pairs( pixels ) do
			if i > maxLength then
				error( "Image pixels must fit the given size" )
			end
			newPixels[i] = pixel
		end
		self.width = width
		self.height = height
		self.pixels = newPixels
		self.contents = contents
	end end
function _C_HH(self,super)return function(_C_self_passed)
		local pixels = self.pixels
		local paintFormat = ""
		local width, height = self.width, self.height
		local i, n = 1, 1
		local t = {}
		for y = 1, height do
			for x = 1, width do
				t[n] = getHexOf( pixels[i] )
				i = i + 1
				n = n + 1
			end
			t[n] = "\n"
			n = n + 1
		end

		return table.concat( t )
	end end
function _C_HI(self,super)return function(_C_self_passed,maximumWidth,maximumHeight,method)if _C_Ar(maximumWidth)then _C_F(self,"maximumWidth","getScaledPixels","Number",maximumWidth)end if _C_Ar(maximumHeight)then _C_F(self,"maximumHeight","getScaledPixels","Number",maximumHeight)end if method==nil then method=2  end if _C_Ar(method)then _C_F(self,"method","getScaledPixels","Number",method)end 
		maximumWidth = math.floor( maximumWidth + 0.5 )
		maximumHeight = math.floor( maximumHeight + 0.5 )

		local scaledCache = self.scaledCache
		local cache = scaledCache[method .. ":" .. maximumWidth .. ":" .. maximumHeight]
		if cache then
			return cache[1], cache[2], cache[3]
		end

		local width, height, pixels = self.width, self.height, self.pixels
		local pixelsWidth, pixelsHeight = maximumWidth, maximumHeight

		local scaledPixels = {}
		local widthRatio = width / maximumWidth
		local heightRatio = height / maximumHeight
		local ceil = math.ceil

		local isFit, isCover = method == scaleMethods.FIT, method == scaleMethods.COVER

		if isFit or isCover then
			local ratio
			if isFit then
				ratio = math.max( widthRatio, heightRatio )
			else
				ratio = math.min( widthRatio, heightRatio )
			end

			widthRatio, heightRatio = ratio, ratio
			pixelsWidth, pixelsHeight = math.floor( width / ratio + 0.5 ), math.floor( height / ratio + 0.5 )
		end

		local i = 1
		for y = 1, pixelsHeight do
			for x = 1, pixelsWidth do
				scaledPixels[i] = pixels[ ceil( y * heightRatio - 1 ) * width + ceil( x * widthRatio ) ]
				i = i + 1
			end
		end

		scaledCache[method .. ":" .. maximumWidth .. ":" .. maximumHeight] = { scaledPixels, pixelsWidth, pixelsHeight }

		return scaledPixels, pixelsWidth, pixelsHeight
	end end
function _C_HJ(self,super)return function(_C_self_passed)
		return Image( self.pixels, self.width, self.height, self.contents )
	end end
function _C_HL(v)local j=_C_L[v]return not(j and j[Image])end  function _C_HK(self,super)return function(_C_self_passed,appendingImage,x,y)if _C_HL(appendingImage)then _C_F(self,"appendingImage","appendImage","Image",appendingImage)end if _C_Ar(x)then _C_F(self,"x","appendImage","Number",x)end if _C_Ar(y)then _C_F(self,"y","appendImage","Number",y)end 
		local appendingWidth, appendingHeight, appendingPixels = appendingImage.width, appendingImage.height, appendingImage.pixels
		return self:appendPixels( appendingPixels, appendingWidth, appendingHeight, x, y )
	end end
function _C_HM(self,super)return function(_C_self_passed,appendingPixels,appendingWidth,appendingHeight,x,y)if _C_An(appendingPixels)then _C_F(self,"appendingPixels","appendPixels","Table",appendingPixels)end if _C_Ar(appendingWidth)then _C_F(self,"appendingWidth","appendPixels","Number",appendingWidth)end if _C_Ar(appendingHeight)then _C_F(self,"appendingHeight","appendPixels","Number",appendingHeight)end if _C_Ar(x)then _C_F(self,"x","appendPixels","Number",x)end if _C_Ar(y)then _C_F(self,"y","appendPixels","Number",y)end 
		local selfWidth, selfHeight, selfPixels = self.width, self.height, self.pixels
		local xLimit, yLimit = math.min( selfWidth, appendingWidth + x - 1 ), math.min( selfHeight, appendingHeight + y - 1 )
		for _y = y, yLimit do
			for _x = x, xLimit do
				local appendingPixel = appendingPixels[(_y - y) * appendingWidth + (_x - x + 1)]
				if appendingPixel and appendingPixel ~= TRANSPARENT then
					selfPixels[(_y - 1) * selfWidth + _x] = appendingPixel
				end
			end
		end
		self.pixels = selfPixels
	end end
function _C_HN(self,super)return function(_C_self_passed)
		local w, h = self.width, self.height
		local pixels = self.pixels


		-- load the pixels in to the table format ardera's code uses
		local tImage = {}
		local i = 1
		for y = 1, h do
			local row = {}
			for x = 1, w do
				row[x] = pixels[i]
				i = i + 1
			end
			tImage[y] = row
		end

		-- Henceforth is ardera's code from libimg v1.2.7

		-- first, count colors
		local colorCounter={}				-- stores the amount of pixels per color (index = color code; value = pixels using it)
		local lengthsCounter={}				-- counts the uses of different lengths
		
		local numPixels=0					-- number of colored pixels
		local numColors=0					-- number of used colors
		local numLengths=0					-- numbers of used lengths
		
		local simpleColorCodes={}			-- the used huffman tree if numColors is less or equal 1
		local simpleLengthCodes={}
		
		local lengthImage={}
		
		if not w then
			w = 0
			for a = 1, #tImage do
				w = math.max(w, #tImage[a])
			end
		end
		if not h then
			h = #tImage
		end
		
		local color, colorBefore, length, imageLine, lengthImageLine
		for y=1, #tImage do
			imageLine = tImage[y]
			
			lengthImage[y] = {}
			lengthImageLine = lengthImage[y]
			
			colorBefore, length = nil, nil
			for x=1, w do
				color = imageLine[x] or 0
				
				if length == nil then
					colorBefore = color
					length = 0
				end
				
				if color == colorBefore then
					length = length +1
				else
					if not lengthsCounter[length] then
						if numLengths < 2 then
							simpleLengthCodes[length]={numLengths}
						end
						numLengths = numLengths +1
					end
					lengthImageLine[#lengthImageLine+1]={c=colorBefore, l=length}
					lengthsCounter[length] = (lengthsCounter[length] or 0) +1
					
					if not colorCounter[colorBefore] then
						if numColors < 2 then
							simpleColorCodes[colorBefore] = {numColors}
						end
						numColors = numColors +1
					end
					colorCounter[colorBefore] = (colorCounter[colorBefore] or 0) +1
					
					length = 1
					colorBefore = color
				end
				numPixels = numPixels +1
			end
			
			if not lengthsCounter[length] then
				if numLengths < 2 then
					simpleLengthCodes[length] = {numLengths}
				end
				numLengths = numLengths +1
			end
			lengthImageLine[#lengthImageLine+1]={c=colorBefore, l=length}
			lengthsCounter[length] = (lengthsCounter[length] or 0) +1
			
			if not colorCounter[colorBefore] then
				if numColors < 2 then
					simpleColorCodes[colorBefore] = {numColors}
				end
				numColors = numColors +1
			end
			colorCounter[colorBefore] = (colorCounter[colorBefore] or 0) +1
		end
		
		if w > 65535 or h > 65535 then
			return nil, "image too large"
		end
		
		local buffer = newBuffer("w")
		local writeByte, writeChar, writeBit, writeBits, writeNumber, finishByte, writeWord, writeInteger = 
			buffer.writeByte, buffer.writeChar, buffer.writeBit, buffer.writeBits, buffer.writeNumber, buffer.finishByte, buffer.writeWord, buffer.writeInteger
		
		local function serCode(c, c2)
			local s = ""
			local c3 = c
			if c2 then
				c3 = {unpack(c)}
				c3[#c3 +1] = c2
			end
			for a = 1, #c3 do
				s = s..c3[a]
			end
			return s
		end
		
		local function generateHuffmanTree(c)
			local codes, low1p, low1v, low2p, low2v, lastkey = {}
				-- the huffman codes,
				-- the lowest probability of a color/node, the value of the color/node,
				-- the 2nd lowest probability of a color/node, the value of the color/node
			
			local numentries
			while true do
				low1p = nil
				low1v = -1
				low2p = nil
				low2v = -1
				
				numentries = 0
				for a, b in pairs(c) do
					if b then
						if (low1p == nil) or (b < low1p) then
							if (low2p == nil) or (low1p < low2p) then
								low2p = low1p
								low2v = low1v
							end
							low1p = b
							low1v = a
						elseif (low2p == nil) or (b < low2p) then
							low2p = b
							low2v = a
						end
						numentries = numentries +1
					end
				end
				
				c[low1v] = nil
				c[low2v] = nil
				lastkey = {[0]=low2v, [1]=low1v}
				c[lastkey] = low1p+low2p
				
				if numentries <= 2 then
					break
				end
			end
			
			local touch;
			function touch(t, huffcode)
				if type(t) == "number" then
					codes[t] = {unpack(huffcode)}
					return
				else
					huffcode[#huffcode +1] = 0
					touch(t[0], huffcode)
					huffcode[#huffcode] = 1
					touch(t[1], huffcode)
					huffcode[#huffcode] = nil
				end
			end
			touch(lastkey, {})
			
			return codes, lastkey
		end
		
		local function writeHufftree(tree, writeValue)
			local towrite = {tree}
			if not tree[1] then
				writeBit(1)
				writeValue(tree[0])
				return
			else
				writeBit(0)
			end
			local towrite2, sub0, sub1
			while #towrite ~= 0 do
				towrite2 = {}
				for a = 1, #towrite do
					sub0, sub1 = towrite[a][0], towrite[a][1]
					if type(sub0) == "number" then
						writeBit(1)
						writeValue(sub0)
					else
						writeBit(0)
						towrite2[#towrite2 +1] = sub0
					end
					if type(sub1) == "number" then
						writeBit(1)
						writeValue(sub1)
					else
						writeBit(0)
						towrite2[#towrite2 +1] = sub1
					end
				end
				towrite=towrite2
			end
		end
		
		local function writePalette(hufftree)
			writeHufftree(hufftree, function(v)
				if v == 0 then
					writeNumber(5, 16)
				else
					writeNumber(5, math.log(v)/math.log(2))
				end
			end)
		end
		
		local function writeLengthTree(hufftree)
			writeHufftree(hufftree, function(v)
				if v <= 12 then
					writeNumber(4, v)
				else
					local nbits = math.floor(math.log(v)/math.log(2)) +1
					if nbits <= 5 then
						writeNumber(4, 13)
						writeNumber(5, v)
					elseif nbits <= 8 then
						writeNumber(4, 14)
						writeNumber(8, v)
					else
						writeNumber(4, 15)
						writeNumber(16, v)
					end
				end
			end)
		end
		
		-- Header: 0xFF2137
		-- U is the 21st letter in the alphabet
		-- C is the 3rd letter in the alphabet
		-- G is the 7th letter in the alphabet
		writeByte(0xFF)
		writeByte(0x21)
		writeByte(0x37)
		writeByte(ucgValues.VERSION)
		
		-- flags currently unused
		flags = {0, 0, 0, 0, 0, 0, 0, 0}
		writeBits(flags)
		writeWord(w)
		writeWord(h)
		
		local monocolor = numColors == 1
		local colorcodes, colortree
		if numColors <= 2 then
			-- less or equal 2 colors, huffman tree algorithm would fail
			colorcodes = simpleColorCodes
			colortree = {}
			for a, b in pairs(simpleColorCodes) do
				colortree[b[1]] = a
			end
		else
			-- generate color huffman tree
			colorcodes, colortree = generateHuffmanTree(colorCounter)
		end
		writePalette(colortree)
		
		local monolength = numLengths == 1
		local lengthcodes, lengthtree
		if numLengths <= 2 then
			-- less or equal 2 lengths, huffman tree algorithm would fail
			lengthcodes = simpleLengthCodes
			lengthtree = {}
			for a, b in pairs(simpleLengthCodes) do
				lengthtree[b[1]] = a
			end
		else
			-- generate length huffman tree
			lengthcodes, lengthtree = generateHuffmanTree(lengthsCounter)
		end
		writeLengthTree(lengthtree)
		
		local cFace, cWrite
		if not monocolor then
			cFace = buffer.newVariableCodeInterface()
			cFace.loadCodes(colorcodes)
			cWrite = cFace.writeValue
		end
		
		local lFace, lWrite
		if not monolength then
			lFace = buffer.newVariableCodeInterface()
			lFace.loadCodes(lengthcodes)
			lWrite = lFace.writeValue
		end
		
		-- write image data
		for y = 1, h do
			local line = lengthImage[y]
			local dx = 0
			for x = 1, #line do
				local p = line[x]
				if not monocolor then
					cWrite(p.c)
				end
				if not monolength then
					lWrite(p.l)
				end
				dx = dx + p.l
			end
		end
		
		finishByte(0)
		
		return buffer.getBytes()
	end end
function _C_HO(self,super)return function(_C_self_passed)
		local width, height = self.width, self.height
		if width ~= height then
			local difference = math.abs( width - height )
			local differenceOne, differenceTwo = math.ceil( difference / 2 ), math.floor( difference / 2 )
			local pixels = self.pixels
			if width > height then
				-- we need to add rows to the bottom and top
				local insert = table.insert
				for i = 1, differenceOne * width do
					insert( pixels, TRANSPARENT )
				end

				local length = #pixels
				for i = 1, differenceTwo * width do
					length = length + 1
					pixels[length] = TRANSPARENT
				end
				self.height = width
			else
				-- we need to add columns to the left and right
				local n = 1
				local insert = table.insert
				for i = 1, height do
					for j = 1, differenceOne do
						insert( pixels, n, TRANSPARENT )
						n = n + 1
					end
					n = n + width
					for j = 1, differenceTwo do
						insert( pixels, n, TRANSPARENT )
						n = n + 1
					end
				end
				self.width = height
			end
			self.scaledCache = {}
		end
	end end
_C_HP={["initialise"]={_C_HG,},["toPaintFormat"]={_C_HH,},["getScaledPixels"]={_C_HI,},["copy"]={_C_HJ,},["appendImage"]={_C_HK,},["appendPixels"]={_C_HM,},["toUniversalCompressedGraphics"]={_C_HN,},["squareCentred"]={_C_HO,}}function _C_HQ(self,super)return function(_C_self_passed,pixels)
		self.pixels = pixels
		
		local scaledCache, width, height = {}, self.width, self.height
		for k, v in pairs( scaleMethods ) do
			scaledCache[v .. ":" .. width .. ":" .. height] = { pixels, width, height };
		end
		self.scaledCache = scaledCache
	end end _C_HR={set={["pixels"]={_C_HQ}}}_C_HS=setmetatable({["scaledCache"]=_C_9x,["width"]=_C_9x,["pixels"]=_C_9x,["contents"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["toPaintFormat"]=_C_9x,["getScaledPixels"]=_C_9x,["copy"]=_C_9x,["appendImage"]=_C_9x,["appendPixels"]=_C_9x,["toUniversalCompressedGraphics"]=_C_9x,["squareCentred"]=_C_9x},_C_9z)_C_HT=setmetatable({["scaledCache"]=_C_Ax,["width"]=_C_B2,["pixels"]=function(_,k,n,v,w,s,d,l)if _C_An(n)then _C_D(_,k,"Table",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["contents"]=_C_Gr,["height"]=_C_B2,["initialise"]=_C_7,["toPaintFormat"]=_C_7,["getScaledPixels"]=_C_7,["copy"]=_C_7,["appendImage"]=_C_7,["appendPixels"]=_C_7,["toUniversalCompressedGraphics"]=_C_7,["squareCentred"]=_C_7},_C_9z)_C_HU={[Image]=1}_C_HW={}_C_HX={}function _C_HY(self,super)return function(_C_self_passed,bytes)if _C_An(bytes)then _C_F(self,"bytes","fromIcon","Table",bytes)end 
		local pointer = 1 -- the index of the byte to read next
		local bitpointer = 1 -- the index of the bit to read next
		
		local bitcache = {}
		local function readByteRaw()
			local b = bytes[pointer]
			pointer = pointer +1
			if b == nil then
				error("unexpected end-of-stream "..pointer, 2)
			end
			return b
		end
		local function readBit()
			if bitcache[1] == nil then
				bitcache = {}
				local byte = readByteRaw()
				bitcache[1] = byte >= 128
				bitcache[2] = (byte % 128) >= 64
				bitcache[3] = (byte % 64) >= 32
				bitcache[4] = (byte % 32) >= 16
				bitcache[5] = (byte % 16) >= 8
				bitcache[6] = (byte % 8) >= 4
				bitcache[7] = (byte % 4) >= 2
				bitcache[8] = (byte % 2) >= 1
				bitpointer = 1
			end
			local b = bitcache[bitpointer]
			bitpointer = bitpointer +1
			if bitpointer > 8 then
				bitcache = {}
				bitpointer = 1
			end
			if b == false then
				return 0
			elseif b == true then
				return 1
			end
			return b
		end
		local function readBits( nbits )
			local t = {}
			for a = 1, nbits do
				t[a] = readBit()
			end
			return t
		end
		local function readNumber( nbits )
			nbits = math.floor( nbits )
			if nbits <= 0 then
				return
			elseif nbits == 1 then
				return readBit()
			else
				local n = 0
				for a = nbits - 1, 0, -1 do
					n = n + readBit() * 2^a
				end
				return n
			end
		end
		local function readByte()
			if bitpointer == 1 then
				return readByteRaw()
			else
				return readBit() * 128 + readBit() * 64 + readBit() * 32 + readBit() * 16 + readBit() * 8 + readBit() * 4 + readBit() * 2 + readBit()
			end
		end
		local function readWord()
			return readByte()  *  256 + readByte()
		end
		local function readInteger()
			return readByte() * 2^24 + readByte() * 2^16 + readByte() * 256 + readByte()
		end

		local images = {}
		if readNumber( 24 ) ~= iconValues.SIGNATURE then
			error( "invalid signature!", 2 )
		end
		local sizeCount = readByte()
		local startIndex = 6 + 4 * sizeCount
		for i = 1, sizeCount do
			local length = readInteger()
			local sizeBytes = {}
			for n = 1, length do
				sizeBytes[n] = readByte()
			end
			local image = Image.static:fromUniversalCompressedGraphics( sizeBytes )
			table.insert( images, image )
			startIndex = startIndex + length + 1 
		end
		return Icon( images, bytes )
	end end
function _C_HZ(self,super)return function(_C_self_passed,file)if _C_H5(file)then _C_F(self,"file","fromFile","File",file)end 
		if file.metadata.mime == mimes.SICON then
			return Icon.static:fromIcon( file.binaryContents )
		end
	end end
function _C_Ha(self,super)return function(_C_self_passed,name,bundle)if _C_Ai(name)then _C_F(self,"name","fromNameInBundle","String",name)end if _C_F4(bundle)then _C_F(self,"bundle","fromNameInBundle","Any",bundle)end 
		return Icon.static:fromFile( bundle:file( name, ICON_MIMES ) )
	end end
function _C_Hb(self,super)return function(_C_self_passed,mime)if _C_Aq(mime)then _C_F(self,"mime","isMIME","String (allowsNil)",mime)end 
		return mime and availableMimes[mime] or false
	end end
function _C_Hc(self,super)return function(_C_self_passed,name)if _C_Ai(name)then _C_F(self,"name","fromName","String",name)end 
		local resource = Resource( name, ICON_MIMES )
		if resource then
			return Icon.static:fromResource( resource )
		end
	end end
_C_Hd={["fromIcon"]={_C_HY,},["fromResource"]={[2]=_C_H0,},["fromPathInBundle"]={[2]=_C_H2,},["blank"]={[2]=_C_H3,},["fromPixels"]={[2]=_C_HA,},["fromFile"]={_C_HZ,_C_H4,},["fromPath"]={[2]=_C_H6,},["fromPaintFormat"]={[2]=_C_H7,},["fromUniversalCompressedGraphics"]={[2]=_C_H8,},["fromNameInBundle"]={_C_Ha,_C_H9,},["isMIME"]={_C_Hb,_C_Gz,},["fromName"]={_C_Hc,_C_HB,}}_C_He={[Icon]=1,[_C_3G]=1,[Image]=1,[_C_8X]=1}_C_Hf={"Image"}_C_Hg={["scaledCache"]=loadstring("return {}\
\9\
"),}_C_Hh={["scaledCache"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["contents"]={nil,"Any (allowsNil)"},["height"]={_C_Ar,"Number"},["images"]={_C_An,"Table"},}function _C_Hi(self,super)return function(_C_self_passed,images,contents)if _C_An(images)then _C_F(self,"images","initialise","Table",images)end 
		local maxSize = 0
		local maxWidth, maxWidth
		local pixels
		for i, image in ipairs( images ) do
			local width, height = image.width, image.height
			local size = width * height
			if size > maxSize then
				maxSize = size
				pixels = image.pixels
				maxWidth = width
				maxHeight = height
			end
		end
		self.images = images
		super( pixels, maxWidth, maxHeight, contents )
	end end
function _C_Hk(v)return not _C_AB[v] end function _C_Hj(self,super)return function(_C_self_passed,maximumWidth,maximumHeight,method)if _C_Ar(maximumWidth)then _C_F(self,"maximumWidth","getScaledPixels","Number",maximumWidth)end if maximumHeight==nil then maximumHeight=maximumWidth end if _C_Ar(maximumHeight)then _C_F(self,"maximumHeight","getScaledPixels","Number",maximumHeight)end if method==nil then method=Image.scaleMethods.FIT  end if _C_Hk(method)then _C_F(self,"method","getScaledPixels","Image.scaleMethods",method)end 
		size = math.floor( math.min( maximumWidth, maximumHeight ) + 0.5 )

		local scaledCache = self.scaledCache
		local cache = scaledCache[size]
		if cache then
			return cache[1], cache[2], cache[3]
		end

		local width, height, pixels = self.width, self.height, self.pixels

		local bestImage
		local bestDiff = math.huge
		for i, image in ipairs( self.images ) do
			local width, height = image.width, image.height
			local diff = math.abs( math.max( width, height ) - size )
			if diff < bestDiff then
				bestImage = image
				bestDiff = diff
			end
		end

		local pixels, pixelsWidth, pixelsHeight = bestImage:getScaledPixels( size, size, method )
		local n = 0
		for k, v in pairs(pixels) do
			n = n + 1
		end
		scaledCache[size] = { pixels, pixelsWidth, pixelsHeight }
		return pixels, pixelsWidth, pixelsHeight
	end end
_C_Hl={["initialise"]={_C_Hi,_C_HG,},["toPaintFormat"]={[2]=_C_HH,},["getScaledPixels"]={_C_Hj,_C_HI,},["copy"]={[2]=_C_HJ,},["appendImage"]={[2]=_C_HK,},["appendPixels"]={[2]=_C_HM,},["toUniversalCompressedGraphics"]={[2]=_C_HN,},["squareCentred"]={[2]=_C_HO,}}function _C_Hm(self,super)return function(_C_self_passed,pixels)
		self.pixels = pixels
		
		local scaledCache, width, height = {}, self.width, self.height
		scaledCache[width .. ":" .. height] = { pixels, width, height };
		self.scaledCache = scaledCache
	end end _C_Hn={set={["pixels"]={_C_Hm,_C_HQ}}}_C_Ho=setmetatable({["scaledCache"]=_C_9x,["width"]=_C_9x,["pixels"]=_C_9x,["contents"]=_C_9x,["height"]=_C_9x,["images"]=_C_9x,["initialise"]=_C_9x,["toPaintFormat"]=_C_9x,["getScaledPixels"]=_C_9x,["copy"]=_C_9x,["appendImage"]=_C_9x,["appendPixels"]=_C_9x,["toUniversalCompressedGraphics"]=_C_9x,["squareCentred"]=_C_9x},_C_9z)_C_Hp=setmetatable({["scaledCache"]=_C_Ax,["width"]=_C_B2,["pixels"]=function(_,k,n,v,w,s,d,l)if _C_An(n)then _C_D(_,k,"Table",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["contents"]=_C_Gr,["height"]=_C_B2,["images"]=_C_Ax,["initialise"]=_C_7,["toPaintFormat"]=_C_7,["getScaledPixels"]=_C_7,["copy"]=_C_7,["appendImage"]=_C_7,["appendPixels"]=_C_7,["toUniversalCompressedGraphics"]=_C_7,["squareCentred"]=_C_7},_C_9z)_C_Hq={[Icon]=1,[Image]=1}_C_Hr={"Image"}_C_Ht={}_C_Hu={}_C_Hv={[ProgramEnvironment]=1,[_C_3I]=1}_C_Hw={["environment"]=loadstring("return {}\
\
\
    \
"),}function _C_Hy(v)local j=_C_L[v]return not(j and j[Program])end  _C_Hx={["environment"]={_C_An,"Table"},["program"]={_C_Hy,"Program"},}function _C_Hz(self,super)return function(_C_self_passed,program)
        self.program = program
        self:loadDefaultVariables()
    end end
function _C_I0(self,super)return function(_C_self_passed)
        local bExit = false
        local sDir = ""
        local sPath = ".:/rom/programs"
        local tAliases = {}
        local tProgramStack = { self.program.bootPath }

        local shell = {}
        local tEnv = {
            [ "shell" ] = shell,
        }

        -- Colours
        local promptColour, textColour, bgColour
        if term.isColour() then
            promptColour = colours.yellow
            textColour = colours.white
            bgColour = colours.black
        else
            promptColour = colours.white
            textColour = colours.white
            bgColour = colours.black
        end

        local function run( _sCommand, ... )
            local sPath = shell.resolveProgram( _sCommand )
            if sPath ~= nil then
                tProgramStack[#tProgramStack + 1] = sPath
                if multishell then
                    multishell.setTitle( multishell.getCurrent(), fs.getName( sPath ) )
                end
                local result = os.run( tEnv, sPath, ... )
                tProgramStack[#tProgramStack] = nil
                if multishell then
                    if #tProgramStack > 0 then
                        multishell.setTitle( multishell.getCurrent(), fs.getName( tProgramStack[#tProgramStack] ) )
                    else
                        multishell.setTitle( multishell.getCurrent(), "shell" )
                    end
                end
                return result
            else
                printError( "No such program" )
                return false
            end
        end

        local function tokenise( ... )
            local sLine = table.concat( { ... }, " " )
            local tWords = {}
            local bQuoted = false
            for match in string.gmatch( sLine .. "\"", "(.-)\"" ) do
                if bQuoted then
                    table.insert( tWords, match )
                else
                    for m in string.gmatch( match, "[^ \t]+" ) do
                        table.insert( tWords, m )
                    end
                end
                bQuoted = not bQuoted
            end
            return tWords
        end

        -- Install shell API
        function shell.run( ... )
            local tWords = tokenise( ... )
            local sCommand = tWords[1]
            if sCommand then
                return run( sCommand, unpack( tWords, 2 ) )
            end
            return false
        end

        function shell.exit()
            bExit = true
        end

        function shell.dir()
            return sDir
        end

        function shell.setDir( _sDir )
            sDir = _sDir
        end

        function shell.path()
            return sPath
        end

        function shell.setPath( _sPath )
            sPath = _sPath
        end

        function shell.resolve( _sPath )
            local sStartChar = string.sub( _sPath, 1, 1 )
            if sStartChar == "/" or sStartChar == "\\" then
                return fs.combine( "", _sPath )
            else
                return fs.combine( sDir, _sPath )
            end
        end

        function shell.resolveProgram( _sCommand )
            -- Substitute aliases firsts
            if tAliases[ _sCommand ] ~= nil then
                _sCommand = tAliases[ _sCommand ]
            end

            -- If the path is a global path, use it directly
            local sStartChar = string.sub( _sCommand, 1, 1 )
            if sStartChar == "/" or sStartChar == "\\" then
                local sPath = fs.combine( "", _sCommand )
                if fs.exists( sPath ) and not fs.isDir( sPath ) then
                    return sPath
                end
                return nil
            end
            
            -- Otherwise, look on the path variable
            for sPath in string.gmatch(sPath, "[^:]+") do
                sPath = fs.combine( shell.resolve( sPath ), _sCommand )
                if fs.exists( sPath ) and not fs.isDir( sPath ) then
                    return sPath
                end
            end
            
            -- Not found
            return nil
        end

        function shell.programs( _bIncludeHidden )
            local tItems = {}
            
            -- Add programs from the path
            for sPath in string.gmatch(sPath, "[^:]+") do
                sPath = shell.resolve( sPath )
                if fs.isDir( sPath ) then
                    local tList = fs.list( sPath )
                    for n,sFile in pairs( tList ) do
                        if not fs.isDir( fs.combine( sPath, sFile ) ) and
                           (_bIncludeHidden or string.sub( sFile, 1, 1 ) ~= ".") then
                            tItems[ sFile ] = true
                        end
                    end
                end
            end 

            -- Sort and return
            local tItemList = {}
            for sItem, b in pairs( tItems ) do
                table.insert( tItemList, sItem )
            end
            table.sort( tItemList )
            return tItemList
        end

        function shell.getRunningProgram()
            if #tProgramStack > 0 then
                return tProgramStack[#tProgramStack]
            end
            return nil
        end

        function shell.setAlias( _sCommand, _sProgram )
            tAliases[ _sCommand ] = _sProgram
        end

        function shell.clearAlias( _sCommand )
            tAliases[ _sCommand ] = nil
        end

        function shell.aliases()
            -- Add aliases
            local tCopy = {}
            for sAlias, sCommand in pairs( tAliases ) do
                tCopy[sAlias] = sCommand
            end
            return tCopy
        end

        self.environment.shell = shell
    end end
function _C_I1(self,super)return function(_C_self_passed)
        local environment = self.environment
        local program = self.program
        local programManager, application = program.programManager, self.application

        local quartzProxy = QuartzProxy( program )
        program.quartzProxy = quartzProxy
        environment.Quartz = quartzProxy

        -- TODO: maybe we should work out what these are at boot, rather than being hard coded
        local names = { "tostring", "tonumber", "assert", "error", "pcall", "xpcall", "setmetatable", "getmetatable", "rawget", "rawset", "rawequal", "type", "next", "pairs", "ipairs", "unpack", "select", "setfenv", "getfenv", "coroutine", "string", "math", "table", "__inext", "_MC_VERSION", "_VERSION", "_LUAJ_VERSION", "_CC_VERSION", "print", "read", "write", "printError", "keys", "colours", "help", "parallel", "rednet", "textutils", "bit", "bit32", "vector", "colors", "term", "window", "paintutils", "peripheral", "disk", "http", "gps", "rs", "redstone"
            ,"log", "logtraceback" -- TODO: just temporarily
        }
        environment.error = log -- TODO: temporary

        for i, name in ipairs( names ) do
            environment[name] = _G[name]
        end

        environment._G = environment

        local bundle = program.bundle
        environment.fs = bundle.fs
        environment.io = bundle.io
        function environment.loadstring( ... )
            local loaded, err = loadstring( ... )
            if err then error("loadstring error: "..err) end
            setfenv( loaded, environment )
            return loaded
        end

        local envOS = {}
        environment.os = envOS

        envOS.version = os.version
        envOS.getComputerID = os.getComputerID
        envOS.computerID = os.computerID
        envOS.setAlarm = os.setAlarm
        envOS.cancelAlarm = os.cancelAlarm
        envOS.setComputerLabel = os.setComputerLabel
        envOS.getComputerLabel = os.getComputerLabel
        envOS.computerLabel = os.computerLabel
        envOS.time = os.time
        envOS.day = os.day
        envOS.clock = os.clock
        envOS.pullEvent = os.pullEvent
        envOS.pullEventRaw = os.pullEventRaw

        function envOS.shutdown()
            program:close( true )
        end
        function envOS.reboot()
            program:close( true )
            -- TODO: sandbox reboot
            -- application.session:launchAndView( application.path )
        end

        function envOS.queueEvent( ... )
            local t = {...}
            program:queueEvent( ... )
        end

        local environmentTimers = {}
        local function startTimer( time )
            if type( time ) ~= "number" then return error "expected number" end
            id = application:schedule( function()
                environmentTimers[id] = nil
                program:queueEvent( "timer", id )
            end, time )
            environmentTimers[id] = true

            return id
        end
        envOS.startTimer = startTimer

        function envOS.cancelTimer( timer )
            if environmentTimers[id] then
                application:unschedule( id )
            end
        end

        local function sleep( time )
            local timer = startTimer( time )
            repeat
                local sEvent, param = coroutine.yield( "timer" )
            until param == timer
        end
        envOS.sleep = sleep
        environment.sleep = sleep
        self:loadShell()
    end end
_C_I2={["initialise"]={_C_Hz,},["loadShell"]={_C_I0,},["loadDefaultVariables"]={_C_I1,}}function _C_I3(_,k,n,v)if _C_Hy(n)then _C_D(_,k,"Program",n)end v[k]=n end _C_I4=setmetatable({["environment"]=_C_9x,["program"]=_C_9x,["initialise"]=_C_9x,["loadShell"]=_C_9x,["loadDefaultVariables"]=_C_9x},_C_9z)_C_I5=setmetatable({["environment"]=_C_Ax,["program"]=_C_I3,["initialise"]=_C_7,["loadShell"]=_C_7,["loadDefaultVariables"]=_C_7},_C_9z)_C_I6={[ProgramEnvironment]=1}_C_I8={}_C_I9={}_C_IA={[ClipboardData]=1,[_C_3K]=1}_C_IB={}_C_IC={["type"]={_C_Ai,"String"},}_C_ID=setmetatable({["type"]=_C_9x},_C_9z)_C_IE=setmetatable({["type"]=_C_B1},_C_9z)_C_IF={[ClipboardData]=1}setmetatable(ISwitchableView,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_3L end})_C_IH={}_C_II={}_C_IJ={[Canvas]=1,[_C_3j]=1}_C_IK={["pixels"]=loadstring("return {}\
\
\9\
"),}function _C_IM(v)if v==nil then return false end local j=_C_L[v]return not(j and j[View])end  _C_IL={["owner"]={_C_IM,"View (allowsNil)"},["width"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["mask"]={_C_F2,"Mask (allowsNil)"},["height"]={_C_Ar,"Number"},["contentMask"]={_C_F2,"Mask (allowsNil)"},}function _C_IN(self,super)return function(_C_self_passed,width,height,owner)if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if _C_IM(owner)then _C_F(self,"owner","initialise","View (allowsNil)",owner)end 
		self.width = width
		self.height = height
		self.owner = owner
	end end
function _C_IO(self,super)return function(_C_self_passed,colour,mask,leftThickness,topThickness,rightThickness,bottomThickness)if _C_GA(colour)then _C_F(self,"colour","outline","Graphics.colours",colour)end if mask==nil then mask=self.contentMask end if _C_CT(mask)then _C_F(self,"mask","outline","Mask",mask)end if leftThickness==nil then leftThickness=1 end if _C_Ar(leftThickness)then _C_F(self,"leftThickness","outline","Number",leftThickness)end if topThickness==nil then topThickness=leftThickness end if _C_Ar(topThickness)then _C_F(self,"topThickness","outline","Number",topThickness)end if rightThickness==nil then rightThickness=leftThickness end if _C_Ar(rightThickness)then _C_F(self,"rightThickness","outline","Number",rightThickness)end if bottomThickness==nil then bottomThickness=topThickness  end if _C_Ar(bottomThickness)then _C_F(self,"bottomThickness","outline","Number",bottomThickness)end 
		if colour == TRANSPARENT then return end
		local width, height, pixels = self.width, self.height, self.pixels
		local maskX, maskY, maskWidth, maskHeight, maskPixels = mask and mask.x, mask and mask.y, mask and mask.width, mask and mask.height, mask and mask.pixels
		local function xScanline( min, max, inc, thickness )
			for y = 1, height do
				local distance = 0
				for x = min, max, inc do
					local mx = x - maskX + 1
					local my = y - maskY + 1
					if mx >= 1 and mx <= maskWidth and my >= 1 and my <= maskHeight and maskPixels[ (my - 1) * maskWidth + mx ] then
						if distance < thickness then
							distance = distance + 1
							pixels[(y - 1) * width + x] = colour
							if distance >= thickness then
								break
							end
						end
					end
				end
			end
		end

		local function yScanline( min, max, inc, thickness )
			for x = 1, width do
				local distance = 0
				for y = min, max, inc do
					local mx = x - maskX + 1
					local my = y - maskY + 1
					if mx >= 1 and mx <= maskWidth and my >= 1 and my <= maskHeight and maskPixels[ (my - 1) * maskWidth + mx ] then
						if distance < thickness then
							distance = distance + 1
							pixels[(y - 1) * width + x] = colour
							if distance >= thickness then
								break
							end
						end
					end
				end
			end
		end

		xScanline( 1, width, 1, leftThickness )
		xScanline( width, 1, -1, rightThickness )
		yScanline( 1, height, 1, topThickness )
		yScanline( height, 1, -1, bottomThickness )

		return pixels
	end end
function _C_IP(self,super)return function(_C_self_passed,shadowColour,x,y,shadowSize,shadowMask)if shadowColour==nil then shadowColour=SHADOW_COLOUR end if _C_GA(shadowColour)then _C_F(self,"shadowColour","drawShadow","Graphics.colours",shadowColour)end if _C_Ar(x)then _C_F(self,"x","drawShadow","Number",x)end if _C_Ar(y)then _C_F(self,"y","drawShadow","Number",y)end if _C_Ar(shadowSize)then _C_F(self,"shadowSize","drawShadow","Number",shadowSize)end if shadowMask==nil then shadowMask=self.contentMask  end if _C_CT(shadowMask)then _C_F(self,"shadowMask","drawShadow","Mask",shadowMask)end 
		if shadowSize == 0 or shadowColour == TRANSPARENT then return end
		x = math.floor( x + shadowSize * SHADOW_RATIO + 0.5 )
		y = y + shadowSize
		local pixels, width, height = self.pixels, self.width, self.height
		local maskX, maskY, maskWidth, maskHeight = shadowMask.x, shadowMask.y, shadowMask.width, shadowMask.height
		for index, isFilled in pairs( shadowMask.pixels ) do
			if isFilled then
				local x = (index - 1) % maskWidth + maskX + x - 1
				local y = math.floor( ( index - 1) / maskWidth ) + maskY + y - 1
				if x >= 1 and x <= width and y >= 1 and y <= height then
					pixels[( y - 1 ) * width + x] = shadowColour
				end
			end
		end
	end end
function _C_IQ(self,super)return function(_C_self_passed,destinationCanvas,x,y,mask)if _C_Dh(destinationCanvas)then _C_F(self,"destinationCanvas","drawTo","Canvas",destinationCanvas)end if _C_Ar(x)then _C_F(self,"x","drawTo","Number",x)end if _C_Ar(y)then _C_F(self,"y","drawTo","Number",y)end if _C_F2(mask)then _C_F(self,"mask","drawTo","Mask (allowsNil)",mask)end 
		local width, height = self.width, self.height
		local destinationWidth, destinationHeight, destinationPixels = destinationCanvas.width, destinationCanvas.height, destinationCanvas.pixels
		local maskX, maskY, maskWidth, maskHeight, maskPixels = mask and mask.x, mask and mask.y, mask and mask.width, mask and mask.height, mask and mask.pixels
		local maxIndex = width * height
		for index, colour in pairs( self.pixels ) do
			if index >= 1 and index <= maxIndex and colour and colour ~= TRANSPARENT then
				local _x = (index - 1) % width + x
				local _y = math.floor( ( index - 1) / width ) + y
				if _x >= 1 and _x <= destinationWidth and _y >= 1 and _y <= destinationHeight then
					local isOkay = true
					if mask then
						local mx = _x - maskX + 1
						local my = _y - maskY + 1
						if mx >= 1 and mx <= maskWidth and my >= 1 and my <= maskHeight then
							isOkay = maskPixels[ (my - 1) * maskWidth + mx ]
						else
							isOkay = false
						end
					end
					if isOkay then
						destinationPixels[( _y - 1 ) * destinationWidth + _x] = colour
					end
				end
			end
		end
	end end
function _C_IR(self,super)return function(_C_self_passed,destinationCanvas)if _C_Dh(destinationCanvas)then _C_F(self,"destinationCanvas","transfer","Canvas",destinationCanvas)end 
		local pixels, destinationPixels = self.pixels, destinationCanvas.pixels
		for i = 1, #pixels do
			destinationPixels[i] = pixels[i]
		end
	end end
function _C_IS(self,super)return function(_C_self_passed,image,x,y,width,height,method)if _C_HL(image)then _C_F(self,"image","image","Image",image)end if _C_Ar(x)then _C_F(self,"x","image","Number",x)end if _C_Ar(y)then _C_F(self,"y","image","Number",y)end if width==nil then width=image.width end if _C_Ar(width)then _C_F(self,"width","image","Number",width)end if height==nil then height=image.height end if _C_Ar(height)then _C_F(self,"height","image","Number",height)end if method==nil then method=Image.scaleMethods.FIT  end if _C_Hk(method)then _C_F(self,"method","image","Image.scaleMethods",method)end 
		local pixels, pixelsWidth, pixelsHeight = image:getScaledPixels( width, height, method )
		if pixelsWidth ~= width then
			x = x + math.ceil( ( width - pixelsWidth ) / 2 )
		end
		if pixelsHeight ~= height then
			y = y + math.ceil( ( height - pixelsHeight ) / 2 )
		end
		local selfWidth, selfHeight, selfPixels = self.width, self.height, self.pixels
		local xLimit, yLimit = math.min( selfWidth, pixelsWidth + x - 1 ), math.min( selfHeight, pixelsHeight + y - 1 )
		for _y = y, yLimit do
			for _x = x, xLimit do
				local pixel = pixels[(_y - y) * pixelsWidth + (_x - x + 1)]
				if pixel and pixel ~= TRANSPARENT then
					selfPixels[(_y - 1) * selfWidth + _x] = pixel
				end
			end
		end
	end end
function _C_IT(self,super)return function(_C_self_passed)
		return Image.static:fromPixels( self.pixels, self.width, self.height )
	end end
function _C_IU(self,super)return function(_C_self_passed,colour,mask)if _C_GA(colour)then _C_F(self,"colour","fill","Graphics.colours",colour)end if mask==nil then mask=self.mask  end if _C_CT(mask)then _C_F(self,"mask","fill","Mask",mask)end 
		if colour == TRANSPARENT then return end
		local pixels, width, height = self.pixels, self.width, self.height
		local maskX, maskY, maskWidth, maskHeight = mask.x, mask.y, mask.width, mask.height
		for index, isFilled in pairs( mask.pixels ) do
			if isFilled then
				local x = (index - 1) % maskWidth + maskX
				local y = math.floor( ( index - 1) / maskWidth ) + maskY
				if x >= 1 and x <= width and y >= 1 and y <= height then
					pixels[( y - 1 ) * width + x] = colour
				end
			end
		end
	end end
function _C_IV(self,super)return function(_C_self_passed)
		self.pixels = {}
	end end
function _C_IW(self,super)return function(_C_self_passed,x,y)if _C_Ar(x)then _C_F(self,"x","hitTest","Number",x)end if _C_Ar(y)then _C_F(self,"y","hitTest","Number",y)end 
		local colour = self.pixels[ ( y - 1 ) * self.width + x ]
		return colour and colour ~= TRANSPARENT
	end end
_C_IX={["initialise"]={_C_IN,},["outline"]={_C_IO,},["drawShadow"]={_C_IP,},["drawTo"]={_C_IQ,},["transfer"]={_C_IR,},["image"]={_C_IS,},["toImage"]={_C_IT,},["fill"]={_C_IU,},["clear"]={_C_IV,},["hitTest"]={_C_IW,}}function _C_IY(self,super)return function(_C_self_passed)
		return RectangleMask( 1, 1, self.width, self.height )
	end end function _C_IZ(self,super)return function(_C_self_passed)
		local pixels = {}
		for k, v in pairs( self.pixels ) do
			if v ~= TRANSPARENT then
				pixels[k] = true
			end
		end
		return Mask( 1, 1, self.width, self.height, pixels )
	end end _C_Ia={get={["mask"]={_C_IY},["contentMask"]={_C_IZ}}}function _C_Ib(_,k,n,v)if _C_IM(n)then _C_D(_,k,"View (allowsNil)",n)end v[k]=n end _C_Ic=setmetatable({["owner"]=_C_9x,["width"]=_C_9x,["pixels"]=_C_9x,["mask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["height"]=_C_9x,["contentMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["initialise"]=_C_9x,["outline"]=_C_9x,["drawShadow"]=_C_9x,["drawTo"]=_C_9x,["transfer"]=_C_9x,["image"]=_C_9x,["toImage"]=_C_9x,["fill"]=_C_9x,["clear"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Id=setmetatable({["owner"]=_C_Ib,["width"]=_C_B2,["pixels"]=_C_Ax,["mask"]=_C_Fy,["height"]=_C_B2,["contentMask"]=_C_Fy,["initialise"]=_C_7,["outline"]=_C_7,["drawShadow"]=_C_7,["drawTo"]=_C_7,["transfer"]=_C_7,["image"]=_C_7,["toImage"]=_C_7,["fill"]=_C_7,["clear"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Ie={[Canvas]=1}_C_Ig={}_C_Ih={}_C_Ii={[ScaleableCanvas]=1,[_C_3P]=1,[Canvas]=1,[_C_3j]=1}_C_Ij={"Canvas"}_C_Ik={["scaleY"]=loadstring("return 1\
\
\
\9\
"),["scaleX"]=loadstring("return 1\
\9\
"),["pixels"]=loadstring("return {}\
\
\9\
"),}_C_Il={["scaleY"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},["scaleX"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["mask"]={_C_F2,"Mask (allowsNil)"},["owner"]={_C_IM,"View (allowsNil)"},["height"]={_C_Ar,"Number"},["contentMask"]={_C_F2,"Mask (allowsNil)"},}function _C_Im(self,super)return function(_C_self_passed,width,height,owner)if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if _C_IM(owner)then _C_F(self,"owner","initialise","View (allowsNil)",owner)end 
		self.width = width
		self.height = height
		self.owner = owner
	end end
function _C_In(self,super)return function(_C_self_passed,destinationCanvas,x,y,mask)if _C_Dh(destinationCanvas)then _C_F(self,"destinationCanvas","drawTo","Canvas",destinationCanvas)end if _C_Ar(x)then _C_F(self,"x","drawTo","Number",x)end if _C_Ar(y)then _C_F(self,"y","drawTo","Number",y)end if _C_F2(mask)then _C_F(self,"mask","drawTo","Mask (allowsNil)",mask)end 
		local scaleX, scaleY = self.scaleX, self.scaleY
		if scaleX == 1 and scaleY == 1 then
			return super( destinationCanvas, x, y, mask )
		end
		local pixels, width, height = self.pixels, self.width, self.height
		local scaledWidth, scaledHeight = floor( width * scaleX + 0.5 ), floor( height * scaleY + 0.5 )
		local widthRatio = width / scaledWidth
		local heightRatio = height / scaledHeight
		local xMin, yMin = floor( ( width - scaledWidth ) / 2 + 0.5 ), floor( ( height - scaledHeight ) / 2 + 0.5 )
		local destinationWidth, destinationHeight, destinationPixels = destinationCanvas.width, destinationCanvas.height, destinationCanvas.pixels
		local TRANSPARENT = Graphics.colours.TRANSPARENT
		local maskX, maskY, maskWidth, maskHeight, maskPixels = mask and mask.x, mask and mask.y, mask and mask.width, mask and mask.height, mask and mask.pixels
		local minX, minY = math.max( 1, x ), math.max( 1, y )
		local maxX, maxY = math.min( destinationWidth, x + width - 1 ), math.min( destinationHeight, y + height - 1 )
		for _x = 0, scaledWidth - 1 do
			for _y = 0, scaledHeight - 1 do
				local pixelX, pixelY = ceil( ( _x + 1 ) * widthRatio ), ceil( _y * heightRatio )
				local destX, destY = x + xMin + _x, y + yMin + _y
				if destX >= minX and destX <= maxX and destY >= minY and destY <= maxY then
					local colour = pixels[pixelY * width + pixelX]
					if colour and colour ~= TRANSPARENT then
						local isOkay = true
						if mask then
							local mx = pixelX - maskX + 1
							local my = pixelY - maskY + 1
							if mx >= 1 and mx <= maskWidth and my >= 1 and my <= maskHeight then
								isOkay = maskPixels[ (my - 1) * maskWidth + mx ]
							else
								isOkay = false
							end
						end
						if isOkay then
							destinationPixels[( destY - 1 ) * destinationWidth + destX] = colour
						end
					end
				end
			end
		end
	end end
function _C_Io(self,super)return function(_C_self_passed)
		self.pixels = {}
	end end
function _C_Ip(self,super)return function(_C_self_passed,x,y)if _C_Ar(x)then _C_F(self,"x","hitTest","Number",x)end if _C_Ar(y)then _C_F(self,"y","hitTest","Number",y)end 
		local scaleX, scaleY = self.scaleX, self.scaleY
		local pixelX, pixelY = x, y
		local width = self.width
		if scaleX ~= 1 or scaleY ~= 1 then
			local height = self.height
			local scaledWidth, scaledHeight = floor( width * scaleX + 0.5 ), floor( height * scaleY + 0.5 )
			local widthRatio = width / scaledWidth
			local heightRatio = height / scaledHeight
			pixelX, pixelY = ceil( x * widthRatio ), ceil( y * heightRatio )
		end
		local colour = self.pixels[ ( pixelY - 1 ) * width + pixelX ]
		return colour and colour ~= Graphics.colours.TRANSPARENT
	end end
_C_Iq={["initialise"]={_C_Im,_C_IN,},["outline"]={[2]=_C_IO,},["drawShadow"]={[2]=_C_IP,},["drawTo"]={_C_In,_C_IQ,},["transfer"]={[2]=_C_IR,},["image"]={[2]=_C_IS,},["toImage"]={[2]=_C_IT,},["fill"]={[2]=_C_IU,},["clear"]={_C_Io,_C_IV,},["hitTest"]={_C_Ip,_C_IW,}}function _C_Ir(self,super)return function(_C_self_passed)
		local scaleX, scaleY = self.scaleX, self.scaleY
		local width, height = self.width, self.height
		local scaledWidth, scaledHeight = floor( width * scaleX + 0.5 ), floor( height * scaleY + 0.5 )
		local widthRatio = width / scaledWidth
		local heightRatio = height / scaledHeight
		local xMin, yMin = floor( ( width - scaledWidth ) / 2 ) + 1, floor( ( height - scaledHeight ) / 2 )

		local pixels, maskPixels = self.pixels, {}
		local TRANSPARENT = Graphics.colours.TRANSPARENT
		for _x = 1, scaledWidth do
			for _y = 0, scaledHeight - 1 do
				local pixelX, pixelY = ceil( _x * widthRatio ), ceil( _y * heightRatio )
				local colour = pixels[pixelY * width + pixelX]
				if colour ~= TRANSPARENT then
					maskPixels[( yMin + _y ) * width + xMin + _x] = true
				end
			end
		end
		return Mask( 1, 1, width, height, maskPixels )
	end end _C_Is={get={["mask"]={[2]=_C_IY},["contentMask"]={_C_Ir,_C_IZ}}}_C_It=setmetatable({["owner"]=_C_9x,["width"]=_C_9x,["scaleX"]=_C_9x,["pixels"]=_C_9x,["mask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["scaleY"]=_C_9x,["height"]=_C_9x,["contentMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["initialise"]=_C_9x,["outline"]=_C_9x,["drawShadow"]=_C_9x,["drawTo"]=_C_9x,["transfer"]=_C_9x,["image"]=_C_9x,["toImage"]=_C_9x,["fill"]=_C_9x,["clear"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Iu=setmetatable({["owner"]=_C_Ib,["width"]=_C_B2,["scaleX"]=_C_B2,["pixels"]=_C_Ax,["mask"]=_C_Fy,["scaleY"]=_C_B2,["height"]=_C_B2,["contentMask"]=_C_Fy,["initialise"]=_C_7,["outline"]=_C_7,["drawShadow"]=_C_7,["drawTo"]=_C_7,["transfer"]=_C_7,["image"]=_C_7,["toImage"]=_C_7,["fill"]=_C_7,["clear"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Iv={[ScaleableCanvas]=1,[Canvas]=1}_C_Iw={"Canvas"}_C_Iy={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}_C_Iz={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}function _C_J0(self,super)return function(_C_self_passed,canvas,x,y)if _C_Dh(canvas)then _C_F(self,"canvas","drawTo","Canvas",canvas)end if _C_Ar(x)then _C_F(self,"x","drawTo","Number",x)end if _C_Ar(y)then _C_F(self,"y","drawTo","Number",y)end 
		local image = self.image
		if image then
			canvas:image( self.image, x - self.hotSpotX + 1, y - self.hotSpotY + 1 )
		else
			return cursorStatic:drawTo( canvas, x, y )
		end
	end end
function _C_J1(self,super)return function(_C_self_passed)
	end end
function _C_J2(self,super)return function(_C_self_passed,bridge)if _C_At(bridge)then _C_F(self,"bridge","updateBridge","Table (allowsNil)",bridge)end 
		if not bridge then
			self.image = nil
		else
			self.hotSpotX = bridge[bridgeKeys.HOT_SPOT_X]
			self.hotSpotY = bridge[bridgeKeys.HOT_SPOT_Y]
			self.image = Image( bridge[bridgeKeys.PIXELS], bridge[bridgeKeys.WIDTH], bridge[bridgeKeys.HEIGHT], bridge )
		end
		local applicationContainer = self.application.container
		if applicationContainer then
			self.hasUpdatedApperance = true
			applicationContainer.needsCursorUpdate = true
		end
	end end
_C_J3={["onThemeChanged"]={[2]=_C_Dd,},["setup"]={[2]=_C_Dj,},["drawTo"]={_C_J0,_C_Dg,},["updateAppearance"]={_C_J1,_C_Di,},["setupAll"]={[2]=_C_Dk,},["updateBridge"]={_C_J2,}}_C_J4=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["setup"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["setupAll"]=_C_9x,["updateBridge"]=_C_9x},_C_9z)_C_J5=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["setup"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["setupAll"]=_C_7,["updateBridge"]=_C_7},_C_9z)_C_J6={[BridgedCursor]=1,[_C_3T]=1,[Cursor]=1,[_C_3d]=1}_C_J7={"Cursor"}_C_J8={}_C_J9={}_C_JA={[BridgedCursor]=1,[Cursor]=1}_C_JB={"Cursor"}_C_JD={["eventType"]=loadstring("return \"char\"\
\9\
\9\
"),}_C_JE={["eventType"]={_C_Ai,"String"},}_C_JF={["eventClasses"]=loadstring([[return {}

	
]])}_C_JG={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_JH=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_JI=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_JJ={[CharacterEvent]=1,[_C_3V]=1,[Event]=1,[_C_7j]=1}_C_JK={"Event"}_C_JL={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_JM={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["character"]={_C_Ai,"String"},["relativeView"]={_C_Cr,"View"},["isSentToSender"]={_C_Cp,"Boolean"},}function _C_JN(self,super)return function(_C_self_passed,character)if _C_Ai(character)then _C_F(self,"character","initialise","String",character)end 
		self.character = character
	end end
_C_JO={["initialise"]={_C_JN,},["makeRelative"]={[2]=_C_Cs,}}_C_JP=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["character"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_JQ=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["character"]=_C_B1,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_JR={[CharacterEvent]=1,[Event]=1}_C_JS={"Event"}_C_JU={}_C_JV={}function _C_JW(self,super)return function(_C_self_passed,documentClass,path)
		local function f( path )
			local document = documentClass( path )
			if document.contents then
				local oldDocument = Document.application.document
				if oldDocument then
					oldDocument:close( function( isClosed )
						if isClosed then Document.application.document = document end
					end )
				else
					Document.application.document = document
				end
			end
		end

		if path then
			f( path )
		else 
			-- TODO: open file dialouge
			f( "test.txt" )
		end
	end end
_C_JX={["open"]={_C_JW,}}_C_JY={[Document]=1,[_C_3X]=1}_C_JZ={["isBinary"]=loadstring("return false\
\9\
"),["isModified"]=loadstring("return false\
\
\9\
\
\
\
\
\9\
"),}_C_Ja={["isBinary"]={_C_Cp,"Boolean"},["isModified"]={_C_Cp,"Boolean"},}function _C_Jb(self,super)return function(_C_self_passed,path)
		self.path = path
			
		local file = FileSystemItem( path )

		if file then
			if file:typeOf( IEditableFileSystemItem ) then
				local isBinary = self.isBinary
				if isBinary and not file:typeOf( File ) then
					-- TODO: error, binary cannot be used on non-File FileSystemItems (i.e. Bundles)
				end
				-- TODO: error handling
				local rawContents = self.isBinary and file.binaryContents or file.contents
				if rawContents then
					local contents, err = self:parse( rawContents )
					if contents then
						self.contents = contents
					else
						-- TODO: Error, content empty or corrupt
					end
				else
					-- TODO: Error, content empty or corrupt
				end
			else
				-- TODO: Error, tried to open folder
			end
		else
			self:blank()
		end

		if err then
			self:onError( err )
		end
	end end
function _C_Jc(self,super)return function(_C_self_passed,callback)
		-- self:save()
		callback( false )
	end end
function _C_Jd(self,super)return function(_C_self_passed,err)
		-- TODO: alert window
		error( err )
	end end
function _C_Je(self,super)return function(_C_self_passed)
		self.contents = ""
	end end
function _C_Jf(self,super)return function(_C_self_passed)
		if self.isBinary then
			self.file.binaryContents = self.contents
		else
			self.file.contents = self.contents
		end
		if not err then
			self.isModified = false
		end
		return err
	end end
function _C_Jg(self,super)return function(_C_self_passed,handle)
	end end
function _C_Jh(self,super)return function(_C_self_passed,callback)
		if not self.isModified then
			self.application.document = false
			callback( true )
		else
			self:onClose( function( isClosed ) 
				if isClosed then self.application.document = false end
				callback( isClosed )
			end )
		end
	end end
function _C_Ji(self,super)return function(_C_self_passed,contents)
		return contents
	end end
function _C_Jj(self,super)return function(_C_self_passed,rawContents)
		return rawContents
	end end
function _C_Jk(self,super)return function(_C_self_passed,path)
		if not path then
			-- show save as dialouge
		else
			local file = self.file.new( path )
			if self.isBinary then
				file.binaryContents = self.contents
			else
				file.contents = self.contents
			end
		end
	end end
function _C_Jl(self,super)return function(_C_self_passed,handle)
	end end
function _C_Jm(self,super)return function(_C_self_passed,path)
		-- TODO: alert window
		error( "Already exists: " .. path )
	end end
_C_Jn={["initialise"]={_C_Jb,},["onClose"]={_C_Jc,},["onError"]={_C_Jd,},["blank"]={_C_Je,},["save"]={_C_Jf,},["close"]={_C_Jh,},["serialiseHandle"]={_C_Jg,},["serialise"]={_C_Ji,},["parse"]={_C_Jj,},["saveAs"]={_C_Jk,},["parseHandle"]={_C_Jl,},["onOverwrite"]={_C_Jm,}}function _C_Jo(self,super)return function(_C_self_passed,contents)
		self.contents = contents
		-- if self.hasInitialised then
			self.isModified = true
		-- end
	end end _C_Jp={set={["contents"]={_C_Jo}}}_C_Jq=setmetatable({["contents"]=_C_9x,["file"]=_C_9x,["isBinary"]=_C_9x,["isModified"]=_C_9x,["initialise"]=_C_9x,["onClose"]=_C_9x,["onError"]=_C_9x,["blank"]=_C_9x,["save"]=_C_9x,["close"]=_C_9x,["serialiseHandle"]=_C_9x,["serialise"]=_C_9x,["parse"]=_C_9x,["saveAs"]=_C_9x,["parseHandle"]=_C_9x,["onOverwrite"]=_C_9x},_C_9z)_C_Jr=setmetatable({["contents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["file"]=_C_Gr,["isBinary"]=_C_Cu,["isModified"]=_C_Cu,["initialise"]=_C_7,["onClose"]=_C_7,["onError"]=_C_7,["blank"]=_C_7,["save"]=_C_7,["close"]=_C_7,["serialiseHandle"]=_C_7,["serialise"]=_C_7,["parse"]=_C_7,["saveAs"]=_C_7,["parseHandle"]=_C_7,["onOverwrite"]=_C_7},_C_9z)_C_Js={[Document]=1}_C_Ju={}_C_Jv={}_C_Jw={[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_Jx={"View"}_C_Jy={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Jz={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}function _C_K0(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( DownMouseEvent, self.onMouseDown )
		self:event( DownKeyEvent, self.onKeyDown )
		self:event( UpKeyEvent, self.onKeyUp )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
function _C_K1(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end end
function _C_K2(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled and self:hitTestEvent( event ) then
				self.eventManager:handleEvent( ActionInterfaceEvent( self ) )
				local result = self.eventManager:handleEvent( event )
				return result == nil and true or result
			end
		end
	end end
function _C_K3(self,super)return function(_C_self_passed,event,phase)if _C_GR(event)then _C_F(self,"event","onKeyDown","DownKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onKeyDown","Event.phases",phase)end 
		if self.isEnabled and self.isFocused and event.keyCode == keys.enter then
			self.isPressed = true
			return true
		end
	end end
function _C_K4(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, isPressed = self.width, self.height, self.theme, self.canvas, self.isPressed

		-- get all the shadow size details so we can adjust the compression as needed
		local defaultShadowSize = theme:value( "shadowSize", "default" )
		local shadowPressedSize = theme:value( "shadowSize", "pressed" )
		local shadowSize = theme:value( "shadowSize" )
		local shadowOffset = defaultShadowSize - shadowSize
		local shadowPressedOffset = defaultShadowSize - shadowPressedSize
		local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )

		-- background shape
		local roundedRectangle = RoundedRectangleMask( shadowX + 1, shadowOffset + 1, width - math.floor( shadowPressedOffset * SHADOW_RATIO + 0.5 ), height - shadowPressedOffset, theme:value( "cornerRadius" ) )
		canvas:fill( theme:value( "fillColour" ), roundedRectangle )
		canvas:outline( theme:value( "outlineColour" ), roundedRectangle, theme:value( "outlineThickness" ) )

		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
		-- text
		canvas:fill( theme:value( "textColour" ),  TextMask( leftMargin + shadowX + 1, topMargin + 1 + shadowOffset, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.text, theme:value( "font" ) ) )

		self.shadowSize = shadowSize
	end end
function _C_K5(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or ( self.isFocused and "focused" or "default" ) ) or "disabled"
	end end
function _C_K6(self,super)return function(_C_self_passed)
		if self.isAutosized then
			local text, theme = self.text, self.theme
			local font = theme:value( "font" )
			local defaultShadowSize = theme:value( "shadowSize", "default" )
			local shadowSize = theme:value( "shadowSize", "pressed" )
			local shadowOffset = defaultShadowSize - shadowSize
			local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )
			self.width = font:getWidth( self.text ) + theme:value( "leftMargin" ) + theme:value( "rightMargin" ) + shadowX
			self.height = font.height + theme:value( "topMargin" ) + theme:value( "bottomMargin" ) + shadowOffset
		end
		self.needsAutosize = false
	end end
function _C_K7(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsAutosize then
			self:autosize()
		end
	end end
function _C_K8(self,super)return function(_C_self_passed,event,phase)if _C_GI(event)then _C_F(self,"event","onKeyUp","UpKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onKeyUp","Event.phases",phase)end 
		if self.isEnabled and self.isPressed and self.isFocused and event.keyCode == keys.enter then
			self.isPressed = false
			self.eventManager:handleEvent( ActionInterfaceEvent( self ) )
			return true
		end
	end end
_C_K9={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["animateMove"]={[2]=_C_FD,},["draw"]={[2]=_C_F9,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["dispose"]={[2]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={_C_K7,_C_FC,},["onKeyUp"]={_C_K8,},["initialise"]={_C_K0,_C_FG,},["onMouseDown"]={_C_K1,},["onGlobalMouseUp"]={_C_K2,},["animate"]={[2]=_C_FV,},["onKeyDown"]={_C_K3,},["animateResize"]={[2]=_C_FW,},["onDraw"]={_C_K4,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_K5,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["startDragDrop"]={[2]=_C_FR,},["hitTestEvent"]={[2]=_C_FI,},["autosize"]={_C_K6,},["siblingsOfType"]={[2]=_C_FH,},["hitTest"]={[2]=_C_FX,}}function _C_KA(self,super)return function(_C_self_passed,isFocused)
		self.isFocused = isFocused
		self:updateThemeStyle()
	end end function _C_KB(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self.cursor = isEnabled and ClickableCursor.static or Cursor.static
		self:updateThemeStyle()
	end end function _C_KC(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_KD(self,super)return function(_C_self_passed,text)
		self.text = text
		self.needsDraw = true
		self.needsAutosize = true
	end end _C_KE={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_KC},["isFocused"]={_C_KA,_C_Fi},["width"]={[2]=_C_Fg},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["text"]={_C_KD},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_KB},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_KF=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateMove"]=_C_9x,["draw"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animate"]=_C_9x,["onKeyDown"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["autosize"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_KG=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["animateMove"]=_C_7,["draw"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animate"]=_C_7,["onKeyDown"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["autosize"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_KH={[Button]=1,[View]=1}_C_KI={"View"}_C_KK={}_C_KL={}_C_KM={[SegmentButton]=1,[_C_3Z]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_KN={"Button","View"}_C_KO={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_KP={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}function _C_KQ(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( ParentChangedInterfaceEvent, self.onSiblingOrParentChanged )
		self:event( SiblingAddedInterfaceEvent, self.onSiblingOrParentChanged )
	end end
function _C_KS(v)local j=_C_L[v]return not(j and j[InterfaceEvent])end  function _C_KR(self,super)return function(_C_self_passed,event,phase)if _C_KS(event)then _C_F(self,"event","onSiblingOrParentChanged","InterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onSiblingOrParentChanged","Event.phases",phase)end 
		self.needsDraw = true
	end end
function _C_KT(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, isPressed, isFirst, isLast = self.width, self.height, self.theme, self.canvas, self.isPressed, self.isFirst, self.isLast

		-- get all the shadow size details so we can adjust the compression as needed
		local defaultShadowSize = theme:value( "shadowSize", "default" )
		local shadowPressedSize = theme:value( "shadowSize", "pressed" )
		local shadowSize = theme:value( "shadowSize" )
		local shadowOffset = defaultShadowSize - shadowSize
		local shadowPressedOffset = defaultShadowSize - shadowPressedSize
		local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )

		local cornerRadius, outlineThickness, fillColour, outlineColour = theme:value( "cornerRadius" ), theme:value( "outlineThickness" ), theme:value( "fillColour" ), theme:value( "outlineColour" )
		-- background shape
		local roundedRectangle = RoundedRectangleMask( shadowX + 1, shadowOffset + 1, width - math.floor( shadowPressedOffset * SHADOW_RATIO + 0.5 ), height - shadowPressedOffset, isFirst and cornerRadius or 0, isLast and cornerRadius or 0 )
		canvas:fill( fillColour, roundedRectangle )
		canvas:outline( outlineColour, roundedRectangle, isFirst and outlineThickness or 0, outlineThickness, isLast and outlineThickness or 0 )

		if not isLast then
			local separatorTopMargin, separatorBottomMargin = theme:value( "separatorTopMargin" ), theme:value( "separatorBottomMargin" )
			local separatorHeight = height - shadowPressedOffset - separatorBottomMargin - separatorTopMargin
			local separatorX = width - 1
			local backgroundMask = RectangleMask( separatorX, 1, 1, height - shadowPressedOffset )
			canvas:fill( theme:value( "fillColour", "default" ), backgroundMask )
			canvas:outline( theme:value( "outlineColour", "default" ), backgroundMask, 0, outlineThickness, 0 )
			canvas:fill( theme:value( "separatorColour" ), theme:value( "separatorIsDashed" ) and SeparatorMask( separatorX, 1 + separatorTopMargin, 1, separatorHeight ) or RectangleMask( separatorX, 1 + separatorTopMargin, 1, separatorHeight ) )
		end

		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
		-- text
		canvas:fill( theme:value( "textColour" ),  TextMask( leftMargin + shadowX + 1, topMargin + 1 + shadowOffset, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.text, theme:value( "font" ) ) )

		self.shadowSize = shadowSize
	end end
_C_KU={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["clearFocus"]={[3]=_C_FP,},["draw"]={[3]=_C_F9,},["addFocus"]={[3]=_C_FQ,},["hitTestEvent"]={[3]=_C_FI,},["animate"]={[3]=_C_FV,},["onSiblingOrParentChanged"]={_C_KR,},["update"]={[2]=_C_K7,[3]=_C_FC,},["onKeyUp"]={[2]=_C_K8,},["initialise"]={_C_KQ,_C_K0,_C_FG,},["onMouseDown"]={[2]=_C_K1,},["onGlobalMouseUp"]={[2]=_C_K2,},["animateResize"]={[3]=_C_FW,},["onKeyDown"]={[2]=_C_K3,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onDraw"]={_C_KT,_C_K4,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_K5,},["dispose"]={[3]=_C_FK,},["startDragDrop"]={[3]=_C_FR,},["siblingsOfType"]={[3]=_C_FH,},["autosize"]={[2]=_C_K6,},["animateMove"]={[3]=_C_FD,},["hitTest"]={[3]=_C_FX,}}function _C_KV(self,super)return function(_C_self_passed,width)
		super( width + ( self.isLast and 0 or 1 ) ) -- add extra room for the separator
	end end _C_KW={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_KC},["isFocused"]={[2]=_C_KA,[3]=_C_Fi},["width"]={_C_KV,[3]=_C_Fg},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={[2]=_C_KD},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_KB},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_KX=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["clearFocus"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["hitTestEvent"]=_C_9x,["animate"]=_C_9x,["onSiblingOrParentChanged"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animateResize"]=_C_9x,["onKeyDown"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["dispose"]=_C_9x,["startDragDrop"]=_C_9x,["siblingsOfType"]=_C_9x,["autosize"]=_C_9x,["animateMove"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_KY=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["clearFocus"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["hitTestEvent"]=_C_7,["animate"]=_C_7,["onSiblingOrParentChanged"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animateResize"]=_C_7,["onKeyDown"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["dispose"]=_C_7,["startDragDrop"]=_C_7,["siblingsOfType"]=_C_7,["autosize"]=_C_7,["animateMove"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_KZ={[SegmentButton]=1,[Button]=1,[View]=1}_C_Ka={"Button","View"}_C_Kc={}_C_Kd={}function _C_Ke(self,super)return function(_C_self_passed,interfaceName,_class)
		local interface = Interface( interfaceName, _class or Container )
		if interface then
			interface:ready()
			return interface.container
		end
	end end
_C_Kf={["fromInterface"]={_C_Ke,}}_C_Kg={[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_Kh={"View"}_C_Ki={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Kj={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_Kl(v)local j=_C_L[v]return not(j and j[ReadyInterfaceEvent])end  function _C_Kk(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReadyLoadInterface","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReadyLoadInterface","Event.phases",phase)end 
		self:loadInterface()
	end end
function _C_Km(self,super)return function(_C_self_passed,identifier,descendTree)if _C_Ai(identifier)then _C_F(self,"identifier","findChild","String",identifier)end if descendTree==nil then descendTree=true  end if _C_Cp(descendTree)then _C_F(self,"descendTree","findChild","Boolean",descendTree)end 
		for i, childView in ipairs( self.children ) do
			if childView.identifier == identifier then
				return childView
			end

			-- look in child Containers 
			if descendTree and childView:typeOf( Container ) then
				local child = childView:findChild( identifier )
				if child then
					return child
				end
			end
		end
	end end
function _C_Kn(self,super)return function(_C_self_passed)
		local keys = { pins.LEFT, pins.TOP, pins.RIGHT, pins.BOTTOM, "x", "y", "width", "height" }
		local childPins = self.childPins
		local childPinReferences = {}
		childPins.references = childPinReferences
		for i = self.needsHorizontalPinUpdate and 1 or 2, self.needsVerticalPinUpdate and 2 or 1 do
			local parentSize = i == 1 and self.width or self.height
			local positionPin, sizePin, positionProperty, sizeProperty = keys[i], keys[i + 2], keys[i + 4], keys[i + 6]
			local allowedPins = { [positionPin] = true, [sizePin] = true }
			local allowedProperties = { [positionProperty] = true, [sizeProperty] = true }
			local pinConvert = { [positionPin] = positionProperty, [sizePin] = sizeProperty }

			local values = {}
			local references = {}
			local stack = {}
			for childView, childPins in pairs( childPins ) do
				if childView ~= "references" then
					local valueReference = {}
					setmetatable( valueReference, {
						__index = function( _, key, noSelfSourcing )
							if not allowedPins[key] then
								error( "access bad key "..key ) -- only the right orientation pins can be referenced too
							else
								local stackView = stack[childView]
								if stackView and stackView[key] then
									error( "circular reference" )
								elseif stackView then
									stackView[key] = true
								else
									stackView = { [key] = true }
									stack[childView] = stackView
								end

								local propertyName = pinConvert[key]
								local mathParser = childPins[key]
								local value
								if mathParser then
									references.self = valueReference
									if noSelfSourcing then
										local rawValue = rawget( valueReference, key )
										if rawValue then
											return rawValue
										end
									end
									value = mathParser:value( parentSize, propertyName, references )
									references.self = nil
								elseif not noSelfSourcing then
									if key == positionPin then
										value = childView[positionProperty]
									else
										value = valueReference[positionPin] + childView[sizeProperty]
									end
								end
								valueReference[key] = value
								stackView[key] = nil
								return value
							end
						end
					} )
					values[childView] = valueReference
					local identifier = childView.identifier
					if identifier then
						local referenceValue = {}
						setmetatable( referenceValue, {
							__index = function( _, key )
								local ref = childPinReferences[childView]
								if not ref then
									ref = {}
									childPinReferences[childView] = ref
								end
								ref[key] = true
								return valueReference[key]
							end
						} )
						references[identifier] = referenceValue
					end
				end
			end
			for childView, childPins in pairs( childPins ) do
				if childPins[positionPin] or childPins[sizePin] then
					local valueReference = values[childView]
					local getValue = getmetatable( valueReference ).__index
					local childPosition, childSize = childView[positionProperty], childView[sizeProperty]

					local position = getValue( nil, positionPin, true )
					local sizePosition = getValue( nil, sizePin, true )
					local newPosition, newSize = childPosition, childSize
					if position and sizePosition then
						if sizePosition < position then
							error( sizePin .. " pin was less than " .. positionPin )
						end
						newPosition = position
						newSize = sizePosition - position + 1
					elseif position then
						newPosition = position
					elseif sizePosition then
						newPosition = sizePosition - childSize + 1
					end

					if childPosition ~= newPosition then
						childView[positionProperty] = newPosition
					end
					if childSize ~= newSize then
						childView[sizeProperty] = newSize
					end
				end
			end
		end
		self.needsVerticalPinUpdate = false
		self.needsHorizontalPinUpdate = false
		self.needsPinUpdate = false
	end end
function _C_Ko(self,super)return function(_C_self_passed,propertyName,childView)if _C_Ai(propertyName)then _C_F(self,"propertyName","connectInterfaceLink","String",propertyName)end if _C_Cr(childView)then _C_F(self,"childView","connectInterfaceLink","View",childView)end 
		local oldChildView = self[propertyName]
		if oldChildView ~= childView then -- don't touch anything if it's the same view
			local action = self.interfaceLinkActions[propertyName]
			if action then
				if oldChildView then
					-- if there's an old view disconnect the old action handler
					oldView.event:disconnect( ActionInterfaceEvent, action, Event.phases.BEFORE, nil, self )
				end
				-- connect the new event view to the handler
				if childView then
					childView:event( ActionInterfaceEvent, action, Event.phases.BEFORE, nil, self )
				end
			end

			try( function() 
				self[propertyName] = childView
			end ) {

				catch( InvalidValueTypeClassException, function( exception )
					error( "Attempted to attach " .. tostring( childView ) .. " with identifier '" .. childView.identifier .. "' to property '" .. propertyName .. "' with an invalid ValueType of " .. tostring( self ) .. ". The ValueType you specified in the properties table is not the same as the one being linked to, either change the property' ValueType or change the identifier of the invalid View." )
				end )

			}
			
		end
	end end
function _C_Kq(v)local j=_C_L[v]return not(j and j[ChildAddedInterfaceEvent])end  function _C_Kp(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildOfChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildOfChildAdded","Event.phases",phase)end 
		if event.container ~= self then
			local childView = event.childView
			local identifier = childView.identifier
			if identifier then
				for propertyName, linkIdentifier in pairs( self.interfaceLinks ) do
					if linkIdentifier == identifier then
						self:connectInterfaceLink( propertyName, childView )
					end
				end
			end
		end
	end end
function _C_Kr(self,super)return function(_C_self_passed)
		local interfaceName = self.interfaceName
		if interfaceName then
			-- this does all the work for us
			Interface( interfaceName, self.class, self ):ready( true )
		end
	end end
function _C_Ks(self,super)return function(_C_self_passed,identifier,descendTree)
		descendTree = (descendTree == nil and true or descendTree)
		
		local children = {}
		for i, childView in ipairs( self.children ) do
			if childView.identifier == identifier then
				table.insert( children, childView )
			end

			-- look in child Containers 
			if descendTree and childView:typeOf( Container ) then
				local childChildren = childView:findChildren( identifier )
				for i2, childChild in ipairs( childChildren ) do
					table.insert( children, childChild )
				end
			end
		end
		return children
	end end
function _C_Ku(v)local j=_C_L[v]return not(j and j[LoadedInterfaceEvent])end  function _C_Kt(self,super)return function(_C_self_passed,event,phase)if _C_Ku(event)then _C_F(self,"event","onLoadedInterfacePinUpdate","LoadedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onLoadedInterfacePinUpdate","Event.phases",phase)end 
		if self.needsPinUpdate then
			self:updatePins()
		end
	end end
function _C_Kv(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsPinUpdate then
			self:updatePins()
		end
		for i, childView in ipairs( self.children ) do
			childView:update( deltaTime )
		end
	end end
function _C_Kw(self,super)return function(_C_self_passed,childView,position)if _C_Cr(childView)then _C_F(self,"childView","insert","View",childView)end if _C_CU(position)then _C_F(self,"position","insert","Number (allowsNil)",position)end 
		local children = self.children
		if position then
			table.insert( children, position, childView )
		else
			children[#children + 1] = childView
		end

		local oldParent = childView.parent 
		childView.parent = self

		local parsedPins = childView.parsedPins
		self.childPins[childView] = parsedPins
		if parsedPins[pins.LEFT] or parsedPins[pins.RIGHT] then
			self.needsHorizontalPinUpdate = true
		end
		if parsedPins[pins.TOP] or parsedPins[pins.BOTTOM] then
			self.needsVerticalPinUpdate = true
		end

		-- we need to update the isEnabled value
		childView.isEnabled = childView.raw.isEnabled

		for i, _childView in ipairs( children ) do
			if _childView == childView then
				_childView.event:handleEvent( ParentChangedInterfaceEvent( self, oldParent ) )
			else
				_childView.event:handleEvent( SiblingAddedInterfaceEvent( childView ) )
			end
		end

		local identifier = childView.identifier
		if identifier then
			for propertyName, linkIdentifier in pairs( self.interfaceLinks ) do
				if linkIdentifier == identifier then
					self:connectInterfaceLink( propertyName, childView )
				end
			end
		end

		self.eventManager:handleEvent( ChildAddedInterfaceEvent( childView, self ) )

		self.needsDraw = true

		return childView
	end end
function _C_Kx(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( ChildAddedInterfaceEvent, self.onChildOfChildAdded )
		self:event( ChildRemovedInterfaceEvent, self.onChildOfChildRemoved )
		self:event( ChildRepositionedInterfaceEvent, self.onChildRepositionedMouseEnterExit )
		self:event( ReadyInterfaceEvent, self.onReadyLoadInterface )
		self:event( LoadedInterfaceEvent, self.onLoadedInterfacePinUpdate )
		self:event( MoveMouseEvent, self.onUpdateChildMouseEnterExit )
		self:event( ExitedInterfaceMouseEvent, self.onUpdateChildMouseEnterExit )
		self:event( EnteredInterfaceMouseEvent, self.onUpdateChildMouseEnterExit )
	end end
function _C_Ky(self,super)return function(_C_self_passed,frontView,position)
		local children = self.children
		for i, childView in ipairs( children ) do
			if childView == frontView then
				table.remove( children, i )
				if position then table.insert( children, position, childView )
				else table.insert( children, childView ) end
			end
		end
		
		-- TODO: screen order changed events?
		-- for i, childView in ipairs( self.children ) do
		--	local onSiblingsChanged = childView.onSiblingsChanged
		--	if onSiblingsChanged then onSiblingsChanged( childView ) end
		-- end

		self.needsDraw = true
	end end
function _C_Kz(self,super)return function(_C_self_passed)
		local children = self.children
		for i = #children, 1, -1 do
			self:remove( children[i] )
		end
	end end
function _C_L0(self,super)return function(_C_self_passed)
		local canvas, theme = self.canvas, self.theme
		local cornerRadius = theme:value( "cornerRadius" )
		local mask
		if cornerRadius > 0 then
			mask = RoundedRectangleMask( 1, 1, self.width, self.height, cornerRadius )
		end
		canvas:fill( theme:value( "fillColour" ), mask )
		canvas:outline( theme:value( "outlineColour" ), mask, theme:value( "outlineThickness" ) )
	end end
function _C_L1(self,super)return function(_C_self_passed)
		super()
		for i, childView in ipairs( self.children ) do
			childView:dispose()
		end
	end end
function _C_L2(self,super)return function(_C_self_passed)
		self.eventManager = ContainerEventManager( self )
	end end
function _C_L3(self,super)return function(_C_self_passed)
		local children = self.children
		for i = #children, 1, -1 do
			children[i]:dispose()
		end
		self.needsDraw = true
	end end
function _C_L4(self,super)return function(_C_self_passed,removingView)
		local didRemove = false

		local children = self.children
		for i, childView in ipairs( children ) do
			if childView == removingView then
				table.remove( children, i )
				didRemove = true
				break
			end
		end

		removingView.parent = nil

		if didRemove then
			self.childPins[removingView] = nil
			local identifier = removingView.identifier
			for propertyName, linkIdentifier in pairs( self.interfaceLinks ) do
				if linkIdentifier == identifier then
					if self[propertyName] == childView then
						self:connectInterfaceLink( propertyName, self:findChild( identifier ) )
					end
				end
			end
		
			self.eventManager:handleEvent( ChildRemovedInterfaceEvent( removingView, self ) )
		end


		return didRemove
	end end
function _C_L6(v)local j=_C_L[v]return not(j and j[ChildRepositionedInterfaceEvent])end  function _C_L5(self,super)return function(_C_self_passed,event,phase)if _C_L6(event)then _C_F(self,"event","onChildRepositionedMouseEnterExit","ChildRepositionedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRepositionedMouseEnterExit","Event.phases",phase)end 
		if self.isMouseInView and event.childView.parent == self then
			self:onUpdateChildMouseEnterExit( nil, nil, self.cursorLastX, self.cursorLastY )
		end
	end end
function _C_L8(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Event])end  function _C_L9(v)return v~=nil and not _C_A3[v] end function _C_L7(self,super)return function(_C_self_passed,event,phase,x,y)if _C_L8(event)then _C_F(self,"event","onUpdateChildMouseEnterExit","Event (allowsNil)",event)end if _C_L9(phase)then _C_F(self,"phase","onUpdateChildMouseEnterExit","Event.phases (allowsNil)",phase)end if x==nil then x=event.x end if _C_Ar(x)then _C_F(self,"x","onUpdateChildMouseEnterExit","Number",x)end if y==nil then y=event.y  end if _C_Ar(y)then _C_F(self,"y","onUpdateChildMouseEnterExit","Number",y)end 
		local children = self.children
		self.cursorLastX = x
		self.cursorLastY = y
		for i = #children, 1, -1 do
			local childView = children[i]
			local isMouseInView = childView.isMouseInView
			if childView:hitTest( x, y ) then
				if not isMouseInView then
					-- mouse entered
					local _x, _y = x - childView.x + 1, y - childView.y + 1
					childView.event:handleEvent( EnteredInterfaceMouseEvent( _x, _y ) )
					childView.isMouseInView = true
				end
			else
				if isMouseInView then
					-- mouse exited
					local _x, _y = x - childView.x + 1, y - childView.y + 1
					childView.event:handleEvent( ExitedInterfaceMouseEvent( _x, _y ) )
					childView.isMouseInView = false
				end
			end
		end
	end end
function _C_LB(v)local j=_C_L[v]return not(j and j[ChildRemovedInterfaceEvent])end  function _C_LA(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildOfChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildOfChildRemoved","Event.phases",phase)end 
		if event.container ~= self then
			local childView = event.childView
			local identifier = childView.identifier
			for propertyName, linkIdentifier in pairs( self.interfaceLinks ) do
				if linkIdentifier == identifier then
					if self[propertyName] == childView then
						self:connectInterfaceLink( propertyName, self:findChild( identifier ) )
					end
				end
			end
		end
	end end
function _C_LC(self,super)return function(_C_self_passed)
		local canvas = self.canvas
		canvas:clear()
		
		-- first draw ourself
		local childMask = self:onDraw()

		-- then draw the children
		for i, childView in ipairs( self.children ) do
			-- only draw if something changed
			if childView.isVisible then
				local needsDraw = childView.needsDraw
				local x, y = childView.x, childView.y
				-- first draw the contents
				if needsDraw then
					childView:draw()
				end

				local shadowSize = childView.shadowSize
				if shadowSize > 0 then
					-- if there's a shadow draw it to the canvas
					local shadowMask = childView.shadowMask
					shadowColour = childView.theme:value( "shadowColour" )
					canvas:drawShadow( shadowColour, x, y, shadowSize, shadowMask )
				end

				-- draw the childView to the canvas
				childView.canvas:drawTo( canvas, x, y, childMask )
				if needsDraw then
					childView.needsDraw = false
				end
			end
		end
		self.needsDraw = false
	end end
function _C_LD(self,super)return function(_C_self_passed,childView)
		self:sendToFront( childView, 1 )
	end end
_C_LE={["getCoordinates"]={[2]=_C_F3,},["onReadyLoadInterface"]={_C_Kk,},["unfocus"]={[2]=_C_F7,},["loadInterface"]={_C_Kr,},["findChildren"]={_C_Ks,},["clearFocus"]={[2]=_C_FP,},["update"]={_C_Kv,_C_FC,},["animateMove"]={[2]=_C_FD,},["onChildRepositionedMouseEnterExit"]={_C_L5,},["sendToFront"]={_C_Ky,},["removeAll"]={_C_Kz,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["animate"]={[2]=_C_FV,},["sendToBack"]={_C_LD,},["onChildOfChildRemoved"]={_C_LA,},["findChild"]={_C_Km,},["updatePins"]={_C_Kn,},["connectInterfaceLink"]={_C_Ko,},["getCoordinatesTo"]={[2]=_C_F8,},["onChildOfChildAdded"]={_C_Kp,},["draw"]={_C_LC,_C_F9,},["onLoadedInterfacePinUpdate"]={_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["insert"]={_C_Kw,},["initialise"]={_C_Kx,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["hitTest"]={[2]=_C_FX,},["addFocus"]={[2]=_C_FQ,},["dispose"]={_C_L1,_C_FK,},["onDraw"]={_C_L0,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={_C_L2,_C_FO,},["animateResize"]={[2]=_C_FW,},["remove"]={_C_L4,},["startDragDrop"]={[2]=_C_FR,},["onUpdateChildMouseEnterExit"]={_C_L7,},["initialiseCanvas"]={[2]=_C_F6,},["focus"]={[2]=_C_F5,},["disposeAll"]={_C_L3,}}function _C_LF(self,super)return function(_C_self_passed,width)
		if width ~= self.width then
			self.needsHorizontalPinUpdate = true
			super( width )
			local event = self.eventManager
			if event then
				event:handleEvent( ParentResizedInterfaceEvent( true, false, self ) )
			end
		end
	end end function _C_LG(self,super)return function(_C_self_passed,needsVerticalPinUpdate)
		self.needsVerticalPinUpdate = needsVerticalPinUpdate
		if needsVerticalPinUpdate then
			self.needsPinUpdate = true
		end
	end end function _C_LH(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		for i, childView in ipairs( self.children ) do
			-- we need to update the isEnabled value for all children, the best way is just to send the current value
			childView.isEnabled = childView.raw.isEnabled
		end
	end end function _C_LI(self,super)return function(_C_self_passed,height)
		if height ~= self.height then
			self.needsVerticalPinUpdate = true
			super( height )
			local event = self.eventManager
			if event then
				event:handleEvent( ParentResizedInterfaceEvent( false, true, self ) )
			end
		end
	end end function _C_LJ(self,super)return function(_C_self_passed,needsHorizontalPinUpdate)
		self.needsHorizontalPinUpdate = needsHorizontalPinUpdate
		if needsHorizontalPinUpdate then
			self.needsPinUpdate = true
		end
	end end _C_LK={set={["x"]={[2]=_C_Fq},["needsVerticalPinUpdate"]={_C_LG},["y"]={[2]=_C_Fh},["needsHorizontalPinUpdate"]={_C_LJ},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["shadowSize"]={[2]=_C_Fs},["height"]={_C_LI,_C_Fr},["width"]={_C_LF,_C_Fg},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_LH},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}function _C_LL(_,k,n,v)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end v[k]=n end _C_LM=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["animateResize"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["initialiseCanvas"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_LN=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["animateResize"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["initialiseCanvas"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_LO={[Container]=1,[View]=1}_C_LP={"View"}_C_LR={}_C_LS={}_C_LT={["fromInterface"]={[2]=_C_Ke,}}_C_LU={[LayoutContainer]=1,[_C_3b]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_LV={"Container","View"}_C_LW={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["isLayoutLocked"]=loadstring("return false\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["dontAnimateLayoutUpdate"]=loadstring("return false\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_LX={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["isLayoutLocked"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["dontAnimateLayoutUpdate"]={_C_Cp,"Boolean"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["needsPinUpdate"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["animations"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["specialMouseTimes"]={_C_An,"Table"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_LY(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( ChildAddedInterfaceEvent, self.onChildAdded )
		self:event( ChildRemovedInterfaceEvent, self.onChildRemoved )
		self:event( ReadyInterfaceEvent, self.onReady, Event.phases.AFTER )
	end end
function _C_LZ(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
		self:updateLayout( true )
	end end
function _C_La(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRemoved","Event.phases",phase)end 
		self.needsLayoutUpdate = true
	end end
function _C_Lb(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		self.needsLayoutUpdate = true
		self.dontAnimateLayoutUpdate = true
	end end
function _C_Lc(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate and not self.isLayoutLocked then
			self:updateLayout()
		end
	end end
function _C_Ld(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=false  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
	end end
_C_Le={["updateLayout"]={_C_Ld,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_Lc,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["hitTest"]={[3]=_C_FX,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["animateResize"]={[3]=_C_FW,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_LY,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["initialiseCanvas"]={[3]=_C_F6,},["onChildRemoved"]={_C_La,},["getCoordinates"]={[3]=_C_F3,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["remove"]={[2]=_C_L4,},["onReady"]={_C_LZ,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["onChildAdded"]={_C_Lb,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}function _C_Lf(self,super)return function(_C_self_passed,height)
		if self.height ~= height then
			self.needsLayoutUpdate = true
		end
	    super( height )
	end end function _C_Lg(self,super)return function(_C_self_passed,width)
		if self.width ~= width then
		    self.needsLayoutUpdate = true
		end
	    super( width )
	end end _C_Lh={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={_C_Lf,_C_LI,_C_Fr},["width"]={_C_Lg,_C_LF,_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_Li=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["isLayoutLocked"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["dontAnimateLayoutUpdate"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["hitTest"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["animateResize"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["remove"]=_C_9x,["onReady"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_Lj=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLayoutLocked"]=_C_Cu,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["dontAnimateLayoutUpdate"]=_C_Cu,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["hitTest"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["animateResize"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["remove"]=_C_7,["onReady"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_Lk={[LayoutContainer]=1,[Container]=1,[View]=1}_C_Ll={"Container","View"}_C_Ln={["eventType"]=loadstring("return \"interface_mouse_exited\"\
\9\
\9\
"),}_C_Lo={["eventType"]={_C_Ai,"String"},}_C_Lp={["eventClasses"]=loadstring([[return {}

	
]])}_C_Lq={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_Lr=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_Ls=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_Lt={[ExitedInterfaceMouseEvent]=1,[_C_3f]=1,[Event]=1,[_C_7j]=1}_C_Lu={"Event"}_C_Lv={["isSentToChildren"]=loadstring("return false\
\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_Lw={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}function _C_Lx(self,super)return function(_C_self_passed,x,y)
		self.x = x
		self.y = y
	end end
_C_Ly={["initialise"]={_C_Lx,},["makeRelative"]={[2]=_C_Cs,}}_C_Lz=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_M0=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_M1={[ExitedInterfaceMouseEvent]=1,[Event]=1}_C_M2={"Event"}_C_M4={["eventType"]=loadstring("return \"interface_theme_changed\";\
\9\
\9\
"),}_C_M5={["eventType"]={_C_Ai,"String"},}_C_M6={["eventClasses"]=loadstring([[return {}

	
]])}_C_M7={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_M8=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_M9=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_MA={[ThemeChangedInterfaceEvent]=1,[_C_3h]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_MB={"InterfaceEvent","Event"}_C_MC={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}function _C_ME(v)local j=_C_L[v]return not(j and j[Theme])end  _C_MD={["oldTheme"]={_C_ME,"Theme"},["newTheme"]={_C_ME,"Theme"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["isSentToChildren"]={_C_Cp,"Boolean"},}function _C_MF(self,super)return function(_C_self_passed,newTheme,oldTheme)if _C_ME(newTheme)then _C_F(self,"newTheme","initialise","Theme",newTheme)end if _C_ME(oldTheme)then _C_F(self,"oldTheme","initialise","Theme",oldTheme)end 
		self.newTheme = newTheme
		self.oldTheme = oldTheme
	end end
_C_MG={["initialise"]={_C_MF,},["makeRelative"]={[3]=_C_Cs,}}function _C_MH(_,k,n,v)if _C_ME(n)then _C_D(_,k,"Theme",n)end v[k]=n end _C_MI=setmetatable({["isSentToChildren"]=_C_9x,["newTheme"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["oldTheme"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_MJ=setmetatable({["isSentToChildren"]=_C_Cu,["newTheme"]=_C_MH,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["oldTheme"]=_C_MH,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_MK={[ThemeChangedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_ML={"InterfaceEvent","Event"}_C_MN={}_C_MO={}function _C_MP(self,super)return function(_C_self_passed,path)if _C_Ai(path)then _C_F(self,"path","exists","String",path)end 
		return fs.exists( resolve( path ) )
	end end
function _C_MQ(self,super)return function(_C_self_passed)
		local minClock = osClock() - MAX_FILE_AGE
		for k, v in pairs( fileCache ) do
			if v[2] < minClock then
				fileCache[k] = nil
			end
		end
	end end
function _C_MR(self,super)return function(_C_self_passed)
		for k, v in pairs( fileCache ) do
			fileCache[k] = nil
		end
	end end
function _C_MS(self,super)return function(_C_self_passed,path)if _C_Ai(path)then _C_F(self,"path","tidy","String",path)end 
		return tidy( path )
	end end
function _C_MT(self,super)return function(_C_self_passed,path,root)if _C_Ai(path)then _C_F(self,"path","resolve","String",path)end if _C_Aq(root)then _C_F(self,"root","resolve","String (allowsNil)",root)end 
		return resolve( path, root )
	end end
_C_MU={["exists"]={_C_MP,},["purgeOldCache"]={_C_MQ,},["purgeCached"]={_C_MR,},["tidy"]={_C_MS,},["resolve"]={_C_MT,}}_C_MV={[FileSystemItem]=1,[_C_5H]=1}_C_MW={}function _C_MY(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Metadata])end  _C_MX={["icon"]={nil,"Any (allowsNil)"},["size"]={_C_CU,"Number (allowsNil)"},["parent"]={nil,"Any (allowsNil)"},["metadataPath"]={_C_Aq,"String (allowsNil)"},["path"]={_C_Ai,"String"},["fullName"]={_C_Ai,"String"},["parentPath"]={_C_Aq,"String (allowsNil)"},["sizeString"]={_C_Aq,"String (allowsNil)"},["metadata"]={_C_MY,"Metadata (allowsNil)"},["extension"]={_C_Aq,"String (allowsNil)"},["name"]={_C_Ai,"String"},["association"]={nil,"Any (allowsNil)"},}function _C_MZ(self,super)return function(_C_self_passed,path,parent)
		self.path = path
		if parent then
			self.raw.parent = parent
		end
	end end
function _C_Ma(self,super)return function(_C_self_passed,fullName)
		local newPath = self.parentPath .. "/" .. fullName
		fs.move( self.path, newPath )
		self.metadata:rename( fullName )
	end end
function _C_Mb(self,super)return function(_C_self_passed)
		fs.delete( self.path )
		self.metadata:delete( folder )
		self:dispose()
	end end
function _C_Mc(self,super)return function(_C_self_passed,folder)
		local folderPath = folder.path
		if folderPath == self.parentPath then return end
		
		local newPath = folderPath .. "/" .. self.fullName
		fs.copy( self.path, newPath )
		local newFile = FileSystemItem( newPath )
		self.metadata:copyTo( folder, newFile )
	end end
function _C_Md(self,super)return function(_C_self_passed,folder)
		local folderPath = folder.path
		if folderPath == self.parentPath then return end

		local newPath = folderPath .. "/" .. self.fullName
		fs.move( self.path, newPath )
		self.metadata:moveTo( folder )
		self.raw.parentPath = folderPath
		self.raw.parent = nil -- delete the cache of the old parent
	end end
function _C_Me(self,super)return function(_C_self_passed,association)
		FileAssociationManager.static:open( self, association )
	end end
_C_Mf={["initialise"]={_C_MZ,},["rename"]={_C_Ma,},["delete"]={_C_Mb,},["copyTo"]={_C_Mc,},["moveTo"]={_C_Md,},["open"]={_C_Me,}}function _C_Mg(self,super)return function(_C_self_passed)
		local association = self.association
		if association then return association end

		association = FileAssociationManager.static:getAssociation( self.metadata.mime )
		self.association = association
		return association
	end end function _C_Mh(self,super)return function(_C_self_passed)
		return fs.getSize( self.path )
	end end function _C_Mi(self,super)return function(_C_self_passed)
		local metadata = self.metadata
		if metadata then return metadata end

		metadata = Metadata( self )
		self.raw.metadata = metadata
		return metadata
	end end function _C_Mj(self,super)return function(_C_self_passed)
		local size = self.size
		if size == 0 then return "0B" end
		local prefixes = { [0] = ""; "k"; "M"; "G"; "T"; "P"; }
		local order = math.floor( math.log( size ) / math.log( 1024 ) )
		local bytes = math.ceil( (size / ( 1024 ^ order) ) * 10 )
		return bytes / 10 .. prefixes[order] .. "B"
	end end function _C_Mk(self,super)return function(_C_self_passed)
		return self.parentPath .. "/.metadata/" ..self.fullName
	end end function _C_Ml(self,super)return function(_C_self_passed)
		local parent = self.parent
		if parent then return parent end
		if self.path == "/" then return nil end

		local parentPath = self.parentPath
		return Folder( parentPath )
	end end function _C_Mm(self,super)return function(_C_self_passed)
		local cache = self.icon
		if cache then return cache end

		local mime = self.metadata.mime
		local cached = iconCache[mime]
		if cached then
			return cached
		end

		local icon
		if Image.static:isMIME( mime ) then
			-- this file is an image. we'll make a thumbnail icon for it instead if it's a valid image
			icon = ThumbnailIcon.static:fromFile( self )
		end

		if not icon then
			local association = self.association
			if association then
				icon = association.icon
			end
		end

		if icon then
			self.icon = icon
			return icon
		end

		if not unknownIcon then
			unknownIcon = Icon.static:fromPath( "/src/resources/Icons/unknown.sicon" )
		end
		return unknownIcon
	end end function _C_Mn(self,super)return function(_C_self_passed,path)
		path = resolve( path )
		if not fs.exists( path ) then error( "Attempted to set FileSystemItem.path to non-existant path '" .. path .. "'.", 2 ) end
		local oldPath = self.path
		if oldPath then
			fileCache[oldPath] = nil
		end
		self.path = path
		fileCache[path] = { self, osClock() }

		local parentPath, fullName = path:match( "(.*)/(.+)" )
		fullName = fullName or ""
		self.fullName = fullName
		self.raw.parentPath = ( parentPath == "" and "/" or parentPath )
		local name, extension = fullName:match( "^(.+)%.(%w-)$" )
		self.name = name or fullName
		self.extension = extension
	end end function _C_Mo(self,super)return function(_C_self_passed,size)
		error( "FileSystemItem.size is a read-only property.", 2 )
	end end function _C_Mp(self,super)return function(_C_self_passed,sizeString)
		error( "FileSystemItem.sizeString is a read-only property.", 2 )
	end end function _C_Mq(self,super)return function(_C_self_passed,metadata)
		error( "FileSystemItem.metadata is a read-only property.", 2 )
	end end function _C_Mr(self,super)return function(_C_self_passed,parent)
		error( "FileSystemItem.parent is a read-only property. To move a FileSystemItem use :moveTo", 2 )
	end end function _C_Ms(self,super)return function(_C_self_passed,parentPath)
		error( "FileSystemItem.parentPath is a read-only property. To move a FileSystemItem use :moveTo", 2 )
	end end _C_Mt={set={["size"]={_C_Mo},["parent"]={_C_Mr},["path"]={_C_Mn},["parentPath"]={_C_Ms},["metadata"]={_C_Mq},["sizeString"]={_C_Mp}},get={["size"]={_C_Mh},["parent"]={_C_Ml},["association"]={_C_Mg},["metadata"]={_C_Mi},["sizeString"]={_C_Mj},["metadataPath"]={_C_Mk},["icon"]={_C_Mm}}}_C_Mu=setmetatable({["icon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["size"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["parent"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["metadataPath"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["path"]=_C_9x,["fullName"]=_C_9x,["parentPath"]=_C_9x,["sizeString"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["metadata"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_MY(v)then _C_H(_,k,"Metadata (allowsNil)",v)end return v end end,["extension"]=_C_9x,["name"]=_C_9x,["association"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["initialise"]=_C_9x,["rename"]=_C_9x,["delete"]=_C_9x,["copyTo"]=_C_9x,["moveTo"]=_C_9x,["open"]=_C_9x},_C_9z)_C_Mv=setmetatable({["icon"]=_C_Gr,["size"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["metadataPath"]=_C_B0,["path"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["fullName"]=_C_B1,["parentPath"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["sizeString"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["metadata"]=function(_,k,n,v,w,s,d,l)if _C_MY(n)then _C_D(_,k,"Metadata (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["extension"]=_C_B0,["name"]=_C_B1,["association"]=_C_Gr,["initialise"]=_C_7,["rename"]=_C_7,["delete"]=_C_7,["copyTo"]=_C_7,["moveTo"]=_C_7,["open"]=_C_7},_C_9z)_C_Mw={[FileSystemItem]=1}_C_My={}_C_Mz={}function _C_N0(self,super)return function(_C_self_passed,path,mime,overwrite,contents)
		local exists = fs.exists( path )
		if overwrite and exists then
			fs.delete( path )
			exists = false
		end

		if not exists then
			local h = fs.open( path, "w" )
			h.write( contents or "" )
			h.close()
			local file = self.class( path )
			file.metadata.mime = mime
			return file
		else
			local file = File( path )
			if contents then
				file.contents = contents
			end
			return file
		end
	end end
_C_N1={["make"]={_C_N0,},["purgeOldCache"]={[2]=_C_MQ,},["exists"]={[2]=_C_MP,},["tidy"]={[2]=_C_MS,},["purgeCached"]={[2]=_C_MR,},["resolve"]={[2]=_C_MT,}}_C_N2={[File]=1,[_C_3l]=1,[IEditableFileSystemItem]=1,[FileSystemItem]=1,[_C_5H]=1}_C_N3={"FileSystemItem"}_C_N4={}_C_N5={["icon"]={nil,"Any (allowsNil)"},["size"]={_C_CU,"Number (allowsNil)"},["parent"]={nil,"Any (allowsNil)"},["metadataPath"]={_C_Aq,"String (allowsNil)"},["path"]={_C_Ai,"String"},["fullName"]={_C_Ai,"String"},["parentPath"]={_C_Aq,"String (allowsNil)"},["sizeString"]={_C_Aq,"String (allowsNil)"},["metadata"]={_C_MY,"Metadata (allowsNil)"},["extension"]={_C_Aq,"String (allowsNil)"},["name"]={_C_Ai,"String"},["association"]={nil,"Any (allowsNil)"},}_C_N6={["initialise"]={[2]=_C_MZ,},["rename"]={[2]=_C_Ma,},["delete"]={[2]=_C_Mb,},["copyTo"]={[2]=_C_Mc,},["moveTo"]={[2]=_C_Md,},["open"]={[2]=_C_Me,}}function _C_N7(self,super)return function(_C_self_passed)
		local handle = fs.open( self.path, "r" )
		if handle then
			local contents = handle.readAll( contents )
			handle.close()
			return contents
		else
			-- TODO: file reading error handling
		end
	end end function _C_N8(self,super)return function(_C_self_passed)
		return textutils.unserialize( self.contents )
	end end function _C_N9(self,super)return function(_C_self_passed)
		local handle = fs.open( self.path, "rb" )
		if handle then
			local contents = {}
			local read = handle.read
			local lastByte = read()
			local index = 1
			while lastByte do
				contents[index] = lastByte
				lastByte = read()
				index = index + 1
			end 
			handle.close()
			return contents
		else
			-- TODO: file writing error handling
		end
	end end function _C_NA(self,super)return function(_C_self_passed,contents)
		local handle = fs.open( self.path, "w" )
		if handle then
			handle.write( contents )
			handle.close()
		else
			-- TODO: file writting error handling
		end
	end end function _C_NB(self,super)return function(_C_self_passed,serialisedContents)
		self.contents = textutils.serialize( serialisedContents )
	end end function _C_NC(self,super)return function(_C_self_passed,binaryContents)
		if type( binaryContents ) ~= "table" then error( "File.binaryContents must be set with a table of bytes.", 2 ) end
		local handle = fs.open( self.path, "wb" )
		if handle then
			for i, byte in ipairs( binaryContents ) do
				handle.write( byte )
			end
			handle.close()
		else
			-- TODO: file writing error handling
		end
	end end _C_ND={set={["size"]={[2]=_C_Mo},["serialisedContents"]={_C_NB},["parent"]={[2]=_C_Mr},["binaryContents"]={_C_NC},["path"]={[2]=_C_Mn},["parentPath"]={[2]=_C_Ms},["contents"]={_C_NA},["metadata"]={[2]=_C_Mq},["sizeString"]={[2]=_C_Mp}},get={["size"]={[2]=_C_Mh},["serialisedContents"]={_C_N8},["parent"]={[2]=_C_Ml},["binaryContents"]={_C_N9},["association"]={[2]=_C_Mg},["contents"]={_C_N7},["metadata"]={[2]=_C_Mi},["sizeString"]={[2]=_C_Mj},["metadataPath"]={[2]=_C_Mk},["icon"]={[2]=_C_Mm}}}_C_NE=setmetatable({["binaryContents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["icon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["size"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["contents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["serialisedContents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["parent"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["metadataPath"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["path"]=_C_9x,["fullName"]=_C_9x,["parentPath"]=_C_9x,["sizeString"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["metadata"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_MY(v)then _C_H(_,k,"Metadata (allowsNil)",v)end return v end end,["extension"]=_C_9x,["name"]=_C_9x,["association"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["initialise"]=_C_9x,["rename"]=_C_9x,["delete"]=_C_9x,["copyTo"]=_C_9x,["moveTo"]=_C_9x,["open"]=_C_9x},_C_9z)_C_NF=setmetatable({["binaryContents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["icon"]=_C_Gr,["size"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["contents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["serialisedContents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["metadataPath"]=_C_B0,["path"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["fullName"]=_C_B1,["parentPath"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["sizeString"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["metadata"]=function(_,k,n,v,w,s,d,l)if _C_MY(n)then _C_D(_,k,"Metadata (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["extension"]=_C_B0,["name"]=_C_B1,["association"]=_C_Gr,["initialise"]=_C_7,["rename"]=_C_7,["delete"]=_C_7,["copyTo"]=_C_7,["moveTo"]=_C_7,["open"]=_C_7},_C_9z)_C_NG={[File]=1,[IEditableFileSystemItem]=1,[FileSystemItem]=1}_C_NH={"FileSystemItem"}_C_NJ={}_C_NK={}_C_NL={["fromInterface"]={[2]=_C_Ke,}}_C_NM={[SegmentContainer]=1,[_C_3n]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_NN={"Container","View"}_C_NO={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_NP={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_NQ(self,super)return function(_C_self_passed)
		if self.isVisible then
			local width = 0
			local height = 0
			local children = self.children
			local childrenCount = #children
			for i, childView in ipairs( children ) do
				height = math.max( height, childView.height )
				childView.x = width + 1
				childView.y = 1
				width = width + childView.width
				if i ~= childrenCount then
					width = width - math.floor( SHADOW_RATIO * childView.theme:value( "shadowSize", "default" ) + 0.5 )
				end
			end
			self.width = width
			self.height = height
		end
		self.needsLayoutUpdate = false
	end end
function _C_NR(self,super)return function(_C_self_passed,...)
		super( ... )
		self.needsLayoutUpdate = true
	end end
function _C_NS(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate then
			self:updateLayout()
		end
	end end
function _C_NT(self,super)return function(_C_self_passed,...)
		super( ... )
		self.needsLayoutUpdate = true
	end end
_C_NU={["updateLayout"]={_C_NQ,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_NS,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["removeChild"]={_C_NR,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["hitTest"]={[3]=_C_FX,},["insert"]={_C_NT,_C_Kw,},["initialise"]={[2]=_C_Kx,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["animateResize"]={[3]=_C_FW,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["initialiseCanvas"]={[3]=_C_F6,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}_C_NV={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_NW=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["removeChild"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["initialiseCanvas"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_NX=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Gr,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["removeChild"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["initialiseCanvas"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["getCoordinates"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_NY={[SegmentContainer]=1,[Container]=1,[View]=1}_C_NZ={"Container","View"}_C_Nb={}_C_Nc={}_C_Nd={[ArgumentCountClassException]=1,[_C_3p]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_Ne={"ClassException","FatalException","Exception"}_C_Nf={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_Ng={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_Nh(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Incorrect number of arguments: " .. message
		super( message, level )
	end end
_C_Ni={["initialise"]={_C_Nh,[4]=_C_ED,}}_C_Nj=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_Nk=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_Nl={[ArgumentCountClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_Nm={"ClassException","FatalException","Exception"}_C_No={}_C_Np={}_C_Nq={[SettingsException]=1,[_C_3r]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_Nr={"FatalException","Exception"}_C_Ns={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_Nt={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_Nu={["initialise"]={[3]=_C_ED,}}_C_Nv=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_Nw=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_Nx={[SettingsException]=1,[FatalException]=1,[Exception]=1}_C_Ny={"FatalException","Exception"}_C_O0={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"right\"\
\9\
\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_O1={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_O2(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 4, 1 )
		path:lineTo( 7, 4 )
		path:lineTo( 4, 7 )
		path:lineTo( 4, 5 )
		path:lineTo( 1, 5 )
		path:lineTo( 1, 3 )
		path:lineTo( 4, 3 )
		path:lineTo( 4, 1 )
		path:close()

		super( path )
	end end
_C_O3={["initialise"]={_C_O2,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_O4=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_O5=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_O6={[RightSymbol]=1,[_C_3t]=1,[Symbol]=1,[_C_34]=1}_C_O7={"Symbol"}_C_O8={}_C_O9={}_C_OA={[RightSymbol]=1,[Symbol]=1}_C_OB={"Symbol"}setmetatable(IDraggableView,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_3u end})_C_OD={}_C_OE={}_C_OF={[SymbolButton]=1,[_C_4d]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_OG={"Button","View"}_C_OH={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_OJ(v)local j=_C_L[v]return not(j and j[Symbol])end  _C_OI={["symbol"]={_C_OJ,"Symbol"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["symbolName"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}function _C_OK(self,super)return function(_C_self_passed)
		super()
		local width, height, theme, sPressed = self.width, self.height, self.theme, self.isPressed

		-- get all the shadow size details so we can adjust the compression as needed
		local defaultShadowSize = theme:value( "shadowSize", "default" )
		local shadowPressedSize = theme:value( "shadowSize", "pressed" )
		local shadowSize = theme:value( "shadowSize" )
		local shadowOffset = defaultShadowSize - shadowSize
		local shadowPressedOffset = defaultShadowSize - shadowPressedSize
		local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )
		local symbol = self.symbol
		self.canvas:fill( theme:value( "symbolColour" ), SymbolMask( theme:value( "leftMargin" ) + shadowX + 1, 1 + theme:value( "topMargin" ) + shadowOffset, symbol ) )
	end end
function _C_OL(self,super)return function(_C_self_passed)
		if self.isAutosized then
			local theme = self.theme
			local symbol = self.symbol
			local defaultShadowSize = theme:value( "shadowSize", "default" )
			local shadowSize = theme:value( "shadowSize", "pressed" )
			local shadowOffset = defaultShadowSize - shadowSize
			local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )
			self.width = symbol.width + theme:value( "leftMargin" ) + theme:value( "rightMargin" ) + shadowX
			self.height = symbol.height + theme:value( "topMargin" ) + theme:value( "bottomMargin" ) + shadowOffset
		end
		self.needsAutosize = false
	end end
_C_OM={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["animateMove"]={[3]=_C_FD,},["draw"]={[3]=_C_F9,},["clearFocus"]={[3]=_C_FP,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[3]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[2]=_C_K7,[3]=_C_FC,},["onKeyUp"]={[2]=_C_K8,},["initialise"]={[2]=_C_K0,[3]=_C_FG,},["onMouseDown"]={[2]=_C_K1,},["onGlobalMouseUp"]={[2]=_C_K2,},["animate"]={[3]=_C_FV,},["onKeyDown"]={[2]=_C_K3,},["animateResize"]={[3]=_C_FW,},["onDraw"]={_C_OK,_C_K4,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_K5,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["startDragDrop"]={[3]=_C_FR,},["hitTestEvent"]={[3]=_C_FI,},["autosize"]={_C_OL,_C_K6,},["siblingsOfType"]={[3]=_C_FH,},["hitTest"]={[3]=_C_FX,}}function _C_ON(self,super)return function(_C_self_passed,symbolName)
		self.symbol = Symbol.static:fromName( symbolName )
	end end function _C_OO(self,super)return function(_C_self_passed,symbol)
		self.symbol = symbol
		self.needsAutosize = true
		self.raw.symbolName = symbol.symbolName
	end end _C_OP={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_KC},["isFocused"]={[2]=_C_KA,[3]=_C_Fi},["symbol"]={_C_OO},["symbolName"]={_C_ON},["width"]={[3]=_C_Fg},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={[2]=_C_KD},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_KB},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_OQ=setmetatable({["symbol"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["symbolName"]=_C_9x,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateMove"]=_C_9x,["draw"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animate"]=_C_9x,["onKeyDown"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["autosize"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_OR=setmetatable({["symbol"]=function(_,k,n,v,w,s,d,l)if _C_OJ(n)then _C_D(_,k,"Symbol",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["symbolName"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["animateMove"]=_C_7,["draw"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animate"]=_C_7,["onKeyDown"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["autosize"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_OS={[SymbolButton]=1,[Button]=1,[View]=1}_C_OT={"Button","View"}_C_OV={}_C_OW={}_C_OX={[ToolbarSymbolButton]=1,[_C_3w]=1,[IToolbarItem]=1,[IToolbarPressableItem]=1,[SymbolButton]=1,[_C_4d]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_OY={"SymbolButton","Button","View"}_C_OZ={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Oa={["symbol"]={_C_OJ,"Symbol"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["symbolName"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}_C_Ob={["getCoordinates"]={[4]=_C_F3,},["focus"]={[4]=_C_F5,},["initialiseCanvas"]={[4]=_C_F6,},["unfocus"]={[4]=_C_F7,},["getCoordinatesTo"]={[4]=_C_F8,},["animateMove"]={[4]=_C_FD,},["draw"]={[4]=_C_F9,},["clearFocus"]={[4]=_C_FP,},["addFocus"]={[4]=_C_FQ,},["dispose"]={[4]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["update"]={[3]=_C_K7,[4]=_C_FC,},["onKeyUp"]={[3]=_C_K8,},["initialise"]={[3]=_C_K0,[4]=_C_FG,},["onMouseDown"]={[3]=_C_K1,},["onGlobalMouseUp"]={[3]=_C_K2,},["animate"]={[4]=_C_FV,},["onKeyDown"]={[3]=_C_K3,},["animateResize"]={[4]=_C_FW,},["onDraw"]={[2]=_C_OK,[3]=_C_K4,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[4]=_C_FO,},["updateThemeStyle"]={[3]=_C_K5,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["startDragDrop"]={[4]=_C_FR,},["hitTestEvent"]={[4]=_C_FI,},["autosize"]={[2]=_C_OL,[3]=_C_K6,},["siblingsOfType"]={[4]=_C_FH,},["hitTest"]={[4]=_C_FX,}}_C_Oc={set={["x"]={[4]=_C_Fq},["y"]={[4]=_C_Fh},["leftPin"]={[4]=_C_Fm},["isPressed"]={[3]=_C_KC},["isFocused"]={[3]=_C_KA,[4]=_C_Fi},["symbol"]={[2]=_C_OO},["symbolName"]={[2]=_C_ON},["width"]={[4]=_C_Fg},["shadowSize"]={[4]=_C_Fs},["height"]={[4]=_C_Fr},["text"]={[3]=_C_KD},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_KB},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_Od=setmetatable({["symbol"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["symbolName"]=_C_9x,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateMove"]=_C_9x,["draw"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animate"]=_C_9x,["onKeyDown"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["autosize"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Oe=setmetatable({["symbol"]=function(_,k,n,v,w,s,d,l)if _C_OJ(n)then _C_D(_,k,"Symbol",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["symbolName"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["animateMove"]=_C_7,["draw"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animate"]=_C_7,["onKeyDown"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["autosize"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Of={[ToolbarSymbolButton]=1,[IToolbarItem]=1,[IToolbarPressableItem]=1,[SymbolButton]=1,[Button]=1,[View]=1}_C_Og={"SymbolButton","Button","View"}_C_Oi={}_C_Oj={}_C_Ok={[QuartzProxy]=1,[_C_3y]=1}_C_Ol={["fs"]=loadstring("return fs \
\
\9\
"),}_C_Om={["silicaApplication"]={_C_At,"Table (allowsNil)"},["screenBuffer"]={_C_At,"Table (allowsNil)"},["status"]={_C_Aq,"String (allowsNil)"},["fs"]={_C_An,"Table"},["userDataPath"]={_C_Ai,"String"},}_C_On={["_program"]=loadstring([[return Program;

	
]])}function _C_Oo(self,super)return function(_C_self_passed,program)if _C_Hy(program)then _C_F(self,"program","initialise","Program",program)end 
        _program = program
        local applicationUserDataFolder = self.application.userDataFolder
        local identifier = program.identifier
        local folder = applicationUserDataFolder:folderFromPath( identifier )
        if not folder then
            folder = applicationUserDataFolder:makeSubfolder( identifier )
        end

        self.userDataPath = folder.path
    end end
function _C_Op(self,super)return function(_C_self_passed,pixels)if _C_At(pixels)then _C_F(self,"pixels","redraw","Table (allowsNil)",pixels)end 
        local programView = _program.programView
        if pixels then
            programView.buffer = pixels
        end
        programView.needsDraw = true
    end end
_C_Oq={["initialise"]={_C_Oo,},["redraw"]={_C_Op,}}function _C_Or(self,super)return function(_C_self_passed)
        return _program.status
    end end function _C_Os(self,super)return function(_C_self_passed,status)
        _program.status = status
    end end _C_Ot={set={["status"]={_C_Os}},get={["status"]={_C_Or}}}_C_Ou=setmetatable({["silicaApplication"]=_C_9x,["screenBuffer"]=_C_9x,["status"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["fs"]=_C_9x,["userDataPath"]=_C_9x,["initialise"]=_C_9x,["redraw"]=_C_9x},_C_9z)_C_Ov=setmetatable({["silicaApplication"]=_C_Fz,["screenBuffer"]=_C_Fz,["status"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["fs"]=_C_Ax,["userDataPath"]=_C_B1,["initialise"]=_C_7,["redraw"]=_C_7},_C_9z)_C_Ow={[QuartzProxy]=1}_C_Oy={}_C_Oz={}_C_P0={["unserialise"]={[2]=_C_Ah,}}_C_P1={[BridgedFileAssociation]=1,[_C_40]=1,[FileAssociation]=1,[_C_3R]=1,[ISerialiseable]=1}_C_P2={"FileAssociation"}_C_P3={["argumentFormat"]=loadstring("return { true }\
\
\9\
"),}_C_P4={["argumentFormat"]={_C_An,"Table"},["icon"]={_C_Ao,"Icon (allowsNil)"},["programBundle"]={_C_Ap,"Bundle (allowsNil)"},["mime"]={_C_Aq,"String (allowsNil)"},["extensions"]={_C_An,"Table"},["name"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_P5(self,super)return function(_C_self_passed,info)if _C_An(info)then _C_F(self,"info","initialise","Table",info)end 
		self.id = info.id
		self.name = info.name
		self.mime = info.mime
		if info.icon then
			self.icon = Icon.static:fromIcon( info.icon )
		end
		self.extensions = info.extensions
	end end
_C_P6={["initialise"]={_C_P5,_C_As,},["serialise"]={[2]=_C_Av,}}_C_P7=setmetatable({["argumentFormat"]=_C_9x,["icon"]=_C_9x,["programBundle"]=_C_9x,["mime"]=_C_9x,["extensions"]=_C_9x,["name"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x,["serialise"]=_C_9x},_C_9z)_C_P8=setmetatable({["argumentFormat"]=_C_Ax,["icon"]=_C_Ay,["programBundle"]=_C_Az,["mime"]=_C_B0,["extensions"]=_C_Ax,["name"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7,["serialise"]=_C_7},_C_9z)_C_P9={[BridgedFileAssociation]=1,[FileAssociation]=1,[ISerialiseable]=1}_C_PA={"FileAssociation"}_C_PC={["resourceFolders"]=loadstring("return {} \
\9\
"),}_C_PD={["resourceFolders"]={_C_An,"Table"},["resourceTables"]={_C_An,"Table"},}function _C_PE(self,super)return function(_C_self_passed,...)
		self.resourceTables = __resourceTables or {}
		_G.__resourceTables = nil

	end end
function _C_PF(self,super)return function(_C_self_passed,path)if _C_Ai(path)then _C_F(self,"path","load","String",path)end 
		local folder = Folder( path )
		if folder then
			table.insert( self.resourceFolders, folder )
			local classesFolder = folder:folderFromPath( "classes" )
			if classesFolder then
				table.insert( class.folders, classesFolder )
				local SLUA = Metadata.mimes.SLUA
				local function loadFolder( folder )
					for i, fileSystemItem in ipairs( folder.items ) do
						if fileSystemItem.metadata.mime == SLUA then
							class.get( fileSystemItem.name, fileSystemItem.contents )
						elseif fileSystemItem:typeOf( Folder ) then
							loadFolder( fileSystemItem )
						end
					end
				end
				loadFolder( classesFolder )
			end
		end
	end end
_C_PG={["initialise"]={_C_PE,},["load"]={_C_PF,}}_C_PH=setmetatable({["resourceFolders"]=_C_9x,["resourceTables"]=_C_9x,["initialise"]=_C_9x,["load"]=_C_9x},_C_9z)_C_PI=setmetatable({["resourceFolders"]=_C_Ax,["resourceTables"]=_C_Ax,["initialise"]=_C_7,["load"]=_C_7},_C_9z)_C_PJ={[Application]=1,[_C_9h]=1}_C_PK={["isRunning"]=loadstring("return false\
\9\
"),["schedules"]=loadstring("return {}\
\9\
"),["userDataPath"]=loadstring("return \"userdata\"\
\9\
"),["focuses"]=loadstring("return {}\
\9\
"),}function _C_PM(v)local j=_C_L[v]return not(j and j[ApplicationEventManager])end  function _C_PN(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Settings])end  function _C_PO(v)local j=_C_L[v]return not(j and j[KeyboardShortcutManager])end  function _C_PP(v)local j=_C_L[v]return not(j and j[Folder])end  function _C_PQ(v)local j=_C_L[v]return not(j and j[DragDropManager])end  function _C_PR(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Document])end  function _C_PS(v)local j=_C_L[v]return not(j and j[Container])end  _C_PL={["focuses"]={_C_An,"Table"},["arguments"]={_C_At,"Table (allowsNil)"},["userDataPath"]={_C_Ai,"String"},["eventManager"]={_C_PM,"ApplicationEventManager"},["settings"]={_C_PN,"Settings (allowsNil)"},["keyboardShortcutManager"]={_C_PO,"KeyboardShortcutManager"},["name"]={_C_Ai,"String"},["userDataFolder"]={_C_PP,"Folder"},["path"]={_C_Aq,"String (allowsNil)"},["isRunning"]={_C_Cp,"Boolean"},["schedules"]={_C_An,"Table"},["updateTimer"]={_C_CU,"Number (allowsNil)"},["dragDropManager"]={_C_PQ,"DragDropManager"},["lastUpdate"]={_C_CU,"Number (allowsNil)"},["document"]={_C_PR,"Document (allowsNil)"},["container"]={_C_PS,"Container"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_PT(self,super)return function(_C_self_passed,...)
		class.setApplication( self )
		if Quartz then
			Quartz.silicaApplication = self
		end
		local userDataParentFolder
		local userDataPath
		if Quartz then
			userDataPath = Quartz.userDataPath
			self.userDataPath = userDataPath
		else
			userDataPath = self.userDataPath
		end
		self.arguments = { ... }
		self.userDataFolder = Folder( userDataPath ) or Folder.static:make( userDataPath )
		self:initialiseSettings()
		self:initialiseFileAssociations()
		self.eventManager = ApplicationEventManager( self )
		self.keyboardShortcutManager = KeyboardShortcutManager( self )
		self.dragDropManager = DragDropManager( self )

		Font.static:initialisePresets()
		Cursor.static:setupAll()
		
		self:reloadInterface()

		FileSystemItem.static:purgeCached()
		local function purge()
			FileSystemItem.static:purgeOldCache()
			self:schedule( purge, 30 )
		end
		self:schedule( purge, 30 )

		self.eventManager:connect( TimerEvent, self.onTimer )
	end end
function _C_PU(self,super)return function(_C_self_passed,newFocus,filter)
		local focuses = self.focuses
		local oldFocuses = {}
		local hadOtherFocus = false
		for oldFocus, _ in pairs( focuses ) do
			if oldFocus ~= newFocus then
				oldFocuses[oldFocus] = true
				if (not filter or oldFocus:typeOf( filter )) then
					hadOtherFocus = true
					focuses[oldFocus] = nil
					oldFocus.isFocused = false
				end
			end
		end
		if hadOtherFocus or not focuses[newFocus] then
			if not focuses[newFocus] then
				focuses[newFocus] = true
				newFocus.isFocused = true
			end
			self.eventManager:handleEvent( FocusesChangedInterfaceEvent( focuses, oldFocuses ) )
		end
	end end
function _C_PV(self,super)return function(_C_self_passed)
		if Quartz then
			-- if we're running in Quartz we'll need to extract all the file associations from it
		else
			-- as we're not running in Quartz we can't actually open any of the default files, so we'll need to make 'fake' ones so most files have icons, and the OS isn't feeding us our own file formats, so we'll need to load those ourself
			FileAssociationManager.static:registerAssociation( FakeFileAssociation( "folder", Icon.static:fromFile( "folder" ) ) )
			-- FakeFileAssociation( "text/plain", Icon.static:fromFile( "text" ), { "txt", "text" } )
		end
	end end
function _C_PW(self,super)return function(_C_self_passed,oldFocus)
		local focuses = self.focuses
		if focuses[oldFocus] then
			local oldFocuses = {}
			for k, _ in pairs( focuses ) do
				oldFocuses[k] = true
			end
			focuses[oldFocus] = nil
			oldFocus.isFocused = false
			self.eventManager:handleEvent( FocusesChangedInterfaceEvent( focuses, oldFocuses ) )
		end
	end end
function _C_PX(self,super)return function(_C_self_passed,_type,searchFocuses)
		local focuses = {}
		for view, _ in pairs( searchFocuses or self.focuses ) do
			if view:typeOf( _type ) then
				table.insert( focuses, view )
			end
		end
		return focuses
	end end
function _C_PY(self,super)return function(_C_self_passed,filter)
		local focuses = self.focuses
		local oldFocuses = {}
		for oldFocus, _ in pairs( focuses ) do
			if not filter or oldFocus:typeOf( filter ) then
				oldFocuses[oldFocus] = true
				focuses[oldFocus] = nil
				oldFocus.isFocused = false
			end
		end
		self.eventManager:handleEvent( FocusesChangedInterfaceEvent( focuses, oldFocuses ) )
	end end
function _C_PZ(self,super)return function(_C_self_passed,func,time,...)
		time = time or 0.05
		local schedules = self.schedules
		table.insert( schedules, { func, os.clock() + time, ... } )
		return #schedules
	end end
function _C_Pa(self,super)return function(_C_self_passed,...)
		self.isRunning = true
		try( function()
			self:update()

			while self.isRunning do
				local event = Event.static:create( coroutine.yield() )
				event.relativeView = self.container
				self.eventManager:handleEvent( event )
			end
		end ) {

			catch( FatalException, function( extension )
				print( extension.message )
			end )

		}
	end end
function _C_Pb(self,super)return function(_C_self_passed,newFocus)
		local focuses = self.focuses
		local oldFocuses = {}
		if not focuses[newFocus] then
			for focusedView, _ in pairs( focuses ) do
				oldFocuses[focusedView] = true
				if focusedView.isSingleFocusOnly then
					focuses[focusedView] = nil
				end
			end
			focuses[newFocus] = true
			newFocus.isFocused = true
			self.eventManager:handleEvent( FocusesChangedInterfaceEvent( focuses, oldFocuses ) )
		end
	end end
function _C_Pc(self,super)return function(_C_self_passed)
		local interfaceName = self.interfaceName

		local oldContainer = self.container
		if oldContainer then
			oldContainer:dispose()
		end

		if interfaceName then
			local interface = Interface( interfaceName )
			self.container = interface.container
			interface:ready()
		else
			local container = ApplicationContainer()
			self.container = container
			container:handleEvent( ReadyInterfaceEvent() )
		end
	end end
function _C_Pd(self,super)return function(_C_self_passed,scheduleId)
		local schedules = self.schedules
		if schedules[scheduleId] then
			schedules[scheduleId] = nil
			return true
		else return false end
	end end
function _C_Pe(self,super)return function(_C_self_passed)
	end end
function _C_Pf(self,super)return function(_C_self_passed,lastUpdate)
		local now = os.clock()
		local schedules = self.schedules
		for scheduleId, task in pairs( schedules ) do
			if task[2] <= now then
				local func = task[1]
				table.remove( task, 2 )
				table.remove( task, 1 )
				func( unpack( task ) )
				schedules[scheduleId] = nil
			end
		end
	end end
function _C_Pg(self,super)return function(_C_self_passed)
		-- TODO: not exactally sure how to handle deltaTime for the first one. for now it's one 60th
		local clock = os.clock()
		local lastUpdate = self.lastUpdate or ( clock - 1/60 )
		local deltaTime = clock - lastUpdate
		self.lastUpdate = clock
		if not Quartz then
			self.updateTimer = os.startTimer( 1/60 )
		end

		self:checkScheduled( lastUpdate )
		self.container:update( deltaTime )
	end end
function _C_Ph(self,super)return function(_C_self_passed)
		return next( self.focuses ) ~= nil
	end end
_C_Pi={["initialise"]={_C_PT,},["focus"]={_C_PU,},["initialiseFileAssociations"]={_C_PV,},["unfocus"]={_C_PW,},["focusesOfType"]={_C_PX,},["schedule"]={_C_PZ,},["update"]={_C_Pg,},["run"]={_C_Pa,},["addFocus"]={_C_Pb,},["reloadInterface"]={_C_Pc,},["unschedule"]={_C_Pd,},["initialiseSettings"]={_C_Pe,},["checkScheduled"]={_C_Pf,},["unfocusAll"]={_C_PY,},["hasFocus"]={_C_Ph,}}function _C_Pj(self,super)return function(_C_self_passed,event)
		if event.timer and event.timer == self.updateTimer then
			self:update()
			return true
		end
	end end
_C_Pk={["updateTimer"]={_C_Pj,}}function _C_Pl(self,super)return function(_C_self_passed,interfaceName)
		if interfaceName and self.interfaceName ~= interfaceName then
			self.interfaceName = interfaceName
			self:reloadInterface()
		end
	end end _C_Pm={set={["interfaceName"]={_C_Pl}}}function _C_Pn(_,k,n,v)if _C_PM(n)then _C_D(_,k,"ApplicationEventManager",n)end v[k]=n end function _C_Po(_,k,n,v)if _C_PN(n)then _C_D(_,k,"Settings (allowsNil)",n)end v[k]=n end function _C_Pp(_,k,n,v)if _C_PO(n)then _C_D(_,k,"KeyboardShortcutManager",n)end v[k]=n end function _C_Pq(_,k,n,v)if _C_PP(n)then _C_D(_,k,"Folder",n)end v[k]=n end function _C_Pr(_,k,n,v)if _C_PQ(n)then _C_D(_,k,"DragDropManager",n)end v[k]=n end function _C_Ps(_,k,n,v)if _C_PR(n)then _C_D(_,k,"Document (allowsNil)",n)end v[k]=n end function _C_Pt(_,k,n,v)if _C_PS(n)then _C_D(_,k,"Container",n)end v[k]=n end _C_Pu=setmetatable({["focuses"]=_C_9x,["arguments"]=_C_9x,["userDataPath"]=_C_9x,["eventManager"]=_C_9x,["settings"]=_C_9x,["keyboardShortcutManager"]=_C_9x,["name"]=_C_9x,["userDataFolder"]=_C_9x,["path"]=_C_9x,["isRunning"]=_C_9x,["schedules"]=_C_9x,["updateTimer"]=_C_9x,["dragDropManager"]=_C_9x,["lastUpdate"]=_C_9x,["document"]=_C_9x,["container"]=_C_9x,["interfaceName"]=_C_9x,["initialise"]=_C_9x,["focus"]=_C_9x,["initialiseFileAssociations"]=_C_9x,["unfocus"]=_C_9x,["focusesOfType"]=_C_9x,["schedule"]=_C_9x,["update"]=_C_9x,["run"]=_C_9x,["addFocus"]=_C_9x,["reloadInterface"]=_C_9x,["unschedule"]=_C_9x,["initialiseSettings"]=_C_9x,["checkScheduled"]=_C_9x,["unfocusAll"]=_C_9x,["hasFocus"]=_C_9x},_C_9z)_C_Pv=setmetatable({["focuses"]=_C_Ax,["arguments"]=_C_Fz,["userDataPath"]=_C_B1,["eventManager"]=_C_Pn,["settings"]=_C_Po,["keyboardShortcutManager"]=_C_Pp,["name"]=_C_B1,["userDataFolder"]=_C_Pq,["path"]=_C_B0,["isRunning"]=_C_Cu,["schedules"]=_C_Ax,["updateTimer"]=_C_LL,["dragDropManager"]=_C_Pr,["lastUpdate"]=_C_LL,["document"]=_C_Ps,["container"]=_C_Pt,["interfaceName"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["initialise"]=_C_7,["focus"]=_C_7,["initialiseFileAssociations"]=_C_7,["unfocus"]=_C_7,["focusesOfType"]=_C_7,["schedule"]=_C_7,["update"]=_C_7,["run"]=_C_7,["addFocus"]=_C_7,["reloadInterface"]=_C_7,["unschedule"]=_C_7,["initialiseSettings"]=_C_7,["checkScheduled"]=_C_7,["unfocusAll"]=_C_7,["hasFocus"]=_C_7},_C_9z)_C_Pw={[Application]=1}_C_Py={["resourceFolders"]=loadstring("return {} \
\9\
"),}_C_Pz={["resourceFolders"]={_C_An,"Table"},["resourceTables"]={_C_An,"Table"},}_C_Q0={["initialise"]={[2]=_C_PE,},["load"]={[2]=_C_PF,}}_C_Q1=setmetatable({["resourceFolders"]=_C_9x,["resourceTables"]=_C_9x,["initialise"]=_C_9x,["load"]=_C_9x},_C_9z)_C_Q2=setmetatable({["resourceFolders"]=_C_Ax,["resourceTables"]=_C_Ax,["initialise"]=_C_7,["load"]=_C_7},_C_9z)_C_Q3={[QuartzApplication]=1,[_C_44]=1,[Application]=1,[_C_9h]=1}_C_Q4={"Application"}_C_Q5={["isRunning"]=loadstring("return false\
\9\
"),["schedules"]=loadstring("return {}\
\9\
"),["userDataPath"]=loadstring("return \"userdata\"\
\9\
"),["interfaceName"]=loadstring("return \"quartz\"\
\9\
"),["name"]=loadstring("return \"Quartz\"\
\9\
"),["focuses"]=loadstring("return {}\
\9\
"),}function _C_Q7(v)local j=_C_L[v]return not(j and j[ProgramManager])end  _C_Q6={["programManager"]={_C_Q7,"ProgramManager"},["focuses"]={_C_An,"Table"},["arguments"]={_C_At,"Table (allowsNil)"},["userDataPath"]={_C_Ai,"String"},["eventManager"]={_C_PM,"ApplicationEventManager"},["settings"]={_C_PN,"Settings (allowsNil)"},["keyboardShortcutManager"]={_C_PO,"KeyboardShortcutManager"},["container"]={_C_PS,"Container"},["path"]={_C_Aq,"String (allowsNil)"},["userDataFolder"]={_C_PP,"Folder"},["isRunning"]={_C_Cp,"Boolean"},["schedules"]={_C_An,"Table"},["updateTimer"]={_C_CU,"Number (allowsNil)"},["dragDropManager"]={_C_PQ,"DragDropManager"},["lastUpdate"]={_C_CU,"Number (allowsNil)"},["document"]={_C_PR,"Document (allowsNil)"},["name"]={_C_Ai,"String"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_Q8(self,super)return function(_C_self_passed)
		super()
		self.programManager = ProgramManager( self )
		self:event( CharacterEvent, self.onChar )
		self.programManager:run( SilicaProgram( Bundle( "/applications/About.application" ) ) )
	end end
function _C_Q9(self,super)return function(_C_self_passed,event,phase)if _C_GY(event)then _C_F(self,"event","onChar","CharacterEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChar","Event.phases",phase)end 
		if event.character == 'r' then
			-- self.programManager:run( Program( Bundle( "/applications/Test.application" ) ) )
			self.programManager:run( SilicaProgram( Bundle( "/applications/About.application" ) ) )
		elseif event.character == 'f' then
			-- self.programManager:run( Program( Bundle( "/applications/Test.application" ) ) )
			self.programManager:run( SilicaProgram( Bundle( "/applications/Files.application" ) ) )
		elseif event.character == '\\' then
			os.reboot()
		end
		return false
	end end
function _C_QA(self,super)return function(_C_self_passed)
		super()
		self.programManager:update()
	end end
function _C_QB(self,super)return function(_C_self_passed)
		self.settings = QuartzSettings()
	end end
_C_QC={["initialise"]={_C_Q8,_C_PT,},["focus"]={[2]=_C_PU,},["update"]={_C_QA,_C_Pg,},["schedule"]={[2]=_C_PZ,},["unfocus"]={[2]=_C_PW,},["focusesOfType"]={[2]=_C_PX,},["onChar"]={_C_Q9,},["unfocusAll"]={[2]=_C_PY,},["run"]={[2]=_C_Pa,},["addFocus"]={[2]=_C_Pb,},["reloadInterface"]={[2]=_C_Pc,},["unschedule"]={[2]=_C_Pd,},["initialiseSettings"]={_C_QB,_C_Pe,},["checkScheduled"]={[2]=_C_Pf,},["initialiseFileAssociations"]={[2]=_C_PV,},["hasFocus"]={[2]=_C_Ph,}}_C_QD={["updateTimer"]={[2]=_C_Pj,}}_C_QE={set={["interfaceName"]={[2]=_C_Pl}}}function _C_QF(_,k,n,v)if _C_Q7(n)then _C_D(_,k,"ProgramManager",n)end v[k]=n end _C_QG=setmetatable({["programManager"]=_C_9x,["focuses"]=_C_9x,["arguments"]=_C_9x,["userDataPath"]=_C_9x,["eventManager"]=_C_9x,["settings"]=_C_9x,["keyboardShortcutManager"]=_C_9x,["name"]=_C_9x,["userDataFolder"]=_C_9x,["path"]=_C_9x,["isRunning"]=_C_9x,["schedules"]=_C_9x,["updateTimer"]=_C_9x,["dragDropManager"]=_C_9x,["lastUpdate"]=_C_9x,["document"]=_C_9x,["container"]=_C_9x,["interfaceName"]=_C_9x,["initialise"]=_C_9x,["focus"]=_C_9x,["update"]=_C_9x,["schedule"]=_C_9x,["unfocus"]=_C_9x,["focusesOfType"]=_C_9x,["onChar"]=_C_9x,["unfocusAll"]=_C_9x,["run"]=_C_9x,["addFocus"]=_C_9x,["reloadInterface"]=_C_9x,["unschedule"]=_C_9x,["initialiseSettings"]=_C_9x,["checkScheduled"]=_C_9x,["initialiseFileAssociations"]=_C_9x,["hasFocus"]=_C_9x},_C_9z)_C_QH=setmetatable({["programManager"]=_C_QF,["focuses"]=_C_Ax,["arguments"]=_C_Fz,["userDataPath"]=_C_B1,["eventManager"]=_C_Pn,["settings"]=_C_Po,["keyboardShortcutManager"]=_C_Pp,["name"]=_C_B1,["userDataFolder"]=_C_Pq,["path"]=_C_B0,["isRunning"]=_C_Cu,["schedules"]=_C_Ax,["updateTimer"]=_C_LL,["dragDropManager"]=_C_Pr,["lastUpdate"]=_C_LL,["document"]=_C_Ps,["container"]=_C_Pt,["interfaceName"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["initialise"]=_C_7,["focus"]=_C_7,["update"]=_C_7,["schedule"]=_C_7,["unfocus"]=_C_7,["focusesOfType"]=_C_7,["onChar"]=_C_7,["unfocusAll"]=_C_7,["run"]=_C_7,["addFocus"]=_C_7,["reloadInterface"]=_C_7,["unschedule"]=_C_7,["initialiseSettings"]=_C_7,["checkScheduled"]=_C_7,["initialiseFileAssociations"]=_C_7,["hasFocus"]=_C_7},_C_9z)_C_QI={[QuartzApplication]=1,[Application]=1}_C_QJ={"Application"}_C_QL={["eventType"]=loadstring("return \"\"\
\9\
"),}_C_QM={["eventType"]={_C_Ai,"String"},}_C_QN={["eventClasses"]=loadstring([[return {}

	
]])}_C_QO={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_QP=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_QQ=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_QR={[KeyEvent]=1,[_C_8k]=1,[Event]=1,[_C_7j]=1}_C_QS={"Event"}_C_QT={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_QU={["keyCode"]={_C_Ar,"Number"},["relativeView"]={_C_Cr,"View"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToChildren"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["isCharacter"]={_C_Cp,"Boolean"},["keyString"]={_C_Aq,"String (allowsNil)"},}function _C_QV(self,super)return function(_C_self_passed,keyCode)if _C_Ar(keyCode)then _C_F(self,"keyCode","initialise","Number",keyCode)end 
		self.keyCode = keyCode
		self.keyString = KeyboardShortcutManager.static:convert( keyCode )
		-- TODO: this needs testing
		self.isCharacter = (2 <= keyCode and keyCode <= 13) or (16 <= keyCode and keyCode <= 27) or (30 <= keyCode and keyCode <= 41) or (44 <= keyCode and keyCode <= 53)
	end end
_C_QW={["initialise"]={_C_QV,},["makeRelative"]={[2]=_C_Cs,}}_C_QX=setmetatable({["isSentToChildren"]=_C_9x,["keyCode"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isCharacter"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["keyString"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_QY=setmetatable({["isSentToChildren"]=_C_Cu,["keyCode"]=_C_B2,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isCharacter"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["keyString"]=_C_B0,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_QZ={[KeyEvent]=1,[Event]=1}_C_Qa={"Event"}_C_Qc={["eventType"]=loadstring("return \"key_up\"\
\
\
"),}_C_Qd={["eventType"]={_C_Ai,"String"},}_C_Qe={["eventClasses"]=loadstring([[return {}

	
]])}_C_Qf={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_Qg=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_Qh=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_Qi={[UpKeyEvent]=1,[_C_46]=1,[KeyEvent]=1,[_C_8k]=1,[Event]=1,[_C_7j]=1}_C_Qj={"KeyEvent","Event"}_C_Qk={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_Ql={["keyCode"]={_C_Ar,"Number"},["relativeView"]={_C_Cr,"View"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToChildren"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["isCharacter"]={_C_Cp,"Boolean"},["keyString"]={_C_Aq,"String (allowsNil)"},}_C_Qm={["initialise"]={[2]=_C_QV,},["makeRelative"]={[3]=_C_Cs,}}_C_Qn=setmetatable({["isSentToChildren"]=_C_9x,["keyCode"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isCharacter"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["keyString"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_Qo=setmetatable({["isSentToChildren"]=_C_Cu,["keyCode"]=_C_B2,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isCharacter"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["keyString"]=_C_B0,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_Qp={[UpKeyEvent]=1,[KeyEvent]=1,[Event]=1}_C_Qq={"KeyEvent","Event"}_C_Qs={}_C_Qt={}_C_Qu={[MultipleInstancesSettingsException]=1,[_C_48]=1,[SettingsException]=1,[_C_3r]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_Qv={"SettingsException","FatalException","Exception"}_C_Qw={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_Qx={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_Qy={["initialise"]={[4]=_C_ED,}}_C_Qz=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_R0=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_R1={[MultipleInstancesSettingsException]=1,[SettingsException]=1,[FatalException]=1,[Exception]=1}_C_R2={"SettingsException","FatalException","Exception"}_C_R4={}_C_R5={}_C_R6={[OutlineMask]=1,[_C_4A]=1,[Mask]=1,[_C_36]=1}_C_R7={"Mask"}_C_R8={}_C_R9={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_RA(self,super)return function(_C_self_passed,x,y,width,height,leftThickness,topThickness,rightThickness,bottomThickness)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if leftThickness==nil then leftThickness=1 end if _C_Ar(leftThickness)then _C_F(self,"leftThickness","initialise","Number",leftThickness)end if topThickness==nil then topThickness=leftThickness end if _C_Ar(topThickness)then _C_F(self,"topThickness","initialise","Number",topThickness)end if rightThickness==nil then rightThickness=leftThickness end if _C_Ar(rightThickness)then _C_F(self,"rightThickness","initialise","Number",rightThickness)end if bottomThickness==nil then bottomThickness=topThickness  end if _C_Ar(bottomThickness)then _C_F(self,"bottomThickness","initialise","Number",bottomThickness)end 
		local pixels = {}
		local i = 0
		for y = 1, height do
			for x = 1, width do
				i = i + 1
				pixels[i] = ( y <= topThickness or y > height - bottomThickness or x <= leftThickness or x > width - rightThickness ) or nil
			end
		end

		super( x, y, width, height, pixels )
	end end
_C_RB={["initialise"]={_C_RA,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_RC=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_RD=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_RE={[OutlineMask]=1,[Mask]=1}_C_RF={"Mask"}_C_RH={}_C_RI={}_C_RJ={[Settings]=1,[_C_4C]=1}_C_RK={}_C_RL={["settingsFile"]={_C_H5,"File"},["defaults"]={_C_An,"Table"},}function _C_RM(self,super)return function(_C_self_passed)
		if hasInitialised then
			MultipleInstanceSettingsException( "You have already initialised another Settings instance. There can only be ONE per application, even if they are different classes. If you disagree with this make a GitHub issue, I might consider changing it." )
		end

		local defaults = {}
		for key, property in pairs( self.instanceProperties ) do
			if not SYSTEM_KEYS[key] then
				local propertyType = property[TYPETABLE_TYPE]
				if propertyType ~= "string" and propertyType ~= "number" and propertyType ~= "table" and propertyType ~= "boolean" then
					InvalidValueTypeSettingsException( "Invalid ValueType for property '" .. key .. "', property values must be strings, numbers, tables or booleans." )
				end
				defaults[key] = self[key]
			end
		end
		self.defaults = defaults
		self:refresh()
	end end
function _C_RN(self,super)return function(_C_self_passed)
		local userDataFolder = self.application.userDataFolder
		local settingsFile = userDataFolder:fileFromPath( FILE_NAME )
		if not settingsFile then
			self.settingsFile = userDataFolder:makeSubfile( FILE_NAME, Metadata.mimes.SUSERDATA )
			self:save()
		else
			self.settingsFile = settingsFile
			local serialisedContents = settingsFile.serialisedContents
			for key, property in pairs( self.instanceProperties ) do
				if not SYSTEM_KEYS[key] then
					local value = serialisedContents[key]
					local propertyClass = property[TYPETABLE_CLASS]
					if propertyClass then
						if not propertyClass:typeOf( ISerialiseable ) then
							InvalidValueTypeSettingsException( "Invalid ValueType for property '" .. key .. "', property values that are classes must implement ISerialiseable so they can be saved and read from files." )
						end
						if value then
							value = propertyClass.static:unserialise( value )
						end
					end
					self[key] = value
				end
			end
		end
	end end
function _C_RO(self,super)return function(_C_self_passed)
		local serialisedContents = {}
		for key, property in pairs( self.instanceProperties ) do
			if not SYSTEM_KEYS[key] then
				local value = self[key]
				local propertyClass = property[TYPETABLE_CLASS]
				if propertyClass then
					if not propertyClass:typeOf( ISerialiseable ) then
						InvalidValueTypeSettingsException( "Invalid ValueType for property '" .. key .. "', property values that are classes must implement ISerialiseable so they can be saved and read from files." )
					end
					if value then
						value = value:serialise()
					end
				end
				serialisedContents[key] = value
			end
		end
		self.settingsFile.serialisedContents = serialisedContents
	end end
_C_RP={["initialise"]={_C_RM,},["refresh"]={_C_RN,},["save"]={_C_RO,}}function _C_RQ(_,k,n,v)if _C_H5(n)then _C_D(_,k,"File",n)end v[k]=n end _C_RR=setmetatable({["settingsFile"]=_C_9x,["defaults"]=_C_9x,["initialise"]=_C_9x,["refresh"]=_C_9x,["save"]=_C_9x},_C_9z)_C_RS=setmetatable({["settingsFile"]=_C_RQ,["defaults"]=_C_Ax,["initialise"]=_C_7,["refresh"]=_C_7,["save"]=_C_7},_C_9z)_C_RT={[Settings]=1}_C_RV={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}_C_RW={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}_C_RX={["onThemeChanged"]={[2]=_C_Dd,},["drawTo"]={[2]=_C_Dg,},["updateAppearance"]={[2]=_C_Di,},["setup"]={[2]=_C_Dj,},["setupAll"]={[2]=_C_Dk,}}_C_RY=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["setup"]=_C_9x,["setupAll"]=_C_9x},_C_9z)_C_RZ=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["setup"]=_C_7,["setupAll"]=_C_7},_C_9z)_C_Ra={[ResizeHorizontalCursor]=1,[_C_4E]=1,[Cursor]=1,[_C_3d]=1}_C_Rb={"Cursor"}_C_Rc={}_C_Rd={}_C_Re={[ResizeHorizontalCursor]=1,[Cursor]=1}_C_Rf={"Cursor"}_C_Rh={}_C_Ri={}_C_Rj={[CircleMask]=1,[_C_4G]=1,[Mask]=1,[_C_36]=1}_C_Rk={"Mask"}_C_Rl={}_C_Rm={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_Rn(self,super)return function(_C_self_passed,x,y,diameter)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(diameter)then _C_F(self,"diameter","initialise","Number",diameter)end 
		local pixels = {}

		local r = diameter / 2
		if r % 1 ~= 0 then
			r = r - 0.25
		end
		local radius = ( diameter + 1 ) / 2
		for y = 1, diameter do
			local ySqrd = ( y - radius )^2
			for x = 1, diameter do
				-- TODO: could probably make this faster by only square rooting once per y somehow
				local distance = ( ySqrd + ( x - radius )^2 )^0.5
				if distance <= r then
					pixels[(y - 1) * diameter + x] = true
				end
			end
		end

		super( x, y, diameter, diameter, pixels )
	end end
_C_Ro={["initialise"]={_C_Rn,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_Rp=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_Rq=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_Rr={[CircleMask]=1,[Mask]=1}_C_Rs={"Mask"}_C_Ru={}_C_Rv={}_C_Rw={["fromInterface"]={[2]=_C_Ke,}}_C_Rx={[Window]=1,[_C_5J]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_Ry={"Container","View"}_C_Rz={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["isResizingX"]=loadstring("return false\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["maxHeight"]=loadstring("return math.huge\
\
\9\
\
\
\
\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["minWidth"]=loadstring("return 60\
\9\
"),["minHeight"]=loadstring("return 40\
\9\
"),["maxWidth"]=loadstring("return math.huge\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return false\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["isResizingY"]=loadstring("return false\
\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["isDragging"]=loadstring("return false\
\9\
"),}_C_S0={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["maxHeight"]={_C_Ar,"Number"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["maxWidth"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["isResizingY"]={_C_Cp,"Boolean"},["minWidth"]={_C_Ar,"Number"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["y"]={_C_Ar,"Number"},["leftPin"]={_C_Aq,"String (allowsNil)"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["x"]={_C_Ar,"Number"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["specialMouseTimes"]={_C_An,"Table"},["isDragging"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["minHeight"]={_C_Ar,"Number"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceLinks"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["isResizingX"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_S1(self,super)return function(_C_self_passed,...)
		super( ... )
		self.closeButton = self:insert( CloseWindowButton( { x = 2, y = 1, window = self } ))
		self.maximiseButton = self:insert( MaximiseWindowButton( { x = 11, y = 1, window = self } ))

		self:loadInterface()
		
		self:event( DownMouseEvent, self.onMouseDownBefore, Event.phases.BEFORE )
		self:event( DownMouseEvent, self.onMouseDownAfter, Event.phases.AFTER )
		self.eventManager:connectGlobal( DragMouseEvent, self.onGlobalMouseDrag )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		self:event( LoadedInterfaceEvent, self.onInterfaceLoaded )
	end end
function _C_S2(self,super)return function(_C_self_passed)
		if not self.isEnabled then
			self.application:unfocusAll( Window )
			self.isEnabled = true
			self.parent:sendToFront( self )
			for i, sibling in ipairs( self:siblingsOfType( Window ) ) do
				sibling:unfocus()
			end
		end
	end end
function _C_S3(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if (self.isDragging or self.isResizingX or self.isResizingY ) and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.dragX = false
			self.dragY = false
			self.isDragging = false
			self.isResizingX = false
			self.isResizingY = false
			return true
		end
	end end
function _C_S4(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDownAfter","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDownAfter","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			x = event.x
			y = event.y
			local width = self.width
			local height = self.height
			local isResizingX = x >= width - 2 * RESIZE_MARGIN_X
			local isResizingY = y >= height - 2 * RESIZE_MARGIN_Y
			log(isResizingX)
			self.isResizingX = isResizingX
			self.isResizingY = isResizingY
			self.isDragging = not ( isResizingX or isResizingY )
			self.dragX = isResizingX and width - x or x
			self.dragY = isResizingY and height - y or y
		end
		return true
	end end
function _C_S5(self,super)return function(_C_self_passed)
		self.isEnabled = false
	end end
function _C_S6(self,super)return function(_C_self_passed)
		local width, height, theme, canvas = self.width - RESIZE_MARGIN_X, self.height - RESIZE_MARGIN_Y, self.theme, self.canvas

		local barHeight = 10
		local topCornerRadius, bottomCornerRadius = theme:value( "topCornerRadius" ), theme:value( "bottomCornerRadius" )
		local barRoundedRectangle = RoundedRectangleMask( 1, 1, width, barHeight, topCornerRadius, topCornerRadius, 0, 0 )
		canvas:fill( theme:value( "barFillColour" ), barRoundedRectangle )
		canvas:outline( theme:value( "separatorColour" ), barRoundedRectangle, 0, 0, 0, theme:value( "separatorThickness" ) )

		local contentMask = RoundedRectangleMask( 1, 1 + barHeight, width, height - barHeight, 0, 0, bottomCornerRadius, bottomCornerRadius )
		canvas:fill(  theme:value( "fillColour" ), contentMask )
		local combinedMask = contentMask:add( barRoundedRectangle )
		canvas:outline(	 theme:value( "outlineColour" ), combinedMask, theme:value( "outlineThickness" ) )

		self.shadowSize = theme:value( "shadowSize" )
		return combinedMask
	end end
function _C_S8(v)local j=_C_L[v]return not(j and j[DragMouseEvent])end  function _C_S7(self,super)return function(_C_self_passed,event,phase)if _C_S8(event)then _C_F(self,"event","onGlobalMouseDrag","DragMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseDrag","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			local preventPropagation = false
			if self.isDragging then
				self.x = event.x - self.dragX + 1
				self.y = event.y - self.dragY + 1
				preventPropagation = true
			else
				if self.isResizingX then
					self.width = event.x - self.x + self.dragX + 1
					preventPropagation = true
				end
				if self.isResizingY then
					self.height = event.y - self.y + self.dragY + 1
					preventPropagation = true
				end
			end
			return preventPropagation
		end
	end end
function _C_S9(self,super)return function(_C_self_passed)
		local interfaceName = self.interfaceName
		if interfaceName then
			local interface = Interface( interfaceName, WindowContainer )
			local container = interface.container
			self.container = self:insert( container )
			interface:ready()
		end
	end end
function _C_SA(self,super)return function(_C_self_passed,event,phase)if _C_Ku(event)then _C_F(self,"event","onInterfaceLoaded","LoadedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onInterfaceLoaded","Event.phases",phase)end 
		local currentContainer = self.container
		for i, childView in ipairs( self.children ) do
			if childView:typeOf( WindowContainer ) then
				if childView ~= currentContainer then
					self.container = childView
				end
				return
			end
		end
		self.container = self:insert( WindowContainer( { x = x, y = y, width = width, height = height } ) )
	end end
function _C_SB(self,super)return function(_C_self_passed)
		self.isVisible = false
		self.parent:remove( self )
	end end
function _C_SC(self,super)return function(_C_self_passed)
		local parent = self.parent
		if parent then
			self.x = math.ceil( ( parent.width - self.width + RESIZE_MARGIN_X ) / 2 )
			self.y = math.ceil( ( parent.height - self.height + RESIZE_MARGIN_Y ) / 2 )
		end
	end end
function _C_SD(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and "default" or "disabled"
	end end
function _C_SE(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDownBefore","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDownBefore","Event.phases",phase)end 
		self:focus()
	end end
_C_SF={["getCoordinates"]={[3]=_C_F3,},["focus"]={_C_S2,[3]=_C_F5,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["loadInterface"]={_C_S9,_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_Kv,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["updateThemeStyle"]={_C_SD,},["hitTest"]={[3]=_C_FX,},["sendToBack"]={[2]=_C_LD,},["addFocus"]={[3]=_C_FQ,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onReadyLoadInterface"]={[2]=_C_Kk,},["onChildOfChildAdded"]={[2]=_C_Kp,},["onGlobalMouseDrag"]={_C_S7,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["animateResize"]={[3]=_C_FW,},["onInterfaceLoaded"]={_C_SA,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["unfocus"]={_C_S5,[3]=_C_F7,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_S1,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["onGlobalMouseUp"]={_C_S3,},["onMouseDownAfter"]={_C_S4,},["hitTestEvent"]={[3]=_C_FI,},["initialiseCanvas"]={[3]=_C_F6,},["onDraw"]={_C_S6,_C_L0,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["onMouseDownBefore"]={_C_SE,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["centre"]={_C_SC,},["close"]={_C_SB,},["disposeAll"]={[2]=_C_L3,}}function _C_SG(self,super)return function(_C_self_passed,width)
		super( math.max( math.min( width, self.maxWidth ), self.minWidth ) )
	end end function _C_SH(self,super)return function(_C_self_passed,height)
		super( math.max( math.min( height, self.maxHeight ), self.minHeight ) )
	end end function _C_SI(self,super)return function(_C_self_passed,isEnabled)
		super( isEnabled )
		self:updateThemeStyle()
	end end _C_SJ={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={_C_SH,_C_LI,_C_Fr},["width"]={_C_SG,_C_LF,_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={_C_SI,_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_SK=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["maxHeight"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isDragging"]=_C_9x,["isCanvasHitTested"]=_C_9x,["dragX"]=_C_9x,["container"]=_C_9x,["offsetY"]=_C_9x,["maximiseButton"]=_C_9x,["dragY"]=_C_9x,["minHeight"]=_C_9x,["maxWidth"]=_C_9x,["isFocusDismissable"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["isResizingX"]=_C_9x,["width"]=_C_9x,["isResizingY"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["minWidth"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["closeButton"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateThemeStyle"]=_C_9x,["hitTest"]=_C_9x,["sendToBack"]=_C_9x,["addFocus"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["onGlobalMouseDrag"]=_C_9x,["draw"]=_C_9x,["animateResize"]=_C_9x,["onInterfaceLoaded"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["unfocus"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onMouseDownAfter"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onMouseDownBefore"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["centre"]=_C_9x,["close"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_SL=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["maxHeight"]=_C_B2,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isDragging"]=_C_Cu,["isCanvasHitTested"]=_C_Cu,["dragX"]=_C_Gr,["container"]=_C_Gr,["offsetY"]=_C_B2,["maximiseButton"]=_C_Gr,["dragY"]=_C_Gr,["minHeight"]=_C_B2,["maxWidth"]=_C_B2,["isFocusDismissable"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isResizingX"]=_C_Cu,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isResizingY"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["minWidth"]=_C_B2,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["closeButton"]=_C_Gr,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["focus"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateThemeStyle"]=_C_7,["hitTest"]=_C_7,["sendToBack"]=_C_7,["addFocus"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onReadyLoadInterface"]=_C_7,["onChildOfChildAdded"]=_C_7,["onGlobalMouseDrag"]=_C_7,["draw"]=_C_7,["animateResize"]=_C_7,["onInterfaceLoaded"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["unfocus"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["onMouseDownAfter"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onMouseDownBefore"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["centre"]=_C_7,["close"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_SM={[Window]=1,[Container]=1,[View]=1}_C_SN={"Container","View"}_C_SP={}_C_SQ={}function _C_SR(self,super)return function(_C_self_passed,message,title,callback,buttons,defaultButton)if _C_Ai(message)then _C_F(self,"message","display","String",message)end if title==nil then title="Alert" end if _C_Ai(title)then _C_F(self,"title","display","String",title)end if _C_FE(callback)then _C_F(self,"callback","display","Function (allowsNil)",callback)end if buttons==nil then buttons={ "Okay" } end if _C_An(buttons)then _C_F(self,"buttons","display","Table",buttons)end if defaultButton==nil then defaultButton=1  end if _C_Ar(defaultButton)then _C_F(self,"defaultButton","display","Number",defaultButton)end 
		self.application.container:insert( AlertWindow() )
	end end
_C_SS={["display"]={_C_SR,},["fromInterface"]={[3]=_C_Ke,}}_C_ST={[AlertWindow]=1,[_C_4I]=1,[Window]=1,[_C_5J]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_SU={"Window","Container","View"}_C_SV={["isResizingY"]=loadstring("return false\
\
\9\
"),["minWidth"]=loadstring("return 60\
\9\
"),["isResizingX"]=loadstring("return false\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["interfaceName"]=loadstring("return \"alert-window\"\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["maxHeight"]=loadstring("return math.huge\
\
\9\
\
\
\
\
\9\
"),["isDragging"]=loadstring("return false\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["minHeight"]=loadstring("return 40\
\9\
"),["maxWidth"]=loadstring("return math.huge\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return false\
\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["width"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_SX(v)local j=_C_L[v]return not(j and j[Button])end  _C_SW={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["maxHeight"]={_C_Ar,"Number"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["maxWidth"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["isResizingY"]={_C_Cp,"Boolean"},["minWidth"]={_C_Ar,"Number"},["isResizingX"]={_C_Cp,"Boolean"},["shadowSize"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["leftPin"]={_C_Aq,"String (allowsNil)"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["isFocusDismissable"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["childPins"]={_C_An,"Table"},["animations"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["okayButton"]={_C_SX,"Button"},["isDragging"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["minHeight"]={_C_Ar,"Number"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["isVisible"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_SY(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( LoadedInterfaceEvent, self.onInterfaceLoaded )
		self:event( ReadyInterfaceEvent, self.onReady )
	end end
function _C_SZ(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
		self:centre()
		self:focus()
		self.okayButton:focus()
	end end
_C_Sa={["getCoordinates"]={[4]=_C_F3,},["focus"]={[2]=_C_S2,[4]=_C_F5,},["unfocus"]={[2]=_C_S5,[4]=_C_F7,},["loadInterface"]={[2]=_C_S9,[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["updateThemeStyle"]={[2]=_C_SD,},["hitTest"]={[4]=_C_FX,},["addFocus"]={[4]=_C_FQ,},["sendToBack"]={[3]=_C_LD,},["onReadyLoadInterface"]={[3]=_C_Kk,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["animateResize"]={[4]=_C_FW,},["onChildOfChildAdded"]={[3]=_C_Kp,},["onGlobalMouseDrag"]={[2]=_C_S7,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["onInterfaceLoaded"]={[2]=_C_SA,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["hitTestEvent"]={[4]=_C_FI,},["insert"]={[3]=_C_Kw,},["initialise"]={_C_SY,_C_S1,_C_Kx,_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["onGlobalMouseUp"]={[2]=_C_S3,},["onMouseDownAfter"]={[2]=_C_S4,},["initialiseCanvas"]={[4]=_C_F6,},["close"]={[2]=_C_SB,},["onDraw"]={[2]=_C_S6,[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["onMouseDownBefore"]={[2]=_C_SE,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["centre"]={[2]=_C_SC,},["onReady"]={_C_SZ,},["disposeAll"]={[3]=_C_L3,}}_C_Sb={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["shadowSize"]={[4]=_C_Fs},["height"]={[2]=_C_SH,[3]=_C_LI,[4]=_C_Fr},["width"]={[2]=_C_SG,[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[2]=_C_SI,[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}function _C_Sc(_,k,n,v)if _C_SX(n)then _C_D(_,k,"Button",n)end v[k]=n end _C_Sd=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["maxHeight"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["specialMouseTimes"]=_C_9x,["isDragging"]=_C_9x,["isCanvasHitTested"]=_C_9x,["dragX"]=_C_9x,["container"]=_C_9x,["offsetY"]=_C_9x,["maximiseButton"]=_C_9x,["dragY"]=_C_9x,["minHeight"]=_C_9x,["maxWidth"]=_C_9x,["isFocusDismissable"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["isResizingX"]=_C_9x,["width"]=_C_9x,["isResizingY"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["minWidth"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["okayButton"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["closeButton"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateThemeStyle"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["sendToBack"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateResize"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["onGlobalMouseDrag"]=_C_9x,["draw"]=_C_9x,["dispose"]=_C_9x,["onInterfaceLoaded"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTestEvent"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onMouseDownAfter"]=_C_9x,["initialiseCanvas"]=_C_9x,["close"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onMouseDownBefore"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["centre"]=_C_9x,["onReady"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_Se=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["maxHeight"]=_C_B2,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["specialMouseTimes"]=_C_Ax,["isDragging"]=_C_Cu,["isCanvasHitTested"]=_C_Cu,["dragX"]=_C_Gr,["container"]=_C_Gr,["offsetY"]=_C_B2,["maximiseButton"]=_C_Gr,["dragY"]=_C_Gr,["minHeight"]=_C_B2,["maxWidth"]=_C_B2,["isFocusDismissable"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isResizingX"]=_C_Cu,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isResizingY"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["minWidth"]=_C_B2,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["okayButton"]=_C_Sc,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["closeButton"]=_C_Gr,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["focus"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateThemeStyle"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["sendToBack"]=_C_7,["onReadyLoadInterface"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["animateResize"]=_C_7,["onChildOfChildAdded"]=_C_7,["onGlobalMouseDrag"]=_C_7,["draw"]=_C_7,["dispose"]=_C_7,["onInterfaceLoaded"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTestEvent"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["onMouseDownAfter"]=_C_7,["initialiseCanvas"]=_C_7,["close"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onMouseDownBefore"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["centre"]=_C_7,["onReady"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_Sf={[AlertWindow]=1,[Window]=1,[Container]=1,[View]=1}_C_Sg={"Window","Container","View"}_C_Si={["eventType"]=loadstring("return \"interface_file_association_registered\";\
\
\9\
"),}_C_Sj={["eventType"]={_C_Ai,"String"},}_C_Sk={["eventClasses"]=loadstring([[return {}

	
]])}_C_Sl={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_Sm=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_Sn=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_So={[FileAssociationRegisteredInterfaceEvent]=1,[_C_4K]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_Sp={"InterfaceEvent","Event"}_C_Sq={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}function _C_Ss(v)local j=_C_L[v]return not(j and j[FileAssociation])end  _C_Sr={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["fileAssociation"]={_C_Ss,"FileAssociation"},}function _C_St(self,super)return function(_C_self_passed,fileAssociation)if _C_Ss(fileAssociation)then _C_F(self,"fileAssociation","initialise","FileAssociation",fileAssociation)end 
		self.fileAssociation = fileAssociation
	end end
_C_Su={["initialise"]={_C_St,},["makeRelative"]={[3]=_C_Cs,}}function _C_Sv(_,k,n,v)if _C_Ss(n)then _C_D(_,k,"FileAssociation",n)end v[k]=n end _C_Sw=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["fileAssociation"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_Sx=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["fileAssociation"]=_C_Sv,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_Sy={[FileAssociationRegisteredInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_Sz={"InterfaceEvent","Event"}_C_T1={}_C_T2={}_C_T3={[WindowButton]=1,[_C_4M]=1,[View]=1,[_C_3N]=1}_C_T4={"View"}_C_T5={["width"]=loadstring("return 9\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 9\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_T7(v)local j=_C_L[v]return not(j and j[Window])end  _C_T6={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["window"]={_C_T7,"Window"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_T8(self,super)return function(_C_self_passed,...)
		super( ... )
		
		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		if self.onMouseUp then self:event( UpMouseEvent, self.onMouseUp ) end
	end end
function _C_T9(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or "default" ) or "disabled"
	end end
function _C_TA(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled and self:hitTestEvent( event ) then
				return self.eventManager:handleEvent( event )
			end
		end
	end end
function _C_TB(self,super)return function(_C_self_passed)
		local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas

		local diameter = theme:value( "diameter" )
		local circleMask = CircleMask( 1 + math.ceil( ( width - diameter ) / 2 ), 1 + math.ceil( ( height - diameter ) / 2 ), diameter )
		canvas:fill( theme:value( "fillColour" ), circleMask )
		canvas:outline( theme:value( "outlineColour" ), circleMask, theme:value( "outlineThickness" ) )
	end end
function _C_TC(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end end
_C_TD={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["hitTestEvent"]={[2]=_C_FI,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_T8,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["onGlobalMouseUp"]={_C_TA,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["animateResize"]={[2]=_C_FW,},["onDraw"]={_C_TB,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_T9,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["dispose"]={[2]=_C_FK,},["onMouseDown"]={_C_TC,},["hitTest"]={[2]=_C_FX,}}function _C_TE(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_TF(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end _C_TG={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_TE},["isFocused"]={[2]=_C_Fi},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_TF},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}function _C_TH(_,k,n,v)if _C_T7(n)then _C_D(_,k,"Window",n)end v[k]=n end _C_TI=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["window"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["hitTestEvent"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["dispose"]=_C_9x,["onMouseDown"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_TJ=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["window"]=_C_TH,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["hitTestEvent"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["dispose"]=_C_7,["onMouseDown"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_TK={[WindowButton]=1,[View]=1}_C_TL={"View"}_C_TN={}_C_TO={}_C_TP={[MaximiseWindowButton]=1,[_C_4O]=1,[WindowButton]=1,[_C_4M]=1,[View]=1,[_C_3N]=1}_C_TQ={"WindowButton","View"}_C_TR={["width"]=loadstring("return 9\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 9\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_TS={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["window"]={_C_T7,"Window"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_TT(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseUp","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseUp","Event.phases",phase)end 	  
		if self.window then
			self.window:close()
			return true
		end
	end end
_C_TU={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onMouseDown"]={[2]=_C_TC,},["clearFocus"]={[3]=_C_FP,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={[2]=_C_T8,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["onMouseUp"]={_C_TT,},["addFocus"]={[3]=_C_FQ,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["onDraw"]={[2]=_C_TB,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_T9,},["animateResize"]={[3]=_C_FW,},["startDragDrop"]={[3]=_C_FR,},["dispose"]={[3]=_C_FK,},["hitTestEvent"]={[3]=_C_FI,},["onGlobalMouseUp"]={[2]=_C_TA,},["hitTest"]={[3]=_C_FX,}}_C_TV={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_TE},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["width"]={[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_TF},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_TW=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["window"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onMouseDown"]=_C_9x,["clearFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onMouseUp"]=_C_9x,["addFocus"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animateResize"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_TX=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["window"]=_C_TH,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onMouseDown"]=_C_7,["clearFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onMouseUp"]=_C_7,["addFocus"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animateResize"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["onGlobalMouseUp"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_TY={[MaximiseWindowButton]=1,[WindowButton]=1,[View]=1}_C_TZ={"WindowButton","View"}_C_Tb={}_C_Tc={}_C_Td={[CloseWindowButton]=1,[_C_4Q]=1,[WindowButton]=1,[_C_4M]=1,[View]=1,[_C_3N]=1}_C_Te={"WindowButton","View"}_C_Tf={["width"]=loadstring("return 9\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 9\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Tg={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["window"]={_C_T7,"Window"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_Th(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseUp","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseUp","Event.phases",phase)end 	   
		if self.window then
			self.window:close()
			return true
		end
	end end
_C_Ti={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onMouseDown"]={[2]=_C_TC,},["clearFocus"]={[3]=_C_FP,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={[2]=_C_T8,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["onMouseUp"]={_C_Th,},["addFocus"]={[3]=_C_FQ,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["onDraw"]={[2]=_C_TB,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_T9,},["animateResize"]={[3]=_C_FW,},["startDragDrop"]={[3]=_C_FR,},["dispose"]={[3]=_C_FK,},["hitTestEvent"]={[3]=_C_FI,},["onGlobalMouseUp"]={[2]=_C_TA,},["hitTest"]={[3]=_C_FX,}}_C_Tj={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_TE},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["width"]={[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_TF},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_Tk=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["window"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onMouseDown"]=_C_9x,["clearFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onMouseUp"]=_C_9x,["addFocus"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animateResize"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Tl=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["window"]=_C_TH,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onMouseDown"]=_C_7,["clearFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onMouseUp"]=_C_7,["addFocus"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animateResize"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["onGlobalMouseUp"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Tm={[CloseWindowButton]=1,[WindowButton]=1,[View]=1}_C_Tn={"WindowButton","View"}_C_Tp={}_C_Tq={}_C_Tr={[Program]=1,[_C_7v]=1}_C_Ts={["isRunning"]=loadstring("return false \
\
\9\
"),["state"]=loadstring("return states.UNINTIALISED\
\9\
"),["hadFirstUpdate"]=loadstring("return false\
\9\
"),}local function _C_Tu(v)return v~=nil and type(v)~="thread"end function _C_Tv(v)if v==nil then return false end local j=_C_L[v]return not(j and j[ProgramManager])end  function _C_Tw(v)local j=_C_L[v]return not(j and j[ProgramEnvironment])end  function _C_Tx(v)if v==nil then return false end local j=_C_L[v]return not(j and j[ProgramView])end  function _C_Ty(v)if v==nil then return false end local j=_C_L[v]return not(j and j[QuartzProxy])end  function _C_Tz(v)return not _C_AL[v] end _C_Tt={["coroutine"]={_C_Tu,"Thread (allowsNil)"},["programManager"]={_C_Tv,"ProgramManager (allowsNil)"},["arguments"]={_C_An,"Table"},["eventQueue"]={_C_An,"Table"},["environment"]={_C_Tw,"ProgramEnvironment"},["programView"]={_C_Tx,"ProgramView (allowsNil)"},["icon"]={_C_BF,"Icon"},["status"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Ai,"String"},["index"]={_C_CU,"Number (allowsNil)"},["isRunning"]={_C_Cp,"Boolean"},["hadFirstUpdate"]={_C_Cp,"Boolean"},["title"]={_C_Ai,"String"},["quartzProxy"]={_C_Ty,"QuartzProxy (allowsNil)"},["state"]={_C_Tz,"Program.states"},["bootPath"]={_C_Ai,"String"},["bundle"]={_C_Au,"Bundle"},["config"]={_C_An,"Table"},}function _C_U0(self,super)return function(_C_self_passed,bundle,...)if _C_Au(bundle)then _C_F(self,"bundle","initialise","Bundle",bundle)end 
        local arguments = { ... }
        self.bundle = bundle
        self.arguments = arguments
        self.eventManagerQueue = { arguments }
        self:initialiseEnvironment()
    end end
function _C_U1(self,super)return function(_C_self_passed)
        self.programView:focus( ISwitchableView )
    end end
function _C_U2(self,super)return function(_C_self_passed)
        self.environment = ProgramEnvironment( self )
    end end
function _C_U3(self,super)return function(_C_self_passed,...)
        table.insert( self.eventManagerQueue, { ... } )
    end end
function _C_U4(self,super)return function(_C_self_passed)
        self.state = states.RUNNING
        self.coroutine = coroutine.create( function()
            local func = loadfile( self.bootPath )
            setfenv( func, self.environment.environment )
            func( arguments )
        end )
    end end
function _C_U5(self,super)return function(_C_self_passed,redirectTerm)if redirectTerm==nil then redirectTerm=true  end if _C_Cp(redirectTerm)then _C_F(self,"redirectTerm","update","Boolean",redirectTerm)end 
        local eventQueue, programCoroutine, redirect = self.eventManagerQueue, self.coroutine
        local previousTarget
        if redirectTerm then
            previousTarget = term.redirect( self.programView.redirect )
        end
        local firstEvent = eventQueue[1]
        while self.state == states.RUNNING and firstEvent do
            local ok, data = coroutine.resume( programCoroutine, unpack( firstEvent ) )

            if coroutine.status( programCoroutine )== "dead" then
                if previousTarget then
                    term.redirect( previousTarget )
                end
                self.state = states.FINISHED
                self:close()
                log("Program died")
                log(data)
                return
            end

            if ok then
                -- TODO: not sure what filter does
                -- self.filter = data
            else
                -- TODO: error handling
                log("Program crashed")
                log(data)
                if previousTarget then
                    term.redirect( previousTarget )
                end
                -- self:throw( data )
                return
            end

            table.remove( eventQueue, 1 )
            firstEvent = eventQueue[1]
        end
        if previousTarget then
            term.redirect( previousTarget )
        end
        if not self.hadFirstUpdate then
            self.hadFirstUpdate = true
            self:focus()
        end
    end end
function _C_U6(self,super)return function(_C_self_passed,isForced)
        local state = self.state
        local willClose = isForced or state == states.FINISHED
        if not isForced then
            willClose = true
            -- TODO: probe the program and see if it can close (for 'are you sure you want to close...' dialouges)
        end

        if willClose then
            state = states.FINISHED
            -- self.programView:dispose()
            self.programManager:onProgramClosed( self )
            self.application.event:handleEvent( ProgramClosedInterfaceEvent( self ) )
        end
    end end
_C_U7={["initialise"]={_C_U0,},["focus"]={_C_U1,},["queueEvent"]={_C_U3,},["close"]={_C_U6,},["run"]={_C_U4,},["update"]={_C_U5,},["initialiseEnvironment"]={_C_U2,}}function _C_U8(self,super)return function(_C_self_passed)
        if self.environment then return self.environment end

        -- Create the environment as it doesn't exist yet
        -- TODO: clean environment
        self.environment = setmetatable( {}, { __index = _G } )
        return self.environment
    end end function _C_U9(self,super)return function(_C_self_passed,bundle)
        self.bundle = bundle
        local config = bundle.config
        local bootPath = config[configKeys.BOOT_PATH]
        local iconPath = config[configKeys.ICON_PATH]
        local identifier = config[configKeys.IDENTIFIER]
        if not bootPath then
            ConfigurationFatalProgramException( "Program bundle configuration did not specify required key '" .. configKeys.BOOT_PATH .. "'." )
        end
        if not identifier then
            ConfigurationFatalProgramException( "Program bundle configuration did not specify required key '" .. configKeys.IDENTIFIER .. "'." )
        end
        self.bootPath = FileSystemItem.static:tidy( bundle.path .. "/" .. config[configKeys.BOOT_PATH] )
        self.identifier = identifier
        self.icon = Icon.static:fromPathInBundle( iconPath, bundle )
        self.title = config.title or bundle.name
        self.config = config
    end end function _C_UA(self,super)return function(_C_self_passed,title)
        self.title = title
        self.application.container.topBar.event:handleEvent( ProgramInformationChangedInterfaceEvent( self ) )    
    end end function _C_UB(self,super)return function(_C_self_passed,status)
        self.status = status
        self.application.container.topBar.event:handleEvent( ProgramInformationChangedInterfaceEvent( self ) )    
    end end _C_UC={set={["bundle"]={_C_U9},["status"]={_C_UB},["title"]={_C_UA}},get={["environment"]={_C_U8}}}function _C_UD(_,k,n,v)if _C_Tu(n)then _C_D(_,k,"Thread (allowsNil)",n)end v[k]=n end function _C_UE(_,k,n,v)if _C_Tv(n)then _C_D(_,k,"ProgramManager (allowsNil)",n)end v[k]=n end function _C_UF(_,k,n,v)if _C_Tw(n)then _C_D(_,k,"ProgramEnvironment",n)end v[k]=n end function _C_UG(_,k,n,v)if _C_Tx(n)then _C_D(_,k,"ProgramView (allowsNil)",n)end v[k]=n end function _C_UH(_,k,n,v)if _C_BF(n)then _C_D(_,k,"Icon",n)end v[k]=n end function _C_UI(_,k,n,v)if _C_Ty(n)then _C_D(_,k,"QuartzProxy (allowsNil)",n)end v[k]=n end function _C_UJ(_,k,n,v)if _C_Tz(n)then _C_D(_,k,"Program.states",n)end v[k]=n end _C_UK=setmetatable({["coroutine"]=_C_9x,["programManager"]=_C_9x,["arguments"]=_C_9x,["eventQueue"]=_C_9x,["environment"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Tw(v)then _C_H(_,k,"ProgramEnvironment",v)end return v end end,["programView"]=_C_9x,["icon"]=_C_9x,["status"]=_C_9x,["identifier"]=_C_9x,["index"]=_C_9x,["isRunning"]=_C_9x,["hadFirstUpdate"]=_C_9x,["title"]=_C_9x,["quartzProxy"]=_C_9x,["state"]=_C_9x,["bootPath"]=_C_9x,["bundle"]=_C_9x,["config"]=_C_9x,["initialise"]=_C_9x,["focus"]=_C_9x,["queueEvent"]=_C_9x,["close"]=_C_9x,["run"]=_C_9x,["update"]=_C_9x,["initialiseEnvironment"]=_C_9x},_C_9z)_C_UL=setmetatable({["coroutine"]=_C_UD,["programManager"]=_C_UE,["arguments"]=_C_Ax,["eventQueue"]=_C_Ax,["environment"]=_C_UF,["programView"]=_C_UG,["icon"]=_C_UH,["status"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["identifier"]=_C_B1,["index"]=_C_LL,["isRunning"]=_C_Cu,["hadFirstUpdate"]=_C_Cu,["title"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["quartzProxy"]=_C_UI,["state"]=_C_UJ,["bootPath"]=_C_B1,["bundle"]=function(_,k,n,v,w,s,d,l)if _C_Au(n)then _C_D(_,k,"Bundle",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["config"]=_C_Ax,["initialise"]=_C_7,["focus"]=_C_7,["queueEvent"]=_C_7,["close"]=_C_7,["run"]=_C_7,["update"]=_C_7,["initialiseEnvironment"]=_C_7},_C_9z)_C_UM={[Program]=1}_C_UO={}_C_UP={}_C_UQ={[SilicaProgram]=1,[_C_4S]=1,[Program]=1,[_C_7v]=1}_C_UR={"Program"}_C_US={["isRunning"]=loadstring("return false \
\
\9\
"),["state"]=loadstring("return states.UNINTIALISED\
\9\
"),["hadFirstUpdate"]=loadstring("return false\
\9\
"),}_C_UT={["coroutine"]={_C_Tu,"Thread (allowsNil)"},["programManager"]={_C_Tv,"ProgramManager (allowsNil)"},["arguments"]={_C_An,"Table"},["eventQueue"]={_C_An,"Table"},["environment"]={_C_Tw,"ProgramEnvironment"},["programView"]={_C_Tx,"ProgramView (allowsNil)"},["icon"]={_C_BF,"Icon"},["status"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Ai,"String"},["index"]={_C_CU,"Number (allowsNil)"},["isRunning"]={_C_Cp,"Boolean"},["hadFirstUpdate"]={_C_Cp,"Boolean"},["title"]={_C_Ai,"String"},["quartzProxy"]={_C_Ty,"QuartzProxy (allowsNil)"},["state"]={_C_Tz,"Program.states"},["bootPath"]={_C_Ai,"String"},["bundle"]={_C_Au,"Bundle"},["config"]={_C_An,"Table"},}function _C_UU(self,super)return function(_C_self_passed)
        self.environment = SilicaProgramEnvironment( self )
    end end
function _C_UV(self,super)return function(_C_self_passed)
        super( false )
        local silicaApplication = self.quartzProxy.silicaApplication
        if silicaApplication then
            silicaApplication:update()
        end
    end end
function _C_UW(self,super)return function(_C_self_passed)
        super()
        local environment = self.environment.environment
        local silicafunction = loadfile( "system/OldSilica.resourcepkg", "Silica Injection" )
        setfenv( silicafunction, environment )
        silicafunction()
    end end
_C_UX={["initialiseEnvironment"]={_C_UU,_C_U2,},["focus"]={[2]=_C_U1,},["queueEvent"]={[2]=_C_U3,},["close"]={[2]=_C_U6,},["run"]={_C_UW,_C_U4,},["update"]={_C_UV,_C_U5,},["initialise"]={[2]=_C_U0,}}_C_UY={set={["bundle"]={[2]=_C_U9},["status"]={[2]=_C_UB},["title"]={[2]=_C_UA}},get={["environment"]={[2]=_C_U8}}}_C_UZ=setmetatable({["coroutine"]=_C_9x,["programManager"]=_C_9x,["arguments"]=_C_9x,["eventQueue"]=_C_9x,["environment"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Tw(v)then _C_H(_,k,"ProgramEnvironment",v)end return v end end,["programView"]=_C_9x,["icon"]=_C_9x,["status"]=_C_9x,["identifier"]=_C_9x,["index"]=_C_9x,["isRunning"]=_C_9x,["hadFirstUpdate"]=_C_9x,["title"]=_C_9x,["quartzProxy"]=_C_9x,["state"]=_C_9x,["bootPath"]=_C_9x,["bundle"]=_C_9x,["config"]=_C_9x,["initialiseEnvironment"]=_C_9x,["focus"]=_C_9x,["queueEvent"]=_C_9x,["close"]=_C_9x,["run"]=_C_9x,["update"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_Ua=setmetatable({["coroutine"]=_C_UD,["programManager"]=_C_UE,["arguments"]=_C_Ax,["eventQueue"]=_C_Ax,["environment"]=_C_UF,["programView"]=_C_UG,["icon"]=_C_UH,["status"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["identifier"]=_C_B1,["index"]=_C_LL,["isRunning"]=_C_Cu,["hadFirstUpdate"]=_C_Cu,["title"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["quartzProxy"]=_C_UI,["state"]=_C_UJ,["bootPath"]=_C_B1,["bundle"]=function(_,k,n,v,w,s,d,l)if _C_Au(n)then _C_D(_,k,"Bundle",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["config"]=_C_Ax,["initialiseEnvironment"]=_C_7,["focus"]=_C_7,["queueEvent"]=_C_7,["close"]=_C_7,["run"]=_C_7,["update"]=_C_7,["initialise"]=_C_7},_C_9z)_C_Ub={[SilicaProgram]=1,[Program]=1}_C_Uc={"Program"}_C_Ue={["eventType"]=loadstring("return \"interface_action\";\
\9\
\9\
"),}_C_Uf={["eventType"]={_C_Ai,"String"},}_C_Ug={["eventClasses"]=loadstring([[return {}

	
]])}_C_Uh={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_Ui=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_Uj=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_Uk={[ActionInterfaceEvent]=1,[_C_4U]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_Ul={"InterfaceEvent","Event"}_C_Um={["isSentToChildren"]=loadstring("return false\
\
\9\
\
\
\
\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_Un={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["view"]={_C_Cr,"View"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["originalEvent"]={_C_L8,"Event (allowsNil)"},}function _C_Uo(self,super)return function(_C_self_passed,view,originalEvent)if _C_Cr(view)then _C_F(self,"view","initialise","View",view)end if _C_L8(originalEvent)then _C_F(self,"originalEvent","initialise","Event (allowsNil)",originalEvent)end 
		self.view = view
		self.originalEvent = originalEvent
	end end
_C_Up={["initialise"]={_C_Uo,},["makeRelative"]={[3]=_C_Cs,}}function _C_Uq(_,k,n,v)if _C_L8(n)then _C_D(_,k,"Event (allowsNil)",n)end v[k]=n end _C_Ur=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["view"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["originalEvent"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_Us=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["view"]=_C_Cw,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["originalEvent"]=_C_Uq,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_Ut={[ActionInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_Uu={"InterfaceEvent","Event"}_C_Uw={}_C_Ux={}_C_Uy={[SymbolSegmentButton]=1,[_C_4W]=1,[SegmentButton]=1,[_C_3Z]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_Uz={"SegmentButton","Button","View"}_C_V0={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_V1={["symbol"]={_C_OJ,"Symbol"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["symbolName"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}function _C_V2(self,super)return function(_C_self_passed)
		super()
		local width, height, theme, sPressed = self.width, self.height, self.theme, self.isPressed

		-- get all the shadow size details so we can adjust the compression as needed
		local defaultShadowSize = theme:value( "shadowSize", "default" )
		local shadowPressedSize = theme:value( "shadowSize", "pressed" )
		local shadowSize = theme:value( "shadowSize" )
		local shadowOffset = defaultShadowSize - shadowSize
		local shadowPressedOffset = defaultShadowSize - shadowPressedSize
		local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )
		local symbol = self.symbol
		self.canvas:fill( theme:value( "symbolColour" ), SymbolMask( theme:value( "leftMargin" ) + shadowX + 1, 1 + theme:value( "topMargin" ) + shadowOffset, symbol ) )
	end end
function _C_V3(self,super)return function(_C_self_passed)
		if self.isAutosized then
			local theme = self.theme
			local symbol = self.symbol
			local defaultShadowSize = theme:value( "shadowSize", "default" )
			local shadowSize = theme:value( "shadowSize", "pressed" )
			local shadowOffset = defaultShadowSize - shadowSize
			local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )
			self.width = symbol.width + theme:value( "leftMargin" ) + theme:value( "rightMargin" ) + shadowX
			self.height = symbol.height + theme:value( "topMargin" ) + theme:value( "bottomMargin" ) + shadowOffset
		end
		self.needsAutosize = false
	end end
_C_V4={["getCoordinates"]={[4]=_C_F3,},["focus"]={[4]=_C_F5,},["initialiseCanvas"]={[4]=_C_F6,},["unfocus"]={[4]=_C_F7,},["getCoordinatesTo"]={[4]=_C_F8,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["clearFocus"]={[4]=_C_FP,},["draw"]={[4]=_C_F9,},["addFocus"]={[4]=_C_FQ,},["hitTestEvent"]={[4]=_C_FI,},["animate"]={[4]=_C_FV,},["onSiblingOrParentChanged"]={[2]=_C_KR,},["update"]={[3]=_C_K7,[4]=_C_FC,},["onKeyUp"]={[3]=_C_K8,},["initialise"]={[2]=_C_KQ,[3]=_C_K0,[4]=_C_FG,},["onMouseDown"]={[3]=_C_K1,},["onGlobalMouseUp"]={[3]=_C_K2,},["animateResize"]={[4]=_C_FW,},["onKeyDown"]={[3]=_C_K3,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["onDraw"]={_C_V2,_C_KT,_C_K4,_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[4]=_C_FO,},["updateThemeStyle"]={[3]=_C_K5,},["dispose"]={[4]=_C_FK,},["startDragDrop"]={[4]=_C_FR,},["siblingsOfType"]={[4]=_C_FH,},["autosize"]={_C_V3,[3]=_C_K6,},["animateMove"]={[4]=_C_FD,},["hitTest"]={[4]=_C_FX,}}function _C_V5(self,super)return function(_C_self_passed,symbolName)
		self.symbol = Symbol.static:fromName( symbolName )
	end end function _C_V6(self,super)return function(_C_self_passed,symbol)
		self.symbol = symbol
		self.needsAutosize = true
		self.raw.symbolName = symbol.symbolName
	end end _C_V7={set={["x"]={[4]=_C_Fq},["y"]={[4]=_C_Fh},["leftPin"]={[4]=_C_Fm},["isPressed"]={[3]=_C_KC},["isFocused"]={[3]=_C_KA,[4]=_C_Fi},["symbol"]={_C_V6},["symbolName"]={_C_V5},["width"]={[2]=_C_KV,[4]=_C_Fg},["shadowSize"]={[4]=_C_Fs},["height"]={[4]=_C_Fr},["text"]={[3]=_C_KD},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_KB},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_V8=setmetatable({["symbol"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["symbolName"]=_C_9x,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["clearFocus"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["hitTestEvent"]=_C_9x,["animate"]=_C_9x,["onSiblingOrParentChanged"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animateResize"]=_C_9x,["onKeyDown"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["dispose"]=_C_9x,["startDragDrop"]=_C_9x,["siblingsOfType"]=_C_9x,["autosize"]=_C_9x,["animateMove"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_V9=setmetatable({["symbol"]=function(_,k,n,v,w,s,d,l)if _C_OJ(n)then _C_D(_,k,"Symbol",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["symbolName"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["clearFocus"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["hitTestEvent"]=_C_7,["animate"]=_C_7,["onSiblingOrParentChanged"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animateResize"]=_C_7,["onKeyDown"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["dispose"]=_C_7,["startDragDrop"]=_C_7,["siblingsOfType"]=_C_7,["autosize"]=_C_7,["animateMove"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_VA={[SymbolSegmentButton]=1,[SegmentButton]=1,[Button]=1,[View]=1}_C_VB={"SegmentButton","Button","View"}setmetatable(IDragDropDestination,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_4X end})_C_VD={}_C_VE={}function _C_VF(self,super)return function(_C_self_passed,folder,isOpen)if _C_PP(folder)then _C_F(self,"folder","fromFolder","Folder",folder)end if isOpen==nil then isOpen=false  end if _C_Cp(isOpen)then _C_F(self,"isOpen","fromFolder","Boolean",isOpen)end 
		local files = folder.files
		local filesCount = #files
		if filesCount > 0 then
			-- if the folder has any *files* (i.e. not folders) directly within it then we'll use a custom icon
			if not folderBackIcon then
				folderBackIcon = Icon.static:fromName( "folder-back" )
			end
			if not folderFrontIcon and not isOpen then
				folderFrontIcon = Icon.static:fromName( "folder-front" )
				folderFrontIconImages = folderFrontIcon.images
			elseif not folderFrontOpenIcon and isOpen then
				folderFrontOpenIcon = Icon.static:fromName( "folder-front-open" )
				folderFrontOpenIconImages = folderFrontOpenIcon.images
			end
			local images = {}
			local thumbnailCount = math.min( filesCount, VISIBLE_THUMBNAIL_COUNT )
			local icons = {}
			for n = 1, thumbnailCount do
				icons[n] = files[n].icon
			end

			local stepX, stepY = 4, 3
			local offsetMultiplier = ( VISIBLE_THUMBNAIL_COUNT - thumbnailCount ) / 2
			local offsetX, offsetY = math.floor( stepX * offsetMultiplier + 0.5 ), math.floor( stepY * offsetMultiplier + 0.5 )
			for i, _image in ipairs( folderBackIcon.images ) do
				local image = _image:copy()
				local width, height = image.width, image.height
				local size = math.max( width, height )
				if size >= MINIMUM_SIZE then
					local thumbnailSize = math.floor( size * THUMBNAIL_SCALE + 0.5 )
					for n = 1, thumbnailCount do
						local icon = icons[n]
						local iconPixels, iconWidth, iconHeight = icon:getScaledPixels( thumbnailSize )
						image:appendPixels( iconPixels, iconWidth, iconHeight, 3 + offsetX + (n - 1) * stepX, 1 + offsetY + (n - 1) * stepY )
					end
				end
				if isOpen then
					image:appendImage( folderFrontOpenIconImages[i], 1, 1 )
				else
					image:appendImage( folderFrontIconImages[i], 1, 1 )
				end
				images[i] = image
			end

			return FolderIcon( images, folder )
		else
			if isOpen then
				if not folderOpenIcon then
					folderOpenIcon = Icon.static:fromName( "folder-open" )
				end
				return folderOpenIcon
			else
				if not folderIcon then
					folderIcon = Icon.static:fromName( "folder" )
				end
				return folderIcon
			end
		end
	end end
_C_VG={["fromIcon"]={[2]=_C_HY,},["fromResource"]={[3]=_C_H0,},["fromPathInBundle"]={[3]=_C_H2,},["blank"]={[3]=_C_H3,},["fromPixels"]={[3]=_C_HA,},["fromFolder"]={_C_VF,},["fromFile"]={[2]=_C_HZ,[3]=_C_H4,},["fromPath"]={[3]=_C_H6,},["fromPaintFormat"]={[3]=_C_H7,},["fromUniversalCompressedGraphics"]={[3]=_C_H8,},["fromNameInBundle"]={[2]=_C_Ha,[3]=_C_H9,},["isMIME"]={[2]=_C_Hb,[3]=_C_Gz,},["fromName"]={[2]=_C_Hc,[3]=_C_HB,}}_C_VH={[FolderIcon]=1,[_C_4Z]=1,[Icon]=1,[_C_3G]=1,[Image]=1,[_C_8X]=1}_C_VI={"Icon","Image"}_C_VJ={["scaledCache"]=loadstring("return {}\
\9\
"),}_C_VK={["scaledCache"]={_C_An,"Table"},["folder"]={_C_PP,"Folder"},["pixels"]={_C_An,"Table"},["contents"]={nil,"Any (allowsNil)"},["width"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["images"]={_C_An,"Table"},}function _C_VL(self,super)return function(_C_self_passed,images,folder)if _C_An(images)then _C_F(self,"images","initialise","Table",images)end if _C_PP(folder)then _C_F(self,"folder","initialise","Folder",folder)end 
		self.folder = folde
		super( images )
	end end
_C_VM={["initialise"]={_C_VL,_C_Hi,_C_HG,},["toPaintFormat"]={[3]=_C_HH,},["getScaledPixels"]={[2]=_C_Hj,[3]=_C_HI,},["copy"]={[3]=_C_HJ,},["appendImage"]={[3]=_C_HK,},["appendPixels"]={[3]=_C_HM,},["toUniversalCompressedGraphics"]={[3]=_C_HN,},["squareCentred"]={[3]=_C_HO,}}_C_VN={set={["pixels"]={[2]=_C_Hm,[3]=_C_HQ}}}_C_VO=setmetatable({["scaledCache"]=_C_9x,["width"]=_C_9x,["pixels"]=_C_9x,["contents"]=_C_9x,["folder"]=_C_9x,["height"]=_C_9x,["images"]=_C_9x,["initialise"]=_C_9x,["toPaintFormat"]=_C_9x,["getScaledPixels"]=_C_9x,["copy"]=_C_9x,["appendImage"]=_C_9x,["appendPixels"]=_C_9x,["toUniversalCompressedGraphics"]=_C_9x,["squareCentred"]=_C_9x},_C_9z)_C_VP=setmetatable({["scaledCache"]=_C_Ax,["width"]=_C_B2,["pixels"]=function(_,k,n,v,w,s,d,l)if _C_An(n)then _C_D(_,k,"Table",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["contents"]=_C_Gr,["folder"]=_C_Pq,["height"]=_C_B2,["images"]=_C_Ax,["initialise"]=_C_7,["toPaintFormat"]=_C_7,["getScaledPixels"]=_C_7,["copy"]=_C_7,["appendImage"]=_C_7,["appendPixels"]=_C_7,["toUniversalCompressedGraphics"]=_C_7,["squareCentred"]=_C_7},_C_9z)_C_VQ={[FolderIcon]=1,[Icon]=1,[Image]=1}_C_VR={"Icon","Image"}_C_VT={}_C_VU={}_C_VV={[LoadingClassException]=1,[_C_4b]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_VW={"ClassException","FatalException","Exception"}_C_VX={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_VY={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_VZ(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Error occured during class loading: " .. message
		super( message, level )
	end end
_C_Va={["initialise"]={_C_VZ,[4]=_C_ED,}}_C_Vb=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_Vc=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_Vd={[LoadingClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_Ve={"ClassException","FatalException","Exception"}_C_Vg={}_C_Vh={}_C_Vi={[Graphics]=1,[_C_4f]=1}_C_Vj={}_C_Vk={}_C_Vl={[Graphics]=1}_C_Vn={}_C_Vo={}_C_Vp={[SeparatorView]=1,[_C_4h]=1,[View]=1,[_C_3N]=1}_C_Vq={"View"}_C_Vr={["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 1\
\
\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["width"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Vs={["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["theme"]={_C_Dc,"ThemeOutlet"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["height"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["y"]={_C_Ar,"Number"},["isFocused"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["parsedPins"]={_C_An,"Table"},}function _C_Vt(self,super)return function(_C_self_passed)
		local width, height, theme, canvas = self.width, self.height, self.theme
		self.canvas:fill( theme:value( "separatorColour" ), theme:value( "separatorIsDashed" ) and SeparatorMask( 1, 1, width, height ) or RectangleMask( 1, 1, width, height ) )
	end end
_C_Vu={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={[2]=_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["onDraw"]={_C_Vt,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["startDragDrop"]={[2]=_C_FR,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["dispose"]={[2]=_C_FK,},["hitTest"]={[2]=_C_FX,}}_C_Vv={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_Vw=setmetatable({["cursor"]=_C_9x,["x"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["needsDraw"]=_C_9x,["topPin"]=_C_9x,["width"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["parent"]=_C_9x,["specialMouseTimes"]=_C_9x,["canvas"]=_C_9x,["theme"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["identifier"]=_C_9x,["animations"]=_C_9x,["isCanvasHitTested"]=_C_9x,["eventManager"]=_C_9x,["height"]=_C_9x,["interfaceProperties"]=_C_9x,["y"]=_C_9x,["isFocused"]=_C_9x,["isSingleFocusOnly"]=_C_9x,["isFocusDismissable"]=_C_9x,["isMouseInView"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["leftPin"]=_C_9x,["rightPin"]=_C_9x,["parsedPins"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["dispose"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Vx=setmetatable({["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["specialMouseTimes"]=_C_Ax,["canvas"]=_C_Fx,["theme"]=_C_Do,["shadowMask"]=_C_Fy,["identifier"]=_C_B0,["animations"]=_C_Ax,["isCanvasHitTested"]=_C_Cu,["eventManager"]=_C_Dm,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isSingleFocusOnly"]=_C_Cu,["isFocusDismissable"]=_C_Cu,["isMouseInView"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parsedPins"]=_C_Ax,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["dispose"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Vy={[SeparatorView]=1,[View]=1}_C_Vz={"View"}_C_W1={}_C_W2={}_C_W3={[MenuItem]=1,[_C_4v]=1,[View]=1,[_C_3N]=1}_C_W4={"View"}_C_W5={["width"]=loadstring("return 40\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["height"]=loadstring("return 12\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_W6={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["shortcut"]={nil,"Any (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}function _C_W7(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( DownMouseEvent, self.onMouseDown )
		self:event( KeyboardShortcutEvent, self.onKeyboardShortcut )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		self:event( ThemeChangedInterfaceEvent, self.updateHeight )
		self:updateHeight()
	end end
function _C_W8(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or "default" ) or "disabled"
	end end
function _C_W9(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled and self:hitTestEvent( event ) then
				if self.eventManager:handleEvent( ActionInterfaceEvent( self ) ) then return true end
				self.parent:close()
				local result = self.eventManager:handleEvent( event )
				return ( result ~= nil and result or true )
			end
			return true
		end
	end end
function _C_WB(v)local j=_C_L[v]return not(j and j[KeyboardShortcutEvent])end  function _C_WA(self,super)return function(_C_self_passed,event,phase)if _C_WB(event)then _C_F(self,"event","onKeyboardShortcut","KeyboardShortcutEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onKeyboardShortcut","Event.phases",phase)end 
		if self.isEnabled then
			local shortcut = self.shortcut
			if shortcut and shortcut:matchesEvent( event ) then
				local parent = self.parent
				local owner = parent.owner
				if owner:typeOf( MenuBarItem ) then owner:flash() end
				if self.eventManager:handleEvent( ActionInterfaceEvent( self ) ) then return true end
				parent:close()
				return true
			end
		end
	end end
function _C_WC(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end end
function _C_WE(v)if v==nil then return false end local j=_C_L[v]return not(j and j[ThemeChangedInterfaceEvent])end  function _C_WD(self,super)return function(_C_self_passed,event,phase)if _C_WE(event)then _C_F(self,"event","updateHeight","ThemeChangedInterfaceEvent (allowsNil)",event)end if _C_L9(phase)then _C_F(self,"phase","updateHeight","Event.phases (allowsNil)",phase)end 
		local theme = self.theme
		self.height = theme:value( "font" ).height + theme:value( "topMargin") + theme:value( "bottomMargin")
	end end
function _C_WF(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, font = self.width, self.height, self.theme, self.canvas

		canvas:fill( theme:value( "fillColour" ) )

		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
		local shortcut = self.shortcut
		if shortcut then
			canvas:fill( theme:value( "shortcutColour" ),  TextMask( leftMargin + 1, topMargin + 1, width - leftMargin - rightMargin, height - topMargin - bottomMargin, shortcut:symbols(), theme:value( "shortcutFont" ), Font.alignments.RIGHT ) )
		end
		canvas:fill( theme:value( "textColour" ),  TextMask( leftMargin + 1, topMargin + 1, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.text, theme:value( "font" ) ) )
	end end
function _C_WG(self,super)return function(_C_self_passed)
		local text = self.text
		local shortcut = self.shortcut
		local symbols = shortcut and shortcut:symbols()
		local theme = self.theme
		local textWidth = theme:value( "font" ):getWidth( text )
		local shortcutWidth = symbols and theme:value( "shortcutFont" ):getWidth( symbols ) or 0
		local width = textWidth + theme:value( "leftMargin" ) + theme:value( "rightMargin" ) + ( shortcutWidth ~= 0 and shortcutWidth + theme:value( "shortcutMargin") or 0 )
		self.width = width
		local parent = self.parent
		if parent then
			parent.needsLayoutUpdate = true
		end
	end end
_C_WH={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["updateHeight"]={_C_WD,},["draw"]={[2]=_C_F9,},["onKeyboardShortcut"]={_C_WA,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_W7,_C_FG,},["onMouseDown"]={_C_WC,},["onGlobalMouseUp"]={_C_W9,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["onDraw"]={_C_WF,_C_FU,},["getPosition"]={[2]=_C_FN,},["updateText"]={_C_WG,},["updateThemeStyle"]={_C_W8,},["initialiseEventManager"]={[2]=_C_FO,},["startDragDrop"]={[2]=_C_FR,},["dispose"]={[2]=_C_FK,},["hitTestEvent"]={[2]=_C_FI,},["siblingsOfType"]={[2]=_C_FH,},["hitTest"]={[2]=_C_FX,}}function _C_WI(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_WJ(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_WK(self,super)return function(_C_self_passed,shortcut)
		if type( shortcut ) == "string" and #shortcut > 0 then
			self.shortcut = KeyboardShortcut.static:fromString( shortcut ) or false
		elseif not shortcut then
			self.shortcut = false
		end
		self:updateText()
	end end function _C_WL(self,super)return function(_C_self_passed,text)
		self.text = text
		self:updateText()
	end end _C_WM={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_WI},["isFocused"]={[2]=_C_Fi},["shortcut"]={_C_WK},["width"]={[2]=_C_Fg},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["text"]={_C_WL},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_WJ},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_WN=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["shortcut"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["updateHeight"]=_C_9x,["draw"]=_C_9x,["onKeyboardShortcut"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["updateText"]=_C_9x,["updateThemeStyle"]=_C_9x,["initialiseEventManager"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_WO=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["shortcut"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["updateHeight"]=_C_7,["draw"]=_C_7,["onKeyboardShortcut"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["updateText"]=_C_7,["updateThemeStyle"]=_C_7,["initialiseEventManager"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_WP={[MenuItem]=1,[View]=1}_C_WQ={"View"}_C_WS={}_C_WT={}_C_WU={[SeparatorMenuItem]=1,[_C_4j]=1,[MenuItem]=1,[_C_4v]=1,[View]=1,[_C_3N]=1}_C_WV={"MenuItem","View"}_C_WW={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 51\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\" \
\
\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 3\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_WX={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["shortcut"]={nil,"Any (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}function _C_WY(self,super)return function(_C_self_passed,...)
		super:super( ... ) -- by pass the normal menuitem's event connecting, we don't need to get any events
		self:event( ThemeChangedInterfaceEvent, self.updateSize )
		self:updateSize()
	end end
function _C_WZ(self,super)return function(_C_self_passed,event,phase)if _C_WE(event)then _C_F(self,"event","updateSize","ThemeChangedInterfaceEvent (allowsNil)",event)end if _C_L9(phase)then _C_F(self,"phase","updateSize","Event.phases (allowsNil)",phase)end 
		local theme = self.theme
		self.height = 1 + theme:value( "topMargin") + theme:value( "bottomMargin")
	end end
function _C_Wa(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, isPressed = self.width, self.height, self.theme, self.canvas
		canvas:fill( theme:value( "fillColour" ) )
		local leftMargin = theme:value( "leftMargin" )
		local separatorX, separatorY, separatorWidth = 1 + leftMargin, 1 + theme:value( "topMargin" ), width - leftMargin - theme:value( "rightMargin" )
		canvas:fill( theme:value( "separatorColour" ), theme:value( "separatorIsDashed" ) and SeparatorMask( separatorX, separatorY, separatorWidth, 1 ) or RectangleMask( separatorX, separatorY, separatorWidth, 1 ) )
	end end
_C_Wb={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["clearFocus"]={[3]=_C_FP,},["updateSize"]={_C_WZ,},["onKeyboardShortcut"]={[2]=_C_WA,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[3]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={_C_WY,_C_W7,_C_FG,},["onMouseDown"]={[2]=_C_WC,},["onGlobalMouseUp"]={[2]=_C_W9,},["animate"]={[3]=_C_FV,},["animateResize"]={[3]=_C_FW,},["initialiseEventManager"]={[3]=_C_FO,},["onDraw"]={_C_Wa,_C_WF,_C_FU,},["getPosition"]={[3]=_C_FN,},["updateText"]={[2]=_C_WG,},["updateThemeStyle"]={[2]=_C_W8,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["startDragDrop"]={[3]=_C_FR,},["hitTestEvent"]={[3]=_C_FI,},["siblingsOfType"]={[3]=_C_FH,},["updateHeight"]={[2]=_C_WD,},["hitTest"]={[3]=_C_FX,}}_C_Wc={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_WI},["isFocused"]={[3]=_C_Fi},["shortcut"]={[2]=_C_WK},["width"]={[3]=_C_Fg},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={[2]=_C_WL},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_WJ},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_Wd=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["shortcut"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["clearFocus"]=_C_9x,["updateSize"]=_C_9x,["onKeyboardShortcut"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["initialiseEventManager"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["updateText"]=_C_9x,["updateThemeStyle"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["updateHeight"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_We=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["shortcut"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["clearFocus"]=_C_7,["updateSize"]=_C_7,["onKeyboardShortcut"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["initialiseEventManager"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["updateText"]=_C_7,["updateThemeStyle"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["updateHeight"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Wf={[SeparatorMenuItem]=1,[MenuItem]=1,[View]=1}_C_Wg={"MenuItem","View"}_C_Wi={}_C_Wj={}_C_Wk={[SearchBox]=1,[_C_4l]=1,[TextBox]=1,[_C_3E]=1,[View]=1,[_C_3N]=1}_C_Wl={"TextBox","View"}_C_Wm={["cursor"]=loadstring("return TextCursor.static\
\
\9\
"),["width"]=loadstring("return 120\
\9\
"),["selectionVisible"]=loadstring("return false\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["cursorX"]=loadstring("return 0\
\9\
"),["scroll"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["placeholder"]=loadstring("return \"Search...\"\
\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["cursorFlashCounter"]=loadstring("return 0\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["cursorColour"]=loadstring("return Graphics.colours.BLACK;\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["maxScroll"]=loadstring("return 0\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["text"]=loadstring("return \"\"\
\9\
"),["isMasked"]=loadstring("return false \
\
\9\
"),["cursorPosition"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["selectionWidth"]=loadstring("return 0\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 15\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Wn={["selectionVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["placeholder"]={_C_Aq,"String (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["cursorColour"]={_C_GA,"Graphics.colours"},["cursorPosition"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["maxScroll"]={_C_Ar,"Number"},["x"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["scroll"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["animations"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["selectionPosition"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["isMasked"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["isMouseInView"]={_C_Cp,"Boolean"},["selectionWidth"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["selectionX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["cursorFlashCounter"]={_C_Ar,"Number"},}function _C_Wo(self,super)return function(_C_self_passed)
		super()
		local theme = self.theme
		local symbol = theme:value( "symbol" )
		self.canvas:fill( theme:value( "symbolColour" ), SymbolMask( 1 + theme:value( "symbolMargin" ), 1 + math.floor( ( self.height - symbol.height ) / 2 ), symbol ) )
	end end
_C_Wp={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["write"]={[2]=_C_GB,},["updateMaxScroll"]={[2]=_C_GC,},["unfocus"]={[3]=_C_F7,},["onKeyboardShortcut"]={[2]=_C_GD,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_GG,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["animateResize"]={[3]=_C_FW,},["onMouseDown"]={[2]=_C_Ga,},["onMouseUp"]={[2]=_C_GL,},["onMouseDoubleClick"]={[2]=_C_GZ,},["updateSelection"]={[2]=_C_GO,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onMouseDrag"]={[2]=_C_GS,},["updateThemeStyle"]={[2]=_C_GT,},["updateCursorPosition"]={[2]=_C_GU,},["wordPosition"]={[2]=_C_GW,},["initialiseCanvas"]={[3]=_C_F6,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onGlobalMouseUp"]={[2]=_C_GM,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["addFocus"]={[3]=_C_FQ,},["onKeyUp"]={[2]=_C_GH,},["initialise"]={[2]=_C_GJ,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["startDragDrop"]={[3]=_C_FR,},["onKeyDown"]={[2]=_C_GQ,},["animate"]={[3]=_C_FV,},["onDraw"]={_C_Wo,_C_GP,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["dispose"]={[3]=_C_FK,},["viewToCharCoords"]={[2]=_C_GK,},["isValidChar"]={[2]=_C_GV,},["charToViewCoords"]={[2]=_C_GN,},["onCharacter"]={[2]=_C_GX,},["onMouseScroll"]={[2]=_C_GE,},["hitTest"]={[3]=_C_FX,}}_C_Wq={set={["maxScroll"]={[2]=_C_Gc},["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["cursorX"]={[2]=_C_Gf},["scroll"]={[2]=_C_Gp},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_Ge},["selectionPosition"]={[2]=_C_Gk},["isFocused"]={[2]=_C_Gl,[3]=_C_Fi},["text"]={[2]=_C_Go},["placeholder"]={[2]=_C_Gn},["topPin"]={[3]=_C_Fj},["cursorColour"]={[2]=_C_Gd},["selectionWidth"]={[2]=_C_Gj},["width"]={[3]=_C_Fg},["height"]={[3]=_C_Fr},["shadowSize"]={[3]=_C_Fs},["isMasked"]={[2]=_C_Gg},["cursorPosition"]={[2]=_C_Gh},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_Gi},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["selectionX"]={[2]=_C_Gm},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_Wr=setmetatable({["selectionVisible"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["selectionPosition"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["cursorColour"]=_C_9x,["cursorPosition"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["cursorFlashCounter"]=_C_9x,["placeholder"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["y"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["scroll"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["isFocusDismissable"]=_C_9x,["maximumLength"]=_C_9x,["canvas"]=_C_9x,["isMouseInView"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["animations"]=_C_9x,["maxScroll"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isMasked"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["selectionWidth"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["selectionX"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["write"]=_C_9x,["updateMaxScroll"]=_C_9x,["unfocus"]=_C_9x,["onKeyboardShortcut"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["animateResize"]=_C_9x,["onMouseDown"]=_C_9x,["onMouseUp"]=_C_9x,["onMouseDoubleClick"]=_C_9x,["updateSelection"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onMouseDrag"]=_C_9x,["updateThemeStyle"]=_C_9x,["updateCursorPosition"]=_C_9x,["wordPosition"]=_C_9x,["initialiseCanvas"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["addFocus"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["startDragDrop"]=_C_9x,["onKeyDown"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["dispose"]=_C_9x,["viewToCharCoords"]=_C_9x,["isValidChar"]=_C_9x,["charToViewCoords"]=_C_9x,["onCharacter"]=_C_9x,["onMouseScroll"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Ws=setmetatable({["selectionVisible"]=_C_Cu,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionPosition"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["cursorColour"]=function(_,k,n,v,w,s,d,l)if _C_GA(n)then _C_D(_,k,"Graphics.colours",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorPosition"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorFlashCounter"]=_C_B2,["placeholder"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["scroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocusDismissable"]=_C_Cu,["maximumLength"]=_C_Gr,["canvas"]=_C_Fx,["isMouseInView"]=_C_Cu,["shadowMask"]=_C_Fy,["isSingleFocusOnly"]=_C_Cu,["animations"]=_C_Ax,["maxScroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isMasked"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["selectionWidth"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionX"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["write"]=_C_7,["updateMaxScroll"]=_C_7,["unfocus"]=_C_7,["onKeyboardShortcut"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["animateResize"]=_C_7,["onMouseDown"]=_C_7,["onMouseUp"]=_C_7,["onMouseDoubleClick"]=_C_7,["updateSelection"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onMouseDrag"]=_C_7,["updateThemeStyle"]=_C_7,["updateCursorPosition"]=_C_7,["wordPosition"]=_C_7,["initialiseCanvas"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalMouseUp"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["addFocus"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["startDragDrop"]=_C_7,["onKeyDown"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["dispose"]=_C_7,["viewToCharCoords"]=_C_7,["isValidChar"]=_C_7,["charToViewCoords"]=_C_7,["onCharacter"]=_C_7,["onMouseScroll"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Wt={[SearchBox]=1,[TextBox]=1,[View]=1}_C_Wu={"TextBox","View"}_C_Ww={}_C_Wx={}_C_Wy={["unserialise"]={[2]=_C_Ah,}}_C_Wz={[UnknownFileAssociation]=1,[_C_4n]=1,[FileAssociation]=1,[_C_3R]=1,[ISerialiseable]=1}_C_X0={"FileAssociation"}_C_X1={["argumentFormat"]=loadstring("return { true }\
\
\9\
"),}_C_X2={["argumentFormat"]={_C_An,"Table"},["icon"]={_C_Ao,"Icon (allowsNil)"},["programBundle"]={_C_Ap,"Bundle (allowsNil)"},["mime"]={_C_Aq,"String (allowsNil)"},["extensions"]={_C_An,"Table"},["name"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_X3(self,super)return function(_C_self_passed)
		self.id = 0
		self.mime = nil
		self.name = "Unknown"
		self.icon = Icon.static:fromName( "unknownFile" )
		self.extensions = {}
		self.programBundle = nil
		self.argumentFormat = {}
	end end
_C_X4={["initialise"]={_C_X3,_C_As,},["serialise"]={[2]=_C_Av,}}_C_X5=setmetatable({["argumentFormat"]=_C_9x,["icon"]=_C_9x,["programBundle"]=_C_9x,["mime"]=_C_9x,["extensions"]=_C_9x,["name"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x,["serialise"]=_C_9x},_C_9z)_C_X6=setmetatable({["argumentFormat"]=_C_Ax,["icon"]=_C_Ay,["programBundle"]=_C_Az,["mime"]=_C_B0,["extensions"]=_C_Ax,["name"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7,["serialise"]=_C_7},_C_9z)_C_X7={[UnknownFileAssociation]=1,[FileAssociation]=1,[ISerialiseable]=1}_C_X8={"FileAssociation"}_C_XA={}_C_XB={}_C_XC={["fromInterface"]={[3]=_C_Ke,}}_C_XD={[ToolbarSegmentContainer]=1,[_C_4p]=1,[IToolbarItem]=1,[IToolbarPressableItem]=1,[SegmentContainer]=1,[_C_3n]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_XE={"SegmentContainer","Container","View"}_C_XF={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_XG={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}_C_XH={["updateLayout"]={[2]=_C_NQ,},["onReadyLoadInterface"]={[3]=_C_Kk,},["unfocus"]={[4]=_C_F7,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[2]=_C_NS,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["removeChild"]={[2]=_C_NR,},["animate"]={[4]=_C_FV,},["sendToBack"]={[3]=_C_LD,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onChildOfChildAdded"]={[3]=_C_Kp,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["hitTest"]={[4]=_C_FX,},["insert"]={[2]=_C_NT,[3]=_C_Kw,},["initialise"]={[3]=_C_Kx,[4]=_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["addFocus"]={[4]=_C_FQ,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["animateResize"]={[4]=_C_FW,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["initialiseCanvas"]={[4]=_C_F6,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["getCoordinates"]={[4]=_C_F3,},["focus"]={[4]=_C_F5,},["disposeAll"]={[3]=_C_L3,}}_C_XI={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["shadowSize"]={[4]=_C_Fs},["height"]={[3]=_C_LI,[4]=_C_Fr},["width"]={[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_XJ=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["removeChild"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["initialiseCanvas"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_XK=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Gr,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["removeChild"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["initialiseCanvas"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["getCoordinates"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_XL={[ToolbarSegmentContainer]=1,[IToolbarItem]=1,[IToolbarPressableItem]=1,[SegmentContainer]=1,[Container]=1,[View]=1}_C_XM={"SegmentContainer","Container","View"}_C_XO={}_C_XP={}_C_XQ={[Radio]=1,[_C_4r]=1,[View]=1,[_C_3N]=1}_C_XR={"View"}_C_XS={["width"]=loadstring("return 8\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isChecked"]=loadstring("return false\
\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 8\
\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_XT={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isChecked"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_XU(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( ParentChangedInterfaceEvent, self.onParentChanged )
		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
function _C_XV(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or (self.isChecked and "checked" or "default" ) ) or ( self.isChecked and "disabledChecked" or "disabled" )
	end end
function _C_XW(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self:hitTestEvent( event ) then
				self.isChecked = true
				return self.eventManager:handleEvent( event )
			end
		end
	end end
function _C_XY(v)local j=_C_L[v]return not(j and j[ParentChangedInterfaceEvent])end  function _C_XX(self,super)return function(_C_self_passed,event,phase)if _C_XY(event)then _C_F(self,"event","onParentChanged","ParentChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onParentChanged","Event.phases",phase)end 
		local siblings = self:siblingsOfType( Radio )
		if #siblings == 0 or self.isChecked then
			self.isChecked = true -- if we're the first child or we're being added check ourself to ensure there's at least one and interface properties are respected
		end
	end end
function _C_XZ(self,super)return function(_C_self_passed)
		local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas

		local roundedRectangle = RoundedRectangleMask( 1, 1, width, height, theme:value( "cornerRadius" ) )
		canvas:fill( theme:value( "fillColour" ), roundedRectangle )
		canvas:outline( theme:value( "outlineColour" ), roundedRectangle, theme:value( "outlineThickness" ) )
	end end
function _C_Xa(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end end
_C_Xb={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onMouseDown"]={_C_Xa,},["clearFocus"]={[2]=_C_FP,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_XU,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["onGlobalMouseUp"]={_C_XW,},["onParentChanged"]={_C_XX,},["addFocus"]={[2]=_C_FQ,},["animateResize"]={[2]=_C_FW,},["onDraw"]={_C_XZ,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_XV,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["dispose"]={[2]=_C_FK,},["hitTestEvent"]={[2]=_C_FI,},["hitTest"]={[2]=_C_FX,}}function _C_Xc(self,super)return function(_C_self_passed,isChecked)
		self.isChecked = isChecked
		if isChecked then
			for i, sibling in ipairs( self:siblingsOfType( Radio ) ) do
				sibling.isChecked = false
			end
		end
		self.eventManager:handleEvent( ActionInterfaceEvent( self ) )
		self:updateThemeStyle()
	end end function _C_Xd(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_Xe(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end _C_Xf={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_Xe},["isFocused"]={[2]=_C_Fi},["isChecked"]={_C_Xc},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_Xd},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_Xg=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isChecked"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onMouseDown"]=_C_9x,["clearFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onParentChanged"]=_C_9x,["addFocus"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Xh=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isChecked"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onMouseDown"]=_C_7,["clearFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["onParentChanged"]=_C_7,["addFocus"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Xi={[Radio]=1,[View]=1}_C_Xj={"View"}_C_Xl={}_C_Xm={}_C_Xn={[ProgressBar]=1,[_C_4t]=1,[View]=1,[_C_3N]=1}_C_Xo={"View"}_C_Xp={["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["maximum"]=loadstring("return 1\
\
\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isIndeterminate"]=loadstring("return true\
\
\9\
"),["value"]=loadstring("return 0\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 100\
\
\9\
"),["animationStep"]=loadstring("return 0\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Xq={["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["animationStep"]={_C_Ar,"Number"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["isIndeterminate"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["leftPin"]={_C_Aq,"String (allowsNil)"},["value"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["maximum"]={_C_Ar,"Number"},}function _C_Xr(self,super)return function(_C_self_passed)
		local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas
		local isIndeterminate = self.isIndeterminate

		-- background shape
		local outlineThickness, cornerRadius = theme:value( "outlineThickness" ), theme:value( "cornerRadius" )
		local roundedRectangle = RoundedRectangleMask( 1, 1, width, height, cornerRadius )

		if isIndeterminate then
			canvas:fill( theme:value( "indeterminateFillColour" ), roundedRectangle )
			canvas:fill( theme:value( "indeterminateStripeColour" ), roundedRectangle:subtract( StripeMask( 1, 1, width, height, self.animationStep, theme:value( "indeterminateStripeWidth" ) ) ) )
			canvas:outline( theme:value( "indeterminateOutlineColour" ), roundedRectangle, outlineThickness )
		else
			local barWidth = math.floor( ( self.value / self.maximum ) * width + 0.5 )
			if barWidth >= width then
				canvas:fill( theme:value( "barFillColour" ), roundedRectangle )
				canvas:outline( theme:value( "barOutlineColour" ), roundedRectangle, outlineThickness )
			else
				canvas:fill( theme:value( "fillColour" ), roundedRectangle )
				canvas:outline( theme:value( "outlineColour" ), roundedRectangle, outlineThickness )

				if barWidth > 0 then
					local barMask = RoundedRectangleMask( 1, 1, barWidth, height, cornerRadius, 0 )
					canvas:fill( theme:value( "barFillColour" ), barMask )
					canvas:outline( theme:value( "barOutlineColour" ), barMask, outlineThickness, outlineThickness, 0 )
				end
			end
		end
	end end
function _C_Xs(self,super)return function(_C_self_passed,deltaTime)
		if self.value > 0 or self.isIndeterminate then
			self.animationStep = self.animationStep + deltaTime * 20
		end
	end end
_C_Xt={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={_C_Xs,_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={[2]=_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["onDraw"]={_C_Xr,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["startDragDrop"]={[2]=_C_FR,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["dispose"]={[2]=_C_FK,},["hitTest"]={[2]=_C_FX,}}function _C_Xu(self,super)return function(_C_self_passed,animationStep)
		animationStep = math.floor( animationStep + 0.5 )
		local oldAnimationStep = self.animationStep
		if oldAnimationStep ~= animationStep then
			self.animationStep = animationStep
			self.needsDraw = true
		end
	end end function _C_Xv(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self.theme.style = isEnabled and "default" or "disabled"
	end end function _C_Xw(self,super)return function(_C_self_passed,maximum)
		self.maximum = math.max( maximum, 0 )
	end end function _C_Xx(self,super)return function(_C_self_passed,value)
		self.value = math.min( math.max( value, 0 ), self.maximum )
	end end _C_Xy={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["animationStep"]={_C_Xu},["value"]={_C_Xx},["maximum"]={_C_Xw},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_Xv},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_Xz=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["animationStep"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["isIndeterminate"]=_C_9x,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["value"]=_C_9x,["animations"]=_C_9x,["maximum"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["dispose"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Y0=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["animationStep"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isIndeterminate"]=_C_Cu,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["value"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["maximum"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["dispose"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Y1={[ProgressBar]=1,[View]=1}_C_Y2={"View"}_C_Y4={}_C_Y5={}_C_Y6={[MenuButton]=1,[_C_4x]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_Y7={"Button","View"}_C_Y8={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 45\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_YA(v)local j=_C_L[v]return not(j and j[Menu])end  _C_Y9={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isActive"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["menu"]={_C_YA,"Menu"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["menuName"]={_C_Ai,"String"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}function _C_YB(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( MenuChangedInterfaceEvent, self.onMenuChanged )
		self:event( ParentChangedInterfaceEvent, self.onParentChanged )
		self:event( LoadedInterfaceEvent, self.onLoaded )
	end end
function _C_YC(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or ( self.isActive and "active" or "default" ) ) or "disabled"
	end end
function _C_YD(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onGlobalMouseUp","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isEnabled and self.isPressed then
			self.isPressed = false
			if self:hitTestEvent( event ) then
				self.menu:toggle()
				return self.eventManager:handleEvent( event )
			end
		end
	end end
function _C_YE(self,super)return function(_C_self_passed,event,phase)if _C_XY(event)then _C_F(self,"event","onParentChanged","ParentChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onParentChanged","Event.phases",phase)end 
		local menu = self.menu
		if menu then
			if menu.parent then
				menu.parent:removeChild( menu )
			end
			menu.x = self.x - 5
			menu.y = self.y + 7
			self.parent:insert( menu )
		end
	end end
function _C_YF(self,super)return function(_C_self_passed,event,phase)if _C_Ku(event)then _C_F(self,"event","onLoaded","LoadedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onLoaded","Event.phases",phase)end 
		local menuName = self.menuName
		if not menuName then
			MenuNotSpecifiedException( "A MenuButton did not specifiy the property 'menuName'. MenuButtons must specify this property as it indicates what inteface file to load the menu from.", 0 )
		end
		menu = Menu.static:fromInterface( menuName )
		menu.owner = self
		menu.isSingleShot = false
		menu.isVisible = false
		menu.hitTestOwner = true
		local theme =self.theme
		menu.x = self.x + theme:value( "menuOffsetX" )
		menu.y = self.y + theme:value( "menuOffsetY" )
		self.menu = menu
		self.parent:insert( menu )
	end end
function _C_YG(self,super)return function(_C_self_passed)
		super()
		local theme = self.theme
		local defaultShadowSize = theme:value( "shadowSize", "default" )
		local shadowPressedSize = theme:value( "shadowSize", "pressed" )
		local shadowSize = theme:value( "shadowSize" )
		local shadowOffset = defaultShadowSize - shadowSize
		local shadowPressedOffset = defaultShadowSize - shadowPressedSize
		local shadowX = math.floor( shadowOffset * SHADOW_RATIO + 0.5 )

		local topMargin, arrowMargin = theme:value( "topMargin" ), theme:value( "arrowMargin" )
		local symbol = theme:value( "arrowSymbol" )
		self.canvas:fill( theme:value( "arrowColour" ), SymbolMask( self.width - arrowMargin - symbol.width + shadowX, 1 + math.floor( ( self.height - symbol.height ) / 2 ) + shadowOffset, symbol ) )
	end end
function _C_YI(v)local j=_C_L[v]return not(j and j[MenuChangedInterfaceEvent])end  function _C_YH(self,super)return function(_C_self_passed,event,phase)if _C_YI(event)then _C_F(self,"event","onMenuChanged","MenuChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMenuChanged","Event.phases",phase)end 
		self:updateThemeStyle()

		if self.menu.isOpen then
			local parent = self.parent
			parent:sendToFront( self.menu )
			parent:sendToFront( self )
		end
		return true
	end end
_C_YJ={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["onMenuChanged"]={_C_YH,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["clearFocus"]={[3]=_C_FP,},["addFocus"]={[3]=_C_FQ,},["siblingsOfType"]={[3]=_C_FH,},["draw"]={[3]=_C_F9,},["animate"]={[3]=_C_FV,},["animateResize"]={[3]=_C_FW,},["dispose"]={[3]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[2]=_C_K7,[3]=_C_FC,},["onKeyUp"]={[2]=_C_K8,},["initialise"]={_C_YB,_C_K0,_C_FG,},["onMouseDown"]={[2]=_C_K1,},["onGlobalMouseUp"]={_C_YD,_C_K2,},["onParentChanged"]={_C_YE,},["onKeyDown"]={[2]=_C_K3,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onDraw"]={_C_YG,_C_K4,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={_C_YC,_C_K5,},["hitTestEvent"]={[3]=_C_FI,},["startDragDrop"]={[3]=_C_FR,},["onLoaded"]={_C_YF,},["autosize"]={[2]=_C_K6,},["animateMove"]={[3]=_C_FD,},["hitTest"]={[3]=_C_FX,}}function _C_YK(self,super)return function(_C_self_passed)
		if self.isPressed then
			return true
		end
		local menu = self.menu
		return menu and menu.isOpen or false
	end end function _C_YL(self,super)return function(_C_self_passed,y)
		super( y )
		local menu = self.menu
		if menu then
			menu.y = y + self.theme:value( "menuOffsetY" )
		end
	end end function _C_YM(self,super)return function(_C_self_passed,x)
		super( x )
		local menu = self.menu
		if menu then
			menu.x = x + self.theme:value( "menuOffsetX" )
		end
	end end function _C_YN(self,super)return function(_C_self_passed,width)
		super( width )
		local menu = self.menu
		if menu then
			menu.width = width
		end
	end end _C_YO={set={["x"]={_C_YM,[3]=_C_Fq},["y"]={_C_YL,[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_KC},["isFocused"]={[2]=_C_KA,[3]=_C_Fi},["width"]={_C_YN,[3]=_C_Fg},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={[2]=_C_KD},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_KB},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isActive"]={_C_YK},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}function _C_YP(_,k,n,v)if _C_YA(n)then _C_D(_,k,"Menu",n)end v[k]=n end _C_YQ=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["isActive"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["menu"]=_C_9x,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["menuName"]=_C_9x,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["onMenuChanged"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["siblingsOfType"]=_C_9x,["draw"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onParentChanged"]=_C_9x,["onKeyDown"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["hitTestEvent"]=_C_9x,["startDragDrop"]=_C_9x,["onLoaded"]=_C_9x,["autosize"]=_C_9x,["animateMove"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_YR=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isActive"]=_C_Fv,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["menu"]=_C_YP,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["menuName"]=_C_B1,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["onMenuChanged"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["siblingsOfType"]=_C_7,["draw"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["onParentChanged"]=_C_7,["onKeyDown"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["hitTestEvent"]=_C_7,["startDragDrop"]=_C_7,["onLoaded"]=_C_7,["autosize"]=_C_7,["animateMove"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_YS={[MenuButton]=1,[Button]=1,[View]=1}_C_YT={"Button","View"}_C_YV={}_C_YW={}_C_YX={[MenuBarItem]=1,[_C_4z]=1,[View]=1,[_C_3N]=1}_C_YY={"View"}_C_YZ={["x"]=loadstring("return 1\
\9\
"),["isFlashing"]=loadstring("return false\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_Yb(v)if v==nil then return false end local j=_C_L[v]return not(j and j[Menu])end  _C_Ya={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isActive"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFlashing"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["menuName"]={_C_Ai,"String"},["isVisible"]={_C_Cp,"Boolean"},["menu"]={_C_Yb,"Menu (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["specialMouseTimes"]={_C_An,"Table"},["isMouseInView"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}function _C_Yc(self,super)return function(_C_self_passed,...)
		super( ... )

		-- local menuName = self.menuName
		-- if not menuName then error( "MenuBarItems must specify the property menuName (the name of the interface file to use).", 0 ) end
		-- menu = Menu.fromInterface( menuName, Menu )
		-- menu.owner = self
		-- menu.isSingleShot = false
		-- menu.isVisible = false
		-- menu.hitTestOwner = true
		-- menu.topMargin = Menu.topMargin + 4
		-- self.menu = menu
		self:event( MenuChangedInterfaceEvent, self.onMenuChanged )
		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		self:event( ReadyInterfaceEvent, self.onReady )
		self:updateHeight()
	end end
function _C_Yd(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end end
function _C_Ye(self,super)return function(_C_self_passed)
		self.isFlashing = 0.2
	end end
function _C_Yf(self,super)return function(_C_self_passed,event,phase)if _C_YI(event)then _C_F(self,"event","onMenuChanged","MenuChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMenuChanged","Event.phases",phase)end 
		self:updateThemeStyle()
		
		local menu = self.menu
		if menu.isOpen then
			menu.parent:sendToFront( menu )
			menu.parent:sendToFront( self.parent )
		end
		return true
	end end
function _C_Yg(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, font = self.width, self.height, self.theme, self.canvas

		canvas:fill( theme:value( "fillColour" ) )
		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
		canvas:fill( theme:value( "textColour" ),  TextMask( leftMargin + 1, topMargin + 1, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.text, theme:value( "font" ) ) )
	end end
function _C_Yh(self,super)return function(_C_self_passed,event,phase)if _C_WE(event)then _C_F(self,"event","updateWidth","ThemeChangedInterfaceEvent (allowsNil)",event)end if _C_L9(phase)then _C_F(self,"phase","updateWidth","Event.phases (allowsNil)",phase)end 
		local theme = self.theme
		local textWidth = theme:value( "font" ):getWidth( self.text )
		local width = textWidth + theme:value( "leftMargin" ) + theme:value( "rightMargin" )
		self.width = width
		local parent = self.parent
		if parent then
			parent.needsLayoutUpdate = true
		end
	end end
function _C_Yi(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
		local menuName = self.menuName
		if not menuName then
			MenuNotSpecifiedException( "A MenuBarItem did not specifiy the property 'menuName'. MenuButtons must specify this property as it indicates what inteface file to load the menu from.", 0 )
		end
		local parent = self.parent
		menu = Menu.static:fromInterface( menuName )
		menu.owner = self
		menu.isSingleShot = false
		menu.isVisible = false
		menu.hitTestOwner = true
		local theme = self.theme
		menu.x = self.x + parent.x + theme:value( "menuOffsetX" )
		menu.y = self.y + parent.y + self.height + theme:value( "menuOffsetY" )
		self.menu = menu
		parent.parent:insert( menu )
	end end
function _C_Yj(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isEnabled and self.isPressed then
			self.isPressed = false
			if self:hitTestEvent( event ) then
				self.menu:toggle()
				return self.eventManager:handleEvent( event )
			end
		end
	end end
function _C_Yk(self,super)return function(_C_self_passed,event,phase)if _C_WE(event)then _C_F(self,"event","updateHeight","ThemeChangedInterfaceEvent (allowsNil)",event)end if _C_L9(phase)then _C_F(self,"phase","updateHeight","Event.phases (allowsNil)",phase)end 
		local theme = self.theme
		self.height = theme:value( "font").height + theme:value( "topMargin") + theme:value( "bottomMargin")
	end end
function _C_Yl(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		super:super( deltaTime )
		local isFlashing = self.isFlashing
		if isFlashing then
			if isFlashing <= 0 then
				self.isFlashing = false
			else
				self.isFlashing = isFlashing - deltaTime
			end
		end
	end end
function _C_Ym(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or ( self.isActive and "active" or "default" ) ) or "disabled"
	end end
_C_Yn={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["onGlobalMouseUp"]={_C_Yj,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["draw"]={[2]=_C_F9,},["hitTestEvent"]={[2]=_C_FI,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={_C_Yl,_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_Yc,_C_FG,},["onMouseDown"]={_C_Yd,},["flash"]={_C_Ye,},["onMenuChanged"]={_C_Yf,},["dispose"]={[2]=_C_FK,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["onDraw"]={_C_Yg,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_Ym,},["onReady"]={_C_Yi,},["startDragDrop"]={[2]=_C_FR,},["siblingsOfType"]={[2]=_C_FH,},["updateWidth"]={_C_Yh,},["updateHeight"]={_C_Yk,},["hitTest"]={[2]=_C_FX,}}function _C_Yo(self,super)return function(_C_self_passed)
		if self.isPressed then
			return true
		end
		local menu = self.menu
		return menu and menu.isOpen or false
	end end function _C_Yp(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_Yq(self,super)return function(_C_self_passed,isFlashing)
		self.isFlashing = isFlashing
		self:updateThemeStyle()
	end end function _C_Yr(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_Ys(self,super)return function(_C_self_passed,x)
		super( x )
		local menu = self.menu
		if menu then
			menu.x = self.x + self.parent.x + - 1 + self.theme:value( "menuOffsetX" )
		end
	end end function _C_Yt(self,super)return function(_C_self_passed,text)
		self.text = text
		self:updateWidth()
	end end _C_Yu={set={["x"]={_C_Ys,_C_Fq},["isFlashing"]={_C_Yq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_Yr},["isFocused"]={[2]=_C_Fi},["width"]={[2]=_C_Fg},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["text"]={_C_Yt},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_Yp},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isActive"]={_C_Yo},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}function _C_Yv(_,k,n,v)if _C_Yb(n)then _C_D(_,k,"Menu (allowsNil)",n)end v[k]=n end _C_Yw=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["isActive"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFlashing"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["menu"]=_C_9x,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isMouseInView"]=_C_9x,["animations"]=_C_9x,["menuName"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["draw"]=_C_9x,["hitTestEvent"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["flash"]=_C_9x,["onMenuChanged"]=_C_9x,["dispose"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onReady"]=_C_9x,["startDragDrop"]=_C_9x,["siblingsOfType"]=_C_9x,["updateWidth"]=_C_9x,["updateHeight"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_Yx=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isActive"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFlashing"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["menu"]=_C_Yv,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["isMouseInView"]=_C_Cu,["animations"]=_C_Ax,["menuName"]=_C_B1,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onGlobalMouseUp"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["draw"]=_C_7,["hitTestEvent"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["flash"]=_C_7,["onMenuChanged"]=_C_7,["dispose"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onReady"]=_C_7,["startDragDrop"]=_C_7,["siblingsOfType"]=_C_7,["updateWidth"]=_C_7,["updateHeight"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_Yy={[MenuBarItem]=1,[View]=1}_C_Yz={"View"}_C_Z1={}_C_Z2={}_C_Z3={[TopBarSeparatorView]=1,[_C_51]=1,[SeparatorView]=1,[_C_4h]=1,[View]=1,[_C_3N]=1}_C_Z4={"SeparatorView","View"}_C_Z5={["width"]=loadstring("return 1\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["activeX"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["activeWidth"]=loadstring("return 1\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["height"]=loadstring("return 1\
\
\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_Z6={["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["activeX"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["activeWidth"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_Z7(self,super)return function(_C_self_passed)
	    super()
	    local theme = self.theme
	    self.canvas:fill( theme:value( "activeSeparatorColour" ), theme:value( "activeSeparatorIsDashed" ) and SeparatorMask( self.activeX, 1, self.activeWidth, self.height ) or RectangleMask( self.activeX, 1, self.activeWidth, self.height ) )
	end end
_C_Z8={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onDraw"]={_C_Z7,_C_Vt,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["clearFocus"]={[3]=_C_FP,},["addFocus"]={[3]=_C_FQ,},["startDragDrop"]={[3]=_C_FR,},["animate"]={[3]=_C_FV,},["animateResize"]={[3]=_C_FW,},["dispose"]={[3]=_C_FK,},["hitTest"]={[3]=_C_FX,}}function _C_Z9(self,super)return function(_C_self_passed,activeX)
	   self.activeX = activeX
	   self.needsDraw = true
	end end function _C_ZA(self,super)return function(_C_self_passed,activeWidth)
	    self.activeWidth = activeWidth
	    self.needsDraw = true
	end end _C_ZB={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["activeX"]={_C_Z9},["activeWidth"]={_C_ZA},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["width"]={[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_ZC=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["activeWidth"]=_C_9x,["animations"]=_C_9x,["activeX"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["dispose"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_ZD=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["activeWidth"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["activeX"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["dispose"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_ZE={[TopBarSeparatorView]=1,[SeparatorView]=1,[View]=1}_C_ZF={"SeparatorView","View"}_C_ZH={}_C_ZI={}_C_ZJ={[MaskedTextBox]=1,[_C_53]=1,[TextBox]=1,[_C_3E]=1,[View]=1,[_C_3N]=1}_C_ZK={"TextBox","View"}_C_ZL={["cursor"]=loadstring("return TextCursor.static\
\
\9\
"),["width"]=loadstring("return 120\
\9\
"),["selectionVisible"]=loadstring("return false\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["cursorX"]=loadstring("return 0\
\9\
"),["scroll"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["cursorFlashCounter"]=loadstring("return 0\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["cursorColour"]=loadstring("return Graphics.colours.BLACK;\
\
\9\
"),["height"]=loadstring("return 15\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["selectionWidth"]=loadstring("return 0\
\9\
"),["isMasked"]=loadstring("return true\
\
\
"),["text"]=loadstring("return \"\"\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["cursorPosition"]=loadstring("return 1\
\9\
"),["maxScroll"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_ZM={["selectionVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["placeholder"]={_C_Aq,"String (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["cursorColour"]={_C_GA,"Graphics.colours"},["cursorPosition"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["maxScroll"]={_C_Ar,"Number"},["x"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["scroll"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["animations"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["selectionPosition"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["isMasked"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["isMouseInView"]={_C_Cp,"Boolean"},["selectionWidth"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["selectionX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["cursorFlashCounter"]={_C_Ar,"Number"},}_C_ZN={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["write"]={[2]=_C_GB,},["updateMaxScroll"]={[2]=_C_GC,},["unfocus"]={[3]=_C_F7,},["onKeyboardShortcut"]={[2]=_C_GD,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_GG,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["animateResize"]={[3]=_C_FW,},["onMouseDown"]={[2]=_C_Ga,},["onMouseUp"]={[2]=_C_GL,},["onMouseDoubleClick"]={[2]=_C_GZ,},["updateSelection"]={[2]=_C_GO,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onMouseDrag"]={[2]=_C_GS,},["updateThemeStyle"]={[2]=_C_GT,},["updateCursorPosition"]={[2]=_C_GU,},["wordPosition"]={[2]=_C_GW,},["initialiseCanvas"]={[3]=_C_F6,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onGlobalMouseUp"]={[2]=_C_GM,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["addFocus"]={[3]=_C_FQ,},["onKeyUp"]={[2]=_C_GH,},["initialise"]={[2]=_C_GJ,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["startDragDrop"]={[3]=_C_FR,},["onKeyDown"]={[2]=_C_GQ,},["animate"]={[3]=_C_FV,},["onDraw"]={[2]=_C_GP,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["dispose"]={[3]=_C_FK,},["viewToCharCoords"]={[2]=_C_GK,},["isValidChar"]={[2]=_C_GV,},["charToViewCoords"]={[2]=_C_GN,},["onCharacter"]={[2]=_C_GX,},["onMouseScroll"]={[2]=_C_GE,},["hitTest"]={[3]=_C_FX,}}_C_ZO={set={["maxScroll"]={[2]=_C_Gc},["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["cursorX"]={[2]=_C_Gf},["scroll"]={[2]=_C_Gp},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_Ge},["selectionPosition"]={[2]=_C_Gk},["isFocused"]={[2]=_C_Gl,[3]=_C_Fi},["text"]={[2]=_C_Go},["placeholder"]={[2]=_C_Gn},["topPin"]={[3]=_C_Fj},["cursorColour"]={[2]=_C_Gd},["selectionWidth"]={[2]=_C_Gj},["width"]={[3]=_C_Fg},["height"]={[3]=_C_Fr},["shadowSize"]={[3]=_C_Fs},["isMasked"]={[2]=_C_Gg},["cursorPosition"]={[2]=_C_Gh},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_Gi},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["selectionX"]={[2]=_C_Gm},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_ZP=setmetatable({["selectionVisible"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["selectionPosition"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["cursorColour"]=_C_9x,["cursorPosition"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["cursorFlashCounter"]=_C_9x,["placeholder"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["y"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["scroll"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["isFocusDismissable"]=_C_9x,["maximumLength"]=_C_9x,["canvas"]=_C_9x,["isMouseInView"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["animations"]=_C_9x,["maxScroll"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isMasked"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["selectionWidth"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["selectionX"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["write"]=_C_9x,["updateMaxScroll"]=_C_9x,["unfocus"]=_C_9x,["onKeyboardShortcut"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["animateResize"]=_C_9x,["onMouseDown"]=_C_9x,["onMouseUp"]=_C_9x,["onMouseDoubleClick"]=_C_9x,["updateSelection"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onMouseDrag"]=_C_9x,["updateThemeStyle"]=_C_9x,["updateCursorPosition"]=_C_9x,["wordPosition"]=_C_9x,["initialiseCanvas"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["addFocus"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["startDragDrop"]=_C_9x,["onKeyDown"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["dispose"]=_C_9x,["viewToCharCoords"]=_C_9x,["isValidChar"]=_C_9x,["charToViewCoords"]=_C_9x,["onCharacter"]=_C_9x,["onMouseScroll"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_ZQ=setmetatable({["selectionVisible"]=_C_Cu,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionPosition"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["cursorColour"]=function(_,k,n,v,w,s,d,l)if _C_GA(n)then _C_D(_,k,"Graphics.colours",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorPosition"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorFlashCounter"]=_C_B2,["placeholder"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["scroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocusDismissable"]=_C_Cu,["maximumLength"]=_C_Gr,["canvas"]=_C_Fx,["isMouseInView"]=_C_Cu,["shadowMask"]=_C_Fy,["isSingleFocusOnly"]=_C_Cu,["animations"]=_C_Ax,["maxScroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isMasked"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["selectionWidth"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionX"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["write"]=_C_7,["updateMaxScroll"]=_C_7,["unfocus"]=_C_7,["onKeyboardShortcut"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["animateResize"]=_C_7,["onMouseDown"]=_C_7,["onMouseUp"]=_C_7,["onMouseDoubleClick"]=_C_7,["updateSelection"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onMouseDrag"]=_C_7,["updateThemeStyle"]=_C_7,["updateCursorPosition"]=_C_7,["wordPosition"]=_C_7,["initialiseCanvas"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalMouseUp"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["addFocus"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["startDragDrop"]=_C_7,["onKeyDown"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["dispose"]=_C_7,["viewToCharCoords"]=_C_7,["isValidChar"]=_C_7,["charToViewCoords"]=_C_7,["onCharacter"]=_C_7,["onMouseScroll"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_ZR={[MaskedTextBox]=1,[TextBox]=1,[View]=1}_C_ZS={"TextBox","View"}_C_ZU={["eventType"]=loadstring("return \"\"\
\9\
"),}_C_ZV={["eventType"]={_C_Ai,"String"},}_C_ZW={["eventClasses"]=loadstring([[return {}

	
]])}_C_ZX={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_ZY=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_ZZ=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_Za={[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_Zb={"Event"}_C_Zc={["globalY"]=loadstring("return 0\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToChildren"]=loadstring("return true \
\9\
"),}_C_Zd={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["relativeView"]={_C_Cr,"View"},}function _C_Ze(self,super)return function(_C_self_passed,view)
		if not view then end
		local oldRelativeView = self.relativeView
		super( view )
		
		local x, y = self.x, self.y

		if oldRelativeView and oldRelativeView == view then
			-- return
		elseif oldRelativeView and oldRelativeView == view.parent then
			-- we are going 1 downward in to the stack
			x = x - view.x + 1
			y = y - view.y + 1

		elseif oldRelativeView and oldRelativeView.parent == view then
			-- we are going 1 upward in to the stack
			x = x + oldRelativeView.x - 1
			y = y + oldRelativeView.y - 1
		else
			-- we don't known exactly where the previous view was
			x, y = view:getCoordinates( self.globalX, self.globalY, self.application.container )
		end
		self.x = x
		self.y = y
	end end
_C_Zf={["makeRelative"]={_C_Ze,_C_Cs,}}_C_Zg=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_Zh=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_Zi={[MouseEvent]=1,[Event]=1}_C_Zj={"Event"}_C_Zl={["eventType"]=loadstring("return \"mouse_scroll\";\
\9\
\9\
"),}_C_Zm={["eventType"]={_C_Ai,"String"},}_C_Zn={["eventClasses"]=loadstring([[return {}

	
]])}_C_Zo={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_Zp=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_Zq=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_Zr={[ScrollMouseEvent]=1,[_C_55]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_Zs={"MouseEvent","Event"}_C_Zt={["globalY"]=loadstring("return 0\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToChildren"]=loadstring("return true \
\9\
"),}function _C_Zv(v)return not _C_AR[v] end _C_Zu={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["direction"]={_C_Zv,"MouseEvent.directions"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["relativeView"]={_C_Cr,"View"},["isSentToSender"]={_C_Cp,"Boolean"},}function _C_Zw(self,super)return function(_C_self_passed,direction,x,y)if _C_Zv(direction)then _C_F(self,"direction","initialise","MouseEvent.directions",direction)end if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end 
		self.direction = direction
		self.x = x
		self.y = y
		self.globalX = x
		self.globalY = y
	end end
_C_Zx={["initialise"]={_C_Zw,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}function _C_Zy(_,k,n,v)if _C_Zv(n)then _C_D(_,k,"MouseEvent.directions",n)end v[k]=n end _C_Zz=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["relativeView"]=_C_9x,["direction"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_a0=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["relativeView"]=_C_Cw,["direction"]=_C_Zy,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_a1={[ScrollMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_a2={"MouseEvent","Event"}_C_a4={}_C_a5={}_C_a6={[Label]=1,[_C_57]=1,[View]=1,[_C_3N]=1}_C_a7={"View"}_C_a8={["x"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["font"]=loadstring("return Font.static.systemFont\
\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\9\
"),["isAutosized"]=loadstring("return true\
\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_a9={["font"]={_C_BO,"Font"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["parent"]={_C_F1,"Container (allowsNil)"},["y"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},}function _C_aA(self,super)return function(_C_self_passed)
		if self.isAutosized then
			local font, text = self.font, self.text
			local fontWidth = font:getWidth( text )
			self.width = fontWidth
			self.height = font.height
		end
		self.needsAutosize = false
	end end
function _C_aB(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and "default" or "disabled"
	end end
function _C_aC(self,super)return function(_C_self_passed)
		self.canvas:fill( self.theme:value( "textColour" ), TextMask( 1, 1, self.width, self.height, self.text, self.font ) )
	end end
function _C_aD(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsAutosize then
			self:autosize()
		end
	end end
_C_aE={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={_C_aD,_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={[2]=_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["dispose"]={[2]=_C_FK,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["onDraw"]={_C_aC,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_aB,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["animateResize"]={[2]=_C_FW,},["autosize"]={_C_aA,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["hitTest"]={[2]=_C_FX,}}function _C_aF(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_aG(self,super)return function(_C_self_passed,font)
		self.font = font
		self.needsAutosize = true
	end end function _C_aH(self,super)return function(_C_self_passed,text)
		self.text = text
		self.needsAutosize = true
	end end _C_aI={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["width"]={[2]=_C_Fg},["font"]={_C_aG},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["text"]={_C_aH},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_aF},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_aJ=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isMouseInView"]=_C_9x,["animations"]=_C_9x,["font"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["dispose"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["animateResize"]=_C_9x,["autosize"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_aK=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["isMouseInView"]=_C_Cu,["animations"]=_C_Ax,["font"]=function(_,k,n,v,w,s,d,l)if _C_BO(n)then _C_D(_,k,"Font",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["dispose"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["animateResize"]=_C_7,["autosize"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_aL={[Label]=1,[View]=1}_C_aM={"View"}_C_aO={["eventType"]=loadstring("return \"interface_parent_changed\";\
\9\
\9\
"),}_C_aP={["eventType"]={_C_Ai,"String"},}_C_aQ={["eventClasses"]=loadstring([[return {}

	
]])}_C_aR={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_aS=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_aT=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_aU={[ParentChangedInterfaceEvent]=1,[_C_59]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_aV={"InterfaceEvent","Event"}_C_aW={["isSentToChildren"]=loadstring("return false\
\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_aX={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["newParent"]={_C_PS,"Container"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["oldParent"]={_C_PS,"Container"},}function _C_aY(self,super)return function(_C_self_passed,newParent,oldParent)if _C_PS(newParent)then _C_F(self,"newParent","initialise","Container",newParent)end if _C_PS(oldParent)then _C_F(self,"oldParent","initialise","Container",oldParent)end 
		self.newParent = newParent
		self.oldParent = oldParent
	end end
_C_aZ={["initialise"]={_C_aY,},["makeRelative"]={[3]=_C_Cs,}}_C_aa=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["newParent"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["oldParent"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_ab=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["newParent"]=_C_Pt,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["oldParent"]=_C_Pt,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_ac={[ParentChangedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_ad={"InterfaceEvent","Event"}_C_af={}_C_ag={}_C_ah={[RectangleMask]=1,[_C_5B]=1,[Mask]=1,[_C_36]=1}_C_ai={"Mask"}_C_aj={}_C_ak={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_al(self,super)return function(_C_self_passed,x,y,width,height)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end 
		local pixels = {}
		for i = 1, width * height do
			pixels[i] = true
		end

		super( x, y, width, height, pixels )
	end end
_C_am={["initialise"]={_C_al,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_an=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_ao=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_ap={[RectangleMask]=1,[Mask]=1}_C_aq={"Mask"}_C_as={}_C_at={}_C_au={[DragView]=1,[_C_5D]=1,[View]=1,[_C_3N]=1}_C_av={"View"}_C_aw={["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_ax={["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["image"]={_C_HL,"Image"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_ay(self,super)return function(_C_self_passed)
		self.canvas:image( self.image, 1, 1, self.width, self.height )
	end end
_C_az={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={[2]=_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["onDraw"]={_C_ay,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["startDragDrop"]={[2]=_C_FR,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["dispose"]={[2]=_C_FK,},["hitTest"]={[2]=_C_FX,}}function _C_b0(self,super)return function(_C_self_passed)
		return self.shadowMask
	end end function _C_b1(self,super)return function(_C_self_passed,image)
		self.image = image
		self.needsDraw = true
	end end function _C_b2(self,super)return function(_C_self_passed,shadowMask)
		self.shadowMask = shadowMask
		self.needsDraw = true
	end end _C_b3={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["image"]={_C_b1},["isFocused"]={[2]=_C_Fi},["shadowMask"]={_C_b2},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={_C_b0,_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_b4=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["image"]=_C_9x,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["dispose"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_b5=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["image"]=function(_,k,n,v,w,s,d,l)if _C_HL(n)then _C_D(_,k,"Image",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=function(_,k,n,v,w,s,d,l)if _C_F2(n)then _C_D(_,k,"Mask (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["dispose"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_b6={[DragView]=1,[View]=1}_C_b7={"View"}_C_b9={}_C_bA={}_C_bB={["fromInterface"]={[2]=_C_Ke,}}_C_bC={[WindowContainer]=1,[_C_5F]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_bD={"Container","View"}_C_bE={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["topPin"]=loadstring("return \"11\"\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["rightPin"]=loadstring("return \"100% - 3\"\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["leftPin"]=loadstring("return \"1\"\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["height"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["bottomPin"]=loadstring("return \"100% - 4\"\
\
\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_bF={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}_C_bG={["getCoordinates"]={[3]=_C_F3,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_Kv,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["insert"]={[2]=_C_Kw,},["initialise"]={[2]=_C_Kx,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["hitTest"]={[3]=_C_FX,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["animateResize"]={[3]=_C_FW,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["initialiseCanvas"]={[3]=_C_F6,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}_C_bH={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_bI=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["animateResize"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["initialiseCanvas"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_bJ=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["animateResize"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["initialiseCanvas"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_bK={[WindowContainer]=1,[Container]=1,[View]=1}_C_bL={"Container","View"}_C_bN={}_C_bO={}_C_bP={[Metadata]=1,[_C_5L]=1}_C_bQ={["openedTimestamp"]=loadstring("return DEFAULT_TIMESTAMP\
\9\
"),["createdTimestamp"]=loadstring("return DEFAULT_TIMESTAMP\
\9\
"),["modifiedTimestamp"]=loadstring("return DEFAULT_TIMESTAMP\
\
\9\
"),}function _C_bS(v)local j=_C_L[v]return not(j and j[FileSystemItem])end  _C_bR={["createdTimestamp"]={_C_Ar,"Number"},["modifiedTimestamp"]={_C_Ar,"Number"},["file"]={_C_bS,"FileSystemItem"},["metadataPath"]={_C_Ai,"String"},["mime"]={_C_Aq,"String (allowsNil)"},["openedTimestamp"]={_C_Ar,"Number"},}function _C_bT(self,super)return function(_C_self_passed,file)if _C_bS(file)then _C_F(self,"file","initialise","FileSystemItem",file)end 
		self.file = file
		self.metadataPath = file.metadataPath
		self:load()
	end end
function _C_bU(self,super)return function(_C_self_passed,fullName)
		local newMetadataPath = self.file.parentPath .. "/.metadata/" .. fullName
		fs.move( self.metadataPath, newMetadataPath )
		self.metadataPath = newMetadataPath
		self:updateModifiedTimestamp()
	end end
function _C_bV(self,super)return function(_C_self_passed)
		self.modifiedTimestamp = os.time()
	end end
function _C_bW(self,super)return function(_C_self_passed)
		local h = fs.open( self.metadataPath, "w" )
		if h then
			local properties = {}
			for shortKey, key in pairs( SAVED_PROPERTIES ) do
				local value = self[key]
				if value then
					properties[shortKey] = value
				end
			end
			h.write( serialise( properties, {} ) )
			h.close()
		end
	end end
function _C_bX(self,super)return function(_C_self_passed)
		self.createdTimestamp = os.time()
	end end
function _C_bY(self,super)return function(_C_self_passed)
		fs.delete( self.metadataPath )
		local oldParentMetadataPath = self.file.parentPath .. "/.metadata"
		if #fs.list( oldParentMetadataPath ) == 0 then
			fs.delete( oldParentMetadataPath )
		end
	end end
function _C_bZ(self,super)return function(_C_self_passed)
		local metadataPath = self.metadataPath
		if fs.exists( metadataPath ) then
			local h = fs.open( metadataPath, "r" )
			if h then
				local properties = textutils.unserialize( h.readAll() )
				h.close()
				local raw = self.raw
				for key, value in pairs( properties ) do
					local propertyName = SAVED_PROPERTIES[key]
					if SAVED_PROPERTIES[key] then
						raw[propertyName] = value
					end
				end
				if not self.mime then
					self:guessMIME()
					self:save()
				end
			end
		else
			local metadataFolderPath = self.file.parentPath .. "/.metadata"
			if fs.exists( metadataFolderPath ) then
				if not fs.isDir( metadataFolderPath ) then
					fs.delete( metadataFolderPath )
				end
			else
				fs.makeDir( metadataFolderPath )
			end
			self:create()
		end
	end end
function _C_ba(self,super)return function(_C_self_passed)
		self.openedTimestamp = os.time()
	end end
function _C_bb(self,super)return function(_C_self_passed,allowedProperties)
		local properties = {}
		for shortKey, key in pairs( SAVED_PROPERTIES ) do
			local value = self[key]
			if value and ( not allowedProperties or allowedProperties[key] ) then
				properties[shortKey] = value
			end
		end
		return properties
	end end
function _C_bc(self,super)return function(_C_self_passed)
		self:updateCreatedTimestamp()
		self:updateOpenedTimestamp()
		self:updateModifiedTimestamp()
		self:guessMIME()
		self:save()
	end end
function _C_bd(self,super)return function(_C_self_passed,folder,newFile)
		local copyMetadataPath = folder.path .. "/.metadata/" .. self.file.fullName
		fs.copy( self.metadataPath, copyMetadataPath )
		newFile.metadata:updateModifiedTimestamp()
	end end
function _C_be(self,super)return function(_C_self_passed,folder)
		local folderMetadataFolderPath = folder.path .. "/.metadata"
		if not fs.exists( folderMetadataFolderPath ) then
			fs.makeDir( folderMetadataFolderPath )
		elseif fs.isDir( folderMetadataFolderPath ) then
			fs.delete( folderMetadataFolderPath )
			fs.makeDir( folderMetadataFolderPath )
		end
		local newMetadataPath = folderMetadataFolderPath .. "/" .. self.file.fullName
		fs.move( self.metadataPath, newMetadataPath )
		self.metadataPath = newMetadataPath
		local oldParentMetadataPath = self.file.parentPath .. "/.metadata"
		if #fs.list( oldParentMetadataPath ) == 0 then
			fs.delete( oldParentMetadataPath )
		end
	end end
function _C_bf(self,super)return function(_C_self_passed)
		local file = self.file
		local path = file.path
		local extension = file.extension
		if extension then
			-- try to guess the MIME based on the extension
			local mime = EXTENSION_MIMES[ extension:upper() ]
			if mime then
				self.mime = mime
				return
			end
		end
		if fs.isDir( path ) then
			if fs.exists( path .. "/bundle.sconfig" ) then
				self.mime = EXTENSION_MIMES.SBUNDLE
			else
				self.mime = SPECIAL_MIMES.FOLDER
			end
			return
		end
		self.mime = SPECIAL_MIMES.UNKNOWN
	end end
_C_bg={["initialise"]={_C_bT,},["rename"]={_C_bU,},["updateOpenedTimestamp"]={_C_ba,},["save"]={_C_bW,},["updateCreatedTimestamp"]={_C_bX,},["delete"]={_C_bY,},["load"]={_C_bZ,},["updateModifiedTimestamp"]={_C_bV,},["serialise"]={_C_bb,},["create"]={_C_bc,},["copyTo"]={_C_bd,},["moveTo"]={_C_be,},["guessMIME"]={_C_bf,}}function _C_bh(self,super)return function(_C_self_passed,openedTimestamp)
		self.openedTimestamp = openedTimestamp
		self:save()
	end end function _C_bi(self,super)return function(_C_self_passed,createdTimestamp)
		self.createdTimestamp = createdTimestamp
		self:save()
	end end function _C_bj(self,super)return function(_C_self_passed,modifiedTimestamp)
		self.modifiedTimestamp = modifiedTimestamp
		self:save()
	end end _C_bk={set={["openedTimestamp"]={_C_bh},["createdTimestamp"]={_C_bi},["modifiedTimestamp"]={_C_bj}}}function _C_bl(_,k,n,v)if _C_bS(n)then _C_D(_,k,"FileSystemItem",n)end v[k]=n end _C_bm=setmetatable({["createdTimestamp"]=_C_9x,["modifiedTimestamp"]=_C_9x,["file"]=_C_9x,["metadataPath"]=_C_9x,["mime"]=_C_9x,["openedTimestamp"]=_C_9x,["initialise"]=_C_9x,["rename"]=_C_9x,["updateOpenedTimestamp"]=_C_9x,["save"]=_C_9x,["updateCreatedTimestamp"]=_C_9x,["delete"]=_C_9x,["load"]=_C_9x,["updateModifiedTimestamp"]=_C_9x,["serialise"]=_C_9x,["create"]=_C_9x,["copyTo"]=_C_9x,["moveTo"]=_C_9x,["guessMIME"]=_C_9x},_C_9z)_C_bn=setmetatable({["createdTimestamp"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["modifiedTimestamp"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["file"]=_C_bl,["metadataPath"]=_C_B1,["mime"]=_C_B0,["openedTimestamp"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["initialise"]=_C_7,["rename"]=_C_7,["updateOpenedTimestamp"]=_C_7,["save"]=_C_7,["updateCreatedTimestamp"]=_C_7,["delete"]=_C_7,["load"]=_C_7,["updateModifiedTimestamp"]=_C_7,["serialise"]=_C_7,["create"]=_C_7,["copyTo"]=_C_7,["moveTo"]=_C_7,["guessMIME"]=_C_7},_C_9z)_C_bo={[Metadata]=1}setmetatable(IFlowItem,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_5M end})_C_bq={}_C_br={}_C_bs={["fromInterface"]={[2]=_C_Ke,}}_C_bt={[HomeContainer]=1,[_C_5O]=1,[ISwitchableView]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_bu={"Container","View"}_C_bv={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return false\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["children"]=loadstring("return {}\
\9\
"),["hadFirstFocus"]=loadstring("return false\
\
    \
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["isOpening"]=loadstring("return true\
\9\
"),["scale"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_bw={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["hadFirstFocus"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["scale"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["isVisible"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["backgroundImage"]={_C_HL,"Image"},["interfaceLinks"]={_C_An,"Table"},["isMouseInView"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isOpening"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_bx(self,super)return function(_C_self_passed,...)
        super( ... )
        self.backgroundImage = Image.static:fromPath( self.application.settings.backgroundImagePath )
    end end
function _C_by(self,super)return function(_C_self_passed,toRight)
        self:animate( "x", -self.width, ANIMATION_FLY_TIME, nil, ANIMATION_FLY_EASING, ANIMATION_FLY_TIME/2 - 0.1 )
        self:animate( "scale", ANIMATION_SCALE, ANIMATION_SCALE_TIME, nil, ANIMATION_SCALE_EASING, nil, false )
    end end
function _C_bz(self,super)return function(_C_self_passed,fromLeft)
        self.scale = ANIMATION_SCALE
        self.x = -self.width
        self:animate( "x", 1, ANIMATION_FLY_TIME, nil, ANIMATION_FLY_EASING, ANIMATION_FLY_TIME / 2 - 0.1 )
        self:animate( "scale", 1, ANIMATION_SCALE_TIME, nil, ANIMATION_SCALE_EASING, ANIMATION_FLY_TIME - 0.1, false )
    end end
function _C_c0(self,super)return function(_C_self_passed)
        self.canvas = ScaleableCanvas( self.width, self.height, self )
    end end
function _C_c1(self,super)return function(_C_self_passed)
        self.canvas:image( self.backgroundImage, 1, 1, self.width, self.height ) -- TODO: image fitting options (e.g. centre, squish etc.)
    end end
_C_c2={["getCoordinates"]={[3]=_C_F3,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_Kv,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["flyOutFocused"]={_C_by,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["initialiseCanvas"]={_C_c0,[3]=_C_F6,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["hitTest"]={[3]=_C_FX,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_bx,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["addFocus"]={[3]=_C_FQ,},["flyInFocused"]={_C_bz,},["animateResize"]={[3]=_C_FW,},["onDraw"]={_C_c1,_C_L0,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["updatePins"]={[2]=_C_Kn,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}function _C_c3(self,super)return function(_C_self_passed,backgroundImage)
        self.backgroundImage = backgroundImage
        self.needsDraw = true
    end end function _C_c4(self,super)return function(_C_self_passed,scale)
        self.scale = scale
        local canvas = self.canvas
        canvas.scaleX = scale
        canvas.scaleY = scale
        local parent = self.parent
        if parent then
            parent.needsDraw = true
        end
    end end function _C_c5(self,super)return function(_C_self_passed,isFocused)
        super( isFocused )
        if not self.hadFirstFocus then
            if isFocused then
                self.hadFirstFocus = true
            end
        elseif isFocused then
            self:flyInFocused()
        else
            self:flyOutFocused()
        end
    end end _C_c6={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={_C_c5,[3]=_C_Fi},["scale"]={_C_c4},["backgroundImage"]={_C_c3},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_c7=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["hadFirstFocus"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["backgroundImage"]=_C_9x,["scale"]=_C_9x,["y"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["isOpening"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["flyOutFocused"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["initialiseCanvas"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["addFocus"]=_C_9x,["flyInFocused"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updatePins"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["dispose"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_c8=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["hadFirstFocus"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["backgroundImage"]=function(_,k,n,v,w,s,d,l)if _C_HL(n)then _C_D(_,k,"Image",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["scale"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isOpening"]=_C_Cu,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["flyOutFocused"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["initialiseCanvas"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["addFocus"]=_C_7,["flyInFocused"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updatePins"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["dispose"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_c9={[HomeContainer]=1,[ISwitchableView]=1,[Container]=1,[View]=1}_C_cA={"Container","View"}_C_cC={["associations"]=loadstring("return {}\
\9\
"),["extensionMimes"]=loadstring("return {}\
\
\
\9\
"),}_C_cD={["associations"]={_C_An,"Table"},["extensionMimes"]={_C_An,"Table"},}function _C_cE(self,super)return function(_C_self_passed,mime,id)if _C_Aq(mime)then _C_F(self,"mime","getAssociation","String (allowsNil)",mime)end if _C_CU(id)then _C_F(self,"id","getAssociation","Number (allowsNil)",id)end 
		if mime then
			local associations = self.associations
			local mimeAssociations = associations[mime]
			if mimeAssociations then
				if not id then
					return mimeAssociations[1]
				else
					for i, association in ipairs( mimeAssociations ) do
						if association.id == id then
							return association
						end
					end
					return mimeAssociations[1]
				end
			end
		end

		if not unknownFileAssociation then
			unknownFileAssociation = UnknownFileAssociation()
		end
		return unknownFileAssociation
	end end
function _C_cF(self,super)return function(_C_self_passed,mime)if _C_Ai(mime)then _C_F(self,"mime","getAllAssociations","String",mime)end 
		return self.associations[mime] or {}
	end end
function _C_cG(self,super)return function(_C_self_passed,association,index)if _C_Ss(association)then _C_F(self,"association","registerAssociation","FileAssociation",association)end if _C_CU(index)then _C_F(self,"index","registerAssociation","Number (allowsNil)",index)end 
		local associations = self.associations
		local mime = association.mime
		local mimeAssociations = associations[mime]
		if not mimeAssociations then
			mimeAssociations = {}
			associations[mime] = mimeAssociations
		end

		if index then
			table.insert( mimeAssociations, index, association )
		else
			table.insert( mimeAssociations, association )
		end

		-- add these assocation's extensions to the extensionMimes table
		local extensionMimes = self.extensionMimes
		for i, extension in ipairs( association.extensions ) do
			if not extensionMimes[extension] then -- we'll only set the mime if there isn't one already there. theortically they should be identical anyway
				extensionMimes[extension] = mime
			end
		end
		local application = self.application
		if application then
			local event = application.event
			if event then
				event:handleEvent( FileAssociationRegisteredInterfaceEvent( association ) )
			end
		end
	end end
function _C_cI(v)if v==nil then return false end local j=_C_L[v]return not(j and j[FileAssociation])end  function _C_cH(self,super)return function(_C_self_passed,fileSystemItem,association,id)if _C_bS(fileSystemItem)then _C_F(self,"fileSystemItem","open","FileSystemItem",fileSystemItem)end if _C_cI(association)then _C_F(self,"association","open","FileAssociation (allowsNil)",association)end if _C_CU(id)then _C_F(self,"id","open","Number (allowsNil)",id)end 
		local path, mime = fileSystemItem.path, fileSystemItem.metadata.mime
		association = association or self:getAssociation( mime, id )
		if association then
			if Quartz then
				-- if we're running under Quartz we need it to run the program instead
				Quartz:open( path, association.id )
			else
				local application = self.application
				if application:typeOf( QuartzApplication ) then
					local programBundle = association.programBundle
					if programBundle then
						local argumentFormat = association.argumentFormat
						local arguments = {}
						for i, argument in ipairs( argumentFormat ) do
							table.insert( arguments, argument == true and path or argument )
						end
						self.application.programManager:run( Program.static:fromBundle( programBundle, arguments ) )
					end
				end
			end
		else
			-- TODO: error dialouge
		end
	end end
_C_cJ={["getAssociation"]={_C_cE,},["getAllAssociations"]={_C_cF,},["registerAssociation"]={_C_cG,},["open"]={_C_cH,}}_C_cK=setmetatable({["associations"]=_C_9x,["extensionMimes"]=_C_9x,["getAssociation"]=_C_9x,["getAllAssociations"]=_C_9x,["registerAssociation"]=_C_9x,["open"]=_C_9x},_C_9z)_C_cL=setmetatable({["associations"]=_C_Ax,["extensionMimes"]=_C_Ax,["getAssociation"]=_C_7,["getAllAssociations"]=_C_7,["registerAssociation"]=_C_7,["open"]=_C_7},_C_9z)_C_cM={[FileAssociationManager]=1,[_C_5Q]=1}_C_cN={}_C_cO={}_C_cP={[FileAssociationManager]=1}_C_cR={["eventType"]=loadstring("return \"interface_menu_changed\";\
\9\
\9\
"),}_C_cS={["eventType"]={_C_Ai,"String"},}_C_cT={["eventClasses"]=loadstring([[return {}

	
]])}_C_cU={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_cV=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_cW=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_cX={[MenuChangedInterfaceEvent]=1,[_C_5S]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_cY={"InterfaceEvent","Event"}_C_cZ={["isSentToChildren"]=loadstring("return false\
\
\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_ca={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}_C_cb={["makeRelative"]={[3]=_C_Cs,}}_C_cc=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_cd=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_ce={[MenuChangedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_cf={"InterfaceEvent","Event"}_C_ch={}_C_ci={}function _C_cj(self,super)return function(_C_self_passed,keyCode)
		return keyStrings[keyCode] or "unknown"
	end end
function _C_ck(self,super)return function(_C_self_passed,keyString)
		if not keyString then return false end
		for i, _keyString in pairs( keyStrings ) do
			if _keyString == keyString then
				return true
			end
		end
		return false
	end end
function _C_cl(self,super)return function(_C_self_passed,keyString)
		return ( not keyString and "" or keySymbols[keyString] or keyString:upper() )
	end end
_C_cm={["convert"]={_C_cj,},["isValid"]={_C_ck,},["symbol"]={_C_cl,}}_C_cn={[KeyboardShortcutManager]=1,[_C_5U]=1}_C_co={["keysUpdates"]=loadstring("return {}\
\9\
"),["keysDown"]=loadstring("return {}\
\9\
"),}local function _C_cq(v)return not(_C_M[v]or _C_L[v])end _C_cp={["keysUpdates"]={_C_An,"Table"},["keysDown"]={_C_An,"Table"},["owner"]={_C_cq,"InstanceOrStatic"},["eventManager"]={_C_Da,"EventManager"},}function _C_cr(self,super)return function(_C_self_passed,owner)if _C_cq(owner)then _C_F(self,"owner","initialise","InstanceOrStatic",owner)end 
		self.owner = owner
		self.eventManager = EventManager( self )
		self.eventManager:connectGlobal( DownKeyEvent, self.onGlobalKeyDown )
		self.eventManager:connectGlobal( UpKeyEvent, self.onGlobalKeyUp )
	end end
function _C_cs(self,super)return function(_C_self_passed,keyString)
		return self.keysDown[keyString] == true
	end end
function _C_ct(self,super)return function(_C_self_passed,keyString)
		if os.clock() - self.keysUpdates[keyString] >= 10 then
			self.keysDown[keyString] = nil
			self.keysUpdates[keyString] = os.clock()
		end
	end end
function _C_cu(self,super)return function(_C_self_passed,event,phase)if _C_GI(event)then _C_F(self,"event","onGlobalKeyUp","UpKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalKeyUp","Event.phases",phase)end 
		local keyString = event.keyString
		self.keysDown[keyString] = nil
		self.keysUpdates[keyString] = os.clock()
	end end
function _C_cv(self,super)return function(_C_self_passed)
		return self.owner.event:handleEvent( KeyboardShortcutEvent( self.keysDown ) )
	end end
function _C_cw(self,super)return function(_C_self_passed,keyString)
		local keysDown = self.keysDown
		for k, v in pairs( keysDown ) do
			if k ~= keyString then
				if v then
					return false
				end
			elseif not v then
				return false
			end
		end
		return keysDown[keyString] == true
	end end
function _C_cx(self,super)return function(_C_self_passed,event,phase)if _C_GR(event)then _C_F(self,"event","onGlobalKeyDown","DownKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalKeyDown","Event.phases",phase)end 
		local keyString = event.keyString
		if keyString then
			self.keysDown[keyString] = true
			self.keysUpdates[keyString] = os.clock()
			self.owner:schedule( self.onKeyTimeout, 10, self, keyString )
			return self:sendEvent()
		end
	end end
_C_cy={["initialise"]={_C_cr,},["isKeyDown"]={_C_cs,},["onKeyTimeout"]={_C_ct,},["onGlobalKeyUp"]={_C_cu,},["sendEvent"]={_C_cv,},["isOnlyKeyDown"]={_C_cw,},["onGlobalKeyDown"]={_C_cx,}}function _C_cz(_,k,n,v)if _C_cq(n)then _C_D(_,k,"InstanceOrStatic",n)end v[k]=n end _C_d0=setmetatable({["keysUpdates"]=_C_9x,["keysDown"]=_C_9x,["owner"]=_C_9x,["eventManager"]=_C_9x,["initialise"]=_C_9x,["isKeyDown"]=_C_9x,["onKeyTimeout"]=_C_9x,["onGlobalKeyUp"]=_C_9x,["sendEvent"]=_C_9x,["isOnlyKeyDown"]=_C_9x,["onGlobalKeyDown"]=_C_9x},_C_9z)_C_d1=setmetatable({["keysUpdates"]=_C_Ax,["keysDown"]=_C_Ax,["owner"]=_C_cz,["eventManager"]=_C_Dm,["initialise"]=_C_7,["isKeyDown"]=_C_7,["onKeyTimeout"]=_C_7,["onGlobalKeyUp"]=_C_7,["sendEvent"]=_C_7,["isOnlyKeyDown"]=_C_7,["onGlobalKeyDown"]=_C_7},_C_9z)_C_d2={[KeyboardShortcutManager]=1}setmetatable(ITreeChild,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_5V end})_C_d4={}_C_d5={}_C_d6={[TopBarItem]=1,[_C_9Y]=1,[View]=1,[_C_3N]=1}_C_d7={"View"}_C_d8={["cursor"]=loadstring("return ClickableCursor.static\
\
\
    \
"),["x"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isRemoving"]=loadstring("return false\
\9\
"),["pin"]=loadstring("return TopBarItem.pins.LEFT\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isSeparatorVisible"]=loadstring("return true\
\
    \
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["height"]=loadstring("return 14\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_d9={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["isRemoving"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["pin"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["size"]={_C_CU,"Number (allowsNil)"},["width"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["isSeparatorVisible"]={_C_Cp,"Boolean"},}function _C_dA(self,super)return function(_C_self_passed,...)
        super( ... )
        self:event( DownMouseEvent, self.onMouseDown )
        self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
    end end
function _C_dB(self,super)return function(_C_self_passed)
        self.theme.style = self.isPressed and "pressed" or "default"
    end end
function _C_dC(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
        if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
            local parent = self.parent
            if parent.activeView == self then
                parent.activeView = nil
            end
            self.isPressed = false
            if self:hitTestEvent( event ) then
                self.eventManager:handleEvent( ActionInterfaceEvent( self, event ) )
                local result = self.eventManager:handleEvent( event )
                return result == nil and true or result
            end
        end
    end end
function _C_dD(self,super)return function(_C_self_passed)
        super()
        local width, height, theme, canvas, isPinnedRight = self.width, self.height, self.theme, self.canvas, self.pin == pins.RIGHT

        local rectangleMask = RectangleMask( isPinnedRight and 2 or 1, 1, width - 1, height )
        canvas:fill( theme:value( "fillColour" ), rectangleMask )

        if self.isSeparatorVisible then
            local separatorTopMargin, separatorBottomMargin = theme:value( "separatorTopMargin" ), theme:value( "separatorBottomMargin" )
            canvas:fill( theme:value( "separatorColour" ), theme:value( "separatorIsDashed" ) and SeparatorMask( isPinnedRight and 1 or width, 1 + separatorTopMargin, 1, height - separatorTopMargin - separatorBottomMargin ) or RectangleMask( isPinnedRight and 1 or width, 1 + separatorTopMargin, 1, separatorHeight ) )
        end
    end end
function _C_dE(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
        if event.mouseButton == MouseEvent.mouseButtons.LEFT then
            self.isPressed = true
            self.parent.activeView = self
        end
        return true
    end end
_C_dF={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["hitTestEvent"]={[2]=_C_FI,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_dA,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["onGlobalMouseUp"]={_C_dC,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["animateResize"]={[2]=_C_FW,},["onDraw"]={_C_dD,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_dB,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["dispose"]={[2]=_C_FK,},["onMouseDown"]={_C_dE,},["hitTest"]={[2]=_C_FX,}}function _C_dG(self,super)return function(_C_self_passed,isPressed)
        self.isPressed = isPressed
        self:updateThemeStyle()
    end end function _C_dH(self,super)return function(_C_self_passed,isSeparatorVisible)
        self.isSeparatorVisible = isSeparatorVisible    
        self.needsDraw = true
    end end _C_dI={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_dG},["isFocused"]={[2]=_C_Fi},["isSeparatorVisible"]={_C_dH},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_dJ=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["isRemoving"]=_C_9x,["topPin"]=_C_9x,["pin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSeparatorVisible"]=_C_9x,["animations"]=_C_9x,["parsedPins"]=_C_9x,["eventManager"]=_C_9x,["size"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["hitTestEvent"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["dispose"]=_C_9x,["onMouseDown"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_dK=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isRemoving"]=_C_Cu,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["pin"]=_C_B2,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["isSeparatorVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["parsedPins"]=_C_Ax,["eventManager"]=_C_Dm,["size"]=_C_LL,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["hitTestEvent"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["dispose"]=_C_7,["onMouseDown"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_dL={[TopBarItem]=1,[View]=1}_C_dM={"View"}_C_dO={}_C_dP={}_C_dQ={[ClockItem]=1,[_C_5X]=1,[TopBarItem]=1,[_C_9Y]=1,[View]=1,[_C_3N]=1}_C_dR={"TopBarItem","View"}_C_dS={["cursor"]=loadstring("return ClickableCursor.static\
\
\
    \
"),["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isRemoving"]=loadstring("return false\
\9\
"),["pin"]=loadstring("return TopBarItem.pins.RIGHT\
\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["width"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["isSeparatorVisible"]=loadstring("return true\
\
    \
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isAnalogue"]=loadstring("return self.application.settings.isClockAnalogue\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"0:00am\"\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),["height"]=loadstring("return 14\
\9\
"),["isTwentyFourHour"]=loadstring("return self.application.settings.isClockTwentyFourHour\
\
    \
"),}_C_dT={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["y"]={_C_Ar,"Number"},["isRemoving"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["pin"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["width"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["isSeparatorVisible"]={_C_Cp,"Boolean"},["leftPin"]={_C_Aq,"String (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["size"]={_C_CU,"Number (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isAnalogue"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["shadowSize"]={_C_Ar,"Number"},["text"]={_C_Ai,"String"},["isMouseInView"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["isTwentyFourHour"]={_C_Cp,"Boolean"},}function _C_dU(self,super)return function(_C_self_passed,...)
        super( ... )
        self:event( ActionInterfaceEvent, self.onAction )
        self:event( ReadyInterfaceEvent, self.onReady )
    end end
function _C_dV(self,super)return function(_C_self_passed)
        local isAnalogue = self.isAnalogue
        local refreshTime
        if not isAnalogue then
            local time = os.time()
            local seconds = time % 60
            local minutes = math.floor( ( time / 60 ) % 60 )
            local hours = math.floor( ( time / 60 / 60 ) % 24 )
            local ampm
            if not self.isTwentyFourHour then
                if hours >= 12 then
                    ampm = "pm"
                else
                    ampm = "am"
                end
                if hours >= 13 then
                    hours = hours - 12
                end
            end
            if ampm then
                self.text = string.format( "%d:%02d%s", hours, minutes, ampm )
            else
                self.text = string.format( "%02d:%02d", hours, minutes )
            end
            refreshTime = 60 - seconds
        else
            self.needsDraw = true
            refreshTime = 2
        end
        if not dontSchedule then
            self.application:schedule(self.updateClock, refreshTime, self)
        end
    end end
function _C_dW(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
        self:updateClock()
    end end
function _C_dX(self,super)return function(_C_self_passed)
        super()
        local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas

        local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
        if self.isAnalogue then
            local AnalogueDiameter = theme:value( "AnalogueDiameter" )
            local circleMask = CircleMask( leftMargin + 1, math.floor( ( height - AnalogueDiameter ) / 2 + 0.5 ), AnalogueDiameter )
            canvas:fill( theme:value( "AnalogueFillColour" ), circleMask )
            canvas:outline( theme:value( "AnalogueOutlineColour" ), circleMask, theme:value( "AnalogueOutlineThickness" ) )

            local time = os.time()
            local seconds = time % 60
            local minutes = math.floor( ( time / 60 ) % 60 )
            local hours = math.floor( ( time / 60 / 60 ) % 24 )
            if hours >= 13 then
                hours = hours - 12
            end

            local AnalogueRadius = AnalogueDiameter / 2
            local centreX, centreY = math.floor( 1 + leftMargin + AnalogueRadius ), math.floor( ( height - AnalogueDiameter ) / 2 + 0.5 + AnalogueRadius)
            local function position( timePercentage, length, object )
                local angle = 2 * math.pi * timePercentage
                local rawWidth = length * math.sin( angle )
                local rawHeight = length * math.cos( angle )
                local width = math.floor(math.max(math.abs(rawWidth), 1) + 0.5)
                local height = math.floor(math.max(math.abs(rawHeight), 1) + 0.5)
                local isFromTopLeft = rawWidth * rawHeight <= 0
                return rawWidth > 0 and centreX or (1 + math.floor( centreX - width + 0.5 )),
                       rawHeight < 0 and centreY or (1 + math.floor( centreY - height + 0.5 )),
                       width,
                       height,
                       isFromTopLeft
            end
            
            local secondsMask = LineMask( position( seconds / 60, theme:value( "secondsLength" ) ) )
            local minutesMask = LineMask( position( minutes / 60, theme:value( "minutesLength" ) ) )
            local hoursMask = LineMask( position( hours / 12 + (minutes > 40 and minutes / 60 / 12 or 0), theme:value( "hoursLength" ) ) )

            canvas:fill( theme:value( "hoursColour" ), hoursMask )
            canvas:fill( theme:value( "minutesColour" ), minutesMask )
            canvas:fill( theme:value( "secondsColour" ), secondsMask )
        else
            canvas:fill( theme:value( "contentColour" ), TextMask( 1 + leftMargin, 1 + topMargin, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.text, theme:value( "font" ) ) )
        end
    end end
function _C_dZ(v)local j=_C_L[v]return not(j and j[ActionInterfaceEvent])end  function _C_dY(self,super)return function(_C_self_passed,event,phase)if _C_dZ(event)then _C_F(self,"event","onAction","ActionInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onAction","Event.phases",phase)end 
        if self.isAnalogue then
            self.isAnalogue = false
        else
            if self.isTwentyFourHour then
                self.isTwentyFourHour = false
                self.isAnalogue = true
            else
                self.isTwentyFourHour = true
            end
        end
    end end
_C_da={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["onAction"]={_C_dY,},["draw"]={[3]=_C_F9,},["clearFocus"]={[3]=_C_FP,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[3]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={_C_dU,_C_dA,_C_FG,},["updateClock"]={_C_dV,},["onGlobalMouseUp"]={[2]=_C_dC,},["animate"]={[3]=_C_FV,},["animateResize"]={[3]=_C_FW,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onDraw"]={_C_dX,_C_dD,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_dB,},["onReady"]={_C_dW,},["startDragDrop"]={[3]=_C_FR,},["hitTestEvent"]={[3]=_C_FI,},["siblingsOfType"]={[3]=_C_FH,},["onMouseDown"]={[2]=_C_dE,},["hitTest"]={[3]=_C_FX,}}function _C_db(self,super)return function(_C_self_passed)
        local theme = self.theme
        local margin = theme:value( "leftMargin" ) + theme:value( "rightMargin" ) + 1
        if self.isAnalogue then
            return theme:value( "AnalogueDiameter" ) + margin
        end

        local text = self.text
        local fontWidth = self.theme:value( "font" ):getWidth( text )
        return fontWidth + margin
    end end function _C_dc(self,super)return function(_C_self_passed,isAnalogue)
        self.isAnalogue = isAnalogue
        self:updateClock()
        local parent = self.parent
        if parent then
            parent.needsLayoutUpdate = true
        end
        local settings = self.application.settings
        settings.isClockAnalogue = isAnalogue
        settings:save()
    end end function _C_dd(self,super)return function(_C_self_passed,text)
        if self.text ~= text then
            self.text = text
            self.needsDraw = true
            local parent = self.parent
            if parent then
                parent.needsLayoutUpdate = true
            end
        end
    end end function _C_de(self,super)return function(_C_self_passed,isTwentyFourHour)
        self.isTwentyFourHour = isTwentyFourHour
        self:updateClock()
        local parent = self.parent
        if parent then
            parent.needsLayoutUpdate = true
        end
        local settings = self.application.settings
        settings.isClockTwentyFourHour = isTwentyFourHour
        settings:save()
    end end _C_df={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_dG},["isFocused"]={[3]=_C_Fi},["isSeparatorVisible"]={[2]=_C_dH},["isTwentyFourHour"]={_C_de},["width"]={[3]=_C_Fg},["isAnalogue"]={_C_dc},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={_C_dd},["rightPin"]={[3]=_C_Fk},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["size"]={_C_db},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_dg=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["isRemoving"]=_C_9x,["topPin"]=_C_9x,["pin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["isMouseInView"]=_C_9x,["width"]=_C_9x,["canvas"]=_C_9x,["leftPin"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSeparatorVisible"]=_C_9x,["animations"]=_C_9x,["parsedPins"]=_C_9x,["eventManager"]=_C_9x,["size"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["specialMouseTimes"]=_C_9x,["isAnalogue"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["isTwentyFourHour"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onAction"]=_C_9x,["draw"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["updateClock"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onReady"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["onMouseDown"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_dh=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isRemoving"]=_C_Cu,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["pin"]=_C_B2,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isMouseInView"]=_C_Cu,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["shadowMask"]=_C_Fy,["isSeparatorVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["parsedPins"]=_C_Ax,["eventManager"]=_C_Dm,["size"]=_C_LL,["specialMouseTimes"]=_C_Ax,["isAnalogue"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isTwentyFourHour"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onAction"]=_C_7,["draw"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["updateClock"]=_C_7,["onGlobalMouseUp"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onReady"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["onMouseDown"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_di={[ClockItem]=1,[TopBarItem]=1,[View]=1}_C_dj={"TopBarItem","View"}_C_dl={}_C_dm={}_C_dn={[RoundedRectangleMask]=1,[_C_5Z]=1,[Mask]=1,[_C_36]=1}_C_do={"Mask"}_C_dp={}_C_dq={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_dr(self,super)return function(_C_self_passed,x,y,width,height,topLeftRadius,topRightRadius,bottomLeftRadius,bottomRightRadius)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if _C_Ar(topLeftRadius)then _C_F(self,"topLeftRadius","initialise","Number",topLeftRadius)end if topRightRadius==nil then topRightRadius=topLeftRadius end if _C_Ar(topRightRadius)then _C_F(self,"topRightRadius","initialise","Number",topRightRadius)end if bottomLeftRadius==nil then bottomLeftRadius=topLeftRadius end if _C_Ar(bottomLeftRadius)then _C_F(self,"bottomLeftRadius","initialise","Number",bottomLeftRadius)end if bottomRightRadius==nil then bottomRightRadius=topRightRadius  end if _C_Ar(bottomRightRadius)then _C_F(self,"bottomRightRadius","initialise","Number",bottomRightRadius)end 
		local pixels = {}

		corner( pixels, width, height, topLeftRadius, 0 )
		corner( pixels, width, height, topRightRadius, 2 )
		corner( pixels, width, height, bottomLeftRadius, 1 )
		corner( pixels, width, height, bottomRightRadius, 3 )

		local maxTopRadius = math.max( topLeftRadius, topRightRadius )
		for x = topLeftRadius + 1, width - topRightRadius do
			for y = 1, maxTopRadius do
				pixels[(y - 1) * width + x] = true
			end
		end

		local maxBottomRadius = math.max( bottomLeftRadius, bottomRightRadius )
		for x = bottomLeftRadius + 1, width - bottomRightRadius do
			for y = height - maxBottomRadius + 1, height do
				pixels[(y - 1) * width + x] = true
			end
		end

		for x = 1, width do
			for y = maxTopRadius + 1, height - maxBottomRadius do
				pixels[(y - 1) * width + x] = true
			end
		end

		super( x, y, width, height, pixels )
	end end
_C_ds={["initialise"]={_C_dr,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_dt=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_du=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_dv={[RoundedRectangleMask]=1,[Mask]=1}_C_dw={"Mask"}_C_dy={["eventType"]=loadstring("return \"interface_ready_container\";\
\
\9\
"),}_C_dz={["eventType"]={_C_Ai,"String"},}_C_e0={["eventClasses"]=loadstring([[return {}

	
]])}_C_e1={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_e2=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_e3=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_e4={[ContainerReadyInterfaceEvent]=1,[_C_5b]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_e5={"InterfaceEvent","Event"}_C_e6={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return false\
\
\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_e7={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}_C_e8={["makeRelative"]={[3]=_C_Cs,}}_C_e9=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_eA=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_eB={[ContainerReadyInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_eC={"InterfaceEvent","Event"}_C_eE={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}_C_eF={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}function _C_eG(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		self.theme.style = "default"
	end end
function _C_eH(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onGlobalMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseDown","Event.phases",phase)end 
		self.theme.style = "down"
	end end
function _C_eI(self,super)return function(_C_self_passed,...)
		super( ... )
		self.eventManager:connectGlobal( DownMouseEvent, self.onGlobalMouseDown, Event.phases.BEFORE )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
_C_eJ={["onThemeChanged"]={[2]=_C_Dd,},["onGlobalMouseUp"]={_C_eG,},["setupAll"]={[2]=_C_Dk,},["drawTo"]={[2]=_C_Dg,},["updateAppearance"]={[2]=_C_Di,},["onGlobalMouseDown"]={_C_eH,},["setup"]={_C_eI,_C_Dj,}}_C_eK=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["setupAll"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["onGlobalMouseDown"]=_C_9x,["setup"]=_C_9x},_C_9z)_C_eL=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["onGlobalMouseUp"]=_C_7,["setupAll"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["onGlobalMouseDown"]=_C_7,["setup"]=_C_7},_C_9z)_C_eM={[ClickableCursor]=1,[_C_5d]=1,[Cursor]=1,[_C_3d]=1}_C_eN={"Cursor"}_C_eO={}_C_eP={}_C_eQ={[ClickableCursor]=1,[Cursor]=1}_C_eR={"Cursor"}_C_eT={["cache"]=loadstring("return {}\
\9\
\
\9\
\
\
\
\
\
\
\9\
"),}_C_eU={["cache"]={_C_An,"Table"},["systemFont"]={_C_BO,"Font"},}_C_eV={["encodeHandle"]={[2]=_C_BP,},["encodeFile"]={[2]=_C_BQ,},["initialisePresets"]={[2]=_C_BR,},["decodeFile"]={[2]=_C_BS,},["decodeResource"]={[2]=_C_BU,},["decodeHandle"]={[2]=_C_BT,},["readMetadata"]={[2]=_C_BV,},["fromName"]={[2]=_C_BW,}}_C_eW=setmetatable({["cache"]=_C_9x,["systemFont"]=_C_9x,["encodeHandle"]=_C_9x,["encodeFile"]=_C_9x,["initialisePresets"]=_C_9x,["decodeFile"]=_C_9x,["decodeResource"]=_C_9x,["decodeHandle"]=_C_9x,["readMetadata"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_eX=setmetatable({["cache"]=_C_Ax,["systemFont"]=_C_BY,["encodeHandle"]=_C_7,["encodeFile"]=_C_7,["initialisePresets"]=_C_7,["decodeFile"]=_C_7,["decodeResource"]=_C_7,["decodeHandle"]=_C_7,["readMetadata"]=_C_7,["fromName"]=_C_7},_C_9z)_C_eY={[VectorFont]=1,[_C_5f]=1,[Font]=1,[_C_8m]=1}_C_eZ={"Font"}_C_ea={["desiredHeight"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 0\
\9\
"),["spacing"]=loadstring("return 1\
\9\
"),}_C_eb={["scale"]={_C_Ar,"Number"},["spacing"]={_C_Ar,"Number"},["characters"]={_C_An,"Table"},["height"]={_C_Ar,"Number"},["desiredHeight"]={_C_Ar,"Number"},}_C_ec={["initialise"]={[2]=_C_Be,},["getRawWidth"]={[2]=_C_Bf,},["getWidth"]={[2]=_C_Bg,}}_C_ed=setmetatable({["scale"]=_C_9x,["spacing"]=_C_9x,["characters"]=_C_9x,["height"]=_C_9x,["desiredHeight"]=_C_9x,["initialise"]=_C_9x,["getRawWidth"]=_C_9x,["getWidth"]=_C_9x},_C_9z)_C_ee=setmetatable({["scale"]=_C_B2,["spacing"]=_C_B2,["characters"]=_C_Ax,["height"]=_C_B2,["desiredHeight"]=_C_B2,["initialise"]=_C_7,["getRawWidth"]=_C_7,["getWidth"]=_C_7},_C_9z)_C_ef={[VectorFont]=1,[Font]=1}_C_eg={"Font"}_C_ei={}_C_ej={}_C_ek={["fromInterface"]={[2]=_C_Ke,}}_C_el={[ScrollContainer]=1,[_C_6n]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_em={"Container","View"}_C_en={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_eo={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_ep(self,super)return function(_C_self_passed,height)
		self.parent:updateContainerSize()
	end end
function _C_eq(self,super)return function(_C_self_passed,width)
		self.parent:updateContainerSize()
	end end
_C_er={["updateHeight"]={_C_ep,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_Kv,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["updateWidth"]={_C_eq,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["hitTest"]={[3]=_C_FX,},["insert"]={[2]=_C_Kw,},["initialise"]={[2]=_C_Kx,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["animateResize"]={[3]=_C_FW,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["initialiseCanvas"]={[3]=_C_F6,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}_C_es={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_et=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateHeight"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateWidth"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["initialiseCanvas"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_eu=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateHeight"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateWidth"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["initialiseCanvas"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["getCoordinates"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_ev={[ScrollContainer]=1,[Container]=1,[View]=1}_C_ew={"Container","View"}_C_ey={}_C_ez={}_C_f0={["fromInterface"]={[3]=_C_Ke,}}_C_f1={[ListContainer]=1,[_C_6L]=1,[IDragDropDestination]=1,[ScrollContainer]=1,[_C_6n]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_f2={"ScrollContainer","Container","View"}_C_f3={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["width"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["canRearrange"]=loadstring("return true\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["dropStyle"]=loadstring("return DragDropManager.dropStyles.RETURN\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["canTransferItems"]=loadstring("return false\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_f5(v)return not _C_Ab[v] end _C_f4={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["canRearrange"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["canTransferItems"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["index"]={_C_CU,"Number (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["dropStyle"]={_C_f5,"DragDropManager.dropStyles"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isVisible"]={_C_Cp,"Boolean"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_f6(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( ChildAddedInterfaceEvent, self.onChildAdded )
		self:event( ChildRemovedInterfaceEvent, self.onChildRemoved )
		self:event( ReadyInterfaceEvent, self.onReady, Event.phases.AFTER )
	end end
function _C_f8(v)local j=_C_L[v]return not(j and j[DragView])end  function _C_f7(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropMoved","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropMoved","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropMoved","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropMoved","Number",y)end 
		local _, selfY = self:getPosition()
		local listItem = data.listItem
		local children = self.children
		local index = math.max( math.min( math.floor( ( dragView.y - selfY - self.theme:value( "topMargin" ) - 1 ) / listItem.height + 1.5 ), #children), 1 )
		if listItem.index ~= index then
			listItem.index = index
			self.needsLayoutUpdate = true
		end
	end end
function _C_f9(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRemoved","Event.phases",phase)end 
		self.needsLayoutUpdate = true
	end end
function _C_fA(self,super)return function(_C_self_passed,data,isMove,x,y)if _C_FT(data)then _C_F(self,"data","dragDropDropped","ClipboardData",data)end if _C_Cp(isMove)then _C_F(self,"isMove","dragDropDropped","Boolean",isMove)end if _C_Ar(x)then _C_F(self,"x","dragDropDropped","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropDropped","Number",y)end 
	end end
function _C_fB(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropEntered","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropEntered","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropEntered","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropEntered","Number",y)end 
	end end
function _C_fC(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
		self:updateLayout( true )
	end end
function _C_fD(self,super)return function(_C_self_passed,data,isMove)if _C_FT(data)then _C_F(self,"data","canAcceptDragDrop","ClipboardData",data)end if _C_Cp(isMove)then _C_F(self,"isMove","canAcceptDragDrop","Boolean",isMove)end 
		return data:typeOf( ListClipboardData ) and (self.canTransferItems or data.listItem.parent == self)
	end end
function _C_fE(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropExited","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropExited","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropExited","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropExited","Number",y)end 
	end end
function _C_fF(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		if not event.childView:typeOf( ListItem ) then
			error( "Attempted to add view '" .. tostring( event.childView ) .. "' that does not extend ListItem to '" .. tostring( self ) .. "'", 0 )
		end
		self.needsLayoutUpdate = true
	end end
function _C_fG(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate then
			self:updateLayout()
		end
	end end
function _C_fH(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=false  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
		local children, width = self.children, self.width
		local theme = self.theme
		local y = theme:value( "topMargin" ) + 1

		local time, easing
		if not dontAnimate then
			time = theme:value( "animationDuration" )
			easing = theme:value( "animationEasing" )
		end
		for i, childView in ipairs( children ) do
			if dontAnimate then
				childView.y = y
			else
				childView:animate( "y", y, time, nil, easing )
			end
			childView.x = 1
			childView.width = width
			y = y + childView.height
		end

		local height = y + self.theme:value( "bottomMargin" )
		if dontAnimate then
			self.height = height
		else
			self:animate( "height", height, time, nil, easing )
		end

		self.needsLayoutUpdate = false
	end end
_C_fI={["updateHeight"]={[2]=_C_ep,},["onReadyLoadInterface"]={[3]=_C_Kk,},["dragDropMoved"]={_C_f7,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={_C_fG,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["updateWidth"]={[2]=_C_eq,},["canAcceptDragDrop"]={_C_fD,},["hitTest"]={[4]=_C_FX,},["addFocus"]={[4]=_C_FQ,},["sendToBack"]={[3]=_C_LD,},["onReady"]={_C_fC,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["animateResize"]={[4]=_C_FW,},["onChildOfChildAdded"]={[3]=_C_Kp,},["dragDropDropped"]={_C_fA,},["dragDropEntered"]={_C_fB,},["updateLayout"]={_C_fH,},["initialiseCanvas"]={[4]=_C_F6,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["unfocus"]={[4]=_C_F7,},["insert"]={[3]=_C_Kw,},["initialise"]={_C_f6,[3]=_C_Kx,[4]=_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["focus"]={[4]=_C_F5,},["onChildRemoved"]={_C_f9,},["getCoordinates"]={[4]=_C_F3,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["dragDropExited"]={_C_fE,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["onChildAdded"]={_C_fF,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["disposeAll"]={[3]=_C_L3,}}function _C_fJ(self,super)return function(_C_self_passed,height)
	    super:super( height )
	end end function _C_fK(self,super)return function(_C_self_passed,width)
	    super( width )
		for i, childView in ipairs( self.children ) do
			childView.width = width
		end
	end end _C_fL={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["shadowSize"]={[4]=_C_Fs},["height"]={_C_fJ,[3]=_C_LI,[4]=_C_Fr},["width"]={_C_fK,[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}function _C_fM(_,k,n,v)if _C_f5(n)then _C_D(_,k,"DragDropManager.dropStyles",n)end v[k]=n end _C_fN=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["dropStyle"]=_C_9x,["canRearrange"]=_C_9x,["canTransferItems"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateHeight"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dragDropMoved"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateWidth"]=_C_9x,["canAcceptDragDrop"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["sendToBack"]=_C_9x,["onReady"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateResize"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["dragDropDropped"]=_C_9x,["dragDropEntered"]=_C_9x,["updateLayout"]=_C_9x,["initialiseCanvas"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["unfocus"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["focus"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["dragDropExited"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["draw"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_fO=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["needsLayoutUpdate"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["dropStyle"]=_C_fM,["canRearrange"]=_C_Cu,["canTransferItems"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateHeight"]=_C_7,["onReadyLoadInterface"]=_C_7,["dragDropMoved"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateWidth"]=_C_7,["canAcceptDragDrop"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["sendToBack"]=_C_7,["onReady"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["animateResize"]=_C_7,["onChildOfChildAdded"]=_C_7,["dragDropDropped"]=_C_7,["dragDropEntered"]=_C_7,["updateLayout"]=_C_7,["initialiseCanvas"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["unfocus"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["focus"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["dragDropExited"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["draw"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_fP={[ListContainer]=1,[IDragDropDestination]=1,[ScrollContainer]=1,[Container]=1,[View]=1}_C_fQ={"ScrollContainer","Container","View"}_C_fS={}_C_fT={}_C_fU={["fromInterface"]={[4]=_C_Ke,}}_C_fV={[TreeContainer]=1,[_C_5h]=1,[IAutomaticLayout]=1,[ListContainer]=1,[_C_6L]=1,[IDragDropDestination]=1,[ScrollContainer]=1,[_C_6n]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_fW={"ListContainer","ScrollContainer","Container","View"}_C_fX={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["width"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["canRearrange"]=loadstring("return true\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["dropStyle"]=loadstring("return DragDropManager.dropStyles.RETURN\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["canTransferItems"]=loadstring("return false\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_fY={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["canRearrange"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["canTransferItems"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["index"]={_C_CU,"Number (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["dropStyle"]={_C_f5,"DragDropManager.dropStyles"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isVisible"]={_C_Cp,"Boolean"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_fZ(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=false  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
		local children, width = self.children, self.width
		local theme = self.theme
		local y = theme:value( "topMargin" ) + 1

		local time, easing
		if not dontAnimate then
			time = theme:value( "animationDuration" )
			easing = theme:value( "animationEasing" )
		end
		for i, childView in ipairs( children ) do
			if dontAnimate then
				childView.y = y
			else
				childView:animate( "y", y, time, nil, easing )
			end
			childView.x = 1
			childView.width = width
			y = y + ( childView:typeOf( TreeNode ) and ( ( childView.isFolded and childView.minHeight or childView.maxHeight) or 0 ) or childView.height )
		end

		local height = y + self.theme:value( "bottomMargin" )
		if dontAnimate then
			self.height = height
		else
			self:animate( "height", height, time, nil, easing )
		end

		self.needsLayoutUpdate = false
	end end
function _C_fa(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		if not event.childView:typeOf( ITreeChild ) then
			error( "Attempted to add view '" .. tostring( event.childView ) .. "' that does not extend ITreeChild to '" .. tostring( self ) .. "'", 0 )
		end
		self.needsLayoutUpdate = true
	end end
_C_fb={["updateLayout"]={_C_fZ,_C_fH,},["onReadyLoadInterface"]={[4]=_C_Kk,},["dragDropMoved"]={[2]=_C_f7,},["dispose"]={[4]=_C_L1,[5]=_C_FK,},["loadInterface"]={[4]=_C_Kr,},["findChildren"]={[4]=_C_Ks,},["clearFocus"]={[5]=_C_FP,},["update"]={[2]=_C_fG,[4]=_C_Kv,[5]=_C_FC,},["animateMove"]={[5]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[4]=_C_L5,},["sendToFront"]={[4]=_C_Ky,},["removeAll"]={[4]=_C_Kz,},["onDownSpecialMouseEvents"]={[5]=_C_FL,},["animate"]={[5]=_C_FV,},["updateWidth"]={[3]=_C_eq,},["canAcceptDragDrop"]={[2]=_C_fD,},["hitTest"]={[5]=_C_FX,},["addFocus"]={[5]=_C_FQ,},["sendToBack"]={[4]=_C_LD,},["dragDropExited"]={[2]=_C_fE,},["onChildOfChildRemoved"]={[4]=_C_LA,},["findChild"]={[4]=_C_Km,},["updatePins"]={[4]=_C_Kn,},["connectInterfaceLink"]={[4]=_C_Ko,},["getCoordinatesTo"]={[5]=_C_F8,},["animateResize"]={[5]=_C_FW,},["onChildOfChildAdded"]={[4]=_C_Kp,},["dragDropDropped"]={[2]=_C_fA,},["dragDropEntered"]={[2]=_C_fB,},["draw"]={[4]=_C_LC,[5]=_C_F9,},["initialiseCanvas"]={[5]=_C_F6,},["onLoadedInterfacePinUpdate"]={[4]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[5]=_C_FA,},["unfocus"]={[5]=_C_F7,},["insert"]={[4]=_C_Kw,},["initialise"]={[2]=_C_f6,[4]=_C_Kx,[5]=_C_FG,},["siblingsOfType"]={[5]=_C_FH,},["hitTestEvent"]={[5]=_C_FI,},["focus"]={[5]=_C_F5,},["onChildRemoved"]={[2]=_C_f9,},["getCoordinates"]={[5]=_C_F3,},["onDraw"]={[4]=_C_L0,[5]=_C_FU,},["getPosition"]={[5]=_C_FN,},["initialiseEventManager"]={[4]=_C_L2,[5]=_C_FO,},["updateHeight"]={[3]=_C_ep,},["remove"]={[4]=_C_L4,},["startDragDrop"]={[5]=_C_FR,},["onUpdateChildMouseEnterExit"]={[4]=_C_L7,},["onChildAdded"]={_C_fa,_C_fF,},["onReady"]={[2]=_C_fC,},["disposeAll"]={[4]=_C_L3,}}_C_fc={set={["x"]={[5]=_C_Fq},["needsVerticalPinUpdate"]={[4]=_C_LG},["y"]={[5]=_C_Fh},["needsHorizontalPinUpdate"]={[4]=_C_LJ},["leftPin"]={[5]=_C_Fm},["isFocused"]={[5]=_C_Fi},["shadowSize"]={[5]=_C_Fs},["height"]={[2]=_C_fJ,[4]=_C_LI,[5]=_C_Fr},["width"]={[2]=_C_fK,[4]=_C_LF,[5]=_C_Fg},["rightPin"]={[5]=_C_Fk},["isEnabled"]={[4]=_C_LH},["bottomPin"]={[5]=_C_Fn},["index"]={[5]=_C_Fo},["topPin"]={[5]=_C_Fj},["isVisible"]={[5]=_C_Fl},["needsDraw"]={[5]=_C_Fp}},get={["isFirst"]={[5]=_C_Fb},["siblings"]={[5]=_C_Fe},["shadowMask"]={[5]=_C_Fd},["isEnabled"]={[5]=_C_Fa},["index"]={[5]=_C_Fc},["isVisible"]={[5]=_C_FZ},["isLast"]={[5]=_C_Ff}}}_C_fd=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["dropStyle"]=_C_9x,["canRearrange"]=_C_9x,["canTransferItems"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dragDropMoved"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateWidth"]=_C_9x,["canAcceptDragDrop"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["sendToBack"]=_C_9x,["dragDropExited"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateResize"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["dragDropDropped"]=_C_9x,["dragDropEntered"]=_C_9x,["draw"]=_C_9x,["initialiseCanvas"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["unfocus"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["focus"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateHeight"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["onReady"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_fe=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["needsLayoutUpdate"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["dropStyle"]=_C_fM,["canRearrange"]=_C_Cu,["canTransferItems"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["dragDropMoved"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateWidth"]=_C_7,["canAcceptDragDrop"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["sendToBack"]=_C_7,["dragDropExited"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["animateResize"]=_C_7,["onChildOfChildAdded"]=_C_7,["dragDropDropped"]=_C_7,["dragDropEntered"]=_C_7,["draw"]=_C_7,["initialiseCanvas"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["unfocus"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["focus"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateHeight"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["onReady"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_ff={[TreeContainer]=1,[IAutomaticLayout]=1,[ListContainer]=1,[IDragDropDestination]=1,[ScrollContainer]=1,[Container]=1,[View]=1}_C_fg={"ListContainer","ScrollContainer","Container","View"}_C_fi={}_C_fj={}_C_fk={[TreeClipboardData]=1,[_C_5j]=1,[ClipboardData]=1,[_C_3K]=1}_C_fl={"ClipboardData"}_C_fm={["type"]=loadstring("return \"Silica:TreeItem\"\
\9\
"),}function _C_fo(v)local j=_C_L[v]return not(j and j[TreeItem])end  _C_fn={["treeItem"]={_C_fo,"TreeItem"},["type"]={_C_Ai,"String"},}function _C_fp(self,super)return function(_C_self_passed,treeItem)if _C_fo(treeItem)then _C_F(self,"treeItem","initialise","TreeItem",treeItem)end 
		super()
		self.treeItem = treeItem
	end end
_C_fq={["initialise"]={_C_fp,}}function _C_fr(_,k,n,v)if _C_fo(n)then _C_D(_,k,"TreeItem",n)end v[k]=n end _C_fs=setmetatable({["type"]=_C_9x,["treeItem"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_ft=setmetatable({["type"]=_C_B1,["treeItem"]=_C_fr,["initialise"]=_C_7},_C_9z)_C_fu={[TreeClipboardData]=1,[ClipboardData]=1}_C_fv={"ClipboardData"}_C_fx={}_C_fy={}_C_fz={[ArgumentTypeClassException]=1,[_C_5l]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_g0={"ClassException","FatalException","Exception"}_C_g1={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_g2={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_g3(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Incorrect value/ValueType of argument(s): " .. message
		super( message, level )
	end end
_C_g4={["initialise"]={_C_g3,[4]=_C_ED,}}_C_g5=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_g6=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_g7={[ArgumentTypeClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_g8={"ClassException","FatalException","Exception"}_C_gA={["width"]=loadstring("return 3\
\9\
"),["symbolName"]=loadstring("return \"treeFolded\"\
\9\
"),["height"]=loadstring("return 5\
\9\
\9\
"),}_C_gB={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_gC(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 3, 3 )
		path:lineTo( 1, 5 )
		path:close()

		super( path )
	end end
_C_gD={["initialise"]={_C_gC,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_gE=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_gF=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_gG={[TreeFoldedSymbol]=1,[_C_5n]=1,[Symbol]=1,[_C_34]=1}_C_gH={"Symbol"}_C_gI={}_C_gJ={}_C_gK={[TreeFoldedSymbol]=1,[Symbol]=1}_C_gL={"Symbol"}_C_gN={}_C_gO={}_C_gP={["fromInterface"]={[2]=_C_Ke,}}_C_gQ={[ToolbarContainer]=1,[_C_5p]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_gR={"Container","View"}_C_gS={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["leftPin"]=loadstring("return \"1\"\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["height"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["rightPin"]=loadstring("return \"100%\"\
\
\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_gT={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["leftPin"]={_C_Aq,"String (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["animations"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_gU(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( ChildAddedInterfaceEvent, self.onChildAdded )
		self:event( ChildRemovedInterfaceEvent, self.onChildRemoved )
	end end
function _C_gV(self,super)return function(_C_self_passed)
		local children, width, theme = self.children, self.width, self.theme
		local leftMargin, rightMargin, topMargin, bottomMargin, itemMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" ), theme:value( "itemMargin" )
		local remainingWidth = width - leftMargin - rightMargin
		local x = 1 + leftMargin
		local dynamicItems = 0
		local items = {}

		local contentHeight = 0

		for i, childView in ipairs( children ) do
			local isPressable = childView:typeOf( IToolbarPressableItem )
			childView.y = 1 + topMargin
			contentHeight = math.max( childView.height - (isPressable and 1 or 0), contentHeight )

			if childView:typeOf( ToolbarStaticSpace ) then
				local childWidth = childView.width
				remainingWidth = remainingWidth - childWidth + itemMargin
				items[i] = { nil, childWidth }
			elseif childView:typeOf( IToolbarDynamicItem ) then
				dynamicItems = dynamicItems + 1
				items[i] = { childView, nil, isPressable }
				remainingWidth = remainingWidth - itemMargin
			else
				local childWidth = childView.width
				remainingWidth = remainingWidth - childWidth - itemMargin + 1
				items[i] = { childView, childWidth, isPressable }
			end
		end

		local dynamicWidth = (remainingWidth + itemMargin) / dynamicItems
		local passedFirstDynamic = false
		for i, item in ipairs( items ) do
			local childView, childWidth, isPressable = item[1], item[2], item[3]
			if not childWidth then
				if passedFirstDynamic then
					childWidth = math.floor( dynamicWidth )
				else
					childWidth = math.ceil( dynamicWidth )
					passedFirstDynamic = true
				end
			end
			if childView then
				childView.x = x
				childView.width = childWidth
			end
			x = x + childWidth - (isPressable and 1 or 0) + ((not childView or (i < #items and not items[i + 1][1]) ) and 0 or itemMargin)
		end

		self.height = contentHeight + topMargin + bottomMargin + 1 -- + 1 for separator

		self.needsLayoutUpdate = false
	end end
function _C_gW(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRemoved","Event.phases",phase)end 
		if event.container == self then
			self.needsLayoutUpdate = true
		end
	end end
function _C_gX(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		if event.container == self then
			if not event.childView:typeOf( IToolbarItem ) then
				error( "Attempted to add view '" .. tostring( event.childView ) .. "' that does not implement IToolbarItem to '" .. tostring( self ) .. "'", 0 )
			end
			self.needsLayoutUpdate = true
		end
	end end
function _C_gY(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, font = self.width, self.height, self.theme, self.canvas
		canvas:fill( theme:value( "fillColour" ) )
		canvas:fill( theme:value( "separatorColour" ), theme:value( "separatorIsDashed" ) and SeparatorMask( 1, height, width, 1 ) or RectangleMask( 1, height, width, 1 ) )
	end end
function _C_gZ(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate then
			self:updateLayout()
		end
	end end
_C_ga={["updateLayout"]={_C_gV,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_gZ,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["hitTest"]={[3]=_C_FX,},["addFocus"]={[3]=_C_FQ,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_gU,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["animateResize"]={[3]=_C_FW,},["onChildRemoved"]={_C_gW,},["getCoordinates"]={[3]=_C_F3,},["onDraw"]={_C_gY,_C_L0,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["focus"]={[3]=_C_F5,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["onChildAdded"]={_C_gX,},["initialiseCanvas"]={[3]=_C_F6,},["disposeAll"]={[2]=_C_L3,}}_C_gb={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_gc=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["dispose"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["animateResize"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["focus"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["initialiseCanvas"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_gd=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["dispose"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["animateResize"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["focus"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["initialiseCanvas"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_ge={[ToolbarContainer]=1,[Container]=1,[View]=1}_C_gf={"Container","View"}_C_gh={}_C_gi={}_C_gj={["fromInterface"]={[2]=_C_Ke,}}_C_gk={[HomeItemContainer]=1,[_C_5r]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_gl={"Container","View"}_C_gm={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_gn={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_go(self,super)return function(_C_self_passed,...)
        super( ... )

        self:event( ReadyInterfaceEvent, self.onReady )
        self:event( ThemeChangedInterfaceEvent, self.onThemeChanged )
        self:event( ChildAddedInterfaceEvent, self.onChildAdded )
        self:event( ChildRemovedInterfaceEvent, self.onChildRemoved )
    end end
function _C_gp(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
        self.y = 1 + self.theme:value( "parentTopMargin" )
        self:updateLayout( true )
        local delay = 0.5
        for i, childView in ipairs( self.children ) do
            local y = childView.y
            childView.y = self.height + 1
            childView:animate( "y", y, 0.8, nil, Animation.easings.OUT_QUART, delay )
            delay = delay + 0.3
        end
    end end
function _C_gq(self,super)return function(_C_self_passed,event,phase)if _C_De(event)then _C_F(self,"event","onThemeChanged","ThemeChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onThemeChanged","Event.phases",phase)end 
        self.y = 1 + self.theme:value( "parentTopMargin" )
        self.needsLayoutUpdate = true
    end end
function _C_gr(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRemoved","Event.phases",phase)end 
        self.needsLayoutUpdate = true
    end end
function _C_gs(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
        self.needsLayoutUpdate = true
    end end
function _C_gt(self,super)return function(_C_self_passed,deltaTime)
        super( deltaTime )
        if self.needsLayoutUpdate then
            self:updateLayout()
        end
    end end
function _C_gu(self,super)return function(_C_self_passed,dontAnimate)
        local children, width, theme = self.children, self.width, self.theme
        local tileMargin = theme:value( "tileMargin" )
        local y = theme:value( "tileMargin" )

        local time, easing = 0.5, Animation.easings.SINE_IN_OUT

        for i, childView in ipairs( children ) do
            if childView:typeOf( IHomeItem ) then
                if dontAnimate then
                    childView.y = y
                else
                    childView:animate( "y", y, time, nil, easing )
                end
                childView.x = math.ceil( ( width - childView.width ) / 2 ) + 2
                y = y + childView.height + tileMargin
            end
        end

        self.height = math.max( y + theme:value( "bottomMargin" ) - tileMargin, self.parent.height - self.theme:value( "parentTopMargin" ) )

        self.needsLayoutUpdate = false
    end end
_C_gv={["updateLayout"]={_C_gu,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_gt,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["onThemeChanged"]={_C_gq,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["hitTest"]={[3]=_C_FX,},["onChildOfChildAdded"]={[2]=_C_Kp,},["addFocus"]={[3]=_C_FQ,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["animate"]={[3]=_C_FV,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["animateResize"]={[3]=_C_FW,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_go,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["initialiseCanvas"]={[3]=_C_F6,},["onChildRemoved"]={_C_gr,},["getCoordinates"]={[3]=_C_F3,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["onReady"]={_C_gp,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["onChildAdded"]={_C_gs,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}_C_gw={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_gx=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onThemeChanged"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["hitTest"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["addFocus"]=_C_9x,["draw"]=_C_9x,["dispose"]=_C_9x,["animate"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["animateResize"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onReady"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_gy=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Gr,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onThemeChanged"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["hitTest"]=_C_7,["onChildOfChildAdded"]=_C_7,["addFocus"]=_C_7,["draw"]=_C_7,["dispose"]=_C_7,["animate"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["animateResize"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onReady"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_gz={[HomeItemContainer]=1,[Container]=1,[View]=1}_C_h0={"Container","View"}_C_h2={["eventType"]=loadstring("return \"interface_loaded\";\
\
\9\
"),}_C_h3={["eventType"]={_C_Ai,"String"},}_C_h4={["eventClasses"]=loadstring([[return {}

	
]])}_C_h5={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_h6=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_h7=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_h8={[LoadedInterfaceEvent]=1,[_C_5v]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_h9={"InterfaceEvent","Event"}_C_hA={["isSentToChildren"]=loadstring("return false\
\
\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_hB={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}_C_hC={["makeRelative"]={[3]=_C_Cs,}}_C_hD=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_hE=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_hF={[LoadedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_hG={"InterfaceEvent","Event"}_C_hI={}_C_hJ={}_C_hK={[ToolbarSymbolSegmentButton]=1,[_C_5x]=1,[SymbolSegmentButton]=1,[_C_4W]=1,[SegmentButton]=1,[_C_3Z]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_hL={"SymbolSegmentButton","SegmentButton","Button","View"}_C_hM={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_hN={["symbol"]={_C_OJ,"Symbol"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["symbolName"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}_C_hO={["getCoordinates"]={[5]=_C_F3,},["focus"]={[5]=_C_F5,},["initialiseCanvas"]={[5]=_C_F6,},["unfocus"]={[5]=_C_F7,},["getCoordinatesTo"]={[5]=_C_F8,},["onGlobalUpSpecialMouseEvents"]={[5]=_C_FA,},["clearFocus"]={[5]=_C_FP,},["draw"]={[5]=_C_F9,},["addFocus"]={[5]=_C_FQ,},["hitTestEvent"]={[5]=_C_FI,},["animate"]={[5]=_C_FV,},["onSiblingOrParentChanged"]={[3]=_C_KR,},["update"]={[4]=_C_K7,[5]=_C_FC,},["onKeyUp"]={[4]=_C_K8,},["initialise"]={[3]=_C_KQ,[4]=_C_K0,[5]=_C_FG,},["onMouseDown"]={[4]=_C_K1,},["onGlobalMouseUp"]={[4]=_C_K2,},["animateResize"]={[5]=_C_FW,},["onKeyDown"]={[4]=_C_K3,},["onDownSpecialMouseEvents"]={[5]=_C_FL,},["onDraw"]={[2]=_C_V2,[3]=_C_KT,[4]=_C_K4,[5]=_C_FU,},["getPosition"]={[5]=_C_FN,},["initialiseEventManager"]={[5]=_C_FO,},["updateThemeStyle"]={[4]=_C_K5,},["dispose"]={[5]=_C_FK,},["startDragDrop"]={[5]=_C_FR,},["siblingsOfType"]={[5]=_C_FH,},["autosize"]={[2]=_C_V3,[4]=_C_K6,},["animateMove"]={[5]=_C_FD,},["hitTest"]={[5]=_C_FX,}}_C_hP={set={["x"]={[5]=_C_Fq},["y"]={[5]=_C_Fh},["leftPin"]={[5]=_C_Fm},["isPressed"]={[4]=_C_KC},["isFocused"]={[4]=_C_KA,[5]=_C_Fi},["symbol"]={[2]=_C_V6},["symbolName"]={[2]=_C_V5},["width"]={[3]=_C_KV,[5]=_C_Fg},["shadowSize"]={[5]=_C_Fs},["height"]={[5]=_C_Fr},["text"]={[4]=_C_KD},["rightPin"]={[5]=_C_Fk},["isEnabled"]={[4]=_C_KB},["bottomPin"]={[5]=_C_Fn},["index"]={[5]=_C_Fo},["topPin"]={[5]=_C_Fj},["isVisible"]={[5]=_C_Fl},["needsDraw"]={[5]=_C_Fp}},get={["isFirst"]={[5]=_C_Fb},["siblings"]={[5]=_C_Fe},["shadowMask"]={[5]=_C_Fd},["isEnabled"]={[5]=_C_Fa},["index"]={[5]=_C_Fc},["isVisible"]={[5]=_C_FZ},["isLast"]={[5]=_C_Ff}}}_C_hQ=setmetatable({["symbol"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["symbolName"]=_C_9x,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["clearFocus"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["hitTestEvent"]=_C_9x,["animate"]=_C_9x,["onSiblingOrParentChanged"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animateResize"]=_C_9x,["onKeyDown"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["dispose"]=_C_9x,["startDragDrop"]=_C_9x,["siblingsOfType"]=_C_9x,["autosize"]=_C_9x,["animateMove"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_hR=setmetatable({["symbol"]=function(_,k,n,v,w,s,d,l)if _C_OJ(n)then _C_D(_,k,"Symbol",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["symbolName"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["clearFocus"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["hitTestEvent"]=_C_7,["animate"]=_C_7,["onSiblingOrParentChanged"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animateResize"]=_C_7,["onKeyDown"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["dispose"]=_C_7,["startDragDrop"]=_C_7,["siblingsOfType"]=_C_7,["autosize"]=_C_7,["animateMove"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_hS={[ToolbarSymbolSegmentButton]=1,[SymbolSegmentButton]=1,[SegmentButton]=1,[Button]=1,[View]=1}_C_hT={"SymbolSegmentButton","SegmentButton","Button","View"}_C_hV={}_C_hW={}_C_hX={["fromInterface"]={[2]=_C_Ke,}}_C_hY={[Menu]=1,[_C_5z]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_hZ={"Container","View"}_C_ha={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["isSingleShot"]=loadstring("return false \
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["width"]=loadstring("return 40\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["targetX"]=loadstring("return 1 \
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["targetY"]=loadstring("return 1\
\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 40\
\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_hb={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["isOpen"]={_C_Cp,"Boolean"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["targetX"]={_C_Ar,"Number"},["offsetY"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["isSingleShot"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["targetY"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["specialMouseTimes"]={_C_An,"Table"},["theme"]={_C_Dc,"ThemeOutlet"},["canvas"]={_C_Dh,"Canvas"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["owner"]={_C_IM,"View (allowsNil)"},["x"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_hc(self,super)return function(_C_self_passed,...)
		super( ... )

		self.eventManager:connectGlobal( DownMouseEvent, self.onGlobalMouseDown, Event.phases.BEFORE )
	end end
function _C_hd(self,super)return function(_C_self_passed)
		self.isOpen = not self.isOpen
	end end
function _C_he(self,super)return function(_C_self_passed)
		local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas

		-- background shape
		local roundedRectangle = RoundedRectangleMask( 1, 1, width, height, theme:value( "cornerRadius" ) )
		canvas:fill( theme:value( "fillColour" ), roundedRectangle )
		canvas:outline( theme:value( "outlineColour" ), roundedRectangle, theme:value( "outlineThickness" ) )

		self.shadowSize = theme:value( "shadowSize" )
	end end
function _C_hf(self,super)return function(_C_self_passed,...)
		super( ... )
		self.needsLayoutUpdate = true
	end end
function _C_hg(self,super)return function(_C_self_passed)
		self.isVisible = false
		local owner = self.owner
		if owner then
			owner.event:handleEvent( MenuChangedInterfaceEvent( self ) )
		end
		if self.isSingleShot then
			self:dispose()
		end
	end end
function _C_hh(self,super)return function(_C_self_passed)
		self.isVisible = true
		local owner = self.owner
		if owner then
			owner.event:handleEvent( MenuChangedInterfaceEvent( self ) )
		end
	end end
function _C_hi(self,super)return function(_C_self_passed,owner,x,y)if _C_Cr(owner)then _C_F(self,"owner","showContext","View",owner)end if _C_Ar(x)then _C_F(self,"x","showContext","Number",x)end if _C_Ar(y)then _C_F(self,"y","showContext","Number",y)end 
		self.owner = owner
		self.isSingleShot = true
		self.x = x + owner.x - 1 - MENU_CONTEXT_OFFSET
		self.y = y + owner.y - 1 - MENU_CONTEXT_OFFSET
		local parent = self.parent
		if parent then
			parent:removeChild( self )
		end
		owner.parent:insert( self )
		self.isVisible = true
	end end
function _C_hj(self,super)return function(_C_self_passed)
		local owner = self.owner
		local ownerTheme = owner and owner.theme
		local width = owner and ( owner.width - 2 * ( ownerTheme:value( "menuOffsetX" ) or 0 ) ) or 1
		local height = self.theme:value( "topMargin" ) + ( ownerTheme and ownerTheme:value( "menuTopPadding" ) or 0 )
		for i, childView in ipairs( self.children ) do
			width = math.max( width, childView.width )
			childView.x = 1
			childView.y = height + 1
			height = height + childView.height
		end
		self.width = width
		self.height = height + self.theme:value( "bottomMargin" )
		self.needsLayoutUpdate = false
	end end
function _C_hk(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate then
			self:updateLayout()
		end
	end end
function _C_hl(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onGlobalMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseDown","Event.phases",phase)end 
		if self.isVisible then
			local owner = self.owner
			if self.hitTestOwner and owner and owner:hitTestEvent( event ) then
				owner.event:handleEvent( event )
				return true
			elseif self:hitTestEvent( event ) then
				self.eventManager:handleEvent( event )
				return true
			else
				self:close()
			end
		end
	end end
function _C_hm(self,super)return function(_C_self_passed,...)
		super( ... )
		self.needsLayoutUpdate = true
	end end
_C_hn={["updateLayout"]={_C_hj,},["onReadyLoadInterface"]={[2]=_C_Kk,},["toggle"]={_C_hd,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_hk,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["removeChild"]={_C_hf,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["hitTest"]={[3]=_C_FX,},["onChildOfChildAdded"]={[2]=_C_Kp,},["addFocus"]={[3]=_C_FQ,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["startDragDrop"]={[3]=_C_FR,},["animateResize"]={[3]=_C_FW,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["onGlobalMouseDown"]={_C_hl,},["insert"]={_C_hm,_C_Kw,},["initialise"]={_C_hc,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["open"]={_C_hh,},["unfocus"]={[3]=_C_F7,},["initialiseCanvas"]={[3]=_C_F6,},["onDraw"]={_C_he,_C_L0,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["close"]={_C_hg,},["remove"]={[2]=_C_L4,},["showContext"]={_C_hi,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["focus"]={[3]=_C_F5,},["getCoordinates"]={[3]=_C_F3,},["disposeAll"]={[2]=_C_L3,}}function _C_ho(self,super)return function(_C_self_passed)
		return self.isVisible
	end end function _C_hp(self,super)return function(_C_self_passed,isOpen)
		if isOpen then
			self:open()
		else
			self:close()
		end
	end end function _C_hq(self,super)return function(_C_self_passed,width)
		super( width + (1 - width % 2) )-- it must be an odd number (for the separators)
		for i, childView in ipairs( self.children ) do
			childView.width = width
		end
	end end _C_hr={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["isOpen"]={_C_hp},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={_C_hq,_C_LF,_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["isOpen"]={_C_ho},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_hs=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["hitTestOwner"]=_C_9x,["isCanvasHitTested"]=_C_9x,["targetX"]=_C_9x,["offsetY"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["height"]=_C_9x,["isOpen"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["targetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["backgroundObject"]=_C_9x,["owner"]=_C_9x,["interfaceLinks"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["isSingleShot"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["shadowObject"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["toggle"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["removeChild"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["hitTest"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["addFocus"]=_C_9x,["draw"]=_C_9x,["startDragDrop"]=_C_9x,["animateResize"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["onGlobalMouseDown"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["open"]=_C_9x,["unfocus"]=_C_9x,["initialiseCanvas"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["close"]=_C_9x,["remove"]=_C_9x,["showContext"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["focus"]=_C_9x,["getCoordinates"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_ht=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isPressed"]=_C_Cu,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["hitTestOwner"]=_C_Gr,["isCanvasHitTested"]=_C_Cu,["targetX"]=_C_B2,["offsetY"]=_C_B2,["needsLayoutUpdate"]=_C_Gr,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isOpen"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["targetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["backgroundObject"]=_C_Gr,["owner"]=_C_Ib,["interfaceLinks"]=_C_Ax,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isSingleShot"]=_C_Cu,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["shadowObject"]=_C_Gr,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["toggle"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["removeChild"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["hitTest"]=_C_7,["onChildOfChildAdded"]=_C_7,["addFocus"]=_C_7,["draw"]=_C_7,["startDragDrop"]=_C_7,["animateResize"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["onGlobalMouseDown"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["open"]=_C_7,["unfocus"]=_C_7,["initialiseCanvas"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["close"]=_C_7,["remove"]=_C_7,["showContext"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["focus"]=_C_7,["getCoordinates"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_hu={[Menu]=1,[Container]=1,[View]=1}_C_hv={"Container","View"}_C_hx={}_C_hy={}_C_hz={[ToolbarStaticSpace]=1,[_C_61]=1,[IToolbarItem]=1,[View]=1,[_C_3N]=1}_C_i0={"View"}_C_i1={["x"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["width"]=loadstring("return 12\
\
\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_i2={["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["theme"]={_C_Dc,"ThemeOutlet"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["height"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["y"]={_C_Ar,"Number"},["isFocused"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["parsedPins"]={_C_An,"Table"},}_C_i3={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={[2]=_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["dispose"]={[2]=_C_FK,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["startDragDrop"]={[2]=_C_FR,},["onDraw"]={[2]=_C_FU,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["hitTest"]={[2]=_C_FX,}}_C_i4={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_i5=setmetatable({["cursor"]=_C_9x,["x"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["needsDraw"]=_C_9x,["topPin"]=_C_9x,["width"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["parent"]=_C_9x,["specialMouseTimes"]=_C_9x,["canvas"]=_C_9x,["theme"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["identifier"]=_C_9x,["animations"]=_C_9x,["isCanvasHitTested"]=_C_9x,["eventManager"]=_C_9x,["height"]=_C_9x,["interfaceProperties"]=_C_9x,["y"]=_C_9x,["isFocused"]=_C_9x,["isSingleFocusOnly"]=_C_9x,["isFocusDismissable"]=_C_9x,["isMouseInView"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["leftPin"]=_C_9x,["rightPin"]=_C_9x,["parsedPins"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["dispose"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["onDraw"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_i6=setmetatable({["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["specialMouseTimes"]=_C_Ax,["canvas"]=_C_Fx,["theme"]=_C_Do,["shadowMask"]=_C_Fy,["identifier"]=_C_B0,["animations"]=_C_Ax,["isCanvasHitTested"]=_C_Cu,["eventManager"]=_C_Dm,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isSingleFocusOnly"]=_C_Cu,["isFocusDismissable"]=_C_Cu,["isMouseInView"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parsedPins"]=_C_Ax,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["dispose"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["onDraw"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_i7={[ToolbarStaticSpace]=1,[IToolbarItem]=1,[View]=1}_C_i8={"View"}_C_iA={}_C_iB={}_C_iC={[ProgramManager]=1,[_C_63]=1}_C_iD={["programs"]=loadstring("return {}\
\9\
"),}function _C_iF(v)local j=_C_L[v]return not(j and j[QuartzApplication])end  _C_iE={["programs"]={_C_An,"Table"},["owner"]={_C_iF,"QuartzApplication"},}function _C_iG(self,super)return function(_C_self_passed,owner)
        self.owner = owner
    end end
function _C_iH(self,super)return function(_C_self_passed,program)
        program.programManager = self
        local programView = ProgramView( { x = 1, y = 15, width = "320", height = 200-14, program = program } )
        program.programView = programView
        local programs = self.programs
        table.insert( programs, program )
        program.index = #programs
        program:run()
        self.owner.container:insert( programView )
        self.application.event:handleEvent( ProgramOpenedInterfaceEvent( program ) )
    end end
function _C_iI(self,super)return function(_C_self_passed)
        local programs = self.programs
        for i, program in ipairs( programs ) do
            program:update()
        end
    end end
function _C_iJ(self,super)return function(_C_self_passed,closingProgram)
        local programs = self.programs
        local programOrder = program
        local previousIndex
        local changeIndex = false
        for i, program in ipairs( programs ) do
            if changeIndex then
                program.index = i - 1
            elseif program == closingProgram then
                previousIndex = i
                table.remove( programs, i )
                changeIndex = true
            end
        end
        
        local programView = closingProgram.programView
        if programView.isFocused then
            programView:closeFlyUp(function()
                if #programs == 0 then
                    -- TODO: activate the home
                    self.application.container.homeContainer:focus()
                elseif programs[previousIndex] then
                    programs[previousIndex]:focus()
                    log("activate "..previousIndex)
                elseif programs[previousIndex - 1] then
                    log("activate "..previousIndex - 1)
                    programs[previousIndex - 1]:focus()
                end
            end)
        end
    end end
_C_iK={["initialise"]={_C_iG,},["run"]={_C_iH,},["update"]={_C_iI,},["onProgramClosed"]={_C_iJ,}}function _C_iL(_,k,n,v)if _C_iF(n)then _C_D(_,k,"QuartzApplication",n)end v[k]=n end _C_iM=setmetatable({["programs"]=_C_9x,["owner"]=_C_9x,["initialise"]=_C_9x,["run"]=_C_9x,["update"]=_C_9x,["onProgramClosed"]=_C_9x},_C_9z)_C_iN=setmetatable({["programs"]=_C_Ax,["owner"]=_C_iL,["initialise"]=_C_7,["run"]=_C_7,["update"]=_C_7,["onProgramClosed"]=_C_7},_C_9z)_C_iO={[ProgramManager]=1}_C_iQ={}_C_iR={}_C_iS={[Scrollbar]=1,[_C_65]=1,[View]=1,[_C_3N]=1}_C_iT={"View"}_C_iU={["width"]=loadstring("return 7\
\9\
"),["isHorizontal"]=loadstring("return false\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_iV={["isHorizontal"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_iW(self,super)return function(_C_self_passed,...)
		super( ... )
		-- self:event( ScrollMouseEvent, self.onMouseScroll )
		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( DragMouseEvent, self.onGlobalMouseDrag )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
function _C_iX(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or "default" ) or "disabled"
	end end
function _C_iY(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
		end
	end end
function _C_iZ(self,super)return function(_C_self_passed)
		super()

		self.theme:connect( self.canvas, "fillColour" )

		local scrollerObject = self.canvas:insert( RoundedRectangle( 2, 3, self.width - 2, 30 ) )
		local grabberObject = self.canvas:insert( ScrollbarGrabber( 3, 3, self.width - 4, 30 ) )

		self.theme:connect( scrollerObject, "fillColour", "scrollerColour" )
		self.theme:connect( scrollerObject, "outlineColour" )
		self.theme:connect( scrollerObject, "radius", "cornerRadius" )
		self.theme:connect( grabberObject, "fillColour", "grabberColour" )

		local position, size = self.scroller
		-- local position, size = self:getScroller()
		self.scrollerObject = scrollerObject
		self.grabberObject = grabberObject
	end end
function _C_ia(self,super)return function(_C_self_passed,event,phase)if _C_S8(event)then _C_F(self,"event","onGlobalMouseDrag","DragMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseDrag","Event.phases",phase)end 
		if self.isPressed and self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			local oldRelative = event.relativeView
			event:makeRelative( self )

			local position, size = self:getScroller( true )
			local traySize
			position = event.y - self.dragPoint
			traySize = self.height

			position = math.max( math.min( position, traySize - size ), 0 )
			local parent = self.parent
			-- parent.offsetY = math.floor( position / traySize * parent.container.height )
			-- scrollTo
			parent:scrollTo( math.floor( position / traySize * parent.container.height ) )
		  
			event:makeRelative( oldRelative )
		end
	end end
function _C_ib(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
			local position, size = self:getScroller( true )
			self.dragPoint = event.y + position - 1
		end
		return true
	end end
function _C_ic(self,super)return function(_C_self_passed,dontSetPosition)
		local parent = self.parent
		if not parent then
			return 0, self.direction == "vertical" and self.height or self.width
		end

		local trayMargin = 2
		local traySize = self.height - 2 * trayMargin

		local frameSize, contentSize, contentScroll
		frameSize = parent.height
		local container = parent.container
		contentSize = container.height
		contentScroll = - parent.offsetY


		local barSize = math.max( math.floor( traySize * frameSize / contentSize ), 1 )
		local barPosition = math.ceil( traySize * contentScroll / contentSize )

		local scrollerObject = self.scrollerObject
		local grabberObject = self.grabberObject
		scrollerObject.height = barSize
		grabberObject.height = barSize
		if not dontSetPosition then
			local y = 1 + trayMargin - barPosition
			scrollerObject.y = y
			grabberObject.y = y
		end

		return barPosition, barSize
	end end
function _C_id(self,super)return function(_C_self_passed,height)
		self:getScroller()
	end end
_C_ie={["updateHeight"]={_C_id,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={_C_iZ,_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["getScroller"]={_C_ic,},["onGlobalMouseDrag"]={_C_ia,},["draw"]={[2]=_C_F9,},["getCoordinates"]={[2]=_C_F3,},["clearFocus"]={[2]=_C_FP,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_iW,_C_FG,},["onMouseDown"]={_C_ib,},["onGlobalMouseUp"]={_C_iY,},["addFocus"]={[2]=_C_FQ,},["onDraw"]={[2]=_C_FU,},["animateResize"]={[2]=_C_FW,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_iX,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["dispose"]={[2]=_C_FK,},["hitTestEvent"]={[2]=_C_FI,},["siblingsOfType"]={[2]=_C_FH,},["hitTest"]={[2]=_C_FX,}}function _C_if(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_ig(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end _C_ih={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_if},["isFocused"]={[2]=_C_Fi},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_ig},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_ii=setmetatable({["isHorizontal"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["grabberObject"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["dragPoint"]=_C_9x,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["animations"]=_C_9x,["scrollerObject"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["direction"]=_C_9x,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["updateHeight"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["getScroller"]=_C_9x,["onGlobalMouseDrag"]=_C_9x,["draw"]=_C_9x,["getCoordinates"]=_C_9x,["clearFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["addFocus"]=_C_9x,["onDraw"]=_C_9x,["animateResize"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_ij=setmetatable({["isHorizontal"]=_C_Cu,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["grabberObject"]=_C_Gr,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["dragPoint"]=_C_Gr,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["siblings"]=_C_Fz,["animations"]=_C_Ax,["scrollerObject"]=_C_Gr,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["direction"]=_C_Gr,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["updateHeight"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["getScroller"]=_C_7,["onGlobalMouseDrag"]=_C_7,["draw"]=_C_7,["getCoordinates"]=_C_7,["clearFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["addFocus"]=_C_7,["onDraw"]=_C_7,["animateResize"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_ik={[Scrollbar]=1,[View]=1}_C_il={"View"}_C_in={}_C_io={}_C_ip={[ToolbarSegmentButton]=1,[_C_67]=1,[IToolbarItem]=1,[SegmentButton]=1,[_C_3Z]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_iq={"SegmentButton","Button","View"}_C_ir={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_is={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}_C_it={["getCoordinates"]={[4]=_C_F3,},["focus"]={[4]=_C_F5,},["initialiseCanvas"]={[4]=_C_F6,},["unfocus"]={[4]=_C_F7,},["getCoordinatesTo"]={[4]=_C_F8,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["clearFocus"]={[4]=_C_FP,},["draw"]={[4]=_C_F9,},["addFocus"]={[4]=_C_FQ,},["hitTestEvent"]={[4]=_C_FI,},["animate"]={[4]=_C_FV,},["onSiblingOrParentChanged"]={[2]=_C_KR,},["update"]={[3]=_C_K7,[4]=_C_FC,},["onKeyUp"]={[3]=_C_K8,},["initialise"]={[2]=_C_KQ,[3]=_C_K0,[4]=_C_FG,},["onMouseDown"]={[3]=_C_K1,},["onGlobalMouseUp"]={[3]=_C_K2,},["animateResize"]={[4]=_C_FW,},["onKeyDown"]={[3]=_C_K3,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["onDraw"]={[2]=_C_KT,[3]=_C_K4,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[4]=_C_FO,},["updateThemeStyle"]={[3]=_C_K5,},["dispose"]={[4]=_C_FK,},["startDragDrop"]={[4]=_C_FR,},["siblingsOfType"]={[4]=_C_FH,},["autosize"]={[3]=_C_K6,},["animateMove"]={[4]=_C_FD,},["hitTest"]={[4]=_C_FX,}}_C_iu={set={["x"]={[4]=_C_Fq},["y"]={[4]=_C_Fh},["leftPin"]={[4]=_C_Fm},["isPressed"]={[3]=_C_KC},["isFocused"]={[3]=_C_KA,[4]=_C_Fi},["width"]={[2]=_C_KV,[4]=_C_Fg},["shadowSize"]={[4]=_C_Fs},["height"]={[4]=_C_Fr},["text"]={[3]=_C_KD},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_KB},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_iv=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["clearFocus"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["hitTestEvent"]=_C_9x,["animate"]=_C_9x,["onSiblingOrParentChanged"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animateResize"]=_C_9x,["onKeyDown"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["dispose"]=_C_9x,["startDragDrop"]=_C_9x,["siblingsOfType"]=_C_9x,["autosize"]=_C_9x,["animateMove"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_iw=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["clearFocus"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["hitTestEvent"]=_C_7,["animate"]=_C_7,["onSiblingOrParentChanged"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animateResize"]=_C_7,["onKeyDown"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["dispose"]=_C_7,["startDragDrop"]=_C_7,["siblingsOfType"]=_C_7,["autosize"]=_C_7,["animateMove"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_ix={[ToolbarSegmentButton]=1,[IToolbarItem]=1,[SegmentButton]=1,[Button]=1,[View]=1}_C_iy={"SegmentButton","Button","View"}_C_j0={}_C_j1={}_C_j2={[ProgramException]=1,[_C_69]=1,[Exception]=1,[_C_5t]=1}_C_j3={"Exception"}_C_j4={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_j5={["level"]={_C_Ar,"Number"},["id"]={_C_Ar,"Number"},["program"]={_C_Hy,"Program"},["message"]={_C_Ai,"String"},["traceback"]={_C_An,"Table"},}function _C_j6(self,super)return function(_C_self_passed,message,program)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_Hy(program)then _C_F(self,"program","initialise","Program",program)end 
	    self.program = program
	    super( message )
	end end
_C_j7={["initialise"]={_C_j6,_C_ED,}}_C_j8=setmetatable({["level"]=_C_9x,["id"]=_C_9x,["program"]=_C_9x,["message"]=_C_9x,["traceback"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_j9=setmetatable({["level"]=_C_B2,["id"]=_C_B2,["program"]=_C_I3,["message"]=_C_B1,["traceback"]=_C_Ax,["initialise"]=_C_7},_C_9z)_C_jA={[ProgramException]=1,[Exception]=1}_C_jB={"Exception"}_C_jD={}_C_jE={}_C_jF={[ConfigurationFatalProgramException]=1,[_C_6B]=1,[Exception]=1,[_C_5t]=1}_C_jG={"Exception"}_C_jH={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_jI={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_jJ={["initialise"]={[2]=_C_ED,}}_C_jK=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_jL=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_jM={[ConfigurationFatalProgramException]=1,[Exception]=1}_C_jN={"Exception"}_C_jP={}_C_jQ={}_C_jR={[EnumValueTypeClassException]=1,[_C_6D]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_jS={"ClassException","FatalException","Exception"}_C_jT={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_jU={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_jV(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Incorrect usage of Enum ValueTypes: " .. message
		super( message, level )
	end end
_C_jW={["initialise"]={_C_jV,[4]=_C_ED,}}_C_jX=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_jY=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_jZ={[EnumValueTypeClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_ja={"ClassException","FatalException","Exception"}_C_jc={}_C_jd={}_C_je={[ToolbarDynamicSpace]=1,[_C_6F]=1,[IToolbarItem]=1,[IToolbarDynamicItem]=1,[View]=1,[_C_3N]=1}_C_jf={"View"}_C_jg={["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_jh={["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["theme"]={_C_Dc,"ThemeOutlet"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["height"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["y"]={_C_Ar,"Number"},["isFocused"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["parsedPins"]={_C_An,"Table"},}_C_ji={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={[2]=_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["dispose"]={[2]=_C_FK,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["startDragDrop"]={[2]=_C_FR,},["onDraw"]={[2]=_C_FU,},["animate"]={[2]=_C_FV,},["animateResize"]={[2]=_C_FW,},["hitTest"]={[2]=_C_FX,}}_C_jj={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_jk=setmetatable({["cursor"]=_C_9x,["x"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["needsDraw"]=_C_9x,["topPin"]=_C_9x,["width"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["parent"]=_C_9x,["specialMouseTimes"]=_C_9x,["canvas"]=_C_9x,["theme"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["identifier"]=_C_9x,["animations"]=_C_9x,["isCanvasHitTested"]=_C_9x,["eventManager"]=_C_9x,["height"]=_C_9x,["interfaceProperties"]=_C_9x,["y"]=_C_9x,["isFocused"]=_C_9x,["isSingleFocusOnly"]=_C_9x,["isFocusDismissable"]=_C_9x,["isMouseInView"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["leftPin"]=_C_9x,["rightPin"]=_C_9x,["parsedPins"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["dispose"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["startDragDrop"]=_C_9x,["onDraw"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_jl=setmetatable({["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=_C_Fw,["specialMouseTimes"]=_C_Ax,["canvas"]=_C_Fx,["theme"]=_C_Do,["shadowMask"]=_C_Fy,["identifier"]=_C_B0,["animations"]=_C_Ax,["isCanvasHitTested"]=_C_Cu,["eventManager"]=_C_Dm,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isSingleFocusOnly"]=_C_Cu,["isFocusDismissable"]=_C_Cu,["isMouseInView"]=_C_Cu,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parsedPins"]=_C_Ax,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["dispose"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["startDragDrop"]=_C_7,["onDraw"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_jm={[ToolbarDynamicSpace]=1,[IToolbarItem]=1,[IToolbarDynamicItem]=1,[View]=1}_C_jn={"View"}_C_jp={}_C_jq={}_C_jr={[ToolbarButton]=1,[_C_6H]=1,[IToolbarItem]=1,[IToolbarPressableItem]=1,[Button]=1,[_C_9c]=1,[View]=1,[_C_3N]=1}_C_js={"Button","View"}_C_jt={["cursor"]=loadstring("return ClickableCursor.static\
\
\9\
\
\
\9\
"),["width"]=loadstring("return 36\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["needsAutosize"]=loadstring("return true\
\9\
"),["isFocusDismissable"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return true\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["text"]=loadstring("return \"\"\
\
\9\
"),["isAutosized"]=loadstring("return true\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 16\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_ju={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isAutosized"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["needsAutosize"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["y"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}_C_jv={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["animateMove"]={[3]=_C_FD,},["draw"]={[3]=_C_F9,},["clearFocus"]={[3]=_C_FP,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[3]=_C_FK,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[2]=_C_K7,[3]=_C_FC,},["onKeyUp"]={[2]=_C_K8,},["initialise"]={[2]=_C_K0,[3]=_C_FG,},["onMouseDown"]={[2]=_C_K1,},["onGlobalMouseUp"]={[2]=_C_K2,},["animate"]={[3]=_C_FV,},["onKeyDown"]={[2]=_C_K3,},["animateResize"]={[3]=_C_FW,},["onDraw"]={[2]=_C_K4,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_K5,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["startDragDrop"]={[3]=_C_FR,},["hitTestEvent"]={[3]=_C_FI,},["autosize"]={[2]=_C_K6,},["siblingsOfType"]={[3]=_C_FH,},["hitTest"]={[3]=_C_FX,}}_C_jw={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_KC},["isFocused"]={[2]=_C_KA,[3]=_C_Fi},["width"]={[3]=_C_Fg},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={[2]=_C_KD},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_KB},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_jx=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isAutosized"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["needsAutosize"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isMouseInView"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["animateMove"]=_C_9x,["draw"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animate"]=_C_9x,["onKeyDown"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["autosize"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_jy=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isAutosized"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["needsAutosize"]=_C_Cu,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isMouseInView"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["animateMove"]=_C_7,["draw"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animate"]=_C_7,["onKeyDown"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["autosize"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_jz={[ToolbarButton]=1,[IToolbarItem]=1,[IToolbarPressableItem]=1,[Button]=1,[View]=1}_C_k0={"Button","View"}_C_k2={["eventType"]=loadstring("return \"terminate\";\
\9\
\
"),}_C_k3={["eventType"]={_C_Ai,"String"},}_C_k4={["eventClasses"]=loadstring([[return {}

	
]])}_C_k5={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_k6=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_k7=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_k8={[TerminateEvent]=1,[_C_6J]=1,[Event]=1,[_C_7j]=1}_C_k9={"Event"}_C_kA={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_kB={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}_C_kC={["makeRelative"]={[2]=_C_Cs,}}_C_kD=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_kE=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_kF={[TerminateEvent]=1,[Event]=1}_C_kG={"Event"}_C_kI={["width"]=loadstring("return 9\
\9\
"),["symbolName"]=loadstring("return \"home\"\
\9\
"),["height"]=loadstring("return 9\
\9\
\
\
\9\
"),}_C_kJ={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_kK(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 5, 1 )
		path:lineTo( 9, 5 )
		path:lineTo( 8, 5 )
		path:lineTo( 8, 9 )
		path:lineTo( 6, 9 )
		path:lineTo( 6, 6 )
		path:lineTo( 4, 6 )
		path:lineTo( 4, 9 )
		path:lineTo( 2, 9 )
		path:lineTo( 2, 5 )
		path:lineTo( 1, 5 )
		path:close()

		super( path )
	end end
_C_kL={["initialise"]={_C_kK,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_kM=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_kN=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_kO={[HomeSymbol]=1,[_C_6P]=1,[Symbol]=1,[_C_34]=1}_C_kP={"Symbol"}_C_kQ={}_C_kR={}_C_kS={[HomeSymbol]=1,[Symbol]=1}_C_kT={"Symbol"}_C_kV={}_C_kW={}_C_kX={[ProgramView]=1,[_C_6R]=1,[ISwitchableView]=1,[View]=1,[_C_3N]=1}_C_kY={"View"}_C_kZ={["scale"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isClosing"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["termSizes"]=loadstring("return { width = 1; height = 1; needsDraw = false; }\
    buffer = Table( {} )\
\
\
    \
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isOpening"]=loadstring("return true\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_ka={["redirect"]={_C_At,"Table (allowsNil)"},["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["termSizes"]={_C_An,"Table"},["program"]={_C_Hy,"Program"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["scale"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["y"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["x"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isOpening"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["isClosing"]={_C_Cp,"Boolean"},}function _C_kb(self,super)return function(_C_self_passed,...)
        super( ... )

        local termSizes = self.termSizes
        termSizes.width = self.width
        termSizes.height = self.height
        self.program.quartzProxy.screenBuffer = self.buffer
        if not self.program:typeOf( SilicaProgram ) then
            self.redirect = self:getRedirect()
        end

        self:event( MouseEvent, self.onMouseEvent )
        self:event( UpKeyEvent, self.onUpKeyEvent )
        self:event( DownKeyEvent, self.onDownKeyEvent )
        self:event( CharacterEvent, self.onCharacterEvent )
        self:event( FocusesChangedInterfaceEvent, self.onFocusesChanged )
        self:event( ParentChangedInterfaceEvent, self.onParentChanged )
    end end
function _C_kd(v)local j=_C_L[v]return not(j and j[FocusesChangedInterfaceEvent])end  function _C_kc(self,super)return function(_C_self_passed,event,phase)if _C_kd(event)then _C_F(self,"event","onFocusesChanged","FocusesChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onFocusesChanged","Event.phases",phase)end 
        local oldContains = event:didContain( self )
        local contains = event:contains( self )
        if oldContains ~= contains then
            -- local program = self.program
            if contains and not self.isOpening then
                local oldSwitchableView = self.application:focusesOfType( ISwitchableView, event.oldFocuses )[1]
                local fromLeft = false
                if oldSwitchableView:typeOf( ProgramView ) then
                    if oldSwitchableView and oldSwitchableView.program.index > self.program.index then
                        fromLeft = true
                    end
                end
                self:flyInFocused( fromLeft )
            elseif oldContains and not self.isClosing then
                self.isOpening = false
                local newSwitchableView = self.application:focusesOfType( ISwitchableView )[1]
                local toRight = true
                if newSwitchableView:typeOf( ProgramView ) then
                    if newSwitchableView and newSwitchableView.program.index > self.program.index then
                        toRight = false
                    end
                end
                self:flyOutFocused( toRight )
            end
        end
    end end
function _C_ke(self,super)return function(_C_self_passed,event,phase)if _C_XY(event)then _C_F(self,"event","onParentChanged","ParentChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onParentChanged","Event.phases",phase)end 
        self.scale = ANIMATION_SCALE
        self.y = self.parent.height + 1
        self:animate( "y", 15, ANIMATION_FLY_UP_TIME, function()
            self.isOpening = false
        end, ANIMATION_SCALE_EASING, ANIMATION_SCALE_TIME )
        self:animate( "scale", 1, ANIMATION_SCALE_TIME, nil, ANIMATION_SCALE_EASING, ANIMATION_SCALE_TIME + ANIMATION_FLY_UP_TIME - ANIMATION_OVERLAP_TIME, false)
        -- self:animate( "scale", 1, ANIMATION_SCALE_TIME, nil, ANIMATION_SCALE_EASING, ANIMATION_SCALE_TIME + ANIMATION_FLY_UP_TIME - ANIMATION_OVERLAP_TIME, false)
    end end
function _C_kf(self,super)return function(_C_self_passed,ready)
        self.isClosing = true
        self.parent:sendToBack( self )
        local hasCalledReady = false
        self:animate( "scale", ANIMATION_SCALE, ANIMATION_SCALE_TIME, function()
            if not hasCalledReady then
                ready()
                hasCalledReady = true
            end
        end, ANIMATION_SCALE_EASING, nil, false )
        self:animate( "y", -self.height, ANIMATION_FLY_UP_TIME, function()
            if not hasCalledReady then
                ready()
                hasCalledReady = true
            end
            self:dispose()
        end, ANIMATION_SCALE_EASING, ANIMATION_SCALE_TIME - ANIMATION_OVERLAP_TIME )--ANIMATION_FLY_DELAY )
    end end
function _C_kg(self,super)return function(_C_self_passed,event,phase)if _C_GR(event)then _C_F(self,"event","onDownKeyEvent","DownKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onDownKeyEvent","Event.phases",phase)end 
        self.program:queueEvent( "key", event.keyCode, event.isRepeat  )
    end end
function _C_kh(self,super)return function(_C_self_passed,event,phase)if _C_GY(event)then _C_F(self,"event","onCharacterEvent","CharacterEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onCharacterEvent","Event.phases",phase)end 
        self.program:queueEvent( "char", event.character  )
    end end
function _C_ki(self,super)return function(_C_self_passed)
        local term = {}
        local termSizes = self.termSizes

        local colour, termX, termY, cursorBlink = Graphics.colours.BLACK, 1, 1

        local buffer = self.buffer
        local TRANSPARENT = Graphics.colours.TRANSPARENT
        local function setPixel( x, y, c )
            local termWidth = termSizes.width
            if c ~= TRANSPARENT and x >= 1 and y >= 1 and x <= termWidth and y <= termSizes.height then
                local pos = ( y - 1 ) * termWidth + x
                if buffer[ pos ] ~= c then
                    buffer[ pos ] = c
                    if not termSizes.needsDraw then
                        termSizes.needsDraw = true
                        self.needsDraw = true
                    end
                end
            end
        end

        function term.write( s )
            s = tostring( s ) -- we don't really care what s is. this whole thing will need to be redone when we actually get the real thing
            for i = 1, math.min( #s, termSizes.width - termX + 1 ) do
                setPixel( termX + i - 1, termY, colour )
            end
            termX = termX + #s
        end

        function term.blit( s, t, b )
            if #s ~= #b or #s ~= #t then
                return error "arguments must be the same length"
            end
            for i = 1, math.min( #s, termSizes.width - termX + 1 ) do
                setPixel( termX + i - 1, termY, colourBytes[ b:byte( i ) ] )
            end
            termX = termX + #s
        end

        function term.clear()
            local height = termSizes.height
            for x = 1, termSizes.width do
                for y = 1, height do
                    setPixel( x, y, colour )
                end
            end
        end

        function term.clearLine()
            for x = 1, termSizes.width do
                setPixel( x, termY, colour )
            end
        end

        function term.getCursorPos()
            return termX, termY
        end

        function term.setCursorPos( x, y )
            termX = math.floor( x )
            termY = math.floor( y )
        end

        function term.setCursorBlink( state )
            -- This does zilch
        end

        function term.getSize()
            return termSizes.width, termSizes.height
        end

        function term.scroll( n )
            local offset = n * termSizes.width
            local n, f, s = n < 0 and termSizes.width * termSizes.height or 1, n < 0 and 1 or termSizes.width * termSizes.height, n < 0 and -1 or 1
            for i = n, f, s do
                buffer[i] = buffer[i + offset] or colour
            end
        end

        function term.isColour()
            return true
        end

        function term.setBackgroundColour( backgroundColour )
            colour = backgroundColour
        end

        function term.setTextColour( colour )
            -- This does zilch
        end

        function term.getBackgroundColour()
            return colour
        end

        function term.getTextColour()
            return colours.white
        end

        term.isColor = term.isColour
        term.setBackgroundColor = term.setBackgroundColour
        term.setTextColor = term.setTextColour
        term.getBackgroundColor = term.getBackgroundColour
        term.getTextColor = term.getTextColour

        return term
    end end
function _C_kj(self,super)return function(_C_self_passed,fromLeft)
        self.scale = 0.8
        local width = self.width
        self.x = fromLeft and -width or 1 + width
        self:animate( "x", 1, ANIMATION_FLY_TIME, nil, ANIMATION_SCALE_EASING, ANIMATION_FLY_TIME/2 - 0.1 )
        self:animate( "scale", 1, ANIMATION_SCALE_TIME, nil, ANIMATION_SCALE_EASING, ANIMATION_FLY_TIME - 0.1, false )
    end end
function _C_kk(self,super)return function(_C_self_passed,event,phase)if _C_GI(event)then _C_F(self,"event","onUpKeyEvent","UpKeyEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onUpKeyEvent","Event.phases",phase)end 
        self.program:queueEvent( "key_up", event.keyCode  )
    end end
function _C_kl(self,super)return function(_C_self_passed,toRight)
        local width = self.width
        local x = toRight and 1 + width or -width
        self:animate( "x", x, ANIMATION_FLY_TIME, nil, ANIMATION_SCALE_EASING, ANIMATION_FLY_TIME/2 - 0.1 )
        self:animate( "scale", 0.8, ANIMATION_SCALE_TIME, nil, ANIMATION_SCALE_EASING, nil, false )

    end end
function _C_km(self,super)return function(_C_self_passed)
        self.canvas = ScaleableCanvas( self.width, self.height, self )
    end end
function _C_kn(self,super)return function(_C_self_passed)
        local width, height, theme, canvas, buffer, scale = self.width, self.height, self.theme, self.canvas, self.buffer, self.scale

        local pixels = canvas.pixels
        local fillColour = theme:value( "fillColour" )
        local TRANSPARENT = Graphics.colours.TRANSPARENT

        local termSizes = self.termSizes
        if termSizes.needsDraw then
            termSizes.needsDraw = false
        end

        for i = 1, #buffer do
            local colour = buffer[i] or fillColour
            pixels[i] = colour == TRANSPARENT and fillColour or colour
        end
    end end
function _C_ko(self,super)return function(_C_self_passed,event,phase)if _C_FS(event)then _C_F(self,"event","onMouseEvent","MouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseEvent","Event.phases",phase)end 
        if not event:typeOf( MoveMouseEvent ) then
            self.program:queueEvent( event.eventType, event.mouseButton, event.x, event.y  )
        else
            self.program:queueEvent( event.eventType, event.x, event.y  )
        end
        return true
    end end
_C_kp={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["unfocus"]={[2]=_C_F7,},["clearFocus"]={[2]=_C_FP,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["animateResize"]={[2]=_C_FW,},["flyOutFocused"]={_C_kl,},["onParentChanged"]={_C_ke,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["animate"]={[2]=_C_FV,},["onMouseEvent"]={_C_ko,},["initialiseCanvas"]={_C_km,_C_F6,},["getCoordinatesTo"]={[2]=_C_F8,},["onCharacterEvent"]={_C_kh,},["addFocus"]={[2]=_C_FQ,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["initialise"]={_C_kb,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["hitTestEvent"]={[2]=_C_FI,},["draw"]={[2]=_C_F9,},["onDraw"]={_C_kn,_C_FU,},["getRedirect"]={_C_ki,},["onUpKeyEvent"]={_C_kk,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["dispose"]={[2]=_C_FK,},["flyInFocused"]={_C_kj,},["startDragDrop"]={[2]=_C_FR,},["onDownKeyEvent"]={_C_kg,},["closeFlyUp"]={_C_kf,},["onFocusesChanged"]={_C_kc,},["hitTest"]={[2]=_C_FX,}}function _C_kq(self,super)return function(_C_self_passed,width)
        super( width )
        self.termSizes.width = width
    end end function _C_kr(self,super)return function(_C_self_passed,height)
        super( height )
        self.termSizes.height = height
    end end function _C_ks(self,super)return function(_C_self_passed,scale)
        self.scale = scale
        local canvas = self.canvas
        canvas.scaleX = scale
        canvas.scaleY = scale
        local parent = self.parent
        if parent then
            parent.needsDraw = true
        end
    end end _C_kt={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["scale"]={_C_ks},["shadowSize"]={[2]=_C_Fs},["height"]={_C_kr,_C_Fr},["width"]={_C_kq,_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_ku=setmetatable({["redirect"]=_C_9x,["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["termSizes"]=_C_9x,["program"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["y"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isClosing"]=_C_9x,["animations"]=_C_9x,["scale"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["isOpening"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["unfocus"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["animateResize"]=_C_9x,["flyOutFocused"]=_C_9x,["onParentChanged"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["onMouseEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onCharacterEvent"]=_C_9x,["addFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["draw"]=_C_9x,["onDraw"]=_C_9x,["getRedirect"]=_C_9x,["onUpKeyEvent"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["dispose"]=_C_9x,["flyInFocused"]=_C_9x,["startDragDrop"]=_C_9x,["onDownKeyEvent"]=_C_9x,["closeFlyUp"]=_C_9x,["onFocusesChanged"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_kv=setmetatable({["redirect"]=_C_Fz,["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["termSizes"]=_C_Ax,["program"]=_C_I3,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["shadowMask"]=_C_Fy,["isClosing"]=_C_Cu,["animations"]=_C_Ax,["scale"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isOpening"]=_C_Cu,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["unfocus"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["animateResize"]=_C_7,["flyOutFocused"]=_C_7,["onParentChanged"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["onMouseEvent"]=_C_7,["initialiseCanvas"]=_C_7,["getCoordinatesTo"]=_C_7,["onCharacterEvent"]=_C_7,["addFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["draw"]=_C_7,["onDraw"]=_C_7,["getRedirect"]=_C_7,["onUpKeyEvent"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["dispose"]=_C_7,["flyInFocused"]=_C_7,["startDragDrop"]=_C_7,["onDownKeyEvent"]=_C_7,["closeFlyUp"]=_C_7,["onFocusesChanged"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_kw={[ProgramView]=1,[ISwitchableView]=1,[View]=1}_C_kx={"View"}setmetatable(IToolbarItem,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_6S end})_C_kz={}_C_l0={}_C_l1={[StripeMask]=1,[_C_6U]=1,[Mask]=1,[_C_36]=1}_C_l2={"Mask"}_C_l3={}_C_l4={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_l5(self,super)return function(_C_self_passed,x,y,width,height,offset,stripeWidth)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if _C_Ar(offset)then _C_F(self,"offset","initialise","Number",offset)end if _C_Ar(stripeWidth)then _C_F(self,"stripeWidth","initialise","Number",stripeWidth)end 
		local pixels = {}
		if stripeWidth <= 0 then
			for i = 1, width * height do
				pixels[i] = true
			end
		else
			for i = 1, width * height do
				local n = (i - 1) / width - offset
				pixels[i] = ( ( (i - 1) % width + n ) / stripeWidth ) % 2 < 1
			end
		end
		super( x, y, width, height, pixels )
	end end
_C_l6={["initialise"]={_C_l5,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_l7=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_l8=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_l9={[StripeMask]=1,[Mask]=1}_C_lA={"Mask"}setmetatable(IToolbarDynamicItem,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_6V end})_C_lC={}_C_lD={}_C_lE={[SplitHandleView]=1,[_C_6X]=1,[View]=1,[_C_3N]=1}_C_lF={"View"}_C_lG={["cursor"]=loadstring("return ResizeHorizontalCursor.static\
\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isVertical"]=loadstring("return false\
\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["position"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["height"]=loadstring("return 1\
\9\
"),["isDragging"]=loadstring("return false\
\9\
"),}_C_lH={["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isVertical"]={_C_Cp,"Boolean"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["dragX"]={_C_CU,"Number (allowsNil)"},["position"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["index"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["contentPosition"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["dragY"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["isDragging"]={_C_Cp,"Boolean"},}function _C_lI(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( DownMouseEvent, self.onMouseDown, Event.phases.AFTER )
		self:event( ParentChangedInterfaceEvent, self.onParentChanged )
		self.eventManager:connectGlobal( DragMouseEvent, self.onGlobalMouseDrag )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
function _C_lJ(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.dragX = event.x
			self.dragY = event.y
			self.isDragging = true
			self.parent:lockChildren()
		end
		return true
	end end
function _C_lK(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isDragging and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.dragX = nil
			self.dragY = nil
			self.isDragging = false
			self.parent:unlockChildren()
			return true
		end
	end end
function _C_lL(self,super)return function(_C_self_passed,event,phase)if _C_XY(event)then _C_F(self,"event","onParentChanged","ParentChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onParentChanged","Event.phases",phase)end 
		local parent = self.parent
		if parent and parent:typeOf( SplitContainer ) then
			self.isVertical = parent.isVertical
		end
	end end
function _C_lM(self,super)return function(_C_self_passed)
		self.canvas:fill( self.theme:value( "fillColour" ) )
	end end
function _C_lN(self,super)return function(_C_self_passed,event,phase)if _C_S8(event)then _C_F(self,"event","onGlobalMouseDrag","DragMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseDrag","Event.phases",phase)end 
		if self.isDragging and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			local segmentSize, contentPosition = self.parent.segmentSize, self.contentPosition
			local width = event.x - self.dragX + 1 - contentPosition + self.theme:value( "leftMargin" )
			self.position = width / segmentSize
			return true
		end
	end end
_C_lO={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["onGlobalMouseDrag"]={_C_lN,},["draw"]={[2]=_C_F9,},["siblingsOfType"]={[2]=_C_FH,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_lI,_C_FG,},["onMouseDown"]={_C_lJ,},["onGlobalMouseUp"]={_C_lK,},["onParentChanged"]={_C_lL,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["onDraw"]={_C_lM,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["animateResize"]={[2]=_C_FW,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["dispose"]={[2]=_C_FK,},["hitTestEvent"]={[2]=_C_FI,},["hitTest"]={[2]=_C_FX,}}function _C_lP(self,super)return function(_C_self_passed,isVertical)
		self.isVertical = isVertical
		if isVertical then
			self.cursor = ResizeVerticalCursor.static
		else
			self.cursor = ResizeHorizontalCursor.static
		end
	end end function _C_lQ(self,super)return function(_C_self_passed,position)
		self.position = position
		local parent = self.parent
		if parent then
			parent.needsLayoutUpdate = true
		end
	end end _C_lR={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["isVertical"]={_C_lP},["position"]={_C_lQ},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_lS=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isVertical"]=_C_9x,["isCanvasHitTested"]=_C_9x,["contentPosition"]=_C_9x,["position"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["width"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["dragX"]=_C_9x,["animations"]=_C_9x,["dragY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["isDragging"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onGlobalMouseDrag"]=_C_9x,["draw"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onParentChanged"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["animateResize"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_lT=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isVertical"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isCanvasHitTested"]=_C_Cu,["contentPosition"]=_C_LL,["position"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["shadowMask"]=_C_Fy,["dragX"]=_C_LL,["animations"]=_C_Ax,["dragY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isDragging"]=_C_Cu,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["onGlobalMouseDrag"]=_C_7,["draw"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["onParentChanged"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["animateResize"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_lU={[SplitHandleView]=1,[View]=1}_C_lV={"View"}_C_lX={}_C_lY={}_C_lZ={[EventManager]=1,[_C_6Z]=1}_C_la={["handles"]=loadstring("return {}\
\9\
"),["handlesGlobal"]=loadstring("return {}\
\
\9\
\
\
\
\
\9\
"),}function _C_lc(v)if type(v)~="table" then return true end for i,V in pairs(v)do if _C_FJ(k)then return true end end return false end _C_lb={["owner"]={_C_cq,"InstanceOrStatic"},["handles"]={_C_lc,"{Event}"},["handlesGlobal"]={_C_lc,"{Event}"},}function _C_ld(self,super)return function(_C_self_passed,owner)if _C_cq(owner)then _C_F(self,"owner","initialise","InstanceOrStatic",owner)end 
		self.owner = owner or self
		self.owner = self.owner
		-- allow the class to be called as a shorthand for :connect
		-- TODO: connect event handle
		-- self.metatable.__call = function(self, _, ...) return self:connect( ... ) end
		-- setmetatable( self, self.mt )
	end end
function _C_le(self,super)return function(_C_self_passed)
		for eventType, v in pairs( self.handlesGlobal ) do
			for i, handle in pairs( v ) do
				self.application.eventManager:disconnect( eventType, handle[1], handle[2], self, handle[3] )
				v[i] = nil
			end
		end
	end end
local function _C_lg(v)return not _C_9w[v]end function _C_lf(self,super)return function(_C_self_passed,class)if _C_lg(class)then _C_F(self,"class","hasConnectionsGlobal","Class",class)end 
		for handleClass, handles in pairs( self.handlesGlobal ) do
			if #handles >= 1 and class:typeOf( handleClass ) then
				return true
			end
		end
	end end
local function _C_li(v)return type(v)~="function"end function _C_lh(self,super)return function(_C_self_passed,eventType,func,phase,sender)if _C_FJ(eventType)then _C_F(self,"eventType","disconnectGlobal","Event",eventType)end if _C_li(func)then _C_F(self,"func","disconnectGlobal","Function",func)end if phase==nil then phase=Event.phases.BEFORE end if _C_Df(phase)then _C_F(self,"phase","disconnectGlobal","Event.phases",phase)end if sender==nil then sender=self.owner  end if _C_cq(sender)then _C_F(self,"sender","disconnectGlobal","InstanceOrStatic",sender)end 
		self.application.eventManager:disconnect( eventType, func, phase, self, sender )

		if self.handlesGlobal[eventType] then
			for i, handle in pairs( self.handlesGlobal[eventType] ) do
				if handle[1] == func and handle[2] == phase and handle[3] == sender then
					self.handlesGlobal[eventType][i] = nil
				end
			end
		end
	end end
function _C_lj(self,super)return function(_C_self_passed,class)if _C_lg(class)then _C_F(self,"class","hasConnections","Class",class)end 
		for handleClass, handles in pairs( self.handles ) do
			if #handles >= 1 and class:typeOf( handleClass ) then
				return true
			end
		end
	end end
function _C_lk(self,super)return function(_C_self_passed,event)if _C_FJ(event)then _C_F(self,"event","handleEvent","Event",event)end 
		if self:handleEventPhase( event, Event.phases.BEFORE ) then
			return true
		end

		if self:handleEventPhase( event, Event.phases.AFTER ) then
			return true
		end
	end end
function _C_ll(self,super)return function(_C_self_passed)
		self:disconnectAllGlobals()
	end end
function _C_lm(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","handleEventPhase","Event",event)end if _C_Df(phase)then _C_F(self,"phase","handleEventPhase","Event.phases",phase)end 
		local class = event.class
		for handleClass, handles in pairs( self.handles ) do
			if class:typeOf( handleClass ) then
				for i, handle in pairs( handles ) do
					if handle and phase == handle[2] then
						-- handle[1] is the handle function
						-- handle[2] is the phase
						-- handle[3] is the event manager
						-- handle[4] is the sender
						local response = handle[1]( handle[4], event, handle[2] ) -- if response is true stop propagation, if false continue
						-- TODO: maybe enforce returning boolean for event handler functions
						-- if response ~= true and response ~= false then
						--	error( "Error handler for event '" .. eventType .. "' of instance '" .. tostring( handle[4] ) .. "' did not return boolean. If the event should not be sent to anything else (i.e. stop propagation) return true, otherwise, if it can continue being passed around, return false.", 0 )
						-- end

						if response then
							return true
						end
					end
				end
			end
		end
	end end
function _C_ln(self,super)return function(_C_self_passed,eventType,func,phase,eventManager,sender)if _C_lg(eventType)then _C_F(self,"eventType","connect","Class",eventType)end if _C_li(func)then _C_F(self,"func","connect","Function",func)end if phase==nil then phase=Event.phases.BEFORE end if _C_Df(phase)then _C_F(self,"phase","connect","Event.phases",phase)end if eventManager==nil then eventManager=self end if _C_Da(eventManager)then _C_F(self,"eventManager","connect","EventManager",eventManager)end if sender==nil then sender=eventManager.owner  end if _C_cq(sender)then _C_F(self,"sender","connect","InstanceOrStatic",sender)end 
		self:disconnect( eventType, func, phase, eventManager, sender ) -- ensure duplicates won't be made

		if not self.handles[eventType] then
			self.handles[eventType] = {}
		end

		table.insert( self.handles[eventType], { func, phase, eventManager, sender } )
	end end
function _C_lo(self,super)return function(_C_self_passed,eventType,func,phase,sender)if _C_FJ(eventType)then _C_F(self,"eventType","connectGlobal","Event",eventType)end if _C_li(func)then _C_F(self,"func","connectGlobal","Function",func)end if phase==nil then phase=Event.phases.BEFORE end if _C_Df(phase)then _C_F(self,"phase","connectGlobal","Event.phases",phase)end if sender==nil then sender=self.owner  end if _C_cq(sender)then _C_F(self,"sender","connectGlobal","InstanceOrStatic",sender)end 
		self:disconnectGlobal( eventType, func, phase, sender ) -- ensure duplicates won't be made

		if not self.handlesGlobal[eventType] then
			self.handlesGlobal[eventType] = {}
		end

		table.insert( self.handlesGlobal[eventType], { func, phase, sender } )
		self.application.eventManager:connect( eventType, func, phase, self, sender )
	end end
function _C_lp(self,super)return function(_C_self_passed,eventType,func,phase,eventManager,sender)if _C_FJ(eventType)then _C_F(self,"eventType","disconnect","Event",eventType)end if _C_li(func)then _C_F(self,"func","disconnect","Function",func)end if phase==nil then phase=Event.phases.BEFORE end if _C_Df(phase)then _C_F(self,"phase","disconnect","Event.phases",phase)end if eventManager==nil then eventManager=self end if _C_Da(eventManager)then _C_F(self,"eventManager","disconnect","EventManager",eventManager)end if sender==nil then sender=eventManager.owner  end if _C_cq(sender)then _C_F(self,"sender","disconnect","InstanceOrStatic",sender)end 
		if self.handles[eventType] then
			for i, handle in pairs( self.handles[eventType] ) do
				if handle[1] == func and handle[2] == phase and handle[3] == eventManager and handle[4] == sender then
					self.handles[eventType][i] = nil
				end
			end
		end
	end end
_C_lq={["initialise"]={_C_ld,},["disconnectAllGlobals"]={_C_le,},["hasConnectionsGlobal"]={_C_lf,},["disconnectGlobal"]={_C_lh,},["hasConnections"]={_C_lj,},["handleEvent"]={_C_lk,},["dispose"]={_C_ll,},["handleEventPhase"]={_C_lm,},["connect"]={_C_ln,},["connectGlobal"]={_C_lo,},["disconnect"]={_C_lp,}}function _C_lr(_,k,n,v)if _C_lc(n)then _C_D(_,k,"{Event}",n)end v[k]=n end _C_ls=setmetatable({["owner"]=_C_9x,["handles"]=_C_9x,["handlesGlobal"]=_C_9x,["initialise"]=_C_9x,["disconnectAllGlobals"]=_C_9x,["hasConnectionsGlobal"]=_C_9x,["disconnectGlobal"]=_C_9x,["hasConnections"]=_C_9x,["handleEvent"]=_C_9x,["dispose"]=_C_9x,["handleEventPhase"]=_C_9x,["connect"]=_C_9x,["connectGlobal"]=_C_9x,["disconnect"]=_C_9x},_C_9z)_C_lt=setmetatable({["owner"]=_C_cz,["handles"]=_C_lr,["handlesGlobal"]=_C_lr,["initialise"]=_C_7,["disconnectAllGlobals"]=_C_7,["hasConnectionsGlobal"]=_C_7,["disconnectGlobal"]=_C_7,["hasConnections"]=_C_7,["handleEvent"]=_C_7,["dispose"]=_C_7,["handleEventPhase"]=_C_7,["connect"]=_C_7,["connectGlobal"]=_C_7,["disconnect"]=_C_7},_C_9z)_C_lu={[EventManager]=1}_C_lw={}_C_lx={}_C_ly={["fromInterface"]={[3]=_C_Ke,}}_C_lz={[SplitContainer]=1,[_C_6b]=1,[LayoutContainer]=1,[_C_3b]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_m0={"LayoutContainer","Container","View"}_C_m1={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["dontAnimateLayoutUpdate"]=loadstring("return false\
\9\
"),["isVertical"]=loadstring("return false\
\
\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isLayoutLocked"]=loadstring("return false\
\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_m2={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["isLayoutLocked"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["dontAnimateLayoutUpdate"]={_C_Cp,"Boolean"},["isVertical"]={_C_Cp,"Boolean"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["x"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["y"]={_C_Ar,"Number"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["animations"]={_C_An,"Table"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["segmentSize"]={_C_CU,"Number (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_m3(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=false  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
		local children = self.children
		local childrenCount = #children
		if childrenCount > 0 and childrenCount % 2 == 1 then -- we MUST have an odd number of children, there should be a separator view between each main view
			local width, height, isVertical = self.width, self.height, self.isVertical
			local size = isVertical and height or width
			local handleThickness, handleLeftMargin, handleRightMargin, handleSize
			if childrenCount > 1 then
				local theme = children[2].theme
				handleThickness, handleLeftMargin, handleRightMargin = theme:value( "thickness" ), theme:value( "leftMargin" ), theme:value( "rightMargin" )
				handleSize = handleThickness + handleLeftMargin + handleRightMargin
			end

			local handlePositions = {}
			-- scan over all the handles and note their positions
			for i = 2, childrenCount, 2 do
				local childView = children[i]
				handlePositions[i / 2] = childView.position
			end

			local segmentSize = size / ( #handlePositions + 1 )
			local position, remainingSize = 1, size - ( handleThickness and ( #handlePositions * handleThickness ) or 0 )
			local positionKey, sizeKey = isVertical and "y" or "x", isVertical and "height" or "width"
			for i = 1, childrenCount, 2 do
				local childView = children[i]
				local index = i / 2 + 0.5
				local handlePosition = handlePositions[index]
				local childSize
				if handlePosition then
					childSize = math.floor( segmentSize * handlePosition + 0.5 )
					local handleView = children[i + 1]
					handleView.contentPosition = position
					handleView[positionKey] = position + childSize - handleLeftMargin
					handleView[sizeKey] = handleSize
				else
					childSize = remainingSize
				end
				remainingSize = remainingSize - childSize
				childView[positionKey] = position
				childView[sizeKey] = childSize
				position = position + childSize + ( handleThickness or 0 )
			end
			self.segmentSize = segmentSize
		end

		self.needsLayoutUpdate = false
	end end
function _C_m4(self,super)return function(_C_self_passed,event,phase)if _C_kd(event)then _C_F(self,"event","onFocusesChanged","FocusesChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onFocusesChanged","Event.phases",phase)end 
		local oldFocusedSwitchableViews = self.application:focusesOfType( ISwitchableView, event.oldFocuses )
		local focusedSwitchableViews = self.application:focusesOfType( ISwitchableView, event.newFocuses )

		if #focusedSwitchableViews > 0 then
			local oldSwitchableView = oldFocusedSwitchableViews[1]
			local switchableView = focusedSwitchableViews[1]
			if switchableView ~= oldSwitchableView then
				if oldSwitchableView then
					self.switchableItems[oldSwitchableView]:updateThemeStyle()
				end
				self.activeView = self.switchableItems[switchableView]
			end
		else
			self.activeView = nil
		end
	end end
function _C_m5(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		if event.container == self then
			local childView = event.childView
			if not childView:typeOf( SplitHandleView ) then
				local index = childView.index
				if index ~= 1 then
					local existingChild = self.children[index - 1]
					if not existingChild or not existingChild:typeOf( SplitHandleView ) then
						self:insert( SplitHandleView(), index )
					end
				end
			else
				self.needsLayoutUpdate = true
			end
			local otherSize = self.isVertical and self.width or self.height
			local otherPositionKey, otherSizeKey = isVertical and "x" or "y", isVertical and "width" or "height"
			childView[otherPositionKey] = 1
			childView[otherSizeKey] = otherSize
		end
	end end
function _C_m6(self,super)return function(_C_self_passed)
		for i, childView in ipairs( self.children ) do
			if childView:typeOf( LayoutContainer ) then
				childView.isLayoutLocked = true
			end
		end
	end end
function _C_m7(self,super)return function(_C_self_passed)
		for i, childView in ipairs( self.children ) do
			if childView:typeOf( LayoutContainer ) then
				childView.isLayoutLocked = false
			end
		end
	end end
_C_m8={["updateLayout"]={_C_m3,_C_Ld,},["onReadyLoadInterface"]={[3]=_C_Kk,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[2]=_C_Lc,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["hitTest"]={[4]=_C_FX,},["sendToBack"]={[3]=_C_LD,},["addFocus"]={[4]=_C_FQ,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onReady"]={[2]=_C_LZ,},["onChildOfChildAdded"]={[3]=_C_Kp,},["animateResize"]={[4]=_C_FW,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["lockChildren"]={_C_m6,},["unfocus"]={[4]=_C_F7,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["siblingsOfType"]={[4]=_C_FH,},["insert"]={[3]=_C_Kw,},["initialise"]={[2]=_C_LY,[3]=_C_Kx,[4]=_C_FG,},["onFocusesChanged"]={_C_m4,},["hitTestEvent"]={[4]=_C_FI,},["initialiseCanvas"]={[4]=_C_F6,},["onChildRemoved"]={[2]=_C_La,},["focus"]={[4]=_C_F5,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["unlockChildren"]={_C_m7,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["onChildAdded"]={_C_m5,_C_Lb,},["getCoordinates"]={[4]=_C_F3,},["disposeAll"]={[3]=_C_L3,}}function _C_m9(self,super)return function(_C_self_passed,width)
	    super( width )
	    if self.isVertical then
	    	local children = self.children
		    for i = 2, #children, 2 do
				children[i].width = width
			end
		end
	end end function _C_mA(self,super)return function(_C_self_passed,height)
	    super( height )
	    if not self.isVertical then
	    	local children = self.children
		    for i = 2, #children, 2 do
				children[i].height = height
			end
		end
	end end function _C_mB(self,super)return function(_C_self_passed,isVertical)
		self.isVertical = isVertical
		local children = self.children
		local otherSize = isVertical and self.width or self.height
		local otherPositionKey, otherSizeKey = isVertical and "x" or "y", isVertical and "width" or "height"
		for i = 2, #children, 2 do
			local childView = children[i]
			childView.isVertical = isVertical
			childView[otherPositionKey] = 1
			childView[otherSizeKey] = otherSize
		end
	end end _C_mC={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["isVertical"]={_C_mB},["shadowSize"]={[4]=_C_Fs},["height"]={_C_mA,_C_Lf,_C_LI,_C_Fr},["width"]={_C_m9,_C_Lg,_C_LF,_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_mD=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["isLayoutLocked"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["dontAnimateLayoutUpdate"]=_C_9x,["isVertical"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["isFocusDismissable"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["segmentSize"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["hitTest"]=_C_9x,["sendToBack"]=_C_9x,["addFocus"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onReady"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["animateResize"]=_C_9x,["draw"]=_C_9x,["lockChildren"]=_C_9x,["unfocus"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["siblingsOfType"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["onFocusesChanged"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onChildRemoved"]=_C_9x,["focus"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["unlockChildren"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["getCoordinates"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_mE=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLayoutLocked"]=_C_Cu,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["dontAnimateLayoutUpdate"]=_C_Cu,["isVertical"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocusDismissable"]=_C_Cu,["needsLayoutUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["segmentSize"]=_C_LL,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["hitTest"]=_C_7,["sendToBack"]=_C_7,["addFocus"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onReady"]=_C_7,["onChildOfChildAdded"]=_C_7,["animateResize"]=_C_7,["draw"]=_C_7,["lockChildren"]=_C_7,["unfocus"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["siblingsOfType"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["onFocusesChanged"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onChildRemoved"]=_C_7,["focus"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["unlockChildren"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["getCoordinates"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_mF={[SplitContainer]=1,[LayoutContainer]=1,[Container]=1,[View]=1}_C_mG={"LayoutContainer","Container","View"}_C_mI={}_C_mJ={}_C_mK={["fromInterface"]={[2]=_C_Ke,}}_C_mL={[ApplicationContainer]=1,[_C_7H]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_mM={"Container","View"}_C_mN={["width"]=loadstring("return w\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["cursorX"]=loadstring("return 6\
\9\
"),["themeName"]=loadstring("return \"default\"\
\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsCursorUpdate"]=loadstring("return true\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["cursorY"]=loadstring("return 6\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["height"]=loadstring("return h\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_mP(v)if v==nil then return false end local j=_C_L[v]return not(j and j[ScreenCanvas])end  _C_mO={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["themeName"]={_C_Ai,"String"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["needsCursorUpdate"]={_C_Cp,"Boolean"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["parent"]={_C_F1,"Container (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["cursorY"]={_C_Ar,"Number"},["leftPin"]={_C_Aq,"String (allowsNil)"},["offsetY"]={_C_Ar,"Number"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["screenCanvas"]={_C_mP,"ScreenCanvas (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_mQ(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( DownMouseEvent, self.onMouseDownAfter, Event.phases.AFTER )
		self:event( MoveMouseEvent, self.onMouseMoveCursorBefore )
	end end
function _C_mR(self,super)return function(_C_self_passed)
		if Quartz then
			self.canvas = ScreenCanvas( self.width, self.height, self )
		else
			super()
			self.screenCanvas = ScreenCanvas( self.width, self.height, self )
		end
	end end
function _C_mS(self,super)return function(_C_self_passed)
		super()
		self.application:clearFocus()
	end end
function _C_mT(self,super)return function(_C_self_passed)
		local function search( container, x, y, cursor )
			local children = container.children
			for i = #children, 1, -1 do
				local childView = children[i]
				if childView:hitTest( x, y ) then
					local cursor
					if childView:typeOf( Container ) then
						cursor = search( childView, x - childView.x + 1, y - childView.y + 1 )
					else
						cursor = childView.cursor
					end
					if cursor then
						return cursor
					end
				end
			end
			cursor = cursor or container.cursor
			if cursor then
				return cursor
			end
		end

		local oldCursor = self.cursor
		local newCursor = search( self, self.cursorX, self.cursorY, Cursor.static )
		local didChange = false
		if newCursor ~= oldCursor or newCursor.hasUpdatedApperance then
			didChange = true
			newCursor.hasUpdatedApperance = false
			if newCursor ~= oldCursor then
				self.cursor = newCursor
			end
			if Quartz then
				local image = newCursor.image
				local bridgeKeys = BridgedCursor.bridgeKeys
				Quartz.cursor = {
					[bridgeKeys.HOT_SPOT_X] = newCursor.hotSpotX;
					[bridgeKeys.HOT_SPOT_Y] = newCursor.hotSpotY;
					[bridgeKeys.PIXELS] = image.pixels;
					[bridgeKeys.WIDTH] = image.width;
					[bridgeKeys.HEIGHT] = image.height;
				}
			end
		end
		self.needsCursorUpdate = false
		return didChange
	end end
function _C_mU(self,super)return function(_C_self_passed)
		if Quartz then
			if self.needsDraw then
				super()
				self.canvas:drawToScreen( term )
			end
			if self.needsCursorUpdate then
				self:updateCursor()
			end
		else
			local needsDraw, needsCursorUpdate = self.needsDraw, self.needsCursorUpdate
			if needsDraw or needsCursorUpdate then
				if needsCursorUpdate and not self:updateCursor() and not needsDraw then
					-- the cursor didn't change and we don't need to redraw children
					return
				end
				local canvas, screenCanvas = self.canvas, self.screenCanvas
				if needsDraw then
					super()
				end
				canvas:transfer( screenCanvas )
				self.cursor:drawTo( screenCanvas, self.cursorX, self.cursorY )
				screenCanvas:drawToScreen( term )
			end
		end
	end end
function _C_mW(v)local j=_C_L[v]return not(j and j[MoveMouseEvent])end  function _C_mV(self,super)return function(_C_self_passed,event,phase)if _C_mW(event)then _C_F(self,"event","onMouseMoveCursorBefore","MoveMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseMoveCursorBefore","Event.phases",phase)end 
		self.cursorX = event.x
		self.cursorY = event.y
		self.needsCursorUpdate = true
		if not Quartz then
			self:drawCursor()
		end
	end end
function _C_mX(self,super)return function(_C_self_passed,...)
		super( ... )
		self:draw()
	end end
function _C_mY(self,super)return function(_C_self_passed)
		local canvas, screenCanvas = self.canvas, self.screenCanvas
		canvas:transfer( screenCanvas )
		self.cursor:drawTo( screenCanvas, self.cursorX, self.cursorY )
		screenCanvas:drawToScreen( term )
	end end
function _C_mZ(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDownAfter","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDownAfter","Event.phases",phase)end 
		local application = self.application
		
		if application:hasFocus() then
			for focus, v in pairs( application.focuses ) do
				 if focus.isFocusDismissable then
					application:unfocus( focus )
				 end
			end
		end
	end end
_C_ma={["getCoordinates"]={[3]=_C_F3,},["onReadyLoadInterface"]={[2]=_C_Kk,},["dispose"]={_C_mS,_C_L1,_C_FK,},["updateCursor"]={_C_mT,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_mX,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["initialiseCanvas"]={_C_mR,[3]=_C_F6,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={_C_mU,_C_LC,_C_F9,},["hitTest"]={[3]=_C_FX,},["addFocus"]={[3]=_C_FQ,},["onMouseMoveCursorBefore"]={_C_mV,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["drawCursor"]={_C_mY,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_mQ,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["onMouseDownAfter"]={_C_mZ,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["animateResize"]={[3]=_C_FW,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["updatePins"]={[2]=_C_Kn,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["unfocus"]={[3]=_C_F7,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}function _C_mb(self,super)return function(_C_self_passed)
		return self.isVisible -- View requires having a parent to be visible, but we never have a parent
	end end function _C_mc(self,super)return function(_C_self_passed,theme)
		if type( theme ) == "string" then error( "To the set the theme of an ApplicationContainer using a string, use the property 'themeName', rather than 'theme'. Most likely cause: you have use theme=\"" .. theme .. "\" in an interface file, rather than themeName=\"" .. theme .. "\"", 0 ) end
		self.theme = theme
	end end function _C_md(self,super)return function(_C_self_passed,themeName)
		local oldThemeName = self.themeName
		self.themeName = themeName
		Theme.static.active = Theme.static:named( themeName )
		if oldThemeName then
			self.application.event:handleEvent( ThemeChangedInterfaceEvent( themeName, oldThemeName ) )
		end
	end end function _C_me(self,super)return function(_C_self_passed,needsDraw)
		self.needsDraw = needsDraw -- View passed needsDraw to parent, but we never have a aprent
	end end _C_mf={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["theme"]={_C_mc},["themeName"]={_C_md},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={_C_me,[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={_C_mb,[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}function _C_mg(_,k,n,v)if _C_mP(n)then _C_D(_,k,"ScreenCanvas (allowsNil)",n)end v[k]=n end _C_mh=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["cursorY"]=_C_9x,["themeName"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["interfaceLinks"]=_C_9x,["height"]=_C_9x,["needsCursorUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["screenCanvas"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dispose"]=_C_9x,["updateCursor"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["initialiseCanvas"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["onMouseMoveCursorBefore"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["drawCursor"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onMouseDownAfter"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updatePins"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["unfocus"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_mi=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=function(_,k,n,v,w,s,d,l)if _C_Dc(n)then _C_D(_,k,"ThemeOutlet",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["cursorY"]=_C_B2,["themeName"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsCursorUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=_C_B2,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["screenCanvas"]=_C_mg,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["dispose"]=_C_7,["updateCursor"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["initialiseCanvas"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["onMouseMoveCursorBefore"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["drawCursor"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onMouseDownAfter"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updatePins"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["unfocus"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_mj={[ApplicationContainer]=1,[Container]=1,[View]=1}_C_mk={"Container","View"}_C_mm={}_C_mn={}_C_mo={["fromInterface"]={[3]=_C_Ke,}}_C_mp={[QuartzApplicationContainer]=1,[_C_6d]=1,[ApplicationContainer]=1,[_C_7H]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_mq={"ApplicationContainer","Container","View"}_C_mr={["width"]=loadstring("return w\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["cursorX"]=loadstring("return 6\
\9\
"),["themeName"]=loadstring("return \"default\"\
\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsCursorUpdate"]=loadstring("return true\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["cursorY"]=loadstring("return 6\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["height"]=loadstring("return h\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_mt(v)local j=_C_L[v]return not(j and j[HomeContainer])end  function _C_mu(v)local j=_C_L[v]return not(j and j[TopBarContainer])end  _C_ms={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["themeName"]={_C_Ai,"String"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["needsCursorUpdate"]={_C_Cp,"Boolean"},["homeContainer"]={_C_mt,"HomeContainer"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["parent"]={_C_F1,"Container (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["offsetY"]={_C_Ar,"Number"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["specialMouseTimes"]={_C_An,"Table"},["cursorY"]={_C_Ar,"Number"},["topBar"]={_C_mu,"TopBarContainer"},["siblings"]={_C_At,"Table (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["screenCanvas"]={_C_mP,"ScreenCanvas (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_mv(self,super)return function(_C_self_passed,...)
	    super( ... )
	    self:event( ReadyInterfaceEvent, self.onReady, Event.phases.AFTER )
	end end
function _C_mw(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
	    self.homeContainer:focus()
	end end
_C_mx={["getCoordinates"]={[4]=_C_F3,},["onReadyLoadInterface"]={[3]=_C_Kk,},["dispose"]={[2]=_C_mS,[3]=_C_L1,[4]=_C_FK,},["updateCursor"]={[2]=_C_mT,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[2]=_C_mX,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["sendToBack"]={[3]=_C_LD,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["initialiseCanvas"]={[2]=_C_mR,[4]=_C_F6,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onChildOfChildAdded"]={[3]=_C_Kp,},["hitTest"]={[4]=_C_FX,},["draw"]={[2]=_C_mU,[3]=_C_LC,[4]=_C_F9,},["addFocus"]={[4]=_C_FQ,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onMouseMoveCursorBefore"]={[2]=_C_mV,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["drawCursor"]={[2]=_C_mY,},["insert"]={[3]=_C_Kw,},["initialise"]={_C_mv,_C_mQ,_C_Kx,_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["onMouseDownAfter"]={[2]=_C_mZ,},["animateResize"]={[4]=_C_FW,},["updatePins"]={[3]=_C_Kn,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["onReady"]={_C_mw,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["unfocus"]={[4]=_C_F7,},["focus"]={[4]=_C_F5,},["disposeAll"]={[3]=_C_L3,}}_C_my={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["theme"]={[2]=_C_mc},["themeName"]={[2]=_C_md},["shadowSize"]={[4]=_C_Fs},["height"]={[3]=_C_LI,[4]=_C_Fr},["width"]={[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[2]=_C_me,[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[2]=_C_mb,[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}function _C_mz(_,k,n,v)if _C_mt(n)then _C_D(_,k,"HomeContainer",n)end v[k]=n end function _C_n0(_,k,n,v)if _C_mu(n)then _C_D(_,k,"TopBarContainer",n)end v[k]=n end _C_n1=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["homeContainer"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["cursorY"]=_C_9x,["themeName"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["interfaceLinks"]=_C_9x,["height"]=_C_9x,["needsCursorUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["topBar"]=_C_9x,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["screenCanvas"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dispose"]=_C_9x,["updateCursor"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["initialiseCanvas"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["hitTest"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onMouseMoveCursorBefore"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["drawCursor"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onMouseDownAfter"]=_C_9x,["animateResize"]=_C_9x,["updatePins"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onReady"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["unfocus"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_n2=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=function(_,k,n,v,w,s,d,l)if _C_Dc(n)then _C_D(_,k,"ThemeOutlet",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["homeContainer"]=_C_mz,["siblings"]=_C_Fz,["cursorY"]=_C_B2,["themeName"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsCursorUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=_C_B2,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topBar"]=_C_n0,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["screenCanvas"]=_C_mg,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["dispose"]=_C_7,["updateCursor"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["initialiseCanvas"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["hitTest"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onMouseMoveCursorBefore"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["drawCursor"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onMouseDownAfter"]=_C_7,["animateResize"]=_C_7,["updatePins"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onReady"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["unfocus"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_n3={[QuartzApplicationContainer]=1,[ApplicationContainer]=1,[Container]=1,[View]=1}_C_n4={"ApplicationContainer","Container","View"}_C_n6={["eventType"]=loadstring("return \"interface_program_closed\"\
\
\9\
"),}_C_n7={["eventType"]={_C_Ai,"String"},}_C_n8={["eventClasses"]=loadstring([[return {}

	
]])}_C_n9={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_nA=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_nB=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_nC={[ProgramClosedInterfaceEvent]=1,[_C_6f]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_nD={"InterfaceEvent","Event"}_C_nE={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_nF={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["program"]={_C_Hy,"Program"},["relativeView"]={_C_Cr,"View"},["isSentToSender"]={_C_Cp,"Boolean"},}function _C_nG(self,super)return function(_C_self_passed,program)if _C_Hy(program)then _C_F(self,"program","initialise","Program",program)end 
	    self.program = program
	end end
_C_nH={["initialise"]={_C_nG,},["makeRelative"]={[3]=_C_Cs,}}_C_nI=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["program"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_nJ=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["program"]=_C_I3,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_nK={[ProgramClosedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_nL={"InterfaceEvent","Event"}_C_nN={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"menuOpen\"\
\9\
"),["height"]=loadstring("return 4\
\9\
\
\
\9\
"),}_C_nO={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_nP(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 4, 4 )
		path:lineTo( 7, 1 )
		path:close()

		super( path )
	end end
_C_nQ={["initialise"]={_C_nP,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_nR=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_nS=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_nT={[MenuOpenSymbol]=1,[_C_6h]=1,[Symbol]=1,[_C_34]=1}_C_nU={"Symbol"}_C_nV={}_C_nW={}_C_nX={[MenuOpenSymbol]=1,[Symbol]=1}_C_nY={"Symbol"}_C_na={["eventType"]=loadstring("return \"interface_program_info_changed\";\
\
\9\
"),}_C_nb={["eventType"]={_C_Ai,"String"},}_C_nc={["eventClasses"]=loadstring([[return {}

	
]])}_C_nd={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_ne=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_nf=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_ng={[ProgramInformationChangedInterfaceEvent]=1,[_C_6j]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_nh={"InterfaceEvent","Event"}_C_ni={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_nj={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["program"]={_C_Hy,"Program"},["relativeView"]={_C_Cr,"View"},["isSentToSender"]={_C_Cp,"Boolean"},}function _C_nk(self,super)return function(_C_self_passed,program)if _C_Hy(program)then _C_F(self,"program","initialise","Program",program)end 
	    self.program = program
	end end
_C_nl={["initialise"]={_C_nk,},["makeRelative"]={[3]=_C_Cs,}}_C_nm=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["program"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_nn=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["program"]=_C_I3,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_no={[ProgramInformationChangedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_np={"InterfaceEvent","Event"}_C_nr={}_C_ns={}_C_nt={["fromInterface"]={[2]=_C_Ke,}}_C_nu={[ScrollView]=1,[_C_6l]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_nv={"Container","View"}_C_nw={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["horizontalVelocity"]=loadstring("return 0\
\
\
\
\
\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["verticalVelocity"]=loadstring("return 0\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["verticalVelocityTime"]=loadstring("return 0\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_ny(v)local j=_C_L[v]return not(j and j[Scrollbar])end  function _C_nz(v)local j=_C_L[v]return not(j and j[ScrollContainer])end  _C_nx={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["horizontalScrollbar"]={_C_ny,"Scrollbar"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["verticalVelocity"]={_C_Ar,"Number"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["x"]={_C_Ar,"Number"},["container"]={_C_nz,"ScrollContainer"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["isEnabled"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["y"]={_C_Ar,"Number"},["leftPin"]={_C_Aq,"String (allowsNil)"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["verticalVelocityTime"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["verticalScrollbar"]={_C_ny,"Scrollbar"},["eventManager"]={_C_Da,"EventManager"},["horizontalVelocity"]={_C_Ar,"Number"},["animations"]={_C_An,"Table"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["needsPinUpdate"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_o0(self,super)return function(_C_self_passed,...)
		super( ... )

		local width, height = self.width, self.height
		self.verticalScrollbar = self:insert( Scrollbar( { isHorizontal = false, x = width - Scrollbar.width + 1, height = height } ) )
		self.container = self:insert( ScrollContainer( { x = 1, y = 1, width = width, height = height } ) )
		-- self:sendToFront( self.horizontalScrollbar )
		self:sendToFront( self.verticalScrollbar )

		self:event( LoadedInterfaceEvent, self.onInterfaceLoaded )
		self:event( ScrollMouseEvent, self.onMouseScroll )
	end end
function _C_o1(self,super)return function(_C_self_passed,event,phase)if _C_GF(event)then _C_F(self,"event","onMouseScroll","ScrollMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseScroll","Event.phases",phase)end 
		if self.isEnabled then
			local direction = event.direction
			local verticalVelocity = self.verticalVelocity
			instantaneousVelocity = verticalVelocity and verticalVelocity * exp( SCROLL_DECAY * (self.verticalVelocityTime or 0) ) or 0
			self.verticalVelocityTime = 0
			if direction * verticalVelocity > 1 then
				self.verticalVelocity = -direction * math.abs(instantaneousVelocity + direction * SCROLL_SPEED) ^ SCROLL_ACCELERATION
			else
				self.verticalVelocity = -direction * SCROLL_SPEED
			end
			-- self:scroll( event.direction * SCROLL_SPEED )
		end
		return true
	end end
function _C_o2(self,super)return function(_C_self_passed,offsetY)
		-- calculate the velocity required to reach a certain point
		-- see https://www.desmos.com/calculator/qis3qhbsvs for details
		-- d = vi / a * ( 1 - e ^ ln( vf / vi ) )

		-- it turns out that this is far easier than oeed first thought, having spent many, many hours playing with integrals...
		-- it's simply: vi = a * d + vf
		-- hence: (vi - vf)/a = d
		local deltaOffsetY = offsetY - self.offsetY
		local velocity = SCROLL_DECAY * deltaOffsetY + SPEED_CUTOFF
		self.verticalVelocity = velocity
		self.verticalVelocityTime = 0
		-- self.offsetY = self.offsetY + direction
		-- TODO: horizontal scrolling
	end end
function _C_o3(self,super)return function(_C_self_passed)
		super()

		self.theme:connect( self.canvas, "fillColour" )
	end end
function _C_o4(self,super)return function(_C_self_passed,width)
		width = self.width
		local verticalScrollbar = self.verticalScrollbar
		if verticalScrollbar then verticalScrollbar.x = width - verticalScrollbar.width + 1 end
	end end
function _C_o5(self,super)return function(_C_self_passed,event,phase)if _C_Ku(event)then _C_F(self,"event","onInterfaceLoaded","LoadedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onInterfaceLoaded","Event.phases",phase)end 
		local currentContainer = self.container
		for i, childView in ipairs( self.children ) do
			if childView ~= currentContainer and childView:typeOf( ScrollContainer ) then
				childView.x = 1
				childView.y = 1
				self:remove( currentContainer )
				self.container = childView
				-- self:sendToFront( self.horizontalScrollbar )
				self.verticalScrollbar:getScroller()
				self:sendToFront( self.verticalScrollbar )
				break
			end
		end
	end end
function _C_o6(self,super)return function(_C_self_passed)
		local container = self.container
		-- if container.width > self.width then
		-- else
		-- end

		if container.height > self.height then
			if not self.verticalScrollbar then
				self.verticalScrollbar = self:insert( Scrollbar( { isHorizontal = false, x = self.width - Scrollbar.width + 1, height = self.height } ) )
			end
		else
			self:remove( self.verticalScrollbar )
		end
	end end
function _C_o7(self,super)return function(_C_self_passed,height)
		height = self.height
		local verticalScrollbar = self.verticalScrollbar
		if verticalScrollbar then self.verticalScrollbar.height = height end
	end end
function _C_o8(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		local verticalVelocity = self.verticalVelocity
		if verticalVelocity ~= 0 then
			local startTime
			local time = self.verticalVelocityTime
			local newVerticalVelocity = verticalVelocity * exp( SCROLL_DECAY * (time + deltaTime) )
			local distance
			if math.abs( newVerticalVelocity ) <= SPEED_CUTOFF then
				self.verticalVelocity = 0
				self.verticalVelocityTime = 0
			else
				self.verticalVelocityTime = time + deltaTime
				local currentVerticalVelocity = verticalVelocity * exp( SCROLL_DECAY * time )
				self:setOffsetY( self.offsetY + (currentVerticalVelocity - newVerticalVelocity) / SCROLL_DECAY, true )
			end
		end
	end end
function _C_o9(self,super)return function(_C_self_passed,offsetY,isVelocity)
		local container = self.container
		if container then
			local height = self.height
			local currentOffsetY = self.offsetY
			local realOffsetY = math.max( math.min( offsetY, math.max( container.height - height, 0 ) ), 0 )
			self.raw.offsetY = realOffsetY
			local verticalScrollbar = self.verticalScrollbar
			if verticalScrollbar then verticalScrollbar:getScroller() end
			if realOffsetY ~= offsetY then
				self.verticalVelocity = 0
				self.verticalVelocityTime = 0
			end
			container.y = 1 - math.floor( realOffsetY + 0.5 )
		end
	end end
_C_oA={["updateHeight"]={_C_o7,},["onReadyLoadInterface"]={[2]=_C_Kk,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_o8,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["onMouseScroll"]={_C_o1,},["scrollTo"]={_C_o2,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["updateWidth"]={_C_o4,},["updateContainerSize"]={_C_o6,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["initialiseCanvas"]={_C_o3,[3]=_C_F6,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["hitTest"]={[3]=_C_FX,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["addFocus"]={[3]=_C_FQ,},["onInterfaceLoaded"]={_C_o5,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["updatePins"]={[2]=_C_Kn,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_o0,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["animateResize"]={[3]=_C_FW,},["focus"]={[3]=_C_F5,},["unfocus"]={[3]=_C_F7,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["setOffsetY"]={_C_o9,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["sendToFront"]={[2]=_C_Ky,},["getCoordinates"]={[3]=_C_F3,},["disposeAll"]={[2]=_C_L3,}}_C_oB={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}function _C_oC(_,k,n,v)if _C_ny(n)then _C_D(_,k,"Scrollbar",n)end v[k]=n end function _C_oD(_,k,n,v)if _C_nz(n)then _C_D(_,k,"ScrollContainer",n)end v[k]=n end _C_oE=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["horizontalScrollbar"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["verticalVelocityTime"]=_C_9x,["container"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["verticalScrollbar"]=_C_9x,["leftPin"]=_C_9x,["verticalVelocity"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["horizontalVelocity"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateHeight"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["onMouseScroll"]=_C_9x,["scrollTo"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateWidth"]=_C_9x,["updateContainerSize"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["initialiseCanvas"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["hitTest"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["onInterfaceLoaded"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["updatePins"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["animateResize"]=_C_9x,["focus"]=_C_9x,["unfocus"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["setOffsetY"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["getCoordinates"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_oF=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["horizontalScrollbar"]=_C_oC,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["verticalVelocityTime"]=_C_B2,["container"]=_C_oD,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["verticalScrollbar"]=_C_oC,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["verticalVelocity"]=_C_B2,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["horizontalVelocity"]=_C_B2,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateHeight"]=_C_7,["onReadyLoadInterface"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["onMouseScroll"]=_C_7,["scrollTo"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateWidth"]=_C_7,["updateContainerSize"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["initialiseCanvas"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["hitTest"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["onInterfaceLoaded"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["updatePins"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["animateResize"]=_C_7,["focus"]=_C_7,["unfocus"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["setOffsetY"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["getCoordinates"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_oG={[ScrollView]=1,[Container]=1,[View]=1}_C_oH={"Container","View"}_C_oJ={}_C_oK={}_C_oL={["fromInterface"]={[2]=_C_Ke,}}_C_oM={[MenuBar]=1,[_C_6p]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_oN={"Container","View"}_C_oO={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_oP={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_oQ(self,super)return function(_C_self_passed)
		local theme = self.theme
		local x = 1 + theme:value( "leftMargin" )
		local height = 1
		for i, childView in ipairs( self.children ) do
			childView.x = x
			x = x + childView.width
			height = math.max( height, childView.height )
		end
		self.height = height + 1
		self.needsLayoutUpdate = false
	end end
function _C_oR(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and "default" or "disabled"
	end end
function _C_oS(self,super)return function(_C_self_passed,...)
		super( ... )
		self.needsLayoutUpdate = true
	end end
function _C_oT(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate then
			self:updateLayout()
		end
	end end
function _C_oU(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, font = self.width, self.height, self.theme, self.canvas
		canvas:fill( theme:value( "fillColour" ) )
		canvas:fill( theme:value( "separatorColour" ), theme:value( "separatorIsDashed" ) and SeparatorMask( 1, height, width, 1 ) or RectangleMask( 1, height, width, 1 ) )
	end end
function _C_oV(self,super)return function(_C_self_passed,...)
		super( ... )
		self.needsLayoutUpdate = true
	end end
_C_oW={["updateLayout"]={_C_oQ,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_oT,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["removeChild"]={_C_oS,},["animate"]={[3]=_C_FV,},["updateThemeStyle"]={_C_oR,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["hitTest"]={[3]=_C_FX,},["insert"]={_C_oV,_C_Kw,},["initialise"]={[2]=_C_Kx,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["animateResize"]={[3]=_C_FW,},["onDraw"]={_C_oU,_C_L0,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["focus"]={[3]=_C_F5,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["getCoordinates"]={[3]=_C_F3,},["initialiseCanvas"]={[3]=_C_F6,},["disposeAll"]={[2]=_C_L3,}}function _C_oX(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end _C_oY={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={_C_oX,_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_oZ=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["removeChild"]=_C_9x,["animate"]=_C_9x,["updateThemeStyle"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["focus"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["getCoordinates"]=_C_9x,["initialiseCanvas"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_oa=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Gr,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["removeChild"]=_C_7,["animate"]=_C_7,["updateThemeStyle"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["focus"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["getCoordinates"]=_C_7,["initialiseCanvas"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_ob={[MenuBar]=1,[Container]=1,[View]=1}_C_oc={"Container","View"}_C_oe={}_C_of={}_C_og={[LineMask]=1,[_C_6r]=1,[Mask]=1,[_C_36]=1}_C_oh={"Mask"}_C_oi={}_C_oj={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_ok(self,super)return function(_C_self_passed,x,y,width,height,isFromTopLeft)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if isFromTopLeft==nil then isFromTopLeft=true  end if _C_Cp(isFromTopLeft)then _C_F(self,"isFromTopLeft","initialise","Boolean",isFromTopLeft)end 
		local pixels = {}
		local xDiff = width - 1
		local yDiff = ( isFromTopLeft and height - 1 or -height + 1 )
		if xDiff > math.abs(yDiff) then
			local y = isFromTopLeft and 1 or height
			local dy = yDiff / xDiff
			for x = 1, width do
				pixels[( math.floor( y + 0.5 ) - 1 ) * width + x ] = true
				y = y + dy
			end
		else
			local x = isFromTopLeft and 1 or width
			local dx = xDiff / yDiff
			for y = 1, height do
				pixels[(y - 1) * width + math.floor( x + 0.5 ) ] = true
				x = x + dx
			end
		end

		super( x, y, width, height, pixels )
	end end
_C_ol={["initialise"]={_C_ok,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_om=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_on=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_oo={[LineMask]=1,[Mask]=1}_C_op={"Mask"}_C_or={["eventType"]=loadstring("return \"interface_child_added\";\
\
\9\
"),}_C_os={["eventType"]={_C_Ai,"String"},}_C_ot={["eventClasses"]=loadstring([[return {}

	
]])}_C_ou={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_ov=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_ow=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_ox={[ChildAddedInterfaceEvent]=1,[_C_6v]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_oy={"InterfaceEvent","Event"}_C_oz={["isSentToChildren"]=loadstring("return false\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return true\
\
\9\
\
\
\
\
\9\
"),}_C_p0={["isSentToChildren"]={_C_Cp,"Boolean"},["childView"]={_C_Cr,"View"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["container"]={_C_PS,"Container"},["relativeView"]={_C_Cr,"View"},}function _C_p1(self,super)return function(_C_self_passed,childView,container)if _C_Cr(childView)then _C_F(self,"childView","initialise","View",childView)end if _C_PS(container)then _C_F(self,"container","initialise","Container",container)end 
		self.childView = childView
		self.container = container
	end end
_C_p2={["initialise"]={_C_p1,},["makeRelative"]={[3]=_C_Cs,}}_C_p3=setmetatable({["isSentToChildren"]=_C_9x,["childView"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["container"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_p4=setmetatable({["isSentToChildren"]=_C_Cu,["childView"]=_C_Cw,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["container"]=_C_Pt,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_p5={[ChildAddedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_p6={"InterfaceEvent","Event"}_C_p8={}_C_p9={}_C_pA={[ListItem]=1,[_C_6x]=1,[IDraggableView]=1,[View]=1,[_C_3N]=1}_C_pB={"View"}_C_pC={["cursor"]=loadstring("return ClickableCursor.static\
\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isSelected"]=loadstring("return false\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 12\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_pD={["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["isSelected"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["needsDraw"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_pE(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		self:event( HeldMouseEvent, self.onMouseHeld )
	end end
function _C_pF(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isSelected and "selected" or "default" ) or "disabled"
	end end
function _C_pG(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isSelected and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isSelected = false
			if self.isEnabled and self:hitTestEvent( event ) then
				self.eventManager:handleEvent( ActionInterfaceEvent( self ) )
				local result = self.eventManager:handleEvent( event )
				return result == nil and true or result
			end
			return true
		end
	end end
function _C_pH(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropCancelled","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropCancelled","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropCancelled","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropCancelled","Number",y)end 
	end end
function _C_pI(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isSelected = not self.isSelected
		end
		return true
	end end
function _C_pJ(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, font = self.width, self.height, self.theme, self.canvas

		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
		local roundedRectangleMask = RoundedRectangleMask( 1 + leftMargin, 1 + topMargin, width - leftMargin - rightMargin, height - topMargin - bottomMargin, theme:value( "cornerRadius" ) )
		canvas:fill( theme:value( "fillColour" ), roundedRectangleMask )

		local leftTextMargin, rightTextMargin, topTextMargin, bottomTextMargin = theme:value( "leftTextMargin" ), theme:value( "rightTextMargin" ), theme:value( "topTextMargin" ), theme:value( "bottomTextMargin" )
		canvas:fill( theme:value( "textColour" ),  TextMask( leftTextMargin + 1, topTextMargin + 1, width - leftTextMargin - rightTextMargin, height - topTextMargin - bottomTextMargin, self.text, theme:value( "font" ) ) )
	end end
function _C_pL(v)local j=_C_L[v]return not(j and j[HeldMouseEvent])end  function _C_pK(self,super)return function(_C_self_passed,event,phase)if _C_pL(event)then _C_F(self,"event","onMouseHeld","HeldMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseHeld","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT and self.parent.canRearrange then
			self.isSelected = true
			self:startDragDrop( event, ListClipboardData( self ), true, function()self.isSelected = false end )
		end
		return true
	end end
_C_pM={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["onMouseHeld"]={_C_pK,},["dragDropCancelled"]={_C_pH,},["clearFocus"]={[2]=_C_FP,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_pE,_C_FG,},["onMouseDown"]={_C_pI,},["onGlobalMouseUp"]={_C_pG,},["addFocus"]={[2]=_C_FQ,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["animate"]={[2]=_C_FV,},["onDraw"]={_C_pJ,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_pF,},["animateResize"]={[2]=_C_FW,},["startDragDrop"]={[2]=_C_FR,},["dispose"]={[2]=_C_FK,},["hitTestEvent"]={[2]=_C_FI,},["siblingsOfType"]={[2]=_C_FH,},["hitTest"]={[2]=_C_FX,}}function _C_pN(self,super)return function(_C_self_passed,isSelected)
		self.isSelected = isSelected
		self:updateThemeStyle()
	end end function _C_pO(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_pP(self,super)return function(_C_self_passed,text)
		self.text = text
		self.needsDraw = true
	end end _C_pQ={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isFocused"]={[2]=_C_Fi},["isSelected"]={_C_pN},["width"]={[2]=_C_Fg},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["text"]={_C_pP},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_pO},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_pR=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isMouseInView"]=_C_9x,["animations"]=_C_9x,["isSelected"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onMouseHeld"]=_C_9x,["dragDropCancelled"]=_C_9x,["clearFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["addFocus"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animateResize"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_pS=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["isMouseInView"]=_C_Cu,["animations"]=_C_Ax,["isSelected"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onMouseHeld"]=_C_7,["dragDropCancelled"]=_C_7,["clearFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["addFocus"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animateResize"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_pT={[ListItem]=1,[IDraggableView]=1,[View]=1}_C_pU={"View"}_C_pW={}_C_pX={}_C_pY={[ListClipboardData]=1,[_C_6z]=1,[ClipboardData]=1,[_C_3K]=1}_C_pZ={"ClipboardData"}_C_pa={["type"]=loadstring("return \"Silica:ListItem\"\
\9\
"),}function _C_pc(v)local j=_C_L[v]return not(j and j[ListItem])end  _C_pb={["type"]={_C_Ai,"String"},["listItem"]={_C_pc,"ListItem"},}function _C_pd(self,super)return function(_C_self_passed,listItem)
		super()
		self.listItem = listItem
	end end
_C_pe={["initialise"]={_C_pd,}}function _C_pf(_,k,n,v)if _C_pc(n)then _C_D(_,k,"ListItem",n)end v[k]=n end _C_pg=setmetatable({["type"]=_C_9x,["listItem"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_ph=setmetatable({["type"]=_C_B1,["listItem"]=_C_pf,["initialise"]=_C_7},_C_9z)_C_pi={[ListClipboardData]=1,[ClipboardData]=1}_C_pj={"ClipboardData"}_C_pl={}_C_pm={}_C_pn={[ContainerEventManager]=1,[_C_71]=1,[EventManager]=1,[_C_6Z]=1}_C_po={"EventManager"}_C_pp={["handles"]=loadstring("return {}\
\9\
"),["handlesGlobal"]=loadstring("return {}\
\
\9\
\
\
\
\
\9\
"),}_C_pq={["owner"]={_C_cq,"InstanceOrStatic"},["handles"]={_C_lc,"{Event}"},["handlesGlobal"]={_C_lc,"{Event}"},}function _C_pr(self,super)return function(_C_self_passed,event)if _C_FJ(event)then _C_F(self,"event","handleEvent","Event",event)end 
		local sender = event.sender
		local isSentToSender = not sender or ( self == sender and event.isSentToSender )
		if isSentToSender and self:handleEventPhase( event, Event.phases.BEFORE ) then
			return true
		end

		if event.isSentToParents then
			local owner = self.owner
			local parent = owner.parent
			if parent then
				local parentEvent = parent.event
				if parent:hitTestEvent( event, owner ) then
					event:makeRelative( parent )
					if parentEvent:handleEvent( event ) then
						return true
					end
					event:makeRelative( owner )
				end
			end
		end

		if event.isSentToChildren then
			local owner = self.owner
			local children = owner.children
			local eventClass = event.class
			for i = #children, 1, -1 do
				local childView = children[i]
				if childView then
					local childViewEvent = childView.event
					if childView:typeOf( Container ) or childViewEvent:hasConnections( eventClass ) then
						if childView:hitTestEvent( event, owner ) then
							event:makeRelative( childView )
							if childViewEvent:handleEvent( event ) then
								return true
							end
							event:makeRelative( owner )
						else

						end
					end
				end
			end
		end

		if isSentToSender and self:handleEventPhase( event, Event.phases.AFTER ) then
			return true
		end
	end end
_C_ps={["initialise"]={[2]=_C_ld,},["disconnectAllGlobals"]={[2]=_C_le,},["hasConnectionsGlobal"]={[2]=_C_lf,},["disconnectGlobal"]={[2]=_C_lh,},["hasConnections"]={[2]=_C_lj,},["handleEvent"]={_C_pr,_C_lk,},["dispose"]={[2]=_C_ll,},["handleEventPhase"]={[2]=_C_lm,},["connect"]={[2]=_C_ln,},["connectGlobal"]={[2]=_C_lo,},["disconnect"]={[2]=_C_lp,}}_C_pt=setmetatable({["owner"]=_C_9x,["handles"]=_C_9x,["handlesGlobal"]=_C_9x,["initialise"]=_C_9x,["disconnectAllGlobals"]=_C_9x,["hasConnectionsGlobal"]=_C_9x,["disconnectGlobal"]=_C_9x,["hasConnections"]=_C_9x,["handleEvent"]=_C_9x,["dispose"]=_C_9x,["handleEventPhase"]=_C_9x,["connect"]=_C_9x,["connectGlobal"]=_C_9x,["disconnect"]=_C_9x},_C_9z)_C_pu=setmetatable({["owner"]=_C_cz,["handles"]=_C_lr,["handlesGlobal"]=_C_lr,["initialise"]=_C_7,["disconnectAllGlobals"]=_C_7,["hasConnectionsGlobal"]=_C_7,["disconnectGlobal"]=_C_7,["hasConnections"]=_C_7,["handleEvent"]=_C_7,["dispose"]=_C_7,["handleEventPhase"]=_C_7,["connect"]=_C_7,["connectGlobal"]=_C_7,["disconnect"]=_C_7},_C_9z)_C_pv={[ContainerEventManager]=1,[EventManager]=1}_C_pw={"EventManager"}_C_py={["eventType"]=loadstring("return \"interface_program_opened\"\
\9\
"),}_C_pz={["eventType"]={_C_Ai,"String"},}_C_q0={["eventClasses"]=loadstring([[return {}

	
]])}_C_q1={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_q2=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_q3=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_q4={[ProgramOpenedInterfaceEvent]=1,[_C_73]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_q5={"InterfaceEvent","Event"}_C_q6={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_q7={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["program"]={_C_Hy,"Program"},["relativeView"]={_C_Cr,"View"},["isSentToSender"]={_C_Cp,"Boolean"},}function _C_q8(self,super)return function(_C_self_passed,program)if _C_Hy(program)then _C_F(self,"program","initialise","Program",program)end 
	    self.program = program
	end end
_C_q9={["initialise"]={_C_q8,},["makeRelative"]={[3]=_C_Cs,}}_C_qA=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["program"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_qB=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["program"]=_C_I3,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_qC={[ProgramOpenedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_qD={"InterfaceEvent","Event"}_C_qF={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}_C_qG={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}_C_qH={["onThemeChanged"]={[2]=_C_Dd,},["drawTo"]={[2]=_C_Dg,},["updateAppearance"]={[2]=_C_Di,},["setup"]={[2]=_C_Dj,},["setupAll"]={[2]=_C_Dk,}}_C_qI=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["setup"]=_C_9x,["setupAll"]=_C_9x},_C_9z)_C_qJ=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["setup"]=_C_7,["setupAll"]=_C_7},_C_9z)_C_qK={[DeleteCursor]=1,[_C_75]=1,[Cursor]=1,[_C_3d]=1}_C_qL={"Cursor"}_C_qM={}_C_qN={}_C_qO={[DeleteCursor]=1,[Cursor]=1}_C_qP={"Cursor"}_C_qR={["width"]=loadstring("return 6\
\
\9\
"),["symbolName"]=loadstring("return \"settings\"\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_qS={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_qT(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 2, 1 )
		path:lineTo( 2, 4 )
		path:lineTo( 5, 4 )
		path:lineTo( 5, 1 )
		path:lineTo( 6, 2 )
		path:lineTo( 6, 3 )
		path:lineTo( 4, 5 )
		path:lineTo( 4, 7 )
		path:lineTo( 3, 7 )
		path:lineTo( 3, 5 )
		path:lineTo( 1, 3 )
		path:lineTo( 1, 2 )
		path:close()

		super( path )
	end end
_C_qU={["initialise"]={_C_qT,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_qV=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_qW=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_qX={[SettingsSymbol]=1,[_C_77]=1,[Symbol]=1,[_C_34]=1}_C_qY={"Symbol"}_C_qZ={}_C_qa={}_C_qb={[SettingsSymbol]=1,[Symbol]=1}_C_qc={"Symbol"}_C_qe={}_C_qf={}_C_qg={["fromInterface"]={[3]=_C_Ke,}}_C_qh={[GridContainer]=1,[_C_79]=1,[LayoutContainer]=1,[_C_3b]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_qi={"LayoutContainer","Container","View"}_C_qj={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["isLayoutLocked"]=loadstring("return false\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["dontAnimateLayoutUpdate"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["cellHeight"]=loadstring("return 1\
\
\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_qk={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["isLayoutLocked"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["dontAnimateLayoutUpdate"]={_C_Cp,"Boolean"},["minimumCellWidth"]={_C_CU,"Number (allowsNil)"},["cellHeight"]={_C_Ar,"Number"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["x"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["y"]={_C_Ar,"Number"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["leftPin"]={_C_Aq,"String (allowsNil)"},["eventManager"]={_C_Da,"EventManager"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["specialMouseTimes"]={_C_An,"Table"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_ql(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=false  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
		local theme = self.theme
		local leftMargin, rightMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" )
		local width, minimumCellWidth, cellHeight, children = self.width - leftMargin - rightMargin, self.minimumCellWidth, self.cellHeight, self.children
		local columnsCount = math.max( minimumCellWidth and math.floor( width / minimumCellWidth ) or 1, 1 )
		local columnWidthFloor, columnWidthCeil = math.floor( width / columnsCount ), math.ceil( width / columnsCount )
		local y = theme:value( "topMargin" ) + 1
		local time, easing
		if not dontAnimate then
			time = theme:value( "animationDuration" )
			easing = theme:value( "animationEasing" )
		end

		local i, okay, childrenLength = 1, true, #children
		for row = 1, math.ceil( childrenLength / columnsCount ) do
			if okay then
				local x = leftMargin
				for column = 1, columnsCount do
					local childView = children[i]
					local columnWidth = column == 1 and columnWidthCeil or columnWidthFloor
					if dontAnimate then
						childView.y = y
						childView.x = x
						childView.width = columnWidth
						childView.height = cellHeight
					else
						childView:animate( "y", y, time, nil, easing )
						childView:animate( "x", x, time, nil, easing )
						childView:animate( "width", columnWidth, time, nil, easing )
						childView:animate( "height", cellHeight, time, nil, easing )
					end

					x = x + columnWidth
					i = i + 1
					if i > childrenLength then
						okay = false
						break
					end
				end
				y = y + cellHeight
			end
		end

		local height = math.max( y + self.theme:value( "bottomMargin" ), self.parent.height )
		if dontAnimate then
			self.height = height
		else
			self:animate( "height", height, time, nil, easing )
		end

		self.needsLayoutUpdate = false
	end end
_C_qm={["updateLayout"]={_C_ql,_C_Ld,},["onReadyLoadInterface"]={[3]=_C_Kk,},["unfocus"]={[4]=_C_F7,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[2]=_C_Lc,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["sendToBack"]={[3]=_C_LD,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onChildOfChildAdded"]={[3]=_C_Kp,},["hitTest"]={[4]=_C_FX,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["addFocus"]={[4]=_C_FQ,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["animateResize"]={[4]=_C_FW,},["insert"]={[3]=_C_Kw,},["initialise"]={[2]=_C_LY,[3]=_C_Kx,[4]=_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["initialiseCanvas"]={[4]=_C_F6,},["onChildRemoved"]={[2]=_C_La,},["getCoordinates"]={[4]=_C_F3,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["remove"]={[3]=_C_L4,},["onReady"]={[2]=_C_LZ,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["onChildAdded"]={[2]=_C_Lb,},["focus"]={[4]=_C_F5,},["disposeAll"]={[3]=_C_L3,}}function _C_qn(self,super)return function(_C_self_passed,height)
	    super:super( height )
	end end _C_qo={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["shadowSize"]={[4]=_C_Fs},["height"]={_C_qn,_C_Lf,_C_LI,_C_Fr},["width"]={[2]=_C_Lg,[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_qp=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["isLayoutLocked"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["dontAnimateLayoutUpdate"]=_C_9x,["isCanvasHitTested"]=_C_9x,["cellHeight"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["minimumCellWidth"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["hitTest"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["animateResize"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["remove"]=_C_9x,["onReady"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_qq=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLayoutLocked"]=_C_Cu,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["dontAnimateLayoutUpdate"]=_C_Cu,["isCanvasHitTested"]=_C_Cu,["cellHeight"]=_C_B2,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["minimumCellWidth"]=_C_LL,["needsLayoutUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["hitTest"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["animateResize"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["remove"]=_C_7,["onReady"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_qr={[GridContainer]=1,[LayoutContainer]=1,[Container]=1,[View]=1}_C_qs={"LayoutContainer","Container","View"}_C_qu={}_C_qv={}_C_qw={["fromInterface"]={[3]=_C_Ke,}}_C_qx={[FontWindowContainer]=1,[_C_7B]=1,[WindowContainer]=1,[_C_5F]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_qy={"WindowContainer","Container","View"}_C_qz={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["topPin"]=loadstring("return \"11\"\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["rightPin"]=loadstring("return \"100% - 3\"\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["leftPin"]=loadstring("return \"1\"\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["height"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["bottomPin"]=loadstring("return \"100% - 4\"\
\
\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_r0={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_r1(self,super)return function(_C_self_passed)
		self.canvas = FontWindowCanvas( self.width, self.height )
		self.backgroundObject = self.canvas:insert( Rectangle( 1, 1, self.width, self.height, Graphics.colours.WHITE ) )
	end end
_C_r2={["getCoordinates"]={[4]=_C_F3,},["onReadyLoadInterface"]={[3]=_C_Kk,},["unfocus"]={[4]=_C_F7,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["sendToBack"]={[3]=_C_LD,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onChildOfChildAdded"]={[3]=_C_Kp,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["insert"]={[3]=_C_Kw,},["initialise"]={[3]=_C_Kx,[4]=_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["hitTest"]={[4]=_C_FX,},["addFocus"]={[4]=_C_FQ,},["initialiseCanvas"]={_C_r1,[4]=_C_F6,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["animateResize"]={[4]=_C_FW,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["focus"]={[4]=_C_F5,},["disposeAll"]={[3]=_C_L3,}}_C_r3={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["shadowSize"]={[4]=_C_Fs},["height"]={[3]=_C_LI,[4]=_C_Fr},["width"]={[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_r4=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["backgroundObject"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["initialiseCanvas"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["animateResize"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["dispose"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_r5=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["backgroundObject"]=_C_Gr,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["initialiseCanvas"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["animateResize"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["dispose"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_r6={[FontWindowContainer]=1,[WindowContainer]=1,[Container]=1,[View]=1}_C_r7={"WindowContainer","Container","View"}_C_r9={}_C_rA={}_C_rB={[PathMask]=1,[_C_7D]=1,[Mask]=1,[_C_36]=1}_C_rC={"Mask"}_C_rD={}_C_rE={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_rG(v)local j=_C_L[v]return not(j and j[Path])end  function _C_rF(self,super)return function(_C_self_passed,x,y,path,width,height)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_rG(path)then _C_F(self,"path","initialise","Path",path)end if width==nil then width=path.width end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if height==nil then height=path.height  end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end 
		local pixels = {}
		local scaleX, scaleY = width / path.width, height / path.height
		local fill = path:getFill( scaleX, scaleY )
		super( x, y, width, height, fill )
	end end
_C_rH={["initialise"]={_C_rF,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_rI=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_rJ=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_rK={[PathMask]=1,[Mask]=1}_C_rL={"Mask"}_C_rN={}_C_rO={}_C_rP={["fromInterface"]={[2]=_C_Ke,}}_C_rQ={[FlowContainer]=1,[_C_7F]=1,[IAutomaticLayout]=1,[ILockableLayout]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_rR={"Container","View"}_C_rS={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_rT={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["isLayoutLocked"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["topPin"]={_C_Aq,"String (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["animations"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["interfaceLinks"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_rU(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( ChildAddedInterfaceEvent, self.onChildAdded )
		self:event( ChildRemovedInterfaceEvent, self.onChildRemoved )
		self:event( ReadyInterfaceEvent, self.onReady )
	end end
function _C_rV(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
		self:updateLayout( true )
	end end
function _C_rW(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRemoved","Event.phases",phase)end 
		self.needsLayoutUpdate = true
	end end
function _C_rX(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		if event.childView:typeOf( IFlowItem ) then
			self.needsLayoutUpdate = true
		end
	end end
function _C_rY(self,super)return function(_C_self_passed,deltaTime)
		super( deltaTime )
		if self.needsLayoutUpdate and not self.isLayoutLocked then
			self:updateLayout()
		end
	end end
function _C_rZ(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=false  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
		local width, height, theme = self.width, self.height, self.theme
		local leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )

		local children = {}
		for i, childView in ipairs( self.children ) do
			if childView:typeOf( IFlowItem ) then
				table.insert( children, childView )
			end
		end

		local time, easing = theme:value( "animationDuration" ), theme:value( "animationEasing" )

		local nChildren = #children
		local totalWidth = 0
		local minWidths = {}
		for i, childView in ipairs( children ) do
			totalWidth = totalWidth + childView.idealWidth
			minWidths[i] = childView.minWidth or 1
		end

		local averageWidth = math.min( math.floor( totalWidth / nChildren + 0.5 ), width - leftMargin - rightMargin )
		local maxItemsPerRow = math.floor( totalWidth / averageWidth + 0.5 )
		local idealWidth = math.floor( totalWidth / maxItemsPerRow )

		local y = topMargin + 1

		local _i = 0
		for i = 1, nChildren do
			if i > _i then
				local rowWidth = leftMargin + rightMargin
				local x = leftMargin + 1
				local numberOfItems = 1

				local totalMinWidths = 0
				local spareWidth = width - rowWidth
				for n = 1, math.min( maxItemsPerRow, nChildren - i + 1 ) do
					local minWidth = minWidths[i + n - 1]
					totalMinWidths = totalMinWidths + minWidth
					if totalMinWidths + rowWidth > width then
						if n == 1 then
							spareWidth = spareWidth - minWidth
						end
						break
					end
					numberOfItems = n
					spareWidth = spareWidth - minWidth
				end

				local itemWidth = spareWidth / numberOfItems
				_i = _i + numberOfItems

				local height = 1
				for n = i, _i do
					local childView = children[n]
					local width = minWidths[n] + ( n == i and math.ceil or math.floor)(itemWidth)
					local idealHeight = childView.idealHeight
					local maxWidth = childView.maxWidth
					width = (maxWidth and math.min( width, maxWidth ) or width)
					if dontAnimate then
						childView.x = x
						childView.y = y
						childView.width = width
						childView.height = idealHeight
					else
						childView:animate( "x",	 x, time, nil, easing )
						childView:animate( "y",	 y, time, nil, easing )
						childView:animate( "width",	 width, time, nil, easing )
						childView:animate( "height",  idealHeight, time, nil, easing )
					end
					x = x + width
					height = math.max( idealHeight, height )
				end
				y = y + height
			end
		end

		if dontAnimate then
			self.height = y + bottomMargin
		else
			self:animate( "height",	y + bottomMargin, time, nil, easing )
		end
		
		self.needsLayoutUpdate = false
	end end
_C_ra={["updateLayout"]={_C_rZ,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_rY,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["hitTest"]={[3]=_C_FX,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["animateResize"]={[3]=_C_FW,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_rU,_C_Kx,_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["initialiseCanvas"]={[3]=_C_F6,},["onChildRemoved"]={_C_rW,},["getCoordinates"]={[3]=_C_F3,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["remove"]={[2]=_C_L4,},["onReady"]={_C_rV,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["onChildAdded"]={_C_rX,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}function _C_rb(self,super)return function(_C_self_passed,width)
		super( width )
		self.needsLayoutUpdate = true
	end end _C_rc={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={_C_rb,_C_LF,_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_rd=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["isLayoutLocked"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["hitTest"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["animateResize"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["remove"]=_C_9x,["onReady"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_re=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLayoutLocked"]=_C_Cu,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["hitTest"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["animateResize"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["remove"]=_C_7,["onReady"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_rf={[FlowContainer]=1,[IAutomaticLayout]=1,[ILockableLayout]=1,[Container]=1,[View]=1}_C_rg={"Container","View"}_C_ri={}_C_rj={}_C_rk={[Checkbox]=1,[_C_7J]=1,[View]=1,[_C_3N]=1}_C_rl={"View"}_C_rm={["width"]=loadstring("return 8\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isChecked"]=loadstring("return false\
\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 8\
\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_rn={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["animations"]={_C_An,"Table"},["isChecked"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isVisible"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},}function _C_ro(self,super)return function(_C_self_passed,...)
		super( ... )
		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
	end end
function _C_rp(self,super)return function(_C_self_passed)
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or (self.isChecked and "checked" or "default" ) ) or ( self.isChecked and "disabledChecked" or "disabled" )
	end end
function _C_rq(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 	
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled then
				if self:hitTestEvent( event ) then
					self.isChecked = not self.isChecked
					return self.eventManager:handleEvent( event )
				end
			end
		end
	end end
function _C_rr(self,super)return function(_C_self_passed)
		local width, height, theme, canvas, isPressed = self.width, self.height, self.theme, self.canvas, self.isPressed

		-- background shape
		local roundedRectangle = RoundedRectangleMask( 1, 1, width, height, theme:value( "cornerRadius" ) )
		canvas:fill( theme:value( "fillColour" ), roundedRectangle )
		canvas:outline( theme:value( "outlineColour" ), roundedRectangle, theme:value( "outlineThickness" ) )
	--	TODO: checkbox check drawing
	--	   local checkObject = Path( 2, 2, self.width - 2, self.height - 2, 1, 4 )
	--	   checkObject:lineTo( 2, 5 )
	--	   checkObject:lineTo( 5, 2 )
	--	   checkObject:close( false )
	end end
function _C_rs(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end end
_C_rt={["getCoordinates"]={[2]=_C_F3,},["focus"]={[2]=_C_F5,},["initialiseCanvas"]={[2]=_C_F6,},["unfocus"]={[2]=_C_F7,},["getCoordinatesTo"]={[2]=_C_F8,},["draw"]={[2]=_C_F9,},["hitTestEvent"]={[2]=_C_FI,},["onGlobalUpSpecialMouseEvents"]={[2]=_C_FA,},["update"]={[2]=_C_FC,},["animateMove"]={[2]=_C_FD,},["initialise"]={_C_ro,_C_FG,},["siblingsOfType"]={[2]=_C_FH,},["onGlobalMouseUp"]={_C_rq,},["clearFocus"]={[2]=_C_FP,},["addFocus"]={[2]=_C_FQ,},["animateResize"]={[2]=_C_FW,},["onDraw"]={_C_rr,_C_FU,},["getPosition"]={[2]=_C_FN,},["initialiseEventManager"]={[2]=_C_FO,},["updateThemeStyle"]={_C_rp,},["animate"]={[2]=_C_FV,},["startDragDrop"]={[2]=_C_FR,},["onDownSpecialMouseEvents"]={[2]=_C_FL,},["dispose"]={[2]=_C_FK,},["onMouseDown"]={_C_rs,},["hitTest"]={[2]=_C_FX,}}function _C_ru(self,super)return function(_C_self_passed,isChecked)
		local wasChecked = self.isChecked
		if isChecked ~= wasChecked then
			self.isChecked = isChecked
			self:updateThemeStyle()
			self.eventManager:handleEvent( ActionInterfaceEvent( self ) )
		end
	end end function _C_rv(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_rw(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end _C_rx={set={["x"]={[2]=_C_Fq},["y"]={[2]=_C_Fh},["leftPin"]={[2]=_C_Fm},["isPressed"]={_C_rw},["isFocused"]={[2]=_C_Fi},["isChecked"]={_C_ru},["shadowSize"]={[2]=_C_Fs},["height"]={[2]=_C_Fr},["width"]={[2]=_C_Fg},["rightPin"]={[2]=_C_Fk},["isEnabled"]={_C_rv},["bottomPin"]={[2]=_C_Fn},["index"]={[2]=_C_Fo},["topPin"]={[2]=_C_Fj},["isVisible"]={[2]=_C_Fl},["needsDraw"]={[2]=_C_Fp}},get={["isFirst"]={[2]=_C_Fb},["siblings"]={[2]=_C_Fe},["shadowMask"]={[2]=_C_Fd},["isEnabled"]={[2]=_C_Fa},["index"]={[2]=_C_Fc},["isVisible"]={[2]=_C_FZ},["isLast"]={[2]=_C_Ff}}}_C_ry=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["animations"]=_C_9x,["isChecked"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["hitTestEvent"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animate"]=_C_9x,["startDragDrop"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["dispose"]=_C_9x,["onMouseDown"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_rz=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["animations"]=_C_Ax,["isChecked"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["hitTestEvent"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animate"]=_C_7,["startDragDrop"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["dispose"]=_C_7,["onMouseDown"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_s0={[Checkbox]=1,[View]=1}_C_s1={"View"}setmetatable(IHomeItem,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_7K end})_C_s3={["eventType"]=loadstring("return \"interface_parent_resized\";\
\9\
\9\
"),}_C_s4={["eventType"]={_C_Ai,"String"},}_C_s5={["eventClasses"]=loadstring([[return {}

	
]])}_C_s6={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_s7=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_s8=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_s9={[ParentResizedInterfaceEvent]=1,[_C_7M]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_sA={"InterfaceEvent","Event"}_C_sB={["isSentToChildren"]=loadstring("return true\
\
\9\
"),["isHorizontal"]=loadstring("return false\
\9\
"),["isSentToSender"]=loadstring("return false\
\9\
"),["isVertical"]=loadstring("return false\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_sC={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isHorizontal"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["isSentToSender"]={_C_Cp,"Boolean"},["isVertical"]={_C_Cp,"Boolean"},["isSentToParents"]={_C_Cp,"Boolean"},}function _C_sD(self,super)return function(_C_self_passed,isHorizontal,isVertical,sender)if _C_Cp(isHorizontal)then _C_F(self,"isHorizontal","initialise","Boolean",isHorizontal)end if _C_Cp(isVertical)then _C_F(self,"isVertical","initialise","Boolean",isVertical)end if _C_PS(sender)then _C_F(self,"sender","initialise","Container",sender)end 
		self.isHorizontal = isHorizontal
		self.isVertical = isVertical
		self.sender = sender
	end end
_C_sE={["initialise"]={_C_sD,},["makeRelative"]={[3]=_C_Cs,}}_C_sF=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isHorizontal"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["isVertical"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_sG=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isHorizontal"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["isVertical"]=_C_Cu,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_sH={[ParentResizedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_sI={"InterfaceEvent","Event"}_C_sK={}_C_sL={}function _C_sM(self,super)return function(_C_self_passed,xmlText)
		local tokens, err = lex( xmlText )
		if not tokens then
			return false, err
		end

		local p = parser:new( tokens )
		local blocks, data = p:parseXMLBody()

		if not blocks then
			return false, data
		end
		if data then -- if they put a </*> in the main body
			return p:throw( "unexpected '</" .. data .. ">' in main body" )
		end
		return blocks
	end end
function _C_sN(self,super)return function(_C_self_passed,filePath)
		local h = fs.open( filePath, "r" )
		if not h then
			error( "Failed to open XML file: " .. filePath, 0 )
		end

		local text = h.readAll()
		h.close()
		return XML.fromText( text )
	end end
_C_sO={["fromText"]={_C_sM,},["fromFile"]={_C_sN,}}_C_sP={[XML]=1,[_C_7O]=1}_C_sQ={}_C_sR={}_C_sS={[XML]=1}_C_sU={}_C_sV={}function _C_sW(self,super)return function(_C_self_passed,value,typeName)
		-- TODO: make validator types dynamic
		if typeName:sub( #typeName - 9 ) == ".allowsNil" then
			if value == "nil" then
				return nil, true
			else
				typeName = typeName:sub( 1, #typeName - 10 )
			end
		end
		if typeName == "Graphics.colours" then
			return Graphics.colours[value]
		elseif typeName == "Number" then
			return tonumber( value )
		elseif typeName == "String" then
			return tostring( value )
		elseif typeName == "Boolean" then
			value = value:lower()
			if value == "true" then
				return true
			elseif value == "false" then
				return false
			end
		elseif typeName == "Animation.easings" then
			return Animation.easings[value]
		elseif typeName == "Font" then
			return Font.static:fromName( value )
		elseif typeName == "Symbol" then
			return Symbol.static:fromName( value )
		elseif typeName == "Image" then
			return Image.static:fromName( value )
		else
			UnknownTypeValidationException( "Unknown validation type: '" .. typeName .. "'" )
		end
	end end
_C_sX={["parse"]={_C_sW,}}_C_sY={[Validator]=1,[_C_7Q]=1}_C_sZ={}_C_sa={}_C_sb={[Validator]=1}_C_sd={}_C_se={}_C_sf={[Resource]=1,[_C_7S]=1}_C_sg={}function _C_si(v)if v==nil then return false end local j=_C_L[v]return not(j and j[File])end  function _C_sj(v)return not _C_AV[v] end _C_sh={["file"]={_C_si,"File (allowsNil)"},["contents"]={_C_Aq,"String (allowsNil)"},["mime"]={_C_sj,"Metadata.mimes"},["binaryContents"]={_C_At,"Table (allowsNil)"},}function _C_sk(self,super)return function(_C_self_passed,name,mimes,category,allowDirectories)
		if not name then error( "Resource() requires a file name (without extension)", 5 ) end
		if not mimes then error( "Resource() requires a mime type (e.g. text/lua)", 5 ) end
		if type( mimes ) == "string" then mimes = { mimes } end
		category = category or "resources"
		-- TODO: path tidying
		-- TODO: maybe do this backwards? so you can override files in other libraries
		-- search the resource tables
		local resourceTables = Application.static.resourceTables
		if #resourceTables > 0 then
			for i = 1, #resourceTables do
				local categoryFiles = resourceTables[i][category]
				if categoryFiles then
					local nameCategoryFiles = categoryFiles[name]
					if nameCategoryFiles then
						for i, mime in ipairs( mimes ) do
							local contents = nameCategoryFiles[mime]
							if contents and ( allowDirectories or type( contents ) ~= "table" ) then
								self.mime = mime
								self.contents = contents
								local binaryContents = {}
								local byte, sub = string.byte, string.sub
								for i = 1, #contents do
									binaryContents[i] = byte( sub( contents, i, i ) )
								end
								self.binaryContents = binaryContents
								return
							end
						end
					else

					end
				end
			end
		end
		
		local file
		for i, folder in ipairs( Application.static.resourceFolders ) do
			file = folder:find( name, mimes )
			break
		end
		
		self.file = file
		if not file then
			error('File not found: '..name.." of mime "..textutils.serialise(mimes))
			-- TODO: error, file not found
		end
		self.mime = file.metadata.mime
	end end
_C_sl={["initialise"]={_C_sk,}}function _C_sm(self,super)return function(_C_self_passed)
		local contents = self.contents
		if contents then return contents end
		contents = self.file.contents
		return contents
	end end function _C_sn(self,super)return function(_C_self_passed)
		local binaryContents = self.binaryContents
		if binaryContents then return binaryContents end
		binaryContents = self.file.binaryContents
		return binaryContents
	end end _C_so={get={["contents"]={_C_sm},["binaryContents"]={_C_sn}}}function _C_sp(_,k,n,v)if _C_si(n)then _C_D(_,k,"File (allowsNil)",n)end v[k]=n end function _C_sq(_,k,n,v)if _C_sj(n)then _C_D(_,k,"Metadata.mimes",n)end v[k]=n end _C_sr=setmetatable({["file"]=_C_9x,["contents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["mime"]=_C_9x,["binaryContents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["initialise"]=_C_9x},_C_9z)_C_ss=setmetatable({["file"]=_C_sp,["contents"]=_C_B0,["mime"]=_C_sq,["binaryContents"]=_C_Fz,["initialise"]=_C_7},_C_9z)_C_st={[Resource]=1}_C_sv={}_C_sw={}function _C_sx(self,super)return function(_C_self_passed,file)if _C_H5(file)then _C_F(self,"file","fromFile","File",file)end 
		local image = Image.static:fromFile( file )
		if image then
			-- the image is valid, we're good to go
			return ThumbnailIcon( file, image )
		end
	end end
_C_sy={["fromIcon"]={[2]=_C_HY,},["fromResource"]={[3]=_C_H0,},["fromPathInBundle"]={[3]=_C_H2,},["blank"]={[3]=_C_H3,},["fromPixels"]={[3]=_C_HA,},["fromFile"]={_C_sx,_C_HZ,_C_H4,},["fromPath"]={[3]=_C_H6,},["fromPaintFormat"]={[3]=_C_H7,},["fromUniversalCompressedGraphics"]={[3]=_C_H8,},["fromNameInBundle"]={[2]=_C_Ha,[3]=_C_H9,},["isMIME"]={[2]=_C_Hb,[3]=_C_Gz,},["fromName"]={[2]=_C_Hc,[3]=_C_HB,}}_C_sz={[ThumbnailIcon]=1,[_C_7U]=1,[Icon]=1,[_C_3G]=1,[Image]=1,[_C_8X]=1}_C_t0={"Icon","Image"}_C_t1={["scaledCache"]=loadstring("return {}\
\9\
"),}_C_t2={["scaledCache"]={_C_An,"Table"},["width"]={_C_Ar,"Number"},["file"]={_C_H5,"File"},["image"]={_C_HL,"Image"},["alternateIcon"]={_C_BF,"Icon"},["contents"]={nil,"Any (allowsNil)"},["pixels"]={_C_An,"Table"},["height"]={_C_Ar,"Number"},["images"]={_C_An,"Table"},}function _C_t3(self,super)return function(_C_self_passed,file,image)if _C_H5(file)then _C_F(self,"file","initialise","File",file)end if _C_HL(image)then _C_F(self,"image","initialise","Image",image)end 
		self.file = file
		self.image = image

		-- we need to generate the default icon's pixels, i.e. how the icon looks in the default size
		local defaultPixels = self:getScaledPixels( DEFAULT_WIDTH, DEFAULT_HEIGHT )

		super:super( defaultPixels, DEFAULT_WIDTH, DEFAULT_HEIGHT, image.contents ) -- go over Icon's head
		self.images = {} -- Icon requires an images table, but we don't need one
	end end
function _C_t4(self,super)return function(_C_self_passed,maximumWidth,maximumHeight,method)if _C_Ar(maximumWidth)then _C_F(self,"maximumWidth","getScaledPixels","Number",maximumWidth)end if maximumHeight==nil then maximumHeight=maximumWidth end if _C_Ar(maximumHeight)then _C_F(self,"maximumHeight","getScaledPixels","Number",maximumHeight)end if method==nil then method=Image.scaleMethods.FIT  end if _C_Hk(method)then _C_F(self,"method","getScaledPixels","Image.scaleMethods",method)end 
		size = math.floor( math.min( maximumWidth, maximumHeight ) + 0.5 )

		local scaledCache = self.scaledCache
		local cache = scaledCache[size]
		if cache then
			return cache[1], cache[2], cache[3]
		end

		local pixels, pixelsWidth, pixelsHeight
		if size < MINIMUM_SIZE then
			pixels, pixelsWidth, pixelsHeight = self.alternateIcon:getScaledPixels( maximumWidth, maximumHeight, method )
		else
			pixels = {}
			local image = self.image
			local thumbnailSize = size - 2 * OUTLINE_SIZE
			local thumbnailPixels, thumbnailWidth, thumbnailHeight = image:getScaledPixels( thumbnailSize, thumbnailSize, scaleMethods.FIT )

			pixelsWidth, pixelsHeight = thumbnailWidth + 2 * OUTLINE_SIZE, thumbnailHeight + 2 * OUTLINE_SIZE
			local i = 1
			local flapX, flapY = pixelsWidth - FLAP_SIZE + 1, pixelsHeight - FLAP_SIZE + 1
			for y = 1, pixelsHeight do
				for x = 1, pixelsWidth do
					local colour
					local isVerticalEdge, isHorizontalEdge = y == 1 or y == pixelsHeight, x == 1 or x == pixelsWidth
					if isVerticalEdge and isHorizontalEdge then -- corner
					elseif x >= flapX and y >= flapY and not ( x == flapX and y == flapY ) then -- flap
					elseif isVerticalEdge or isHorizontalEdge then -- outline
						colour = GREY
					else
						colour = WHITE
					end
					if colour then pixels[i] = colour end
					i = i + 1
				end
			end

			i = 1
			for y = OUTLINE_SIZE + 1, pixelsHeight - OUTLINE_SIZE do
				for x = OUTLINE_SIZE + 1, pixelsWidth - OUTLINE_SIZE do
					if x < flapX or y < flapY or ( x == flapX and y == flapY ) then
						local colour = thumbnailPixels[i]
						if colour and colour ~= TRANSPARENT then
							pixels[(y - 1) * pixelsWidth + x] = colour
						end
					end
					i = i + 1
				end
			end

			i = pixelsWidth
			for y = flapY, pixelsHeight do
				for x = flapX, pixelsWidth do
					if x ~= flapX or y ~= flapY then -- the corner
						local colour = LIGHT_GREY
						if x > i then -- past the flap
							break
						elseif x == i or x == flapX or y == flapY then -- diagonal line/outline
							colour = GREY
						end
						pixels[(y - 1) * pixelsWidth + x] = colour
					end
				end
				i = i - 1
			end
		end
		scaledCache[size] = { pixels, pixelsWidth, pixelsHeight }
		return pixels, pixelsWidth, pixelsHeight
	end end
_C_t5={["initialise"]={_C_t3,_C_Hi,_C_HG,},["toPaintFormat"]={[3]=_C_HH,},["getScaledPixels"]={_C_t4,_C_Hj,_C_HI,},["copy"]={[3]=_C_HJ,},["appendImage"]={[3]=_C_HK,},["appendPixels"]={[3]=_C_HM,},["toUniversalCompressedGraphics"]={[3]=_C_HN,},["squareCentred"]={[3]=_C_HO,}}function _C_t6(self,super)return function(_C_self_passed,file)
	    self.file = file
	    self.alternateIcon = file.association.icon
	end end _C_t7={set={["file"]={_C_t6},["pixels"]={[2]=_C_Hm,[3]=_C_HQ}}}function _C_t8(_,k,n,v)if _C_HL(n)then _C_D(_,k,"Image",n)end v[k]=n end _C_t9=setmetatable({["scaledCache"]=_C_9x,["width"]=_C_9x,["file"]=_C_9x,["image"]=_C_9x,["pixels"]=_C_9x,["contents"]=_C_9x,["alternateIcon"]=_C_9x,["height"]=_C_9x,["images"]=_C_9x,["initialise"]=_C_9x,["toPaintFormat"]=_C_9x,["getScaledPixels"]=_C_9x,["copy"]=_C_9x,["appendImage"]=_C_9x,["appendPixels"]=_C_9x,["toUniversalCompressedGraphics"]=_C_9x,["squareCentred"]=_C_9x},_C_9z)_C_tA=setmetatable({["scaledCache"]=_C_Ax,["width"]=_C_B2,["file"]=function(_,k,n,v,w,s,d,l)if _C_H5(n)then _C_D(_,k,"File",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["image"]=_C_t8,["pixels"]=function(_,k,n,v,w,s,d,l)if _C_An(n)then _C_D(_,k,"Table",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["contents"]=_C_Gr,["alternateIcon"]=_C_UH,["height"]=_C_B2,["images"]=_C_Ax,["initialise"]=_C_7,["toPaintFormat"]=_C_7,["getScaledPixels"]=_C_7,["copy"]=_C_7,["appendImage"]=_C_7,["appendPixels"]=_C_7,["toUniversalCompressedGraphics"]=_C_7,["squareCentred"]=_C_7},_C_9z)_C_tB={[ThumbnailIcon]=1,[Icon]=1,[Image]=1}_C_tC={"Icon","Image"}_C_tE={}_C_tF={}_C_tG={[InvalidValueTypeClassException]=1,[_C_7W]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_tH={"ClassException","FatalException","Exception"}_C_tI={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_tJ={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_tK(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Invalid value/ValueType of property/argument: " .. message
		super( message, level )
	end end
_C_tL={["initialise"]={_C_tK,[4]=_C_ED,}}_C_tM=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_tN=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_tO={[InvalidValueTypeClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_tP={"ClassException","FatalException","Exception"}_C_tR={}_C_tS={}_C_tT={["fromInterface"]={[2]=_C_Ke,}}_C_tU={[HomeTile]=1,[_C_7Y]=1,[IHomeItem]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_tV={"Container","View"}_C_tW={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_tX={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["width"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["index"]={_C_CU,"Number (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["animations"]={_C_An,"Table"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["y"]={_C_Ar,"Number"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["interfaceLinks"]={_C_An,"Table"},["needsPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["identifier"]={_C_Aq,"String (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_tY(self,super)return function(_C_self_passed)
	    super()
	    local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas

	    local roundedRectangle = RoundedRectangleMask( 1, 1, width, height, theme:value( "cornerRadius" ) )
	    canvas:fill( theme:value( "fillColour" ), roundedRectangle )
	    canvas:outline( theme:value( "outlineColour" ), roundedRectangle, theme:value( "outlineThickness" ) )

	    self.shadowSize = theme:value( "shadowSize" )
	end end
_C_tZ={["getCoordinates"]={[3]=_C_F3,},["onReadyLoadInterface"]={[2]=_C_Kk,},["unfocus"]={[3]=_C_F7,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={[2]=_C_Kv,[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["sendToBack"]={[2]=_C_LD,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onChildOfChildAdded"]={[2]=_C_Kp,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["insert"]={[2]=_C_Kw,},["initialise"]={[2]=_C_Kx,[3]=_C_FG,},["siblingsOfType"]={[3]=_C_FH,},["hitTestEvent"]={[3]=_C_FI,},["hitTest"]={[3]=_C_FX,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["onDraw"]={_C_tY,_C_L0,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["animateResize"]={[3]=_C_FW,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["initialiseCanvas"]={[3]=_C_F6,},["focus"]={[3]=_C_F5,},["disposeAll"]={[2]=_C_L3,}}_C_ta={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_tb=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["unfocus"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["draw"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["animateResize"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["initialiseCanvas"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_tc=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["unfocus"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["draw"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["animateResize"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["initialiseCanvas"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_td={[HomeTile]=1,[IHomeItem]=1,[Container]=1,[View]=1}_C_te={"Container","View"}setmetatable(ILockableLayout,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_7Z end})_C_tg={["eventType"]=loadstring("return \"interface_ready\";\
\
\
"),}_C_th={["eventType"]={_C_Ai,"String"},}_C_ti={["eventClasses"]=loadstring([[return {}

	
]])}_C_tj={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_tk=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_tl=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_tm={[ReadyInterfaceEvent]=1,[_C_7b]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_tn={"InterfaceEvent","Event"}_C_to={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_tp={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}_C_tq={["makeRelative"]={[3]=_C_Cs,}}_C_tr=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_ts=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["makeRelative"]=_C_7},_C_9z)_C_tt={[ReadyInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_tu={"InterfaceEvent","Event"}_C_tw={}_C_tx={}_C_ty={[FatalProgramException]=1,[_C_7d]=1,[Exception]=1,[_C_5t]=1}_C_tz={"Exception"}_C_u0={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_u1={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_u2={["initialise"]={[2]=_C_ED,}}_C_u3=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_u4=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_u5={[FatalProgramException]=1,[Exception]=1}_C_u6={"Exception"}_C_u8={["eventType"]=loadstring("return \"mouse_double_click\"\
\9\
"),}_C_u9={["eventType"]={_C_Ai,"String"},}_C_uA={["eventClasses"]=loadstring([[return {}

	
]])}_C_uB={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_uC=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_uD=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_uE={[DoubleClickMouseEvent]=1,[_C_7f]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_uF={"MouseEvent","Event"}_C_uG={["isSentToChildren"]=loadstring("return false\
\
\
\
\
\
\
\
\
\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["globalY"]=loadstring("return 0\
\
\9\
"),}function _C_uI(v)return not _C_AT[v] end _C_uH={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["mouseButton"]={_C_uI,"MouseEvent.mouseButtons"},["relativeView"]={_C_Cr,"View"},}function _C_uJ(self,super)return function(_C_self_passed,mouseButton,x,y,globalX,globalY)if _C_uI(mouseButton)then _C_F(self,"mouseButton","initialise","MouseEvent.mouseButtons",mouseButton)end if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(globalX)then _C_F(self,"globalX","initialise","Number",globalX)end if _C_Ar(globalY)then _C_F(self,"globalY","initialise","Number",globalY)end 
		self.mouseButton = mouseButton
		self.x = x
		self.y = y
		self.globalX = globalX
		self.globalY = globalY
	end end
_C_uK={["initialise"]={_C_uJ,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}function _C_uL(_,k,n,v)if _C_uI(n)then _C_D(_,k,"MouseEvent.mouseButtons",n)end v[k]=n end _C_uM=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["mouseButton"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_uN=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["mouseButton"]=_C_uL,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_uO={[DoubleClickMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_uP={"MouseEvent","Event"}_C_uR={}_C_uS={}_C_uT={[ThemeOutlet]=1,[_C_7h]=1}_C_uU={["style"]=loadstring("return \"default\"\
\9\
"),["connections"]=loadstring("return {}\
\
\
\
\
\
\
\9\
"),}_C_uV={["connections"]={_C_An,"Table"},["style"]={_C_Ai,"String"},}function _C_uW(self,super)return function(_C_self_passed,owner)
		self.owner = owner
		self.ownerClass = owner.class
		-- owner.event:connectGlobal( ThemeChangedInterfaceEvent, self.onThemeChanged, nil, self )
	end end
function _C_uX(self,super)return function(_C_self_passed,valueName,style)
		return Theme.static.active:value( self.ownerClass, valueName, style or self.style )
	end end
_C_uY={["initialise"]={_C_uW,},["value"]={_C_uX,}}function _C_uZ(self,super)return function(_C_self_passed,style)
		local oldStyle = self.style
		if oldStyle ~= style then
			self.style = style
			local active, ownerClass = Theme.static.active, self.ownerClass
			for i, connection in pairs( self.connections ) do
				connection[1][connection[2]] = active:value( ownerClass, connection[3], style )
				self:value( connection[3], style )
			end

			if ownerClass:typeOf( View ) then
				self.owner.needsDraw = true
			elseif ownerClass:typeOf( Cursor ) then
				self.owner:updateAppearance()
			end
		end
	end end _C_ua={set={["style"]={_C_uZ}}}_C_ub=setmetatable({["owner"]=_C_9x,["style"]=_C_9x,["connections"]=_C_9x,["ownerClass"]=_C_9x,["initialise"]=_C_9x,["value"]=_C_9x},_C_9z)_C_uc=setmetatable({["owner"]=_C_Gr,["style"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["connections"]=_C_Ax,["ownerClass"]=_C_Gr,["initialise"]=_C_7,["value"]=_C_7},_C_9z)_C_ud={[ThemeOutlet]=1}_C_uf={["themes"]=loadstring("return {} \
\
\9\
\
\
\
\
\
\9\
"),}_C_ug={["active"]={_C_ME,"Theme"},["themes"]={_C_An,"Table"},}function _C_uh(self,super)return function(_C_self_passed,themeName,cantExtend)
		return Theme.static.themes[themeName] or Theme( themeName, cantExtend )
	end end
_C_ui={["named"]={_C_uh,}}_C_uj=setmetatable({["active"]=_C_9x,["themes"]=_C_9x,["named"]=_C_9x},_C_9z)_C_uk=setmetatable({["active"]=_C_MH,["themes"]=_C_Ax,["named"]=_C_7},_C_9z)_C_ul={[Theme]=1,[_C_7n]=1}_C_um={["allowsNilProperties"]=loadstring("return {}\
\9\
\9\
"),["classes"]=loadstring("return {}\
\9\
"),}_C_un={["extends"]={_C_Aq,"String (allowsNil)"},["classes"]={_C_An,"Table"},["name"]={_C_Ai,"String"},["allowsNilProperties"]={_C_An,"Table"},}function _C_uo(self,super)return function(_C_self_passed,themeName,cantExtend)
		cantExtend = cantExtend or {}
		if cantExtend[themeName] then
			error( "Unabled to extend with theme: " .. themeName .. ". It is already extended higher up, which would cause recussursion.", 0 )
		end
		
		self.name = themeName

		-- TODO: dynamic path resolving for interfaces and other files
		local resource = Resource( themeName, Metadata.mimes.STHEME, "themes" )
		local contents = resource.contents
		if contents then
			local nodes, err = XML.static:fromText( contents )
			if not nodes then
				error( "Theme XML invaid: " .. themeName .. ".stheme. Error: " .. err, 0 )
			end
			cantExtend[themeName] = true
			local err = self:initialiseTheme( nodes[1], cantExtend )
			if err then
				error( "Theme XML invaid: " .. themeName .. ".stheme. Error: " .. err, 0 )
			end
		else
			error( "Theme file not found: " .. themeName .. ".stheme", 0 )
		end

		Theme.static.themes[themeName] = self
	end end
function _C_up(self,super)return function(_C_self_passed,_class,propertyName,styleName,noError)
		if styleName == "type" then
			error( "Reserved style name: " .. styleName, 0 )
		end
		local allowsNilProperties = self.allowsNilProperties
		styleName = styleName or "default"
		local className = _class.className

		local err
		local classTheme = self.classes[className]
		if classTheme then
			local propertyTheme = classTheme[propertyName]
			if propertyTheme then
				local styleValue = propertyTheme[styleName] or propertyTheme["default"]
				if allowsNilProperties[propertyName] or styleValue ~= nil then
					return styleValue
				else
					err = "Theme '" .. self.name .. "' does not have any definition for style: '" .. styleName .. "' or 'default' (of property: " .. propertyName .. " and of class: " .. _class.className .. ")"
				end
			else
				err = "Theme '" .. self.name .. "' does not have any definitions for property: '" .. propertyName .. "' (of class: " .. className .. ")"
			end
		else
			err = "Theme '" .. self.name .. "' does not have any definitions for class: '" .. className .. "'"
		end

		-- an error occured, try to see if the value was defined for a super class
		local super = _class.super
		if super then
			local themeValue = self:value( super, propertyName, styleName, true )
			if themeValue then
				return themeValue
			end
		end

		-- there was no value defined for a super class
		if noError then
			return false
		else
			error( err, 4 )
		end
	end end
function _C_uq(self,super)return function(_C_self_passed,nodes,cantExtend)
		if not nodes then
			return "Format invalid."
		elseif nodes.type ~= "Theme" then
			return "Root element must be 'Theme', got '" .. tostring( nodes.type ) .. "'."
		end

		local extends = nodes.attributes.extends
		local allowsNilProperties = self.allowsNilProperties

		local classes = {}
		if extends then
			local extendingTheme = Theme.static:named( extends, cantExtend )
			if not extendingTheme then return "Tried to extend a non-existant theme: " .. extends
			elseif extendingTheme == self.name then return "Tried to extend self" end
			local extendsClasses = extendingTheme.classes

			for className, classNode in pairs( extendsClasses ) do
				local classTheme = {}
				for propertyName, propertyNode in pairs( classNode ) do
					local propertyTheme = {}
					for styleName, styleValue in pairs( propertyNode ) do
						propertyTheme[styleName] = styleValue
					end
					classTheme[propertyName] = propertyTheme
				end
				classes[className] = classTheme
			end
			self.extends = extends
		end

		for i, classNode in ipairs( nodes.body ) do
			local classTheme = classes[classNode.type] or {}
			for i2, propertyNode in ipairs( classNode.body ) do
				local propertyTheme = classTheme[propertyNode.type] or {}
				local validationTypeName = propertyNode.attributes.type
				if validationTypeName:sub( #validationTypeName - 9 ) == ".allowsNil"  then
					allowsNilProperties[propertyNode.type] = true
				end
				for styleName, styleValue in pairs( propertyNode.attributes ) do
					if styleName ~= "type" then
						local isValid, value, allowsNil = Validator.static:isValid( styleValue, validationTypeName )
						if isValid then
							propertyTheme[styleName] = value
						else
							return "Style value '" .. tostring( styleValue ) .. "' is invalid for type '" .. validationTypeName .. "' : '" .. styleName .. "' (of property: " .. propertyNode.type .. " and of class: " .. classNode.type .. ")" 
						end
					end
				end
				classTheme[propertyNode.type] = propertyTheme
			end
			classes[classNode.type] = classTheme
		end
		self.classes = classes
	end end
_C_ur={["initialise"]={_C_uo,},["value"]={_C_up,},["initialiseTheme"]={_C_uq,}}_C_us=setmetatable({["extends"]=_C_9x,["classes"]=_C_9x,["name"]=_C_9x,["allowsNilProperties"]=_C_9x,["initialise"]=_C_9x,["value"]=_C_9x,["initialiseTheme"]=_C_9x},_C_9z)_C_ut=setmetatable({["extends"]=_C_B0,["classes"]=_C_Ax,["name"]=_C_B1,["allowsNilProperties"]=_C_Ax,["initialise"]=_C_7,["value"]=_C_7,["initialiseTheme"]=_C_7},_C_9z)_C_uu={[Theme]=1}_C_uw={["eventType"]=loadstring("return \"timer\";\
\9\
\9\
"),}_C_ux={["eventType"]={_C_Ai,"String"},}_C_uy={["eventClasses"]=loadstring([[return {}

	
]])}_C_uz={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_v0=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_v1=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_v2={[TimerEvent]=1,[_C_7p]=1,[Event]=1,[_C_7j]=1}_C_v3={"Event"}_C_v4={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_v5={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["timer"]={_C_Ar,"Number"},["relativeView"]={_C_Cr,"View"},}function _C_v6(self,super)return function(_C_self_passed,timer)if _C_Ar(timer)then _C_F(self,"timer","initialise","Number",timer)end 
		self.timer = timer
	end end
_C_v7={["initialise"]={_C_v6,},["makeRelative"]={[2]=_C_Cs,}}_C_v8=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["timer"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_v9=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["timer"]=_C_B2,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_vA={[TimerEvent]=1,[Event]=1}_C_vB={"Event"}_C_vD={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"up\"\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_vE={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_vF(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 4, 1 )
		path:lineTo( 7, 4 )
		path:lineTo( 5, 4 )
		path:lineTo( 5, 7 )
		path:lineTo( 3, 7 )
		path:lineTo( 3, 4 )
		path:lineTo( 1, 4 )
		path:close()

		super( path )
	end end
_C_vG={["initialise"]={_C_vF,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_vH=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_vI=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_vJ={[UpSymbol]=1,[_C_7r]=1,[Symbol]=1,[_C_34]=1}_C_vK={"Symbol"}_C_vL={}_C_vM={}_C_vN={[UpSymbol]=1,[Symbol]=1}_C_vO={"Symbol"}_C_vQ={["width"]=loadstring("return 5\
\9\
"),["symbolName"]=loadstring("return \"treeExpanded\"\
\9\
"),["height"]=loadstring("return 3\
\
\9\
"),}_C_vR={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_vS(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 3, 3 )
		path:lineTo( 5, 1 )
		path:close()

		super( path )
	end end
_C_vT={["initialise"]={_C_vS,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_vU=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_vV=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_vW={[TreeExpandedSymbol]=1,[_C_7t]=1,[Symbol]=1,[_C_34]=1}_C_vX={"Symbol"}_C_vY={}_C_vZ={}_C_va={[TreeExpandedSymbol]=1,[Symbol]=1}_C_vb={"Symbol"}_C_vd={}_C_ve={}function _C_vf(self,super)return function(_C_self_passed,serialisedPath)
		return Path( serialisedPath.x, serialisedPath.y, serialisedPath.width, serialisedPath.height, 1, 1, serialisedPath.lines )
	end end
_C_vg={["fromSerialisedPath"]={_C_vf,}}_C_vh={[Path]=1,[_C_7x]=1}_C_vi={["isClosed"]=loadstring("return false\
\9\
"),["segmentStart"]=loadstring("return 1\
\9\
"),["cache"]=loadstring("return {} \
\9\
"),["lines"]=loadstring("return {}\
\9\
"),}_C_vj={["isClosed"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["currentX"]={_C_Ar,"Number"},["currentY"]={_C_Ar,"Number"},["segmentStart"]={_C_Ar,"Number"},["cache"]={_C_An,"Table"},["lines"]={_C_An,"Table"},["height"]={_C_Ar,"Number"},["serialisedPath"]={_C_At,"Table (allowsNil)"},}function _C_vk(self,super)return function(_C_self_passed,width,height,currentX,currentY,lines)if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end if currentX==nil then currentX=1 end if _C_Ar(currentX)then _C_F(self,"currentX","initialise","Number",currentX)end if currentY==nil then currentY=1 end if _C_Ar(currentY)then _C_F(self,"currentY","initialise","Number",currentY)end if _C_At(lines)then _C_F(self,"lines","initialise","Table (allowsNil)",lines)end 
		self.width = width
		self.height = height
		self.currentX = currentX
		self.currentY = currentY
		if lines then
			self.lines = lines
			self.closed = true
		end
	end end
function _C_vl(self,super)return function(_C_self_passed,startAngle,endAngle,radius)
		if self.isClosed then return false end

		local lines = self.lines

		local currentX, currentY = self.currentX, self.currentY
		local centreX, centreY = currentX - sin( startAngle ) * radius, currentY + cos( startAngle ) * radius

		local length = endAngle - startAngle
		local segments = floor( radius * abs( length ) * PI + .5 )

		for i = 0, segments do
			local angle = startAngle + length * i / segments
			local x, y = centreX + sin( angle ) * radius, centreY - cos( angle ) * radius

			lines[#lines + 1] = {
				mode = "linear";
				x1 = currentX;
				y1 = currentY;
				x2 = x;
				y2 = y;
			}

			currentX, currentY = x, y
		end

		self.currentX, self.currentY = currentX, currentY

		return true
	end end
function _C_vm(self,super)return function(_C_self_passed,x,y)
		if self.isClosed or not x or not y or (x == self.currentX and y == self.currentY) then return false end
		local lines = self.lines
		lines[#lines + 1] = {
			mode = "linear";
			x1 = self.currentX;
			y1 = self.currentY;
			x2 = x;
			y2 = y;
		}
		self.currentX = x
		self.currentY = y
		--[[
		local pointsTable = self.points
		pointsTable[#pointsTable + 1] = false
		pointsTable[#pointsTable + 1] = false
		pointsTable[#pointsTable + 1] = { x, y }
		]]
		return true
	end end
function _C_vn(self,super)return function(_C_self_passed,endX,endY,controlPoint1X,controlPoint1Y,controlPoint2X,controlPoint2Y)
		if self.isClosed or not endX or not endY or not controlPoint1X or not controlPoint1Y or not controlPoint2X or not controlPoint2Y then return false end
		
		self.lines[#self.lines + 1] = {
			mode = "curve";
			x1 = self.currentX;
			y1 = self.currentY;
			x2 = endX;
			y2 = endY;
			controlPoint1X = controlPoint1X;
			controlPoint1Y = controlPoint1Y;
			controlPoint2X = controlPoint2X;
			controlPoint2Y = controlPoint2Y;
		}

		self.currentX = endX
		self.currentY = endY
		return true
	end end
function _C_vo(self,super)return function(_C_self_passed,linkedToEnd)
		linkedToEnd = (linkedToEnd == nil) and true or false
		if self.isClosed then return false end

		local lines = self.lines
		if #lines == 0 then
			error( "Path has no lines!", 2 )
		end
		local segmentStart = self.segmentStart
		if linkedToEnd and (lines[segmentStart].x1 ~= lines[#lines].x2 or lines[segmentStart].y1 ~= lines[#lines].y2) then
			self:lineTo( lines[segmentStart].x1, lines[segmentStart].y1 )
		end
		self.isClosed = true
		return true
	end end
function _C_vp(self,super)return function(_C_self_passed,x,y)if _C_Ar(x)then _C_F(self,"x","moveTo","Number",x)end if _C_Ar(y)then _C_F(self,"y","moveTo","Number",y)end 
		local lines = self.lines
		local segmentStart = self.segmentStart
		if (lines[segmentStart].x1 ~= lines[#lines].x2 or lines[segmentStart].y1 ~= lines[#lines].y2) then
			self:lineTo( lines[segmentStart].x1, lines[segmentStart].y1 )
		end
		self.currentX = x
		self.currentY = y
		self.segmentStart = #lines + 1
	end end
function _C_vq(self,super)return function(_C_self_passed,scaleX,scaleY)if scaleX==nil then scaleX=1 end if _C_Ar(scaleX)then _C_F(self,"scaleX","getFill","Number",scaleX)end if scaleY==nil then scaleY=1  end if _C_Ar(scaleY)then _C_F(self,"scaleY","getFill","Number",scaleY)end 
		local cache = self.cache
		local scaleCache = cache[scaleX .. ":" .. scaleY]
		if scaleCache then
			return unpack( scaleCache )
		end
		local intersections, outline = {}, {}
		local lines, height, width = self.lines, self.height, self.width

		local inverseScaleY, inverseScaleX = 1 / scaleY, 1 / scaleX
		for y = 1, height, inverseScaleY do
			local _y = y * scaleY
			intersections[_y] = {}
			outline[_y] = {}
		end

		local coefficients = {}
		local lastYs, nextYs = {}, {}
		local linesCount = #lines
		for i, line in ipairs( lines ) do
			if line.mode == "linear" then
				lastYs[i] = line.y1
				nextYs[i] = line.y2
			else
				local xCoefficients = bezierCoeffs( line.x1, line.controlPoint1X, line.controlPoint2X, line.x2 )
				coefficients[i] = {
					xCoefficients,
					bezierCoeffs( line.y1, line.controlPoint1Y, line.controlPoint2Y, line.y2 )
				}

				local t = 1 - ERROR_MARGIN
				lastYs[i] = xCoefficients[1] * t * t * t + xCoefficients[2] * t * t + xCoefficients[3] * t + xCoefficients[4]
				nextYs[i] = xCoefficients[1] * ERROR_MARGIN * ERROR_MARGIN * ERROR_MARGIN + xCoefficients[2] * ERROR_MARGIN * ERROR_MARGIN + xCoefficients[3] * ERROR_MARGIN + xCoefficients[4]
			end
		end

		for i, line in ipairs( lines ) do
			local x1, x2, y1, y2 = line.x1, line.x2, line.y1, line.y2
			local minY, maxY = min( y1, y2 ), max( y1, y2 )
			if line.mode == "linear" then
				local xDiff, yDiff = x2 - x1, y2 - y1
				for y = 1, height, inverseScaleY do
					local _y = y * scaleY
					if maxY > _y and _y >= minY then
						insert( intersections[_y], x1 + ( _y - y1 ) / yDiff * xDiff )
					end
				end

				if abs( xDiff ) > abs( yDiff ) then
					local y = minY
					for x = min( x1, x2 ), max( x1, x2 ), inverseScaleX do
						outline[floor( y1 + (x - x1) / xDiff * yDiff + 0.5 )][x * inverseScaleX] = true
					end
				else
					for y = minY, maxY, inverseScaleY do
						outline[floor( y * scaleY + 0.5 )][x1 + ( y - y1 ) / yDiff * xDiff] = true
					end
				end
			else
				local xCoefficients = bezierCoeffs( x1, line.controlPoint1X, line.controlPoint2X, x2 )
				local yCoefficients = bezierCoeffs( y1, line.controlPoint1Y, line.controlPoint2Y, y2 )
				for y = 1, height, inverseScaleY do
					local yRoots = cubicRoots( { yCoefficients[1], yCoefficients[2], yCoefficients[3], yCoefficients[4] - y } )
					local yIntersections = intersections[y * scaleY]
					for i = 1, 3 do
						t = yRoots[i];
						if 0 - ERROR_MARGIN <= t and t <= 1 + ERROR_MARGIN then
							local x = xCoefficients[1] * t * t * t + xCoefficients[2] * t * t + xCoefficients[3] * t + xCoefficients[4]
							if not aproxEqual( y, maxY ) then
								yIntersections[#yIntersections + 1] = ( x - 1 ) * scaleX + 1
							end
							outline[floor( y * scaleY + 0.5 )][math.floor(( x - 1 ) * scaleX + 1 + 0.5 )] = true
						end
					end
				end
			end
		end

		local fill = {}
		local outlineFill = {}
		local scaledWidth = floor( width * scaleX + 0.5 )

		for y = 1, height, inverseScaleY do
			local _y = y * scaleY
			local yIntersections = intersections[_y]
			table.sort( yIntersections )
			if #yIntersections % 2 ~= 0 then
				error( "Invalid path (uneven intersection count at y = " .. y .. "). This probably isn't your fault, it's most likely a bug in Silica. Please file a GitHub issue ASAP with this information:\n\nPath Width: "..tostring( self.width ) .. "\nPath Height: "..tostring( self.height ) .. "\nPath Lines: "..tostring( textutils.serialize( self.lines ) ) .. "\nScale X: "..tostring( scaleX ) .. "\nScale Y: "..tostring( scaleY ) .. "\nIntersections: "..tostring(textutils.serialize( intersections ) .. "\nOutline: "..tostring( textutils.serialize( outline ) ) ) )
			end

			_y = floor( _y + 0.5 )
			for i = 1, #yIntersections, 2 do
				local x1, x2 = yIntersections[i], yIntersections[i + 1]
				for x = floor( x1 + 0.5), floor( x2 + 0.5 ) do
					fill[(_y - 1) * scaledWidth + x] = true
				end
			end

			for x, _ in pairs( outline[_y] ) do
				local index = (_y - 1) * scaledWidth + x
				fill[index] = true
				outlineFill[index] = true
			end
		end

		cache[scaleX .. ":" .. scaleY] = { fill, outline }
		return fill, outline
	end end
_C_vr={["initialise"]={_C_vk,},["arc"]={_C_vl,},["lineTo"]={_C_vm,},["curveTo"]={_C_vn,},["close"]={_C_vo,},["moveTo"]={_C_vp,},["getFill"]={_C_vq,}}function _C_vs(self,super)return function(_C_self_passed)
		local lines, pathCopy = self.lines, { x = self.x, y = self.y, width = self.width, height = self.height, lines = {} }
		local linesCopy = pathCopy.lines

		for i, line in ipairs( lines ) do
			local lineCopy = {}
			for k, v in pairs( line ) do
				lineCopy[k] = v
			end
			linesCopy[i] = lineCopy
		end

		return pathCopy
	end end _C_vt={get={["serialisedPath"]={_C_vs}}}_C_vu=setmetatable({["isClosed"]=_C_9x,["width"]=_C_9x,["currentX"]=_C_9x,["currentY"]=_C_9x,["segmentStart"]=_C_9x,["cache"]=_C_9x,["lines"]=_C_9x,["height"]=_C_9x,["serialisedPath"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["initialise"]=_C_9x,["arc"]=_C_9x,["lineTo"]=_C_9x,["curveTo"]=_C_9x,["close"]=_C_9x,["moveTo"]=_C_9x,["getFill"]=_C_9x},_C_9z)_C_vv=setmetatable({["isClosed"]=_C_Cu,["width"]=_C_B2,["currentX"]=_C_B2,["currentY"]=_C_B2,["segmentStart"]=_C_B2,["cache"]=_C_Ax,["lines"]=_C_Ax,["height"]=_C_B2,["serialisedPath"]=_C_Fz,["initialise"]=_C_7,["arc"]=_C_7,["lineTo"]=_C_7,["curveTo"]=_C_7,["close"]=_C_7,["moveTo"]=_C_7,["getFill"]=_C_7},_C_9z)_C_vw={[Path]=1}_C_vy={}_C_vz={}_C_w0={[ApplicationEventManager]=1,[_C_7z]=1,[EventManager]=1,[_C_6Z]=1}_C_w1={"EventManager"}_C_w2={["handles"]=loadstring("return {}\
\9\
"),["handlesGlobal"]=loadstring("return {}\
\
\9\
\
\
\
\
\9\
"),}_C_w3={["owner"]={_C_cq,"InstanceOrStatic"},["handles"]={_C_lc,"{Event}"},["handlesGlobal"]={_C_lc,"{Event}"},}function _C_w4(self,super)return function(_C_self_passed,event)if _C_FJ(event)then _C_F(self,"event","handleEvent","Event",event)end 
		-- run the before phase handles first
		if self:handleEventPhase( event, Event.phases.BEFORE ) then
			return true
		end

		-- start trickling the event down
		local container = self.owner.container
		if container and container.event:handleEvent( event ) then
			return true
		end

		-- if nothing has killed the flow yet run the after phases
		return self:handleEventPhase( event, Event.phases.AFTER )
	end end
function _C_w5(self,super)return function(_C_self_passed,...)
		error( "Cannot connect global handle on ApplicationEventManager as it is the global handler. Use the class' own manager.", 0 )
	end end
function _C_w6(self,super)return function(_C_self_passed,...)
		error( "Cannot disconnect global handle on ApplicationEventManager as it is the global handler. Use the handler's own manager.", 0 )
	end end
_C_w7={["initialise"]={[2]=_C_ld,},["disconnectAllGlobals"]={[2]=_C_le,},["dispose"]={[2]=_C_ll,},["disconnectGlobal"]={_C_w6,_C_lh,},["hasConnections"]={[2]=_C_lj,},["handleEvent"]={_C_w4,_C_lk,},["hasConnectionsGlobal"]={[2]=_C_lf,},["handleEventPhase"]={[2]=_C_lm,},["connect"]={[2]=_C_ln,},["connectGlobal"]={_C_w5,_C_lo,},["disconnect"]={[2]=_C_lp,}}_C_w8=setmetatable({["owner"]=_C_9x,["handles"]=_C_9x,["handlesGlobal"]=_C_9x,["initialise"]=_C_9x,["disconnectAllGlobals"]=_C_9x,["dispose"]=_C_9x,["disconnectGlobal"]=_C_9x,["hasConnections"]=_C_9x,["handleEvent"]=_C_9x,["hasConnectionsGlobal"]=_C_9x,["handleEventPhase"]=_C_9x,["connect"]=_C_9x,["connectGlobal"]=_C_9x,["disconnect"]=_C_9x},_C_9z)_C_w9=setmetatable({["owner"]=_C_cz,["handles"]=_C_lr,["handlesGlobal"]=_C_lr,["initialise"]=_C_7,["disconnectAllGlobals"]=_C_7,["dispose"]=_C_7,["disconnectGlobal"]=_C_7,["hasConnections"]=_C_7,["handleEvent"]=_C_7,["hasConnectionsGlobal"]=_C_7,["handleEventPhase"]=_C_7,["connect"]=_C_7,["connectGlobal"]=_C_7,["disconnect"]=_C_7},_C_9z)_C_wA={[ApplicationEventManager]=1,[EventManager]=1}_C_wB={"EventManager"}_C_wD={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"list\"\
\9\
\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_wE={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_wF(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 7, 1 )

		path:moveTo( 1, 3 )
		path:lineTo( 7, 3 )

		path:moveTo( 1, 5 )
		path:lineTo( 7, 5 )

		path:moveTo( 1, 7 )
		path:lineTo( 7, 7 )


		path:close()

		super( path )
	end end
_C_wG={["initialise"]={_C_wF,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_wH=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_wI=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_wJ={[ListSymbol]=1,[_C_81]=1,[Symbol]=1,[_C_34]=1}_C_wK={"Symbol"}_C_wL={}_C_wM={}_C_wN={[ListSymbol]=1,[Symbol]=1}_C_wO={"Symbol"}_C_wQ={["width"]=loadstring("return 9\
\9\
"),["symbolName"]=loadstring("return \"search\"\
\9\
"),["height"]=loadstring("return 9\
\
\9\
"),}_C_wR={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_wS(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 9, 9 )
		path:lineTo( 6, 6 )
		path:lineTo( 7, 5 )
		path:lineTo( 7, 3 )
		path:lineTo( 5, 1 )
		path:lineTo( 3, 1 )
		path:lineTo( 1, 3 )
		path:lineTo( 1, 5 )
		path:lineTo( 3, 7 )
		path:lineTo( 5, 7 )
		path:lineTo( 6, 6 )
		path:lineTo( 7, 5 )
		path:lineTo( 7, 3 )
		path:lineTo( 5, 1 )
		path:lineTo( 3, 1 )
		path:lineTo( 1, 3 )
		path:lineTo( 1, 5 )
		path:lineTo( 3, 7 )
		path:lineTo( 5, 7 )
		path:lineTo( 6, 6 )
		path:close()

		super( path )
	end end
_C_wT={["initialise"]={_C_wS,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_wU=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_wV=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_wW={[SearchSymbol]=1,[_C_83]=1,[Symbol]=1,[_C_34]=1}_C_wX={"Symbol"}_C_wY={}_C_wZ={}_C_wa={[SearchSymbol]=1,[Symbol]=1}_C_wb={"Symbol"}_C_wd={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"menuClose\"\
\9\
"),["height"]=loadstring("return 4\
\9\
\
\
\9\
"),}_C_we={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_wf(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 4 )
		path:lineTo( 4, 1 )
		path:lineTo( 7, 4 )
		path:close()

		super( path )
	end end
_C_wg={["initialise"]={_C_wf,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_wh=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_wi=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_wj={[MenuCloseSymbol]=1,[_C_85]=1,[Symbol]=1,[_C_34]=1}_C_wk={"Symbol"}_C_wl={}_C_wm={}_C_wn={[MenuCloseSymbol]=1,[Symbol]=1}_C_wo={"Symbol"}_C_wq={}_C_wr={}_C_ws={[Interface]=1,[_C_87]=1}_C_wt={}_C_wu={["container"]={_C_PS,"Container"},["containerNode"]={_C_An,"Table"},["name"]={_C_Ai,"String"},}function _C_wv(self,super)return function(_C_self_passed,interfaceName,extend,containerView)
		self.name = interfaceName
		extend = extend or ApplicationContainer

		-- TODO: dynamic path resolving for interfaces and other files
		local resource = Resource( interfaceName, Metadata.mimes.SINTERFACE, "interfaces" )
		local contents = resource.contents
		if contents then
			local nodes, err = XML.static:fromText( contents )
			if not err and #nodes ~= 1 then err = "Interfaces must only have 1 root element." end
			if not nodes or err then
				error( "Interface XML invaid: " .. interfaceName .. ".sinterface. Error: " .. tostring( err ), 0 )
			end

			local rootNode = nodes[1]
			local containerClass = class.get( rootNode.type )
			local err

			if not containerClass then
				err = "Container class not found: " .. rootNode.type
			elseif not containerClass:typeOf( extend ) then
				err = "Container class does not extend '" .. extend.className .. "': " .. rootNode.type
			else
				self.containerNode = rootNode
				self:loadContainer( containerView )
			end

			if err then
				error( "Interface XML invaid: " .. interfaceName .. ".sinterface. Error: " .. err, 0 )
			end
		else
			error( "Interface file not found: " .. interfaceName .. ".sinterface", 0 )
		end
	end end
function _C_ww(self,super)return function(_C_self_passed,isContainer)
		local container = self.container
		if isContainer then
			container.event:handleEvent( ContainerReadyInterfaceEvent() )
		else
			container.event:handleEvent( ReadyInterfaceEvent() )
		end
	end end
function _C_wx(self,super)return function(_C_self_passed,containerView)
		local loadedEvent = LoadedInterfaceEvent()
		local function loadChild( childNode, parentContainer, childView )
			local childClass = class.get( childNode.type )
			if not childClass then
				return nil, "Class not found: " .. childNode.type
			elseif not childClass:typeOf( View ) then
				return nil,"Class does not extend 'View': " .. childNode.type
			end

			childView = childView or childClass.spawn( true )
			if not childView then
				return nil, "Failed to initialise " .. childNode.type .. ". Identifier: " .. tostring( childNode.attributes.identifier )
			end

			local attributes = childNode.attributes
			local identifier = attributes.identifier
			local existingIntefaceProperties = childView.interfaceProperties
			if identifier then
				childView.identifier = existingIntefaceProperties and ( childView.identifier or identifier ) or identifier
			end
				
			if parentContainer then
				parentContainer:insert( childView )
			end
			
			if existingIntefaceProperties then
				for k, v in pairs( attributes ) do
					if not containerInterfaceProperties or not containerInterfaceProperties[k] then -- if the interface defining THIS container specified this property then don't set it
						childView[k] = v
						existingIntefaceProperties[k] = v
					end
				end
			else
				for k, v in pairs( attributes ) do
					childView[k] = v
				end
				childView.interfaceProperties = attributes
			end

			local children = {}
			if childNode.body and #childNode.body > 0 then
				if not childClass:typeOf( Container ) then
					return nil, "Class does not extend 'Container' but has children: " .. childNode.type
				else
					for i, _childNode in ipairs( childNode.body ) do
						table.insert( children, loadChild( _childNode, childView ) )
					end
				end
			end

			childView.event:handleEvent( loadedEvent )

			-- check for any nil values that aren't allowed to be nil
			local instanceProperties = childClass.instanceProperties
			for k, v in pairs( childClass.instanceDefinedProperties ) do
				if not RESERVED_NAMES[v] and k == v and not instanceProperties[k][TYPETABLE_ALLOWS_NIL] then -- i.e. it's not an alias
					if childView[k] == nil then -- TODO: maybe this should use instance[k] so getters are called
						error( childNode.type .. "." .. k .. " was nil after initialisation and LoadedInterfaceEvent, but type does not specify .allowsNil" )
					end
				end
			end

			return childView
		end

		local container = loadChild( self.containerNode, nil, containerView )
		self.container = container
	end end
_C_wy={["initialise"]={_C_wv,},["ready"]={_C_ww,},["loadContainer"]={_C_wx,}}_C_wz=setmetatable({["container"]=_C_9x,["containerNode"]=_C_9x,["name"]=_C_9x,["initialise"]=_C_9x,["ready"]=_C_9x,["loadContainer"]=_C_9x},_C_9z)_C_x0=setmetatable({["container"]=_C_Pt,["containerNode"]=_C_Ax,["name"]=_C_B1,["initialise"]=_C_7,["ready"]=_C_7,["loadContainer"]=_C_7},_C_9z)_C_x1={[Interface]=1}setmetatable(IToolbarPressableItem,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_88 end})setmetatable(ISerialiseable,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_89 end})_C_x3={["width"]=loadstring("return 4\
\9\
\
\
\9\
"),["symbolName"]=loadstring("return \"forward\"\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_x4={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_x5(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 4, 4 )
		path:lineTo( 1, 7 )
		path:close()
		
		super( path )
	end end
_C_x6={["initialise"]={_C_x5,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_x7=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_x8=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_x9={[ForwardSymbol]=1,[_C_8B]=1,[Symbol]=1,[_C_34]=1}_C_xA={"Symbol"}_C_xB={}_C_xC={}_C_xD={[ForwardSymbol]=1,[Symbol]=1}_C_xE={"Symbol"}_C_xG={}_C_xH={}_C_xI={[ProgramItem]=1,[_C_8D]=1,[TopBarItem]=1,[_C_9Y]=1,[View]=1,[_C_3N]=1}_C_xJ={"TopBarItem","View"}_C_xK={["cursor"]=loadstring("return ClickableCursor.static\
\
\
    \
"),["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isRemoving"]=loadstring("return false\
\9\
"),["pin"]=loadstring("return TopBarItem.pins.LEFT\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isSeparatorVisible"]=loadstring("return true\
\
    \
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isActive"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isCloseActive"]=loadstring("return false\
\
    \
"),["height"]=loadstring("return 14\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_xL={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["program"]={_C_Hy,"Program"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isActive"]={_C_Cp,"Boolean"},["isCloseActive"]={_C_Cp,"Boolean"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["y"]={_C_Ar,"Number"},["isRemoving"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["pin"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isSeparatorVisible"]={_C_Cp,"Boolean"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["size"]={_C_CU,"Number (allowsNil)"},["width"]={_C_Ar,"Number"},["animations"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},}function _C_xM(self,super)return function(_C_self_passed,...)
        super( ... )
        self:event( EnteredInterfaceMouseEvent, self.onMouseEntered )
        self:event( ExitedInterfaceMouseEvent, self.onMouseExited )
        self:event( MoveMouseEvent, self.onMouseMoved )
    end end
function _C_xN(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
        local wasPressed = true--self.isPressed
        super( event, phase )
        if wasPressed and self:hitTestEvent( event ) then
            local mouseButton = event.mouseButton
            if self.isCloseActive or mouseButton == MouseEvent.mouseButtons.MIDDLE then
                self.program:close()
            elseif mouseButton == MouseEvent.mouseButtons.LEFT then
                self.program:focus()
                self:updateThemeStyle()
            end
        end
    end end
function _C_xP(v)local j=_C_L[v]return not(j and j[ExitedInterfaceMouseEvent])end  function _C_xO(self,super)return function(_C_self_passed,event,phase)if _C_xP(event)then _C_F(self,"event","onMouseExited","ExitedInterfaceMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseExited","Event.phases",phase)end 
        self.needsDraw = true
        self.isCloseActive = false
        self:updateThemeStyle()
    end end
function _C_xQ(self,super)return function(_C_self_passed)
        super()
        local width, height, theme, canvas, program = self.width, self.height, self.theme, self.canvas, self.program

        local leftMargin, rightMargin, topMargin, bottomMargin, iconTitleMargin, titleStatusMargin = theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" ), theme:value( "iconTitleMargin" ), theme:value( "titleStatusMargin" )
        local maxContentWidth = width - leftMargin - rightMargin

        local titleFont, statusFont = theme:value( "titleFont" ), theme:value( "statusFont" )
        local programTitle, programStatus = program.title, program.status or ""
        local titleWidth, statusWidth = titleFont:getWidth( programTitle ), statusFont:getWidth( programStatus )
        
        local isMouseInView, closeWidth, closeLeftMargin, closeRightMargin, closeSymbol = self.isMouseInView, 0, 0, 0
        if isMouseInView then
            closeLeftMargin = theme:value( "closeLeftMargin" )
            closeRightMargin = theme:value( "closeRightMargin" )
            closeSymbol = theme:value( "closeSymbol" )
            closeWidth = closeSymbol.width
            maxContentWidth = maxContentWidth - closeLeftMargin - closeRightMargin - closeWidth
        end

        local configs = {
            { ICON_WIDTH + iconTitleMargin + titleWidth + titleStatusMargin + statusWidth, true, true, true };
            { titleWidth + titleStatusMargin + statusWidth, false, true, true };
            statusWidth > 0 and { ICON_WIDTH + iconTitleMargin + statusWidth, true, false, true } or nil;
            { ICON_WIDTH + iconTitleMargin + titleWidth, true, true, false };
            { titleWidth, false, true, false };
            { ICON_WIDTH, true, false, false };
        }

        local selectedConfig
        for i, config in ipairs( configs ) do
            if maxContentWidth >= config[1] then
                selectedConfig = config
                break
            end
        end
        selectedConfig = selectedConfig or configs[#configs] -- none of them fit, revert to icon

        local x = math.floor( ( width - selectedConfig[1] ) / 2 ) + 1
        -- Icon
        if selectedConfig[2] then
            canvas:image( program.icon, x, topMargin, ICON_WIDTH, ICON_HEIGHT )
            x = x + ICON_WIDTH + ((selectedConfig[3] or selectedConfig[4]) and iconTitleMargin or 0)
        end

        -- Title
        if selectedConfig[3] then
            canvas:fill( theme:value( "titleColour" ), TextMask( x, 1 + topMargin, titleWidth, titleFont.height, programTitle, titleFont ) )
            x = x + titleWidth + (selectedConfig[4] and titleStatusMargin or 0)
        end

        -- Status
        if selectedConfig[4] then
            canvas:fill( theme:value( "statusColour" ), TextMask( x, 1 + topMargin, statusWidth, statusFont.height, programStatus, statusFont ) )
        end

        -- Close button
        if isMouseInView then
           canvas:fill( theme:value( "closeFillColour" ), RectangleMask( 1, 1, leftMargin + closeLeftMargin + closeWidth + closeRightMargin, height ) )
            canvas:fill( theme:value( "closeSymbolColour" ), SymbolMask( 1 + leftMargin + closeLeftMargin, 1 + math.floor( ( self.height - closeSymbol.height ) / 2 ), closeSymbol ) )
        end
    end end
function _C_xS(v)local j=_C_L[v]return not(j and j[ProgramInformationChangedInterfaceEvent])end  function _C_xR(self,super)return function(_C_self_passed,event,phase)if _C_xS(event)then _C_F(self,"event","onProgramInformationChanged","ProgramInformationChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onProgramInformationChanged","Event.phases",phase)end 
        if self.program == event.program then
            self.needsDraw = true
        end
    end end
function _C_xU(v)local j=_C_L[v]return not(j and j[EnteredInterfaceMouseEvent])end  function _C_xT(self,super)return function(_C_self_passed,event,phase)if _C_xU(event)then _C_F(self,"event","onMouseEntered","EnteredInterfaceMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseEntered","Event.phases",phase)end 
        if not self:updateIsCloseActive( event.x ) then
            self.needsDraw = true
        end
    end end
function _C_xV(self,super)return function(_C_self_passed)
        self.theme.style = self.isCloseActive and ( self.program.programView.isFocused and ( self.isPressed and "closePressedFocused" or "closeHoverFocused" ) or ( self.isPressed and "closePressed" or "closeHover" ) ) or ( self.isPressed and "pressed" or ( self.program.programView.isFocused and "focused" or "default" ) )
    end end
function _C_xW(self,super)return function(_C_self_passed,event,phase)if _C_mW(event)then _C_F(self,"event","onMouseMoved","MoveMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseMoved","Event.phases",phase)end 
        self:updateIsCloseActive( event.x )
    end end
function _C_xX(self,super)return function(_C_self_passed,x)if _C_Ar(x)then _C_F(self,"x","updateIsCloseActive","Number",x)end 
        local theme = self.theme
        local isCloseActive = x <= theme:value( "leftMargin" ) + theme:value( "closeLeftMargin" ) + theme:value( "closeSymbol" ).width + theme:value( "closeRightMargin" )
        if isCloseActive ~= self.isCloseActive then
            self.isCloseActive = isCloseActive
            self:updateThemeStyle()
            self.needsDraw = true
            return true
        end
        return false
    end end
_C_xY={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["onMouseExited"]={_C_xO,},["getCoordinatesTo"]={[3]=_C_F8,},["unfocus"]={[3]=_C_F7,},["clearFocus"]={[3]=_C_FP,},["updateIsCloseActive"]={_C_xX,},["draw"]={[3]=_C_F9,},["addFocus"]={[3]=_C_FQ,},["dispose"]={[3]=_C_FK,},["animate"]={[3]=_C_FV,},["onMouseMoved"]={_C_xW,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={_C_xM,_C_dA,_C_FG,},["onMouseDown"]={[2]=_C_dE,},["onGlobalMouseUp"]={_C_xN,_C_dC,},["animateResize"]={[3]=_C_FW,},["initialiseEventManager"]={[3]=_C_FO,},["getPosition"]={[3]=_C_FN,},["onDraw"]={_C_xQ,_C_dD,_C_FU,},["onProgramInformationChanged"]={_C_xR,},["onMouseEntered"]={_C_xT,},["updateThemeStyle"]={_C_xV,_C_dB,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["startDragDrop"]={[3]=_C_FR,},["hitTestEvent"]={[3]=_C_FI,},["siblingsOfType"]={[3]=_C_FH,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["hitTest"]={[3]=_C_FX,}}function _C_xZ(self,super)return function(_C_self_passed,program)
        self.program = program
        self.needsDraw = true
        self:updateThemeStyle()
        self:event( ProgramInformationChangedInterfaceEvent, self.onProgramInformationChanged )
    end end _C_xa={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_dG},["isFocused"]={[3]=_C_Fi},["isSeparatorVisible"]={[2]=_C_dH},["shadowSize"]={[3]=_C_Fs},["program"]={_C_xZ},["height"]={[3]=_C_Fr},["width"]={[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}_C_xb=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["program"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["isActive"]=_C_9x,["isCloseActive"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["isRemoving"]=_C_9x,["topPin"]=_C_9x,["pin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSeparatorVisible"]=_C_9x,["animations"]=_C_9x,["parsedPins"]=_C_9x,["eventManager"]=_C_9x,["size"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["onMouseExited"]=_C_9x,["getCoordinatesTo"]=_C_9x,["unfocus"]=_C_9x,["clearFocus"]=_C_9x,["updateIsCloseActive"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["dispose"]=_C_9x,["animate"]=_C_9x,["onMouseMoved"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["animateResize"]=_C_9x,["initialiseEventManager"]=_C_9x,["getPosition"]=_C_9x,["onDraw"]=_C_9x,["onProgramInformationChanged"]=_C_9x,["onMouseEntered"]=_C_9x,["updateThemeStyle"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["startDragDrop"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_xc=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["program"]=function(_,k,n,v,w,s,d,l)if _C_Hy(n)then _C_D(_,k,"Program",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isActive"]=_C_Cu,["isCloseActive"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isRemoving"]=_C_Cu,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["pin"]=_C_B2,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["isSeparatorVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["parsedPins"]=_C_Ax,["eventManager"]=_C_Dm,["size"]=_C_LL,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["onMouseExited"]=_C_7,["getCoordinatesTo"]=_C_7,["unfocus"]=_C_7,["clearFocus"]=_C_7,["updateIsCloseActive"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["dispose"]=_C_7,["animate"]=_C_7,["onMouseMoved"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["animateResize"]=_C_7,["initialiseEventManager"]=_C_7,["getPosition"]=_C_7,["onDraw"]=_C_7,["onProgramInformationChanged"]=_C_7,["onMouseEntered"]=_C_7,["updateThemeStyle"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["startDragDrop"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_xd={[ProgramItem]=1,[TopBarItem]=1,[View]=1}_C_xe={"TopBarItem","View"}_C_xg={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"down\"\
\9\
\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_xh={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_xi(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 5, 1 )
		path:lineTo( 5, 1 )
		path:lineTo( 5, 4 )
		path:lineTo( 7, 4 )
		path:lineTo( 4, 7 )
		path:lineTo( 1, 4 )
		path:lineTo( 3, 4 )
		path:lineTo( 3, 1 )
		path:close()

		super( path )
	end end
_C_xj={["initialise"]={_C_xi,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_xk=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_xl=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_xm={[DownSymbol]=1,[_C_8F]=1,[Symbol]=1,[_C_34]=1}_C_xn={"Symbol"}_C_xo={}_C_xp={}_C_xq={[DownSymbol]=1,[Symbol]=1}_C_xr={"Symbol"}_C_xt={}_C_xu={}_C_xv={[SymbolMask]=1,[_C_8H]=1,[PathMask]=1,[_C_7D]=1,[Mask]=1,[_C_36]=1}_C_xw={"PathMask","Mask"}_C_xx={}_C_xy={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_xz(self,super)return function(_C_self_passed,x,y,symbol,width,height)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_OJ(symbol)then _C_F(self,"symbol","initialise","Symbol",symbol)end if width==nil then width=symbol.width end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if height==nil then height=symbol.height  end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end 
		super( x, y, symbol.path, width, height )
	end end
_C_y0={["initialise"]={_C_xz,_C_rF,_C_CR,},["exclude"]={[3]=_C_CS,},["subtract"]={[3]=_C_CV,},["intersect"]={[3]=_C_CW,},["add"]={[3]=_C_CX,}}_C_y1=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_y2=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_y3={[SymbolMask]=1,[PathMask]=1,[Mask]=1}_C_y4={"PathMask","Mask"}_C_y6={["eventType"]=loadstring("return \"mouse_drag\";\
\9\
\9\
"),}_C_y7={["eventType"]={_C_Ai,"String"},}_C_y8={["eventClasses"]=loadstring([[return {}

	
]])}_C_y9={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_yA=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_yB=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_yC={[DragMouseEvent]=1,[_C_8J]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_yD={"MouseEvent","Event"}_C_yE={["globalY"]=loadstring("return 0\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToChildren"]=loadstring("return true \
\9\
"),}_C_yF={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["mouseButton"]={_C_uI,"MouseEvent.mouseButtons"},["relativeView"]={_C_Cr,"View"},}function _C_yG(self,super)return function(_C_self_passed,mouseButton,x,y)if _C_uI(mouseButton)then _C_F(self,"mouseButton","initialise","MouseEvent.mouseButtons",mouseButton)end if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end 
		self.mouseButton = mouseButton
		self.x = x
		self.y = y
		self.globalX = x
		self.globalY = y
	end end
_C_yH={["initialise"]={_C_yG,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}_C_yI=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["mouseButton"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_yJ=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["mouseButton"]=_C_uL,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_yK={[DragMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_yL={"MouseEvent","Event"}_C_yN={["width"]=loadstring("return 5\
\9\
\
\
\9\
"),["symbolName"]=loadstring("return \"close\"\
\9\
"),["height"]=loadstring("return 5\
\9\
"),}_C_yO={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_yP(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 5, 5 )
		path:lineTo( 3, 3 )
		path:lineTo( 5, 1 )
		path:lineTo( 5, 1 )
		path:lineTo( 1, 5 )
		path:lineTo( 3, 3 )
		path:close()

		super( path )
	end end
_C_yQ={["initialise"]={_C_yP,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_yR=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_yS=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_yT={[CloseSymbol]=1,[_C_8L]=1,[Symbol]=1,[_C_34]=1}_C_yU={"Symbol"}_C_yV={}_C_yW={}_C_yX={[CloseSymbol]=1,[Symbol]=1}_C_yY={"Symbol"}_C_ya={["width"]=loadstring("return 4\
\9\
\
\
\9\
"),["symbolName"]=loadstring("return \"back\"\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_yb={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_yc(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 4, 1 )
		path:lineTo( 1, 4 )
		path:lineTo( 4, 7 )
		path:close()

		super( path )
	end end
_C_yd={["initialise"]={_C_yc,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_ye=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_yf=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_yg={[BackSymbol]=1,[_C_8N]=1,[Symbol]=1,[_C_34]=1}_C_yh={"Symbol"}_C_yi={}_C_yj={}_C_yk={[BackSymbol]=1,[Symbol]=1}_C_yl={"Symbol"}_C_yn={["eventType"]=loadstring("return \"interface_keyboard_shortcut\";\
\9\
\9\
"),}_C_yo={["eventType"]={_C_Ai,"String"},}_C_yp={["eventClasses"]=loadstring([[return {}

	
]])}_C_yq={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_yr=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_ys=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_yt={[KeyboardShortcutEvent]=1,[_C_8P]=1,[Event]=1,[_C_7j]=1}_C_yu={"Event"}_C_yv={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_yw={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["keys"]={_C_An,"Table"},}function _C_yx(self,super)return function(_C_self_passed,keys)if _C_An(keys)then _C_F(self,"keys","initialise","Table",keys)end 
		self.keys = keys
	end end
function _C_yy(self,super)return function(_C_self_passed,keys)
		local eventKeys = self.keys
		for i, keyString in ipairs( keys ) do
			if not eventKeys[keyString] then
				return false
			end
		end

		local eventKeysLength = 0
		for keyString, _ in pairs( eventKeys ) do
			eventKeysLength = eventKeysLength + 1
		end

		return eventKeysLength == #keys
	end end
_C_yz={["initialise"]={_C_yx,},["matchesKeys"]={_C_yy,},["makeRelative"]={[2]=_C_Cs,}}_C_z0=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["keys"]=_C_9x,["initialise"]=_C_9x,["matchesKeys"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_z1=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["keys"]=_C_Ax,["initialise"]=_C_7,["matchesKeys"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_z2={[KeyboardShortcutEvent]=1,[Event]=1}_C_z3={"Event"}_C_z5={}_C_z6={}function _C_z7(self,super)return function(_C_self_passed,path,overwrite)
		path = resolve( path )
		local exists = fs.exists( path )
		if overwrite and exists then
			fs.delete( path )
			exists = false
		end

		if not exists then
			fs.makeDir( path )
		end
		return Folder( path )
	end end
_C_z8={["make"]={_C_z7,},["purgeOldCache"]={[2]=_C_MQ,},["exists"]={[2]=_C_MP,},["tidy"]={[2]=_C_MS,},["purgeCached"]={[2]=_C_MR,},["resolve"]={[2]=_C_MT,}}_C_z9={[Folder]=1,[_C_8R]=1,[FileSystemItem]=1,[_C_5H]=1}_C_zA={"FileSystemItem"}_C_zB={}_C_zC={["metadataPath"]={_C_Aq,"String (allowsNil)"},["parent"]={nil,"Any (allowsNil)"},["allItems"]={_C_At,"Table (allowsNil)"},["io"]={_C_At,"Table (allowsNil)"},["folders"]={_C_At,"Table (allowsNil)"},["metadata"]={_C_MY,"Metadata (allowsNil)"},["fs"]={_C_At,"Table (allowsNil)"},["icon"]={nil,"Any (allowsNil)"},["size"]={_C_CU,"Number (allowsNil)"},["name"]={_C_Ai,"String"},["extension"]={_C_Aq,"String (allowsNil)"},["path"]={_C_Ai,"String"},["association"]={nil,"Any (allowsNil)"},["parentPath"]={_C_Aq,"String (allowsNil)"},["items"]={_C_At,"Table (allowsNil)"},["sizeString"]={_C_Aq,"String (allowsNil)"},["openIcon"]={nil,"Any (allowsNil)"},["files"]={_C_At,"Table (allowsNil)"},["fullName"]={_C_Ai,"String"},}function _C_zD(self,super)return function(_C_self_passed,name,mimes,noSubfolders)
		local items = self.items
		local folders = {}
		if type( mimes ) == "string" then mimes = { mimes } end
		for i, fileSystemItem in ipairs( items ) do
			if fileSystemItem:typeOf( IEditableFileSystemItem ) then
				if --[[(]] name == fileSystemItem.name --[[ or name == fileSystemItem.fullName )]] then
					local mime = fileSystemItem.metadata.mime
					for i, _mime in ipairs( mimes ) do
						if _mime == mime then
							return fileSystemItem
						end
					end
				end
			end
			if not noSubfolders and fileSystemItem:typeOf( Folder ) then
				-- look through folders last
				table.insert( folders, fileSystemItem )
			end
		end

		for i, folder in ipairs( folders ) do
			local found = folder:find( name, mimes )
			if found then
				return found
			end
		end
	end end
function _C_zE(self,super)return function(_C_self_passed,noFiles,noFolders)
		local items = {}
		local path = self.path
		for i, name in ipairs( fs.list( path ) ) do
			if name ~= ".DS_Store" and name ~= ".metadata" then
				local item = FileSystemItem( path .. "/" .. name, self )
				if not ( noFolders and noFolders ) or ( noFiles and not item:typeOf( IEditableFileSystemItem ) ) or ( noFolders and not item:typeOf( Folder ) ) then
					table.insert( items, item )
				end
			end
		end
		return items
	end end
function _C_zF(self,super)return function(_C_self_passed,path)
		return FileSystemItem( self.path .. tidy( "/" .. path ) )
	end end
function _C_zG(self,super)return function(_C_self_passed,path)
		return File( self.path .. tidy( "/" .. path ) )
	end end
function _C_zH(self,super)return function(_C_self_passed,path,overwrite)if _C_Ai(path)then _C_F(self,"path","makeSubfolder","String",path)end if overwrite==nil then overwrite=false  end if _C_Cp(overwrite)then _C_F(self,"overwrite","makeSubfolder","Boolean",overwrite)end 
		return Folder.static:make( self.path .. tidy( "/" .. path ), overwrite )
	end end
function _C_zI(self,super)return function(_C_self_passed,flatten,metadataProperties)
		local allItems = {}

		local path = self.path
		for i, name in ipairs( fs.list( path ) ) do
			local item = FileSystemItem( path .. "/" .. name, self )
			if item then
				local itemName = item.name
				local isFolder = item:typeOf( Folder )
				if not isFolder or not flatten then
					if flatten and allItems[flatten and itemName or name] then
						allItems[flatten and itemName or name][item.metadata.mime] = item.contents
					else
						allItems[flatten and itemName or name] = flatten and {[item.metadata.mime] = item.contents} or { isFolder and {} or item.contents, item.metadata:serialise( metadataProperties ) }
					end
				end
				if isFolder then
					local subItems = item:serialise( flatten, metadataProperties )
					if flatten and not item:typeOf( Bundle ) then
						for k, subItem in pairs( subItems ) do
							-- if flatten then
								allItems[k] = subItem--{ subItem., item.metadata:serialise() }
							-- else
								-- allItems[name][1][subItem.fullName] = { item, item.metadata:serialise() }
							-- end
						end
					else
						allItems[name][1] = subItems
					end
				end
			end
		end

		return allItems
	end end
function _C_zJ(self,super)return function(_C_self_passed,path,overwrite,isResourcePackage)
		return Package.static:make( path, overwrite, self, isResourcePackage )
	end end
function _C_zK(self,super)return function(_C_self_passed,mime,noSubfolders)if _C_Ai(mime)then _C_F(self,"mime","findAll","String",mime)end if noSubfolders==nil then noSubfolders=false  end if _C_Cp(noSubfolders)then _C_F(self,"noSubfolders","findAll","Boolean",noSubfolders)end 
		local found = {}
		local n = 1
		for i, fileSystemItem in ipairs( self.items ) do
			if not noSubfolders and fileSystemItem:typeOf( Folder ) then
				for i, item in ipairs( fileSystemItem:findAll( mime ) ) do
					found[n] = item
					n = n + 1
				end
			end
			if fileSystemItem.metadata.mime == mime then
				found[n] = fileSystemItem
				n = n + 1
			end
		end
		return found
	end end
function _C_zL(self,super)return function(_C_self_passed,path)
		return Folder( self.path .. tidy( "/" .. path ) )
	end end
function _C_zM(self,super)return function(_C_self_passed,path,mime,overwrite,contents)if _C_Ai(path)then _C_F(self,"path","makeSubfile","String",path)end if _C_sj(mime)then _C_F(self,"mime","makeSubfile","Metadata.mimes",mime)end if overwrite==nil then overwrite=false end if _C_Cp(overwrite)then _C_F(self,"overwrite","makeSubfile","Boolean",overwrite)end if _C_Aq(contents)then _C_F(self,"contents","makeSubfile","String (allowsNil)",contents)end 
		return File.static:make( self.path .. tidy( "/" .. path ), mime, overwrite, contents )
	end end
_C_zN={["initialise"]={[2]=_C_MZ,},["folderFromPath"]={_C_zL,},["getItems"]={_C_zE,},["rename"]={[2]=_C_Ma,},["findAll"]={_C_zK,},["fileFromPath"]={_C_zG,},["open"]={[2]=_C_Me,},["package"]={_C_zJ,},["delete"]={[2]=_C_Mb,},["makeSubfile"]={_C_zM,},["makeSubfolder"]={_C_zH,},["serialise"]={_C_zI,},["itemFromPath"]={_C_zF,},["copyTo"]={[2]=_C_Mc,},["moveTo"]={[2]=_C_Md,},["find"]={_C_zD,}}function _C_zO(self,super)return function(_C_self_passed)
		local _io = self.io
		if _io then return _io end
		_io = {
			input = io.input;
			output = io.output;
			type = io.type;
			close = io.close;
			write = io.write;
			flush = io.flush;
			lines = io.lines;
			read = io.read;
		}

		function _io.open( path, ... )
			return io.open( resolve( path), ... )
		end

		self.raw.io = _io
		return _io
	end end function _C_zP(self,super)return function(_C_self_passed)
		return self:getItems( false, false )
	end end function _C_zQ(self,super)return function(_C_self_passed)
		local list, getSize, isDir = fs.list, fs.getSize, fs.isDir
		local function sizeDir( path )
			local size = 0
			for i, fileName in ipairs( list( path ) ) do
				local p = path .. "/" .. fileName
				if isDir( p ) then
					size = size + sizeDir( p )
				else
					size = size + getSize( p )
				end
			end
			return size
		end
		return sizeDir( self.path )
	end end function _C_zR(self,super)return function(_C_self_passed)
		return self:getItems( true, false )
	end end function _C_zS(self,super)return function(_C_self_passed)
		local cache = self.icon
		if cache then return cache end

		local icon = FolderIcon.static:fromFolder( self )
		self.icon = icon
		return icon
	end end function _C_zT(self,super)return function(_C_self_passed)
		local _fs = self.fs
		if _fs then return _fs end
		_fs = {
			combine = fs.combine;
			getDir = fs.getDir;
			getName = fs.getName;
			getDrive = fs.getDrive;
		}

		local relativePath = self.path
		local function resolve( path )
			return relativePath .. tidy( "/" .. path )
		end

		local resolvefunctions = { "list"; "exists"; "isDir"; "isReadOnly"; "getSize"; "getFreeSpace"; "makeDir"; "delete"; "open"; "find"; } -- TODO: will find will work
		for i, name in ipairs( resolvefunctions ) do
			local func = fs[name]
			_fs[name] = function ( path, ... )
				path = path and resolve( path ) or path
				return func( path, ... )
			end
		end

		local doubleResolvefunctions = { "copy"; "move"; }
		for i, name in ipairs( doubleResolvefunctions ) do
			local func = fs[name]
			_fs[name] = function ( fromPath, toPath, ... )
				return func( resolve( fromPath ), resolve( toPath ), ... )
			end
		end

		-- function _fs.combine( partial, path, ... )
		--	   return fs.combine( partial, resolve( path), ... )
		-- end

		self.raw.fs = _fs
		return _fs
	end end function _C_zU(self,super)return function(_C_self_passed)
		return self:getItems( false, true )
	end end function _C_zV(self,super)return function(_C_self_passed)
		local cache = self.openIcon
		if cache then return cache end

		local openIcon = FolderIcon.static:fromFolder( self, true )
		self.openIcon = openIcon
		return openIcon
	end end _C_zW={set={["size"]={[2]=_C_Mo},["sizeString"]={[2]=_C_Mp},["parent"]={[2]=_C_Mr},["path"]={[2]=_C_Mn},["parentPath"]={[2]=_C_Ms},["metadata"]={[2]=_C_Mq}},get={["openIcon"]={_C_zV},["size"]={_C_zQ,_C_Mh},["metadataPath"]={[2]=_C_Mk},["sizeString"]={[2]=_C_Mj},["io"]={_C_zO},["parent"]={[2]=_C_Ml},["items"]={_C_zP},["association"]={[2]=_C_Mg},["folders"]={_C_zR},["metadata"]={[2]=_C_Mi},["fs"]={_C_zT},["files"]={_C_zU},["icon"]={_C_zS,_C_Mm}}}_C_zX=setmetatable({["metadataPath"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["parent"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["allItems"]=_C_9x,["io"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["folders"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["metadata"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_MY(v)then _C_H(_,k,"Metadata (allowsNil)",v)end return v end end,["extension"]=_C_9x,["icon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["files"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["fs"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["association"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["path"]=_C_9x,["openIcon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["parentPath"]=_C_9x,["size"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["sizeString"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["fullName"]=_C_9x,["name"]=_C_9x,["items"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["initialise"]=_C_9x,["folderFromPath"]=_C_9x,["getItems"]=_C_9x,["rename"]=_C_9x,["findAll"]=_C_9x,["fileFromPath"]=_C_9x,["open"]=_C_9x,["package"]=_C_9x,["delete"]=_C_9x,["makeSubfile"]=_C_9x,["makeSubfolder"]=_C_9x,["serialise"]=_C_9x,["itemFromPath"]=_C_9x,["copyTo"]=_C_9x,["moveTo"]=_C_9x,["find"]=_C_9x},_C_9z)_C_zY=setmetatable({["metadataPath"]=_C_B0,["parent"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["allItems"]=_C_C,["io"]=_C_C,["folders"]=_C_C,["metadata"]=function(_,k,n,v,w,s,d,l)if _C_MY(n)then _C_D(_,k,"Metadata (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["extension"]=_C_B0,["icon"]=_C_Gr,["files"]=_C_C,["fs"]=_C_C,["association"]=_C_Gr,["path"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["openIcon"]=_C_C,["parentPath"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["size"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["sizeString"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["fullName"]=_C_B1,["name"]=_C_B1,["items"]=_C_C,["initialise"]=_C_7,["folderFromPath"]=_C_7,["getItems"]=_C_7,["rename"]=_C_7,["findAll"]=_C_7,["fileFromPath"]=_C_7,["open"]=_C_7,["package"]=_C_7,["delete"]=_C_7,["makeSubfile"]=_C_7,["makeSubfolder"]=_C_7,["serialise"]=_C_7,["itemFromPath"]=_C_7,["copyTo"]=_C_7,["moveTo"]=_C_7,["find"]=_C_7},_C_9z)_C_zZ={[Folder]=1,[FileSystemItem]=1}_C_za={"FileSystemItem"}_C_zc={}_C_zd={}_C_ze={[ConstructionClassException]=1,[_C_8T]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_zf={"ClassException","FatalException","Exception"}_C_zg={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_zh={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_zi(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Error occured during class construction: " .. message
		super( message, level )
	end end
_C_zj={["initialise"]={_C_zi,[4]=_C_ED,}}_C_zk=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_zl=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_zm={[ConstructionClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_zn={"ClassException","FatalException","Exception"}_C_zp={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"left\"\
\9\
\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_zq={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_zr(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 4, 1 )
		path:lineTo( 4, 3 )
		path:lineTo( 7, 3 )
		path:lineTo( 7, 5 )
		path:lineTo( 4, 5 )
		path:lineTo( 4, 7 )
		path:lineTo( 1, 4 )
		path:close()

		super( path )
	end end
_C_zs={["initialise"]={_C_zr,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_zt=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_zu=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_zv={[LeftSymbol]=1,[_C_8V]=1,[Symbol]=1,[_C_34]=1}_C_zw={"Symbol"}_C_zx={}_C_zy={}_C_zz={[LeftSymbol]=1,[Symbol]=1}_C_000={"Symbol"}_C_002={}_C_003={}_C_004={[ValidationException]=1,[_C_9e]=1,[Exception]=1,[_C_5t]=1}_C_005={"Exception"}_C_006={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_007={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_008(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Value validation exception: " .. message
		super( message, level )
	end end
_C_009={["initialise"]={_C_008,_C_ED,}}_C_00A=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_00B=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_00C={[ValidationException]=1,[Exception]=1}_C_00D={"Exception"}_C_00F={}_C_00G={}_C_00H={[UnknownTypeValidationException]=1,[_C_8b]=1,[ValidationException]=1,[_C_9e]=1,[Exception]=1,[_C_5t]=1}_C_00I={"ValidationException","Exception"}_C_00J={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_00K={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_00L={["initialise"]={[2]=_C_008,[3]=_C_ED,}}_C_00M=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_00N=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_00O={[UnknownTypeValidationException]=1,[ValidationException]=1,[Exception]=1}_C_00P={"ValidationException","Exception"}setmetatable(IAutomaticLayout,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_8c end})_C_00R={}_C_00S={}_C_00T={[TextMask]=1,[_C_8e]=1,[Mask]=1,[_C_36]=1}_C_00U={"Mask"}_C_00V={}_C_00W={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_00Y(v)return not _C_A1[v] end function _C_00X(self,super)return function(_C_self_passed,x,y,width,height,text,font,alignment)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_CU(width)then _C_F(self,"width","initialise","Number (allowsNil)",width)end if _C_CU(height)then _C_F(self,"height","initialise","Number (allowsNil)",height)end if _C_Ai(text)then _C_F(self,"text","initialise","String",text)end if font==nil then font=Font.static.systemFont end if _C_BO(font)then _C_F(self,"font","initialise","Font",font)end if alignment==nil then alignment=Font.alignments.LEFT  end if _C_00Y(alignment)then _C_F(self,"alignment","initialise","Font.alignments",alignment)end 
		local fontWidth = font:getWidth( text )
		local width = width or fontWidth
		local fontHeight = font.height
		local height = height or fontHeight
		local pixels = {}
		local hasEllipsis = false
		local scale, characters, desiredHeight, spacing = font.scale, font.characters, font.desiredHeight, font.spacing

		while fontWidth > width and #text > 1 do
			text = text:sub( 1, #text - 1 )
			fontWidth = font:getWidth( text .. "..." )
			hasEllipsis = true
		end

		if hasEllipsis then
			text = text .. "..."
		end

		local xShift = 0
		if alignment == alignments.LEFT then
		elseif alignment == alignments.CENTRE then
			xShift = math.floor( (width - fontWidth ) / 2 )
		elseif alignment == alignments.RIGHT then
			xShift = width - fontWidth
		end

		for i = 1, #text do
			local char = text:byte( i )
			local bitmap
			if characters[char] then
				bitmap = characters[char]
			else
				bitmap = NO_CHAR_MAP
				scale = desiredHeight / 6
			end

			local bitmapWidth = bitmap.width
			local characterWidth = floor( bitmapWidth * scale + 0.5 )
			if scale < 1 then
				-- a scaled down character
				for _x = 1, bitmapWidth do
					for _y = 1, fontHeight do
						if character[_y] and character[_y][_x] then
							pixels[ ( ceil( _y * scale - 0.5 ) - 1 ) * width + ceil( ( _x + xShift ) * scale - 0.5 ) ] = true
						end
					end
				end
			else
				-- TODO: why is ceil used not rounding for font scaling?
				for _y = 1, desiredHeight do
					local bitmapRow = bitmap[ceil( _y / scale )]
					if bitmapRow then
						for _x = 1, characterWidth do
							if bitmapRow[ceil( _x / scale )] then
								pixels[ ( _y - 1 ) * width + ( _x + xShift ) ] = true
							end
						end
					end
				end
			end
			xShift = xShift + characterWidth + spacing * scale
		end
	   
		super( x, y, width, height, pixels )
	end end
_C_00Z={["initialise"]={_C_00X,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_00a=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_00b=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_00c={[TextMask]=1,[Mask]=1}_C_00d={"Mask"}_C_00f={}_C_00g={}_C_00h={[SeparatorMask]=1,[_C_8g]=1,[Mask]=1,[_C_36]=1}_C_00i={"Mask"}_C_00j={}_C_00k={["x"]={_C_Ar,"Number"},["pixels"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["width"]={_C_Ar,"Number"},}function _C_00l(self,super)return function(_C_self_passed,x,y,width,height)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(width)then _C_F(self,"width","initialise","Number",width)end if _C_Ar(height)then _C_F(self,"height","initialise","Number",height)end 
		local pixels = {}
		local i = 1
		for y = 1, height do
			if y % 2 == 1 then
				for x = 1, width do
					pixels[(y - 1) * width + x] = x % 2 == 1
				end
			end
		end

		super( x, y, width, height, pixels )
	end end
_C_00m={["initialise"]={_C_00l,_C_CR,},["exclude"]={[2]=_C_CS,},["subtract"]={[2]=_C_CV,},["intersect"]={[2]=_C_CW,},["add"]={[2]=_C_CX,}}_C_00n=setmetatable({["x"]=_C_9x,["pixels"]=_C_9x,["y"]=_C_9x,["height"]=_C_9x,["width"]=_C_9x,["initialise"]=_C_9x,["exclude"]=_C_9x,["subtract"]=_C_9x,["intersect"]=_C_9x,["add"]=_C_9x},_C_9z)_C_00o=setmetatable({["x"]=_C_B2,["pixels"]=_C_Ax,["y"]=_C_B2,["height"]=_C_B2,["width"]=_C_B2,["initialise"]=_C_7,["exclude"]=_C_7,["subtract"]=_C_7,["intersect"]=_C_7,["add"]=_C_7},_C_9z)_C_00p={[SeparatorMask]=1,[Mask]=1}_C_00q={"Mask"}_C_00s={}_C_00t={}_C_00u={["fromInterface"]={[3]=_C_Ke,}}_C_00v={[TreeNode]=1,[_C_8i]=1,[ITreeChild]=1,[IDragDropDestination]=1,[LayoutContainer]=1,[_C_3b]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_00w={"LayoutContainer","Container","View"}_C_00x={["x"]=loadstring("return 1\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["isLayoutLocked"]=loadstring("return false\
\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["dontAnimateLayoutUpdate"]=loadstring("return false\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["canRemove"]=loadstring("return true\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["canRearrange"]=loadstring("return true\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["isFolded"]=loadstring("return false\
\9\
"),["dropStyle"]=loadstring("return DragDropManager.dropStyles.RETURN\
\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_00y={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["maxHeight"]={_C_CU,"Number (allowsNil)"},["removingIndex"]={_C_CU,"Number (allowsNil)"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["dontAnimateLayoutUpdate"]={_C_Cp,"Boolean"},["canRearrange"]={_C_Cp,"Boolean"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["offsetY"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["minHeight"]={_C_CU,"Number (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isFolded"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["isFocusDismissable"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["dropStyle"]={_C_f5,"DragDropManager.dropStyles"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["eventManager"]={_C_Da,"EventManager"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["canRemove"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["animations"]={_C_An,"Table"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["x"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["isMouseInView"]={_C_Cp,"Boolean"},["isLayoutLocked"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["childPins"]={_C_An,"Table"},["children"]={_C_An,"Table"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_00z(self,super)return function(_C_self_passed,...)
		super( ... )

		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		-- self:event( HeldMouseEvent, self.onMouseHeld )
	    self:event( EnteredInterfaceMouseEvent, self.onMouseEnteredOrMoved )
	    self:event( MoveMouseEvent, self.onMouseEnteredOrMoved )
	end end
function _C_010(self,super)return function(_C_self_passed,event,phase)if _C_FM(event)then _C_F(self,"event","onMouseDown","DownMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDown","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			local theme = self.theme
			if event.y <= self.minHeight then
				self.isPressed = not self.isPressed
				return true
			end
		end
	end end
function _C_011(self,super)return function(_C_self_passed,event,phase)if _C_FB(event)then _C_F(self,"event","onGlobalMouseUp","UpMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onGlobalMouseUp","Event.phases",phase)end 
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled and self:hitTestEvent( event ) then
				self.isFolded = not self.isFolded
				self.eventManager:handleEvent( ActionInterfaceEvent( self ) )
				local result = self.eventManager:handleEvent( event )
				return result == nil and true or result
			end
			return true
		end
	end end
function _C_012(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropMoved","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropMoved","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropMoved","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropMoved","Number",y)end 
		if not self.removingIndex then
			local _, selfY = self:getPosition()
			local treeItem = data.treeItem
			local children = self.children
			local index = math.max( math.min( math.floor( ( dragView.y - selfY - self.minHeight - self.theme:value( "childrenMarginTop" ) ) / treeItem.height + 1.5 ), #children), 1 )
			if treeItem.index ~= index then
				treeItem.index = index
				self.needsLayoutUpdate = true
			end
		end
	end end
function _C_013(self,super)return function(_C_self_passed)
		local width, theme, canvas, font = self.width, self.theme, self.canvas
		local font, leftMargin, rightMargin, topMargin, bottomMargin = theme:value( "font" ), theme:value( "leftMargin" ), theme:value( "rightMargin" ), theme:value( "topMargin" ), theme:value( "bottomMargin" )
		local height = topMargin + font.height + bottomMargin

		canvas:fill( theme:value( "textColour" ),  TextMask( leftMargin + 1, topMargin + 1, width - leftMargin - rightMargin, height - topMargin - bottomMargin, self.text, font ) )

		local symbol = theme:value( "symbol" )
	    canvas:fill( theme:value( "symbolColour" ), SymbolMask( 1 + theme:value( "leftSymbolMargin" ), 1 + math.floor( ( height - symbol.height ) / 2 ), symbol ) )
	end end
function _C_014(self,super)return function(_C_self_passed,data,isMove,x,y)if _C_FT(data)then _C_F(self,"data","dragDropDropped","ClipboardData",data)end if _C_Cp(isMove)then _C_F(self,"isMove","dragDropDropped","Boolean",isMove)end if _C_Ar(x)then _C_F(self,"x","dragDropDropped","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropDropped","Number",y)end 
	end end
function _C_015(self,super)return function(_C_self_passed)
		local theme = self.theme
		theme.style = self.isEnabled and ( self.isFolded and ( self.isPressed and "foldedPressed" or "folded" ) or ( self.isPressed and "pressed" or "default" ) ) or "disabled"
		self.minHeight = theme:value( "topMargin" ) + theme:value( "font" ).height + theme:value( "bottomMargin" )
		self.needsLayoutUpdate = true
	end end
function _C_016(self,super)return function(_C_self_passed,dontAnimate)if dontAnimate==nil then dontAnimate=self.dontAnimateLayoutUpdate  end if _C_Cp(dontAnimate)then _C_F(self,"dontAnimate","updateLayout","Boolean",dontAnimate)end 
		local width, theme = self.width, self.theme
		local childrenMarginLeft = theme:value( "childrenMarginLeft" )
		local childTopMargin, childBottomMargin = theme:value( "childTopMargin" ), theme:value( "childBottomMargin" )
		local y = 1 + self.minHeight + theme:value( "childrenMarginTop" )

		local time, easing
		if not dontAnimate then
			time = theme:value( "animationDuration" )
			easing = theme:value( "animationEasing" )
		end
		for i, childView in ipairs( self.children ) do
			if dontAnimate then
				childView.y = y + childTopMargin
			else
				childView:animate( "y", y + childTopMargin, time, nil, easing )
			end
			childView.x = 1 + childrenMarginLeft
			childView.width = width - childrenMarginLeft
			y = y + ( childView:typeOf( TreeNode ) and ( ( childView.isFolded and childView.minHeight or childView.maxHeight) or 0 ) or childView.height ) + childTopMargin + childBottomMargin
		end

		local maxHeight = y + theme:value( "bottomMargin" ) - 1 + theme:value( "childrenMarginBottom" )
		self.maxHeight = maxHeight
		local height = self.isFolded and self.minHeight or maxHeight
		if dontAnimate then
			self.height = height
		else
			self:animate( "height", height, time, nil, easing )
		end

		self.dontAnimateLayoutUpdate = false
		self.needsLayoutUpdate = false
	end end
function _C_017(self,super)return function(_C_self_passed,data,isMove)if _C_FT(data)then _C_F(self,"data","canAcceptDragDrop","ClipboardData",data)end if _C_Cp(isMove)then _C_F(self,"isMove","canAcceptDragDrop","Boolean",isMove)end 
		return self.canRearrange and data:typeOf( TreeClipboardData )
	end end
function _C_018(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
		if not event.childView:typeOf( ITreeChild ) then
			error( "Attempted to add view '" .. tostring( event.childView ) .. "' that does not extend ITreeChild to '" .. tostring( self ) .. "'", 0 )
		end
		self.needsLayoutUpdate = true
		self.dontAnimateLayoutUpdate = true
	end end
function _C_019(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropExited","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropExited","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropExited","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropExited","Number",y)end 
		if self.canRemove then
			self.removingIndex = dragView.index
			self:remove( data.treeItem )
			dragView.cursor = DeleteCursor.static
		end
	end end
function _C_01A(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseEnteredOrMoved","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseEnteredOrMoved","Event.phases",phase)end 
		local currentCursor = self.cursor
		local newCursor = cursor
		if event.y <= self.minHeight then
			newCursor = clickableCursor
		end
		if currentCursor ~= newCursor then
			self.cursor = newCursor
		end
	end end
function _C_01B(self,super)return function(_C_self_passed,data,dragView,x,y)if _C_FT(data)then _C_F(self,"data","dragDropEntered","ClipboardData",data)end if _C_f8(dragView)then _C_F(self,"dragView","dragDropEntered","DragView",dragView)end if _C_Ar(x)then _C_F(self,"x","dragDropEntered","Number",x)end if _C_Ar(y)then _C_F(self,"y","dragDropEntered","Number",y)end 
		if self.canRemove then
			local removingIndex = self.removingIndex
			if removingIndex then
				self:insert( data.treeItem, removingInde )
				self.dontAnimateLayoutUpdate = false
				dragView.cursor = nil
			end

			self.removingIndex = nil
		end
	end end
_C_01C={["updateLayout"]={_C_016,_C_Ld,},["onReadyLoadInterface"]={[3]=_C_Kk,},["dragDropMoved"]={_C_012,},["dispose"]={[3]=_C_L1,[4]=_C_FK,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[2]=_C_Lc,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["onMouseDown"]={_C_010,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["updateThemeStyle"]={_C_015,},["canAcceptDragDrop"]={_C_017,},["hitTest"]={[4]=_C_FX,},["addFocus"]={[4]=_C_FQ,},["dragDropExited"]={_C_019,},["sendToBack"]={[3]=_C_LD,},["animateResize"]={[4]=_C_FW,},["onMouseEnteredOrMoved"]={_C_01A,},["findChild"]={[3]=_C_Km,},["updatePins"]={[3]=_C_Kn,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onChildOfChildRemoved"]={[3]=_C_LA,},["onChildOfChildAdded"]={[3]=_C_Kp,},["dragDropDropped"]={_C_014,},["dragDropEntered"]={_C_01B,},["hitTestEvent"]={[4]=_C_FI,},["initialiseCanvas"]={[4]=_C_F6,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["unfocus"]={[4]=_C_F7,},["insert"]={[3]=_C_Kw,},["initialise"]={_C_00z,_C_LY,_C_Kx,_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["onGlobalMouseUp"]={_C_011,},["focus"]={[4]=_C_F5,},["onChildRemoved"]={[2]=_C_La,},["getCoordinates"]={[4]=_C_F3,},["onDraw"]={_C_013,[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["onReady"]={[2]=_C_LZ,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["onChildAdded"]={_C_018,_C_Lb,},["draw"]={[3]=_C_LC,[4]=_C_F9,},["disposeAll"]={[3]=_C_L3,}}function _C_01D(self,super)return function(_C_self_passed,isEnabled)
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end end function _C_01E(self,super)return function(_C_self_passed,isPressed)
		self.isPressed = isPressed
		self:updateThemeStyle()
	end end function _C_01F(self,super)return function(_C_self_passed,width)
	    super:super( width )
		local childrenMarginLeft = self.theme:value( "childrenMarginLeft" )
		for i, childView in ipairs( self.children ) do
			childView.width = width - childrenMarginLeft
		end
	end end function _C_01G(self,super)return function(_C_self_passed,isFolded)
	    self.isFolded = isFolded
		self:updateThemeStyle()
	    local height = isFolded and self.minHeight or self.maxHeight
	    if height then
		    local theme = self.theme
			self:animate( "height", height, theme:value( "animationDuration" ), nil, theme:value( "animationEasing" ) )
		end
		local parent = self.parent
		if parent then
			parent.needsLayoutUpdate = true
		end
	end end function _C_01H(self,super)return function(_C_self_passed,needsLayoutUpdate)
	    self.needsLayoutUpdate = needsLayoutUpdate
		local parent = self.parent
		if parent then
			parent.needsLayoutUpdate = true
		end
	end end function _C_01I(self,super)return function(_C_self_passed,height)
	    super:super( height )
	end end function _C_01J(self,super)return function(_C_self_passed,text)
		self.text = text
		self.needsDraw = true
	end end _C_01K={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isPressed"]={_C_01E},["isFocused"]={[4]=_C_Fi},["needsLayoutUpdate"]={_C_01H},["width"]={_C_01F,_C_Lg,_C_LF,_C_Fg},["topPin"]={[4]=_C_Fj},["shadowSize"]={[4]=_C_Fs},["height"]={_C_01I,_C_Lf,_C_LI,_C_Fr},["text"]={_C_01J},["rightPin"]={[4]=_C_Fk},["isEnabled"]={_C_01D,[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["isFolded"]={_C_01G},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_01L=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["isLayoutLocked"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["dontAnimateLayoutUpdate"]=_C_9x,["isCanvasHitTested"]=_C_9x,["cursorLastY"]=_C_9x,["offsetY"]=_C_9x,["canRearrange"]=_C_9x,["dropStyle"]=_C_9x,["minHeight"]=_C_9x,["isMouseInView"]=_C_9x,["removingIndex"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["maxHeight"]=_C_9x,["isFolded"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["canRemove"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dragDropMoved"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["onMouseDown"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["updateThemeStyle"]=_C_9x,["canAcceptDragDrop"]=_C_9x,["hitTest"]=_C_9x,["addFocus"]=_C_9x,["dragDropExited"]=_C_9x,["sendToBack"]=_C_9x,["animateResize"]=_C_9x,["onMouseEnteredOrMoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["dragDropDropped"]=_C_9x,["dragDropEntered"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["unfocus"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["focus"]=_C_9x,["onChildRemoved"]=_C_9x,["getCoordinates"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onReady"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["draw"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_01M=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLayoutLocked"]=_C_Cu,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["dontAnimateLayoutUpdate"]=_C_Cu,["isCanvasHitTested"]=_C_Cu,["cursorLastY"]=_C_LL,["offsetY"]=_C_B2,["canRearrange"]=_C_Cu,["dropStyle"]=_C_fM,["minHeight"]=_C_LL,["isMouseInView"]=_C_Cu,["removingIndex"]=_C_LL,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["maxHeight"]=_C_LL,["isFolded"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["canRemove"]=_C_Cu,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["dragDropMoved"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["onMouseDown"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["updateThemeStyle"]=_C_7,["canAcceptDragDrop"]=_C_7,["hitTest"]=_C_7,["addFocus"]=_C_7,["dragDropExited"]=_C_7,["sendToBack"]=_C_7,["animateResize"]=_C_7,["onMouseEnteredOrMoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildRemoved"]=_C_7,["onChildOfChildAdded"]=_C_7,["dragDropDropped"]=_C_7,["dragDropEntered"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["unfocus"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["onGlobalMouseUp"]=_C_7,["focus"]=_C_7,["onChildRemoved"]=_C_7,["getCoordinates"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onReady"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["draw"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_01N={[TreeNode]=1,[ITreeChild]=1,[IDragDropDestination]=1,[LayoutContainer]=1,[Container]=1,[View]=1}_C_01O={"LayoutContainer","Container","View"}_C_01Q={}_C_01R={}_C_01S={["make"]={[2]=_C_z7,},["purgeOldCache"]={[3]=_C_MQ,},["exists"]={[3]=_C_MP,},["tidy"]={[3]=_C_MS,},["purgeCached"]={[3]=_C_MR,},["resolve"]={[3]=_C_MT,}}_C_01T={[Bundle]=1,[_C_8o]=1,[Folder]=1,[_C_8R]=1,[FileSystemItem]=1,[_C_5H]=1}_C_01U={"Folder","FileSystemItem"}_C_01V={}_C_01W={["metadataPath"]={_C_Aq,"String (allowsNil)"},["parent"]={nil,"Any (allowsNil)"},["allItems"]={_C_At,"Table (allowsNil)"},["io"]={_C_At,"Table (allowsNil)"},["folders"]={_C_At,"Table (allowsNil)"},["metadata"]={_C_MY,"Metadata (allowsNil)"},["fs"]={_C_At,"Table (allowsNil)"},["icon"]={nil,"Any (allowsNil)"},["size"]={_C_CU,"Number (allowsNil)"},["name"]={_C_Ai,"String"},["extension"]={_C_Aq,"String (allowsNil)"},["fullName"]={_C_Ai,"String"},["path"]={_C_Ai,"String"},["association"]={nil,"Any (allowsNil)"},["parentPath"]={_C_Aq,"String (allowsNil)"},["openIcon"]={nil,"Any (allowsNil)"},["sizeString"]={_C_Aq,"String (allowsNil)"},["items"]={_C_At,"Table (allowsNil)"},["files"]={_C_At,"Table (allowsNil)"},["config"]={_C_An,"Table"},}_C_01X={["initialise"]={[3]=_C_MZ,},["folderFromPath"]={[2]=_C_zL,},["getItems"]={[2]=_C_zE,},["rename"]={[3]=_C_Ma,},["findAll"]={[2]=_C_zK,},["fileFromPath"]={[2]=_C_zG,},["open"]={[3]=_C_Me,},["package"]={[2]=_C_zJ,},["delete"]={[3]=_C_Mb,},["makeSubfile"]={[2]=_C_zM,},["makeSubfolder"]={[2]=_C_zH,},["serialise"]={[2]=_C_zI,},["itemFromPath"]={[2]=_C_zF,},["copyTo"]={[3]=_C_Mc,},["moveTo"]={[3]=_C_Md,},["find"]={[2]=_C_zD,}}function _C_01Y(self,super)return function(_C_self_passed,path)
		path = resolve( path )
		super( path )

		local configFile = self:find( "bundle", Metadata.mimes.SCONFIG, true )
		if not configFile then
			error( "Bundle is corrupt (no bundle.sconfig or file mime is incorrect)." )
		end

		local config = configFile.serialisedContents
		if not config then
			error( "Bundle is corrupt (bundle.sconfig could not be parsed)." )
		end

		self.config = config
	end end _C_01Z={set={["size"]={[3]=_C_Mo},["sizeString"]={[3]=_C_Mp},["parent"]={[3]=_C_Mr},["path"]={_C_01Y,[3]=_C_Mn},["parentPath"]={[3]=_C_Ms},["metadata"]={[3]=_C_Mq}},get={["openIcon"]={[2]=_C_zV},["size"]={[2]=_C_zQ,[3]=_C_Mh},["metadataPath"]={[3]=_C_Mk},["sizeString"]={[3]=_C_Mj},["io"]={[2]=_C_zO},["parent"]={[3]=_C_Ml},["items"]={[2]=_C_zP},["association"]={[3]=_C_Mg},["folders"]={[2]=_C_zR},["metadata"]={[3]=_C_Mi},["fs"]={[2]=_C_zT},["files"]={[2]=_C_zU},["icon"]={[2]=_C_zS,[3]=_C_Mm}}}_C_01a=setmetatable({["metadataPath"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["parent"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["allItems"]=_C_9x,["io"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["folders"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["metadata"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_MY(v)then _C_H(_,k,"Metadata (allowsNil)",v)end return v end end,["extension"]=_C_9x,["icon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["items"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["files"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["fs"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["association"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["path"]=_C_9x,["openIcon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["parentPath"]=_C_9x,["size"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["sizeString"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["fullName"]=_C_9x,["name"]=_C_9x,["config"]=_C_9x,["initialise"]=_C_9x,["folderFromPath"]=_C_9x,["getItems"]=_C_9x,["rename"]=_C_9x,["findAll"]=_C_9x,["fileFromPath"]=_C_9x,["open"]=_C_9x,["package"]=_C_9x,["delete"]=_C_9x,["makeSubfile"]=_C_9x,["makeSubfolder"]=_C_9x,["serialise"]=_C_9x,["itemFromPath"]=_C_9x,["copyTo"]=_C_9x,["moveTo"]=_C_9x,["find"]=_C_9x},_C_9z)_C_01b=setmetatable({["metadataPath"]=_C_B0,["parent"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["allItems"]=_C_C,["io"]=_C_C,["folders"]=_C_C,["metadata"]=function(_,k,n,v,w,s,d,l)if _C_MY(n)then _C_D(_,k,"Metadata (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["extension"]=_C_B0,["icon"]=_C_Gr,["items"]=_C_C,["files"]=_C_C,["fs"]=_C_C,["association"]=_C_Gr,["path"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["openIcon"]=_C_C,["parentPath"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["size"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["sizeString"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["fullName"]=_C_B1,["name"]=_C_B1,["config"]=_C_Ax,["initialise"]=_C_7,["folderFromPath"]=_C_7,["getItems"]=_C_7,["rename"]=_C_7,["findAll"]=_C_7,["fileFromPath"]=_C_7,["open"]=_C_7,["package"]=_C_7,["delete"]=_C_7,["makeSubfile"]=_C_7,["makeSubfolder"]=_C_7,["serialise"]=_C_7,["itemFromPath"]=_C_7,["copyTo"]=_C_7,["moveTo"]=_C_7,["find"]=_C_7},_C_9z)_C_01c={[Bundle]=1,[Folder]=1,[FileSystemItem]=1}_C_01d={"Folder","FileSystemItem"}_C_01f={}_C_01g={}_C_01h={[ScreenCanvas]=1,[_C_8q]=1,[Canvas]=1,[_C_3j]=1}_C_01i={"Canvas"}_C_01j={["screenBuffer"]=loadstring("return {}\
\
\
\9\
"),["drawsCorners"]=loadstring("return true\
\9\
"),["pixels"]=loadstring("return {}\
\
\9\
"),}_C_01k={["owner"]={_C_IM,"View (allowsNil)"},["width"]={_C_Ar,"Number"},["drawsCorners"]={_C_Cp,"Boolean"},["pixels"]={_C_An,"Table"},["mask"]={_C_F2,"Mask (allowsNil)"},["screenBuffer"]={_C_An,"Table"},["height"]={_C_Ar,"Number"},["contentMask"]={_C_F2,"Mask (allowsNil)"},}function _C_01l(self,super)return function(_C_self_passed,...)
		super( ... )
		self:fill( Graphics.colours.BLACK )
	end end
function _C_01m(self,super)return function(_C_self_passed,screen)
		if Quartz then
			Quartz:redraw( self.pixels )
		else
			local pixels, width, height, screenBuffer = self.pixels, self.width, self.height, self.screenBuffer
			-- draw the blacked out corners. this could be done using a Mask if the performance isn't too bad (considering it will be called every single draw)
			local corner = { 
				[1] = { [1] = true, [2] = true, [3] = true, [4] = true, [height - 3] = true, [height - 2] = true, [height - 1] = true, [height] = true },
				[2] = { [1] = true, [2] = true, [height - 1] = true, [height] = true },
				[3] = { [1] = true, [height] = true },
				[4] = { [1] = true, [height] = true },
				[width - 3] = { [1] = true, [height] = true },
				[width - 2] = { [1] = true, [height] = true },
				[width - 1] = { [1] = true, [2] = true, [height - 1] = true, [height] = true },
				[width] = { [1] = true, [2] = true, [3] = true, [4] = true, [height - 3] = true, [height - 2] = true, [height - 1] = true, [height] = true },
			}
			local blackColour = Graphics.colours.BLACK
			for x, v in pairs( corner ) do
				for y, v in pairs( v ) do
					pixels[ ( y - 1 ) * width + x ] = blackColour
				end
			end

			local blit = term.blit
			local hexes = { 
				[2^0] = "0",
				[2^1] = "1",
				[2^2] = "2",
				[2^3] = "3",
				[2^4] = "4",
				[2^5] = "5",
				[2^6] = "6",
				[2^7] = "7",
				[2^8] = "8",
				[2^9] = "9",
				[2^10] = "a",
				[2^11] = "b",
				[2^12] = "c",
				[2^13] = "d",
				[2^14] = "e",
				[2^15] = "f"
			}
			local currentLength, currentX, currentY, currentColour

			local sBC, sCP, w = term.setBackgroundColour, term.setCursorPos, term.write
			local function draw()
				if currentLength == 0 then return end
				sBC( currentColour )
				sCP( currentX, currentY )
				w( (" "):rep( currentLength ) )
			end

			for y = 1, self.height do
				currentY = y
				currentLength = 0
				currentColour = nil
				for x = 1, width do
				 local p = ( y - 1 ) * width + x
				 local c = pixels[p] or colour
				 if c ~= screenBuffer[p] then
					 screenBuffer[p] = c
					 if currentColour == c then
						 currentLength = currentLength + 1
					 else
						 draw()
						 currentLength = 1
						 currentX = x
						 currentColour = c
					 end
				 elseif currentLength ~= 0 then
					 draw()
					 currentLength = 0
					 currentColour = nil
				 else
					 currentColour = nil
				 end
				end
				draw()
				-- local changed = false
				-- local str = ""
				-- for x = 1, width do
				--	   local p = ( y - 1 ) * width + x
				--	   local c = pixels[p] or blackColour
				--	   str = str .. hexes[c]
				--	   if not changed and c ~= screenBuffer[p] then
				--		   changed = true
				--	   end
				-- end
				-- if changed then
				--	   term.setCursorPos(1,y)
				--	   blit(str)
				-- end
			end
		end
	end end
_C_01n={["initialise"]={_C_01l,_C_IN,},["outline"]={[2]=_C_IO,},["drawShadow"]={[2]=_C_IP,},["drawTo"]={[2]=_C_IQ,},["drawToScreen"]={_C_01m,},["transfer"]={[2]=_C_IR,},["image"]={[2]=_C_IS,},["toImage"]={[2]=_C_IT,},["fill"]={[2]=_C_IU,},["clear"]={[2]=_C_IV,},["hitTest"]={[2]=_C_IW,}}_C_01o={get={["mask"]={[2]=_C_IY},["contentMask"]={[2]=_C_IZ}}}_C_01p=setmetatable({["owner"]=_C_9x,["width"]=_C_9x,["drawsCorners"]=_C_9x,["pixels"]=_C_9x,["mask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["screenBuffer"]=_C_9x,["height"]=_C_9x,["contentMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["initialise"]=_C_9x,["outline"]=_C_9x,["drawShadow"]=_C_9x,["drawTo"]=_C_9x,["drawToScreen"]=_C_9x,["transfer"]=_C_9x,["image"]=_C_9x,["toImage"]=_C_9x,["fill"]=_C_9x,["clear"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_01q=setmetatable({["owner"]=_C_Ib,["width"]=_C_B2,["drawsCorners"]=_C_Cu,["pixels"]=_C_Ax,["mask"]=_C_Fy,["screenBuffer"]=_C_Ax,["height"]=_C_B2,["contentMask"]=_C_Fy,["initialise"]=_C_7,["outline"]=_C_7,["drawShadow"]=_C_7,["drawTo"]=_C_7,["drawToScreen"]=_C_7,["transfer"]=_C_7,["image"]=_C_7,["toImage"]=_C_7,["fill"]=_C_7,["clear"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_01r={[ScreenCanvas]=1,[Canvas]=1}_C_01s={"Canvas"}_C_01u={}_C_01v={}_C_01w={[QuartzSettings]=1,[_C_8s]=1,[Settings]=1,[_C_4C]=1}_C_01x={"Settings"}_C_01y={["isClockAnalogue"]=loadstring("return false\
\9\
"),["isClockTwentyFourHour"]=loadstring("return false\
\9\
"),["backgroundImagePath"]=loadstring("return \"/system/resources/Wallpapers/Europe/Arc de Triomphe.ucg\"\
\
\
    \
"),}_C_01z={["isClockAnalogue"]={_C_Cp,"Boolean"},["settingsFile"]={_C_H5,"File"},["defaults"]={_C_An,"Table"},["isClockTwentyFourHour"]={_C_Cp,"Boolean"},["backgroundImagePath"]={_C_Ai,"String"},}_C_020={["initialise"]={[2]=_C_RM,},["refresh"]={[2]=_C_RN,},["save"]={[2]=_C_RO,}}function _C_021(self,super)return function(_C_self_passed,backgroundImagePath)
        local container = self.application.container
        if container then
            local homeContainer = container.homeContainer 
            if homeContainer then
                homeContainer.backgroundImage = Image.static:fromPath( backgroundImagePath )
            end
        end
    end end _C_022={set={["backgroundImagePath"]={_C_021}}}_C_023=setmetatable({["backgroundImagePath"]=_C_9x,["settingsFile"]=_C_9x,["defaults"]=_C_9x,["isClockAnalogue"]=_C_9x,["isClockTwentyFourHour"]=_C_9x,["initialise"]=_C_9x,["refresh"]=_C_9x,["save"]=_C_9x},_C_9z)_C_024=setmetatable({["backgroundImagePath"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["settingsFile"]=_C_RQ,["defaults"]=_C_Ax,["isClockAnalogue"]=_C_Cu,["isClockTwentyFourHour"]=_C_Cu,["initialise"]=_C_7,["refresh"]=_C_7,["save"]=_C_7},_C_9z)_C_025={[QuartzSettings]=1,[Settings]=1}_C_026={"Settings"}_C_028={["eventType"]=loadstring("return \"mouse_move\";\
\
\9\
"),}_C_029={["eventType"]={_C_Ai,"String"},}_C_02A={["eventClasses"]=loadstring([[return {}

	
]])}_C_02B={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_02C=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_02D=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_02E={[MoveMouseEvent]=1,[_C_8u]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_02F={"MouseEvent","Event"}_C_02G={["globalY"]=loadstring("return 0\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToChildren"]=loadstring("return true \
\9\
"),}_C_02H={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["relativeView"]={_C_Cr,"View"},}function _C_02I(self,super)return function(_C_self_passed,x,y)if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end 
		self.x = x
		self.y = y
		self.globalX = x
		self.globalY = y
	end end
_C_02J={["initialise"]={_C_02I,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}_C_02K=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_02L=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_02M={[MoveMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_02N={"MouseEvent","Event"}_C_02P={}_C_02Q={}_C_02R={["fromInterface"]={[3]=_C_Ke,}}_C_02S={[SplashApplicationContainer]=1,[_C_8w]=1,[ApplicationContainer]=1,[_C_7H]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_02T={"ApplicationContainer","Container","View"}_C_02U={["width"]=loadstring("return w\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["cursorX"]=loadstring("return 6\
\9\
"),["themeName"]=loadstring("return \"default\"\
\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsCursorUpdate"]=loadstring("return true\
\9\
"),["offsetY"]=loadstring("return 0\
\9\
"),["cursorY"]=loadstring("return 6\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["height"]=loadstring("return h\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_02V={["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["children"]={_C_An,"Table"},["themeName"]={_C_Ai,"String"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["needsCursorUpdate"]={_C_Cp,"Boolean"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["width"]={_C_Ar,"Number"},["parent"]={_C_F1,"Container (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["eventManager"]={_C_Da,"EventManager"},["cursorY"]={_C_Ar,"Number"},["leftPin"]={_C_Aq,"String (allowsNil)"},["offsetY"]={_C_Ar,"Number"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["screenCanvas"]={_C_mP,"ScreenCanvas (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_02W(self,super)return function(_C_self_passed,...)
	    super( ... )
	    self:event( ReadyInterfaceEvent, self.onReady)
	end end
function _C_02X(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
	    -- self:animate( 'fillColour', { Graphics.colours.BLACK, Graphics.colours.GREY, Graphics.colours.LIGHT_GREY, Graphics.colours.WHITE }, 0.5, nil, Animation.easings.IN_SINE)
	    -- self.fillColour = colours.red
	    -- self.application:schedule(self.splashView.firstJump, 0.2, self.splashView)
	    -- self.application.interfaceName = "quartz"
	end end
_C_02Y={["getCoordinates"]={[4]=_C_F3,},["onReadyLoadInterface"]={[3]=_C_Kk,},["dispose"]={[2]=_C_mS,[3]=_C_L1,[4]=_C_FK,},["updateCursor"]={[2]=_C_mT,},["loadInterface"]={[3]=_C_Kr,},["findChildren"]={[3]=_C_Ks,},["clearFocus"]={[4]=_C_FP,},["update"]={[2]=_C_mX,[3]=_C_Kv,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[3]=_C_L5,},["sendToFront"]={[3]=_C_Ky,},["removeAll"]={[3]=_C_Kz,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["animate"]={[4]=_C_FV,},["sendToBack"]={[3]=_C_LD,},["onChildOfChildRemoved"]={[3]=_C_LA,},["findChild"]={[3]=_C_Km,},["initialiseCanvas"]={[2]=_C_mR,[4]=_C_F6,},["connectInterfaceLink"]={[3]=_C_Ko,},["getCoordinatesTo"]={[4]=_C_F8,},["onChildOfChildAdded"]={[3]=_C_Kp,},["hitTest"]={[4]=_C_FX,},["draw"]={[2]=_C_mU,[3]=_C_LC,[4]=_C_F9,},["addFocus"]={[4]=_C_FQ,},["onLoadedInterfacePinUpdate"]={[3]=_C_Kt,},["onMouseMoveCursorBefore"]={[2]=_C_mV,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["drawCursor"]={[2]=_C_mY,},["insert"]={[3]=_C_Kw,},["initialise"]={_C_02W,_C_mQ,_C_Kx,_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["onMouseDownAfter"]={[2]=_C_mZ,},["animateResize"]={[4]=_C_FW,},["updatePins"]={[3]=_C_Kn,},["onDraw"]={[3]=_C_L0,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[3]=_C_L2,[4]=_C_FO,},["onReady"]={_C_02X,},["remove"]={[3]=_C_L4,},["startDragDrop"]={[4]=_C_FR,},["onUpdateChildMouseEnterExit"]={[3]=_C_L7,},["unfocus"]={[4]=_C_F7,},["focus"]={[4]=_C_F5,},["disposeAll"]={[3]=_C_L3,}}_C_02Z={set={["x"]={[4]=_C_Fq},["needsVerticalPinUpdate"]={[3]=_C_LG},["y"]={[4]=_C_Fh},["needsHorizontalPinUpdate"]={[3]=_C_LJ},["leftPin"]={[4]=_C_Fm},["isFocused"]={[4]=_C_Fi},["theme"]={[2]=_C_mc},["themeName"]={[2]=_C_md},["shadowSize"]={[4]=_C_Fs},["height"]={[3]=_C_LI,[4]=_C_Fr},["width"]={[3]=_C_LF,[4]=_C_Fg},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_LH},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["topPin"]={[4]=_C_Fj},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[2]=_C_me,[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[2]=_C_mb,[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_02a=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["cursorY"]=_C_9x,["themeName"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["interfaceLinks"]=_C_9x,["height"]=_C_9x,["needsCursorUpdate"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["needsPinUpdate"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["screenCanvas"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["getCoordinates"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dispose"]=_C_9x,["updateCursor"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["sendToBack"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["initialiseCanvas"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["hitTest"]=_C_9x,["draw"]=_C_9x,["addFocus"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onMouseMoveCursorBefore"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["drawCursor"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["onMouseDownAfter"]=_C_9x,["animateResize"]=_C_9x,["updatePins"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onReady"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["unfocus"]=_C_9x,["focus"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_02b=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=function(_,k,n,v,w,s,d,l)if _C_Dc(n)then _C_D(_,k,"ThemeOutlet",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["cursorY"]=_C_B2,["themeName"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsCursorUpdate"]=_C_Cu,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=_C_B2,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsPinUpdate"]=_C_Cu,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["screenCanvas"]=_C_mg,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["getCoordinates"]=_C_7,["onReadyLoadInterface"]=_C_7,["dispose"]=_C_7,["updateCursor"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["sendToBack"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["initialiseCanvas"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onChildOfChildAdded"]=_C_7,["hitTest"]=_C_7,["draw"]=_C_7,["addFocus"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onMouseMoveCursorBefore"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["drawCursor"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["onMouseDownAfter"]=_C_7,["animateResize"]=_C_7,["updatePins"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onReady"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["unfocus"]=_C_7,["focus"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_02c={[SplashApplicationContainer]=1,[ApplicationContainer]=1,[Container]=1,[View]=1}_C_02d={"ApplicationContainer","Container","View"}_C_02f={}_C_02g={}_C_02h={[HomeItem]=1,[_C_8y]=1,[TopBarItem]=1,[_C_9Y]=1,[View]=1,[_C_3N]=1}_C_02i={"TopBarItem","View"}_C_02j={["cursor"]=loadstring("return ClickableCursor.static\
\
\
    \
"),["x"]=loadstring("return 1\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isRemoving"]=loadstring("return false\
\9\
"),["pin"]=loadstring("return TopBarItem.pins.LEFT\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["isSeparatorVisible"]=loadstring("return true\
\
    \
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["size"]=loadstring("return 29\
\
    \
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["height"]=loadstring("return 14\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_02l(v)if v==nil then return false end local j=_C_L[v]return not(j and j[HomeContainer])end  _C_02k={["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["homeContainer"]={_C_02l,"HomeContainer (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["isRemoving"]={_C_Cp,"Boolean"},["siblings"]={_C_At,"Table (allowsNil)"},["pin"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["animations"]={_C_An,"Table"},["needsDraw"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["size"]={_C_CU,"Number (allowsNil)"},["width"]={_C_Ar,"Number"},["isMouseInView"]={_C_Cp,"Boolean"},["specialMouseTimes"]={_C_An,"Table"},["isSeparatorVisible"]={_C_Cp,"Boolean"},["topPin"]={_C_Aq,"String (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["rightPin"]={_C_Aq,"String (allowsNil)"},["y"]={_C_Ar,"Number"},}function _C_02m(self,super)return function(_C_self_passed,...)
        super( ... )
        self:event( ActionInterfaceEvent, self.onAction )
        self:event( ReadyInterfaceEvent, self.onReady )
    end end
function _C_02n(self,super)return function(_C_self_passed,event,phase)if _C_dZ(event)then _C_F(self,"event","onAction","ActionInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onAction","Event.phases",phase)end 
       self.homeContainer:focus() 
    end end
function _C_02o(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
        self.homeContainer = self.application.container.homeContainer
    end end
function _C_02p(self,super)return function(_C_self_passed)
        super()
        local canvas, theme = self.canvas, self.theme
        local symbol = theme:value( "symbol" )
        local leftMargin = theme:value( "leftMargin" )
        canvas:fill( theme:value( "contentColour" ), SymbolMask( 1 + leftMargin, 1 + math.floor( ( self.height - symbol.height ) / 2 ), symbol ) )
    end end
_C_02q={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onAction"]={_C_02n,},["clearFocus"]={[3]=_C_FP,},["addFocus"]={[3]=_C_FQ,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={_C_02m,_C_dA,_C_FG,},["onMouseDown"]={[2]=_C_dE,},["onGlobalMouseUp"]={[2]=_C_dC,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["animateResize"]={[3]=_C_FW,},["onDraw"]={_C_02p,_C_dD,_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_dB,},["onReady"]={_C_02o,},["startDragDrop"]={[3]=_C_FR,},["dispose"]={[3]=_C_FK,},["hitTestEvent"]={[3]=_C_FI,},["siblingsOfType"]={[3]=_C_FH,},["hitTest"]={[3]=_C_FX,}}_C_02r={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isPressed"]={[2]=_C_dG},["isFocused"]={[3]=_C_Fi},["isSeparatorVisible"]={[2]=_C_dH},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["width"]={[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}function _C_02s(_,k,n,v)if _C_02l(n)then _C_D(_,k,"HomeContainer (allowsNil)",n)end v[k]=n end _C_02t=setmetatable({["parent"]=_C_9x,["isPressed"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["homeContainer"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["isRemoving"]=_C_9x,["topPin"]=_C_9x,["pin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSeparatorVisible"]=_C_9x,["animations"]=_C_9x,["parsedPins"]=_C_9x,["eventManager"]=_C_9x,["size"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onAction"]=_C_9x,["clearFocus"]=_C_9x,["addFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["animateResize"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["onReady"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_02u=setmetatable({["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["homeContainer"]=_C_02s,["isEnabled"]=_C_Cu,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isRemoving"]=_C_Cu,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["pin"]=_C_B2,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["shadowMask"]=_C_Fy,["isSeparatorVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["animations"]=_C_Ax,["parsedPins"]=_C_Ax,["eventManager"]=_C_Dm,["size"]=_C_LL,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onAction"]=_C_7,["clearFocus"]=_C_7,["addFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["animateResize"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["onReady"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_02v={[HomeItem]=1,[TopBarItem]=1,[View]=1}_C_02w={"TopBarItem","View"}_C_02y={}_C_02z={}_C_030={[DragDropManager]=1,[_C_90]=1}_C_031={}function _C_033(v)if v==nil then return false end local j=_C_L[v]return not(j and j[DragView])end  function _C_034(v)if v==nil then return false end local j=_C_L[v]return not(j and j[ClipboardData])end  function _C_035(v)local j=_C_L[v]return not(j and j[Application])end  _C_032={["sourceViews"]={_C_At,"Table (allowsNil)"},["completion"]={_C_FE,"Function (allowsNil)"},["dragView"]={_C_033,"DragView (allowsNil)"},["data"]={_C_034,"ClipboardData (allowsNil)"},["isMove"]={_C_F0,"Boolean (allowsNil)"},["relativeY"]={_C_CU,"Number (allowsNil)"},["destination"]={_C_IM,"View (allowsNil)"},["owner"]={_C_035,"Application"},["relativeX"]={_C_CU,"Number (allowsNil)"},}function _C_036(self,super)return function(_C_self_passed,owner)
		self.owner = owner
		owner:event( DragMouseEvent, self.onMouseDrag, nil, nil, self )
		owner:event( UpMouseEvent, self.onMouseUp, nil, nil, self )
	end end
function _C_037(self,super)return function(_C_self_passed)
		local dragView = self.dragView
		if dragView then
			local time, easing = 0.3, Animation.easings.OUT_SINE
			local isMove, completion = self.isMove, self.completion
			local x, y = dragView.x + self.relativeX - 1, dragView.y + self.relativeY - 1
			local sourceViews, data = self.sourceViews, self.data
			for i, view in ipairs( sourceViews ) do
				view:dragDropCancelled( data, dragView, x, y )
			end
			
			local dragViewParent = dragView.parent
			if dragViewParent then
				local ownerContainer = self.owner.container
				local originalX, originalY = ownerContainer.width, ownerContainer.height
				for i, view in ipairs( sourceViews ) do
					local viewX, viewY = view:getPosition()
					originalX = math.min( originalX, viewX )
					originalY = math.min( originalY, viewY )
				end
				dragView:animate( "x", originalX, time, nil, easing )
				dragView:animate( "y", originalY, time, nil, easing )
				dragView:animate( "shadowSize", 0, time, function()
					for i, view in ipairs( sourceViews ) do
						if isMove then
							view.isVisible = true
						end
					end
					dragView.parent:remove( dragView )
					if completion then completion() end
				end, easing )
			end
			self.dragView = nil
		end
	end end
function _C_038(self,super)return function(_C_self_passed)
		local dragView = self.dragView
		if dragView then
			local ownerContainer = self.owner.container
			local data, isMove = self.data, self.isMove

			local function lookInView( view, x, y )
				if view:typeOf( Container ) then
					local children = view.children
					for i = #children, 1, -1 do
						local childView = children[i]
						if childView:hitTest( x, y ) then
							local destination = lookInView( childView, x - childView.x + 1, y - childView.y + 1 )
							if destination then
								return destination
							end
						end
					end
				end

				if view:typeOf( IDragDropDestination ) and view:canAcceptDragDrop( data, isMove ) then
					return view
				end

				return nil
			end

			local oldDestination = self.destination
			local x, y = dragView.x + self.relativeX - 1, dragView.y + self.relativeY - 1
			local destinationX, destinationY
			local destination = lookInView( ownerContainer, x, y )
			if destination then
				destinationX, destinationY = destination:getCoordinates( x, y )
			end

			if oldDestination ~= destination then
				if oldDestination then
					local oldDestinationX, oldDestinationY = oldDestination:getCoordinates( x, y )
					oldDestination:dragDropExited( self.data, dragView, oldDestinationX, oldDestinationY )
				end
				if destination then
					destination:dragDropEntered( self.data, dragView, destinationX, destinationY )
				end
				self.destination = destination
			end
			if destination then
				destination:dragDropMoved( self.data, dragView, destinationX, destinationY )
			end
		else
			self.destination = nil
		end
	end end
function _C_039(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseUp","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseUp","Event.phases",phase)end 
		local dragView = self.dragView
		if dragView then
			local destination = self.destination
			if not destination then
				self:cancel()
				dragView.x = event.globalX - self.relativeX + 1
				dragView.y = event.globalY - self.relativeY + 1
			else
				local isMove = self.isMove
				local x, y = dragView.x + self.relativeX - 1, dragView.y + self.relativeY - 1
				destination:dragDropDropped( self.data, isMove, x, y )
				local dropStyle = destination.dropStyle
				local dropStyles = DragDropManager.dropStyles
				local function done()
					if isMove then
						for i, view in ipairs( self.sourceViews ) do
							view.isVisible = true
						end
					end
					dragView.parent:remove( dragView )
					local completion = self.completion
					if completion then completion( destination ) end
				end
				if dropStyle == dropStyles.SHRINK then
					local time, easing = 0.2, Animation.easings.OUT_SINE
					dragView:animate( "width", 1, time, done, easing )
					dragView:animate( "height", 1, time, nil, easing )
					dragView:animate( "x", x, time, nil, easing )
					dragView:animate( "y", y, time, nil, easing )
					dragView.shadowSize = 0
				elseif dropStyle == dropStyles.RETURN then
					local time, easing = 0.2, Animation.easings.OUT_SINE
					local originalX, originalY = self.owner.container.width, self.owner.container.height
					for i, view in ipairs( self.sourceViews ) do
						local viewX, viewY = view:getPosition()
						originalX = math.min( originalX, viewX )
						originalY = math.min( originalY, viewY )
					end
					dragView:animate( "x", originalX, time, done, easing )
					dragView:animate( "y", originalY, time, nil, easing )
					dragView:animate( "shadowSize", 0, time, nil, easing )
				else
					done()
				end
				self.dragView = nil
				self.destination = nil
			end
			return true
		end
	end end
function _C_03A(self,super)return function(_C_self_passed,views,data,relativeX,relativeY,isMove,completion)if _C_An(views)then _C_F(self,"views","start","Table",views)end if _C_FT(data)then _C_F(self,"data","start","ClipboardData",data)end if _C_Ar(relativeX)then _C_F(self,"relativeX","start","Number",relativeX)end if _C_Ar(relativeY)then _C_F(self,"relativeY","start","Number",relativeY)end if isMove==nil then isMove=true end if _C_Cp(isMove)then _C_F(self,"isMove","start","Boolean",isMove)end if _C_FE(completion)then _C_F(self,"completion","start","Function (allowsNil)",completion)end 
		local x, y, x2, y2 = self.owner.container.width, self.owner.container.height, 1, 1
		local images = {}
		for i, view in ipairs( views ) do
			if not view:typeOf( IDraggableView ) then
				error( "Drag and drop can only be used on Views the implement IDraggableView.", 4 )
			end

			local viewX, viewY = view:getPosition()
			local viewWidth, viewHeight = view.width, view.height
			x = math.min( x, viewX )
			y = math.min( y, viewY )
			x2 = math.max( x2, viewX + viewWidth - 1 )
			y2 = math.max( y2, viewY + viewHeight - 1 )
			table.insert( images, { viewX, viewY, view.canvas:toImage(), view.shadowMask } )

			if isMove then
				view.isVisible = false
			end
		end

		local width, height = x2 - x + 1, y2 - y + 1
		local image = Image.static:blank( width, height )
		local shadowMask = Mask( 1, 1, width, height )
		for i, imageData in ipairs( images ) do
			local _x, _y = imageData[1] - x + 1, imageData[2] - y + 1
			image:appendImage( imageData[3], _x, _y )
			shadowMask = shadowMask:add( imageData[4], _x, _y )
		end

		self:cancel()
		local dragView = DragView( {
			width = width;
			height = height;
			x = x;
			y = y;
			image = image;
			shadowMask = shadowMask;
		} )
		self.owner.container:insert( dragView )
		self.dragView = dragView
		self.data = data
		self.relativeX = relativeX - x + 1
		self.relativeY = relativeY - y + 1
		self.isMove = isMove
		self.completion = completion
		self.sourceViews = views
		dragView:animate( "shadowSize", MAX_SHADOW_SIZE, 0.2, nil, Animation.easings.IN_SINE )
	end end
function _C_03B(self,super)return function(_C_self_passed,event,phase)if _C_FJ(event)then _C_F(self,"event","onMouseDrag","Event",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseDrag","Event.phases",phase)end 
		local dragView = self.dragView
		if dragView then
			dragView.x = event.x - self.relativeX + 1
			dragView.y = event.y - self.relativeY + 1
			self:updateDestination()
			return true
		end
	end end
_C_03C={["initialise"]={_C_036,},["onMouseUp"]={_C_039,},["cancel"]={_C_037,},["updateDestination"]={_C_038,},["start"]={_C_03A,},["onMouseDrag"]={_C_03B,}}function _C_03D(_,k,n,v)if _C_FE(n)then _C_D(_,k,"Function (allowsNil)",n)end v[k]=n end function _C_03E(_,k,n,v)if _C_033(n)then _C_D(_,k,"DragView (allowsNil)",n)end v[k]=n end function _C_03F(_,k,n,v)if _C_034(n)then _C_D(_,k,"ClipboardData (allowsNil)",n)end v[k]=n end function _C_03G(_,k,n,v)if _C_035(n)then _C_D(_,k,"Application",n)end v[k]=n end _C_03H=setmetatable({["sourceViews"]=_C_9x,["completion"]=_C_9x,["dragView"]=_C_9x,["data"]=_C_9x,["isMove"]=_C_9x,["relativeY"]=_C_9x,["destination"]=_C_9x,["owner"]=_C_9x,["relativeX"]=_C_9x,["initialise"]=_C_9x,["onMouseUp"]=_C_9x,["cancel"]=_C_9x,["updateDestination"]=_C_9x,["start"]=_C_9x,["onMouseDrag"]=_C_9x},_C_9z)_C_03I=setmetatable({["sourceViews"]=_C_Fz,["completion"]=_C_03D,["dragView"]=_C_03E,["data"]=_C_03F,["isMove"]=_C_Fv,["relativeY"]=_C_LL,["destination"]=_C_Ib,["owner"]=_C_03G,["relativeX"]=_C_LL,["initialise"]=_C_7,["onMouseUp"]=_C_7,["cancel"]=_C_7,["updateDestination"]=_C_7,["start"]=_C_7,["onMouseDrag"]=_C_7},_C_9z)_C_03J={[DragDropManager]=1}_C_03L={["eventType"]=loadstring("return \"interface_text\";\
\9\
\9\
"),}_C_03M={["eventType"]={_C_Ai,"String"},}_C_03N={["eventClasses"]=loadstring([[return {}

	
]])}_C_03O={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_03P=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_03Q=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_03R={[TextChangedInterfaceEvent]=1,[_C_92]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_03S={"InterfaceEvent","Event"}_C_03T={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_03U={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["oldText"]={_C_Ai,"String"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["text"]={_C_Ai,"String"},}function _C_03V(self,super)return function(_C_self_passed,text,oldText)if _C_Ai(text)then _C_F(self,"text","initialise","String",text)end if _C_Ai(oldText)then _C_F(self,"oldText","initialise","String",oldText)end 
		self.text = text
		self.oldText = oldText
	end end
_C_03W={["initialise"]={_C_03V,},["makeRelative"]={[3]=_C_Cs,}}_C_03X=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["oldText"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["text"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_03Y=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["oldText"]=_C_B1,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["text"]=_C_B1,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_03Z={[TextChangedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_03a={"InterfaceEvent","Event"}_C_03c={}_C_03d={}_C_03e={["fromInterface"]={[2]=_C_Ke,}}_C_03f={[TopBarContainer]=1,[_C_94]=1,[Container]=1,[_C_42]=1,[View]=1,[_C_3N]=1}_C_03g={"Container","View"}_C_03h={["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["needsVerticalPinUpdate"]=loadstring("return false\
\9\
"),["childPins"]=loadstring("return { references = {} }\
\
\9\
\
\
\
\
\9\
"),["children"]=loadstring("return {}\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["needsHorizontalPinUpdate"]=loadstring("return false\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["offsetX"]=loadstring("return 0\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["x"]=loadstring("return 1\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["switchableItems"]=loadstring("return {}\
\
    \
"),["offsetY"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["needsPinUpdate"]=loadstring("return false\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["needsLayoutUpdate"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 1\
\9\
"),["interfaceName"]=loadstring("return \"topbarcontainer\"\
\9\
"),}function _C_03j(v)local j=_C_L[v]return not(j and j[TopBarSeparatorView])end  function _C_03k(v)if v==nil then return false end local j=_C_L[v]return not(j and j[TopBarItem])end  function _C_03l(v)local j=_C_L[v]return not(j and j[HomeItem])end  _C_03i={["separatorView"]={_C_03j,"TopBarSeparatorView"},["children"]={_C_An,"Table"},["parent"]={_C_F1,"Container (allowsNil)"},["needsHorizontalPinUpdate"]={_C_Cp,"Boolean"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["switchableItems"]={_C_An,"Table"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["offsetY"]={_C_Ar,"Number"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["index"]={_C_CU,"Number (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["interfaceLinks"]={_C_An,"Table"},["x"]={_C_Ar,"Number"},["childPins"]={_C_An,"Table"},["shadowSize"]={_C_Ar,"Number"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["activeView"]={_C_03k,"TopBarItem (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["offsetX"]={_C_Ar,"Number"},["interfaceLinkActions"]={_C_An,"Table"},["canvas"]={_C_Dh,"Canvas"},["y"]={_C_Ar,"Number"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["needsLayoutUpdate"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["cursorLastY"]={_C_CU,"Number (allowsNil)"},["needsPinUpdate"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["animations"]={_C_An,"Table"},["specialMouseTimes"]={_C_An,"Table"},["leftPin"]={_C_Aq,"String (allowsNil)"},["needsVerticalPinUpdate"]={_C_Cp,"Boolean"},["isMouseInView"]={_C_Cp,"Boolean"},["cursorLastX"]={_C_CU,"Number (allowsNil)"},["identifier"]={_C_Aq,"String (allowsNil)"},["homeItem"]={_C_03l,"HomeItem"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["topPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["interfaceName"]={_C_Aq,"String (allowsNil)"},}function _C_03m(self,super)return function(_C_self_passed,...)
        super( ... )
        self:event( ReadyInterfaceEvent, self.onReady )
        self:event( ChildAddedInterfaceEvent, self.onChildAdded )
        self:event( ChildRemovedInterfaceEvent, self.onChildRemoved )
        self:event( FocusesChangedInterfaceEvent, self.onFocusesChanged )
        self:event( ProgramOpenedInterfaceEvent, self.onProgramOpened )
        self:event( ProgramClosedInterfaceEvent, self.onProgramClosed )
    end end
function _C_03n(self,super)return function(_C_self_passed,event,phase)if _C_kd(event)then _C_F(self,"event","onFocusesChanged","FocusesChangedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onFocusesChanged","Event.phases",phase)end 
        local oldFocusedSwitchableViews = self.application:focusesOfType( ISwitchableView, event.oldFocuses )
        local focusedSwitchableViews = self.application:focusesOfType( ISwitchableView, event.newFocuses )

        if #focusedSwitchableViews > 0 then
            local oldSwitchableView = oldFocusedSwitchableViews[1]
            local switchableView = focusedSwitchableViews[1]
            if switchableView ~= oldSwitchableView then
                if oldSwitchableView then
                    self.switchableItems[oldSwitchableView]:updateThemeStyle()
                end
                self.activeView = self.switchableItems[switchableView]
            end
        else
            self.activeView = nil
        end
    end end
function _C_03o(self,super)return function(_C_self_passed,event,phase)if _C_LB(event)then _C_F(self,"event","onChildRemoved","ChildRemovedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildRemoved","Event.phases",phase)end 
        self.needsLayoutUpdate = true
    end end
function _C_03p(self,super)return function(_C_self_passed,dontAnimate)
        local width = self.width
        local remainingWidth = width + 1 -- add one to hide the last separator between the left and right pinned items
        local leftX, rightX = 1, -1
        local dynamicItems = {}
        local activeIndex
        local activeView, separatorView = self.activeView, self.separatorView

        local function updateFrame( childView, x, width )
            local isVisible = dontAnimate and true or childView.isVisible

            local separatorX, separatorWidth = x + (pin == pins.RIGHT and 1 or 0), width - 1
            if dontAnimate or not isVisible then
                childView.x = x
                childView.width = width
                if not isVisible then
                    childView:animate( "y", 1, ANIMATION_TIME, function() childView.isSeparatorVisible = true end, Animation.easings.IN_SINE )
                    childView.isVisible = true
                end
            else
                childView:animate( "x", x, ANIMATION_TIME, nil, ANIMATION_EASING )
                childView:animate( "width", width, ANIMATION_TIME, nil, ANIMATION_EASING )
            end
            if childView == activeView then
                separatorView:animate( "activeX", separatorX, ANIMATION_TIME, nil, ANIMATION_EASING )
                separatorView:animate( "activeWidth", separatorWidth, ANIMATION_TIME, nil, ANIMATION_EASING )
            end
        end

        for i, childView in ipairs( self.children ) do
            if not childView:typeOf( SeparatorView ) and not childView.isRemoving then
                local pin, size = childView.pin, childView.size
                if size then
                    if pin == pins.LEFT then
                        updateFrame( childView, leftX, size )
                        remainingWidth = remainingWidth - size
                        leftX = leftX + size
                    elseif pin == pins.RIGHT then
                        rightX = rightX + size
                        updateFrame( childView, width - rightX, size )
                        remainingWidth = remainingWidth - size
                    end
                else
                    if not activeIndex and childView.isActive then
                        activeIndex = #dynamicItems + 1
                    end
                    table.insert( dynamicItems, childView )
                end
            end
        end

        activeIndex = activeIndex or 1

        local itemCount = #dynamicItems
        if itemCount > 0 then
            local eachWidthDecimal = remainingWidth / itemCount
            local standardWidth = math.ceil( eachWidthDecimal )
            local activeWidth = remainingWidth - (itemCount - 1) * standardWidth

            for i, childView in ipairs( dynamicItems) do
                local size = activeIndex == i and activeWidth or standardWidth
                updateFrame( childView, leftX, size )
                leftX = leftX + size
            end
        end

        self.needsLayoutUpdate = false
    end end
function _C_03q(self,super)return function(_C_self_passed,event,phase)if _C_Kl(event)then _C_F(self,"event","onReady","ReadyInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onReady","Event.phases",phase)end 
        self.switchableItems[self.application.container.homeContainer] = self.homeItem
        self:updateLayout( true )
        self:animate( "y", 1, 0.6, nil, Animation.easings.OUT_QUART, 0.5 )
    end end
function _C_03s(v)local j=_C_L[v]return not(j and j[ProgramOpenedInterfaceEvent])end  function _C_03r(self,super)return function(_C_self_passed,event,phase)if _C_03s(event)then _C_F(self,"event","onProgramOpened","ProgramOpenedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onProgramOpened","Event.phases",phase)end 
        local program = event.program
        self.switchableItems[program.programView] = self:insert( ProgramItem( { program = program } ) )
    end end
function _C_03t(self,super)return function(_C_self_passed,childView)
        childView:animate( "y", 1 - childView.height, ANIMATION_TIME, function() self:remove( childView )  end, ANIMATION_EASING )
        childView.isRemoving = true
        childView.isSeparatorVisible = false
        self.needsLayoutUpdate = true
    end end
function _C_03u(self,super)return function(_C_self_passed,event,phase)if _C_Kq(event)then _C_F(self,"event","onChildAdded","ChildAddedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onChildAdded","Event.phases",phase)end 
        local childView = event.childView
        if childView:typeOf( ProgramItem ) then
            childView.y = self.height + 1
            childView.isVisible = false
            childView.isSeparatorVisible = false
            childView.isRemoving = false
        end

        self.needsLayoutUpdate = true
        self:sendToFront( self.separatorView )
    end end
function _C_03v(self,super)return function(_C_self_passed,deltaTime)
        super( deltaTime )
        if self.needsLayoutUpdate then
            self:updateLayout()
        end
    end end
function _C_03x(v)local j=_C_L[v]return not(j and j[ProgramClosedInterfaceEvent])end  function _C_03w(self,super)return function(_C_self_passed,event,phase)if _C_03x(event)then _C_F(self,"event","onProgramClosed","ProgramClosedInterfaceEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onProgramClosed","Event.phases",phase)end 
        self:animateRemove( self.switchableItems[event.program.programView] )
    end end
_C_03y={["updateLayout"]={_C_03p,},["onReadyLoadInterface"]={[2]=_C_Kk,},["dispose"]={[2]=_C_L1,[3]=_C_FK,},["loadInterface"]={[2]=_C_Kr,},["findChildren"]={[2]=_C_Ks,},["clearFocus"]={[3]=_C_FP,},["update"]={_C_03v,_C_Kv,_C_FC,},["animateMove"]={[3]=_C_FD,},["onChildRepositionedMouseEnterExit"]={[2]=_C_L5,},["sendToFront"]={[2]=_C_Ky,},["removeAll"]={[2]=_C_Kz,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["animateRemove"]={_C_03t,},["hitTest"]={[3]=_C_FX,},["sendToBack"]={[2]=_C_LD,},["addFocus"]={[3]=_C_FQ,},["onChildOfChildRemoved"]={[2]=_C_LA,},["findChild"]={[2]=_C_Km,},["updatePins"]={[2]=_C_Kn,},["connectInterfaceLink"]={[2]=_C_Ko,},["getCoordinatesTo"]={[3]=_C_F8,},["onReady"]={_C_03q,},["onChildOfChildAdded"]={[2]=_C_Kp,},["animateResize"]={[3]=_C_FW,},["draw"]={[2]=_C_LC,[3]=_C_F9,},["onProgramClosed"]={_C_03w,},["unfocus"]={[3]=_C_F7,},["onLoadedInterfacePinUpdate"]={[2]=_C_Kt,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["siblingsOfType"]={[3]=_C_FH,},["insert"]={[2]=_C_Kw,},["initialise"]={_C_03m,_C_Kx,_C_FG,},["onFocusesChanged"]={_C_03n,},["hitTestEvent"]={[3]=_C_FI,},["initialiseCanvas"]={[3]=_C_F6,},["onChildRemoved"]={_C_03o,},["focus"]={[3]=_C_F5,},["onDraw"]={[2]=_C_L0,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[2]=_C_L2,[3]=_C_FO,},["onProgramOpened"]={_C_03r,},["remove"]={[2]=_C_L4,},["startDragDrop"]={[3]=_C_FR,},["onUpdateChildMouseEnterExit"]={[2]=_C_L7,},["onChildAdded"]={_C_03u,},["getCoordinates"]={[3]=_C_F3,},["disposeAll"]={[2]=_C_L3,}}function _C_03z(self,super)return function(_C_self_passed,activeView)
        local oldView = self.activeView
        if not activeView then
            local focusedSwitchableView = self.application:focusesOfType( ISwitchableView )[1]
            activeView = self.switchableItems[focusedSwitchableView]
        end
        activeView:updateThemeStyle()
        self.activeView = activeView
        local separatorView = self.separatorView
        local pin = activeView.pin
        local x, width = activeView.x + (pin == pins.RIGHT and 1 or 0), activeView.width - 1
        separatorView:animate( "activeX", x, ANIMATION_TIME, nil, ANIMATION_EASING )
        separatorView:animate( "activeWidth", width, ANIMATION_TIME, nil, ANIMATION_EASING )
    end end _C_040={set={["x"]={[3]=_C_Fq},["needsVerticalPinUpdate"]={[2]=_C_LG},["y"]={[3]=_C_Fh},["needsHorizontalPinUpdate"]={[2]=_C_LJ},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["activeView"]={_C_03z},["shadowSize"]={[3]=_C_Fs},["height"]={[2]=_C_LI,[3]=_C_Fr},["width"]={[2]=_C_LF,[3]=_C_Fg},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_LH},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}function _C_041(_,k,n,v)if _C_03l(n)then _C_D(_,k,"HomeItem",n)end v[k]=n end function _C_042(_,k,n,v)if _C_03j(n)then _C_D(_,k,"TopBarSeparatorView",n)end v[k]=n end _C_043=setmetatable({["needsVerticalPinUpdate"]=_C_9x,["children"]=_C_9x,["parent"]=_C_9x,["needsHorizontalPinUpdate"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["switchableItems"]=_C_9x,["isCanvasHitTested"]=_C_9x,["offsetY"]=_C_9x,["needsPinUpdate"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsLayoutUpdate"]=_C_9x,["homeItem"]=_C_9x,["separatorView"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["width"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["interfaceLinks"]=_C_9x,["topPin"]=_C_9x,["activeView"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["offsetX"]=_C_9x,["interfaceLinkActions"]=_C_9x,["canvas"]=_C_9x,["childPins"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["cursorLastX"]=_C_9x,["animations"]=_C_9x,["cursorLastY"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["isMouseInView"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["interfaceName"]=_C_9x,["updateLayout"]=_C_9x,["onReadyLoadInterface"]=_C_9x,["dispose"]=_C_9x,["loadInterface"]=_C_9x,["findChildren"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["onChildRepositionedMouseEnterExit"]=_C_9x,["sendToFront"]=_C_9x,["removeAll"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["animateRemove"]=_C_9x,["hitTest"]=_C_9x,["sendToBack"]=_C_9x,["addFocus"]=_C_9x,["onChildOfChildRemoved"]=_C_9x,["findChild"]=_C_9x,["updatePins"]=_C_9x,["connectInterfaceLink"]=_C_9x,["getCoordinatesTo"]=_C_9x,["onReady"]=_C_9x,["onChildOfChildAdded"]=_C_9x,["animateResize"]=_C_9x,["draw"]=_C_9x,["onProgramClosed"]=_C_9x,["unfocus"]=_C_9x,["onLoadedInterfacePinUpdate"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["siblingsOfType"]=_C_9x,["insert"]=_C_9x,["initialise"]=_C_9x,["onFocusesChanged"]=_C_9x,["hitTestEvent"]=_C_9x,["initialiseCanvas"]=_C_9x,["onChildRemoved"]=_C_9x,["focus"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["onProgramOpened"]=_C_9x,["remove"]=_C_9x,["startDragDrop"]=_C_9x,["onUpdateChildMouseEnterExit"]=_C_9x,["onChildAdded"]=_C_9x,["getCoordinates"]=_C_9x,["disposeAll"]=_C_9x},_C_9z)_C_044=setmetatable({["needsVerticalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["children"]=_C_Ax,["parent"]=_C_Fw,["needsHorizontalPinUpdate"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["switchableItems"]=_C_Ax,["isCanvasHitTested"]=_C_Cu,["offsetY"]=_C_B2,["needsPinUpdate"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsLayoutUpdate"]=_C_Cu,["homeItem"]=_C_041,["separatorView"]=_C_042,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceLinks"]=_C_Ax,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["activeView"]=function(_,k,n,v,w,s,d,l)if _C_03k(n)then _C_D(_,k,"TopBarItem (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["offsetX"]=_C_B2,["interfaceLinkActions"]=_C_Ax,["canvas"]=_C_Fx,["childPins"]=_C_Ax,["shadowMask"]=_C_Fy,["cursorLastX"]=_C_LL,["animations"]=_C_Ax,["cursorLastY"]=_C_LL,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["isMouseInView"]=_C_Cu,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceName"]=_C_B0,["updateLayout"]=_C_7,["onReadyLoadInterface"]=_C_7,["dispose"]=_C_7,["loadInterface"]=_C_7,["findChildren"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["onChildRepositionedMouseEnterExit"]=_C_7,["sendToFront"]=_C_7,["removeAll"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["animateRemove"]=_C_7,["hitTest"]=_C_7,["sendToBack"]=_C_7,["addFocus"]=_C_7,["onChildOfChildRemoved"]=_C_7,["findChild"]=_C_7,["updatePins"]=_C_7,["connectInterfaceLink"]=_C_7,["getCoordinatesTo"]=_C_7,["onReady"]=_C_7,["onChildOfChildAdded"]=_C_7,["animateResize"]=_C_7,["draw"]=_C_7,["onProgramClosed"]=_C_7,["unfocus"]=_C_7,["onLoadedInterfacePinUpdate"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["siblingsOfType"]=_C_7,["insert"]=_C_7,["initialise"]=_C_7,["onFocusesChanged"]=_C_7,["hitTestEvent"]=_C_7,["initialiseCanvas"]=_C_7,["onChildRemoved"]=_C_7,["focus"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["onProgramOpened"]=_C_7,["remove"]=_C_7,["startDragDrop"]=_C_7,["onUpdateChildMouseEnterExit"]=_C_7,["onChildAdded"]=_C_7,["getCoordinates"]=_C_7,["disposeAll"]=_C_7},_C_9z)_C_045={[TopBarContainer]=1,[Container]=1,[View]=1}_C_046={"Container","View"}_C_048={}_C_049={}_C_04A={[SilicaProgramEnvironment]=1,[_C_96]=1,[ProgramEnvironment]=1,[_C_3I]=1}_C_04B={"ProgramEnvironment"}_C_04C={["environment"]=loadstring("return {}\
\
\
    \
"),}_C_04D={["environment"]={_C_An,"Table"},["program"]={_C_Hy,"Program"},}_C_04E={["initialise"]={[2]=_C_Hz,},["loadShell"]={[2]=_C_I0,},["loadDefaultVariables"]={[2]=_C_I1,}}_C_04F=setmetatable({["environment"]=_C_9x,["program"]=_C_9x,["initialise"]=_C_9x,["loadShell"]=_C_9x,["loadDefaultVariables"]=_C_9x},_C_9z)_C_04G=setmetatable({["environment"]=_C_Ax,["program"]=_C_I3,["initialise"]=_C_7,["loadShell"]=_C_7,["loadDefaultVariables"]=_C_7},_C_9z)_C_04H={[SilicaProgramEnvironment]=1,[ProgramEnvironment]=1}_C_04I={"ProgramEnvironment"}_C_04K={["eventType"]=loadstring("return \"interface_mouse_entered\";\
\
\9\
"),}_C_04L={["eventType"]={_C_Ai,"String"},}_C_04M={["eventClasses"]=loadstring([[return {}

	
]])}_C_04N={["initialise"]={[2]=_C_Cg,},["create"]={[2]=_C_Ch,},["register"]={[2]=_C_Ci,}}_C_04O=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_04P=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_04Q={[EnteredInterfaceMouseEvent]=1,[_C_98]=1,[Event]=1,[_C_7j]=1}_C_04R={"Event"}_C_04S={["isSentToChildren"]=loadstring("return false\
\
\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_04T={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},}function _C_04U(self,super)return function(_C_self_passed,x,y)
		self.x = x
		self.y = y
	end end
_C_04V={["initialise"]={_C_04U,},["makeRelative"]={[2]=_C_Cs,}}_C_04W=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_04X=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_04Y={[EnteredInterfaceMouseEvent]=1,[Event]=1}_C_04Z={"Event"}_C_04b={["eventType"]=loadstring("return \"interface_sibling_removed\";\
\9\
\9\
"),}_C_04c={["eventType"]={_C_Ai,"String"},}_C_04d={["eventClasses"]=loadstring([[return {}

	
]])}_C_04e={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_04f=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_04g=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_04h={[SiblingRemovedInterfaceEvent]=1,[_C_9A]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_04i={"InterfaceEvent","Event"}_C_04j={["isSentToChildren"]=loadstring("return false\
\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_04k={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["view"]={_C_Cr,"View"},}function _C_04l(self,super)return function(_C_self_passed,view)if _C_Cr(view)then _C_F(self,"view","initialise","View",view)end 
		self.view = view
	end end
_C_04m={["initialise"]={_C_04l,},["makeRelative"]={[3]=_C_Cs,}}_C_04n=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["view"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_04o=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["view"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_04p={[SiblingRemovedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_04q={"InterfaceEvent","Event"}_C_04s={}_C_04t={}function _C_04u(self,super)return function(_C_self_passed,path,overwrite,folder,isResourcePackage)if _C_PP(folder)then _C_F(self,"folder","make","Folder",folder)end 
		local contents = ""
		if isResourcePackage then
			local folders = {}
			for i, item in ipairs( folder.items ) do
				local itemName = item.fullName
				if RESOURCE_PACKAGE_FOLDERS[itemName] and item:typeOf( Folder ) then
					folders[itemName] = item:serialise( true )
				end
			end
			contents = "local files = " .. serialise(folders, {}) .. RESOURCE_PACKAGE_TEMPLATE
			-- contents = textutils.serialize(folders)
		else
			local allItems = folder:serialise( false )
			contents = serialise(allItems, {})
			-- contents = textutils.serialize(allItems)
		end
		-- log(contents)
		-- log( serialise( allItems, {} ) )
		return super( path, isResourcePackage and Metadata.mimes.RESOURCEPKG or Metadata.mimes.PACKAGE, overwrite, contents )
	end end
_C_04v={["make"]={_C_04u,_C_N0,},["purgeOldCache"]={[3]=_C_MQ,},["exists"]={[3]=_C_MP,},["tidy"]={[3]=_C_MS,},["purgeCached"]={[3]=_C_MR,},["resolve"]={[3]=_C_MT,}}_C_04w={[Package]=1,[_C_9C]=1,[File]=1,[_C_3l]=1,[IEditableFileSystemItem]=1,[FileSystemItem]=1,[_C_5H]=1}_C_04x={"File","FileSystemItem"}_C_04y={}_C_04z={["icon"]={nil,"Any (allowsNil)"},["size"]={_C_CU,"Number (allowsNil)"},["parent"]={nil,"Any (allowsNil)"},["metadataPath"]={_C_Aq,"String (allowsNil)"},["path"]={_C_Ai,"String"},["fullName"]={_C_Ai,"String"},["parentPath"]={_C_Aq,"String (allowsNil)"},["sizeString"]={_C_Aq,"String (allowsNil)"},["metadata"]={_C_MY,"Metadata (allowsNil)"},["extension"]={_C_Aq,"String (allowsNil)"},["name"]={_C_Ai,"String"},["association"]={nil,"Any (allowsNil)"},}_C_050={["initialise"]={[3]=_C_MZ,},["rename"]={[3]=_C_Ma,},["delete"]={[3]=_C_Mb,},["copyTo"]={[3]=_C_Mc,},["moveTo"]={[3]=_C_Md,},["open"]={[3]=_C_Me,}}_C_051={set={["size"]={[3]=_C_Mo},["serialisedContents"]={[2]=_C_NB},["parent"]={[3]=_C_Mr},["binaryContents"]={[2]=_C_NC},["path"]={[3]=_C_Mn},["parentPath"]={[3]=_C_Ms},["contents"]={[2]=_C_NA},["metadata"]={[3]=_C_Mq},["sizeString"]={[3]=_C_Mp}},get={["size"]={[3]=_C_Mh},["serialisedContents"]={[2]=_C_N8},["parent"]={[3]=_C_Ml},["binaryContents"]={[2]=_C_N9},["association"]={[3]=_C_Mg},["contents"]={[2]=_C_N7},["metadata"]={[3]=_C_Mi},["sizeString"]={[3]=_C_Mj},["metadataPath"]={[3]=_C_Mk},["icon"]={[3]=_C_Mm}}}_C_052=setmetatable({["binaryContents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["icon"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["size"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["contents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["serialisedContents"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["parent"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["metadataPath"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["path"]=_C_9x,["fullName"]=_C_9x,["parentPath"]=_C_9x,["sizeString"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Aq(v)then _C_H(_,k,"String (allowsNil)",v)end return v end end,["metadata"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_MY(v)then _C_H(_,k,"Metadata (allowsNil)",v)end return v end end,["extension"]=_C_9x,["name"]=_C_9x,["association"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil return v end end,["initialise"]=_C_9x,["rename"]=_C_9x,["delete"]=_C_9x,["copyTo"]=_C_9x,["moveTo"]=_C_9x,["open"]=_C_9x},_C_9z)_C_053=setmetatable({["binaryContents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["icon"]=_C_Gr,["size"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["contents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["serialisedContents"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["parent"]=function(_,k,n,v,w,s,d,l)if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["metadataPath"]=_C_B0,["path"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["fullName"]=_C_B1,["parentPath"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["sizeString"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["metadata"]=function(_,k,n,v,w,s,d,l)if _C_MY(n)then _C_D(_,k,"Metadata (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["extension"]=_C_B0,["name"]=_C_B1,["association"]=_C_Gr,["initialise"]=_C_7,["rename"]=_C_7,["delete"]=_C_7,["copyTo"]=_C_7,["moveTo"]=_C_7,["open"]=_C_7},_C_9z)_C_054={[Package]=1,[File]=1,[IEditableFileSystemItem]=1,[FileSystemItem]=1}_C_055={"File","FileSystemItem"}_C_057={}_C_058={}_C_059={[PseudoReferenceClassException]=1,[_C_9E]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_05A={"ClassException","FatalException","Exception"}_C_05B={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_05C={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_05D(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Incorrect usage of PseudoReferences: " .. message
		super( message, level )
	end end
_C_05E={["initialise"]={_C_05D,[4]=_C_ED,}}_C_05F=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_05G=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_05H={[PseudoReferenceClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_05I={"ClassException","FatalException","Exception"}_C_05K={}_C_05L={}_C_05M={[ValueTypeClassException]=1,[_C_9G]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_05N={"ClassException","FatalException","Exception"}_C_05O={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_05P={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_05Q(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Incorrect usage of ValueTypes: " .. message
		super( message, level )
	end end
_C_05R={["initialise"]={_C_05Q,[4]=_C_ED,}}_C_05S=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_05T=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_05U={[ValueTypeClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_05V={"ClassException","FatalException","Exception"}_C_05X={["hasUpdatedApperance"]=loadstring("return false\
\
\9\
"),}_C_05Y={["eventManager"]={_C_Da,"EventManager"},["image"]={_C_Db,"Image (allowsNil)"},["theme"]={_C_Dc,"ThemeOutlet"},["hasUpdatedApperance"]={_C_Cp,"Boolean"},["hotSpotY"]={_C_Ar,"Number"},["hotSpotX"]={_C_Ar,"Number"},}_C_05Z={["onThemeChanged"]={[2]=_C_Dd,},["drawTo"]={[2]=_C_Dg,},["updateAppearance"]={[2]=_C_Di,},["setup"]={[2]=_C_Dj,},["setupAll"]={[2]=_C_Dk,}}_C_05a=setmetatable({["eventManager"]=_C_9x,["image"]=_C_9x,["theme"]=_C_9x,["hasUpdatedApperance"]=_C_9x,["hotSpotY"]=_C_9x,["hotSpotX"]=_C_9x,["onThemeChanged"]=_C_9x,["drawTo"]=_C_9x,["updateAppearance"]=_C_9x,["setup"]=_C_9x,["setupAll"]=_C_9x},_C_9z)_C_05b=setmetatable({["eventManager"]=_C_Dm,["image"]=_C_Dn,["theme"]=_C_Do,["hasUpdatedApperance"]=_C_Cu,["hotSpotY"]=_C_B2,["hotSpotX"]=_C_B2,["onThemeChanged"]=_C_7,["drawTo"]=_C_7,["updateAppearance"]=_C_7,["setup"]=_C_7,["setupAll"]=_C_7},_C_9z)_C_05c={[TextCursor]=1,[_C_9I]=1,[Cursor]=1,[_C_3d]=1}_C_05d={"Cursor"}_C_05e={}_C_05f={}_C_05g={[TextCursor]=1,[Cursor]=1}_C_05h={"Cursor"}_C_05j={["eventType"]=loadstring("return \"interface_focuses_changed\";\
\9\
\9\
"),}_C_05k={["eventType"]={_C_Ai,"String"},}_C_05l={["eventClasses"]=loadstring([[return {}

	
]])}_C_05m={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_05n=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_05o=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_05p={[FocusesChangedInterfaceEvent]=1,[_C_9K]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_05q={"InterfaceEvent","Event"}_C_05r={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}function _C_05t(v)if type(v)~="table" then return true end for i,V in pairs(v)do if _C_Cr(k)then return true end end return false end _C_05s={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["newFocuses"]={_C_05t,"{View}"},["oldFocuses"]={_C_05t,"{View}"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["isSentToParents"]={_C_Cp,"Boolean"},}function _C_05u(self,super)return function(_C_self_passed,newFocuses,oldFocuses)if _C_05t(newFocuses)then _C_F(self,"newFocuses","initialise","{View}",newFocuses)end if _C_05t(oldFocuses)then _C_F(self,"oldFocuses","initialise","{View}",oldFocuses)end 
		self.newFocuses = newFocuses
		self.oldFocuses = oldFocuses
	end end
function _C_05v(self,super)return function(_C_self_passed,view)if _C_Cr(view)then _C_F(self,"view","contains","View",view)end 
		return self.newFocuses[view] ~= nil
	end end
function _C_05w(self,super)return function(_C_self_passed,view)if _C_Cr(view)then _C_F(self,"view","didContain","View",view)end 
		return self.oldFocuses[view] ~= nil
	end end
_C_05x={["initialise"]={_C_05u,},["didContain"]={_C_05w,},["contains"]={_C_05v,},["makeRelative"]={[3]=_C_Cs,}}function _C_05y(_,k,n,v)if _C_05t(n)then _C_D(_,k,"{View}",n)end v[k]=n end _C_05z=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["oldFocuses"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["newFocuses"]=_C_9x,["initialise"]=_C_9x,["didContain"]=_C_9x,["contains"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_060=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["oldFocuses"]=_C_05y,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["newFocuses"]=_C_05y,["initialise"]=_C_7,["didContain"]=_C_7,["contains"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_061={[FocusesChangedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_062={"InterfaceEvent","Event"}_C_064={["eventType"]=loadstring("return \"mouse_up\";\
\9\
\9\
"),}_C_065={["eventType"]={_C_Ai,"String"},}_C_066={["eventClasses"]=loadstring([[return {}

	
]])}_C_067={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_068=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_069=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_06A={[UpMouseEvent]=1,[_C_9M]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_06B={"MouseEvent","Event"}_C_06C={["globalY"]=loadstring("return 0\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToChildren"]=loadstring("return true \
\9\
"),}_C_06D={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["mouseButton"]={_C_uI,"MouseEvent.mouseButtons"},["relativeView"]={_C_Cr,"View"},}function _C_06E(self,super)return function(_C_self_passed,mouseButton,x,y)if _C_uI(mouseButton)then _C_F(self,"mouseButton","initialise","MouseEvent.mouseButtons",mouseButton)end if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end 
		self.mouseButton = mouseButton
		self.x = x
		self.y = y
		self.globalX = x
		self.globalY = y
	end end
_C_06F={["initialise"]={_C_06E,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}_C_06G=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["mouseButton"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_06H=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["mouseButton"]=_C_uL,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_06I={[UpMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_06J={"MouseEvent","Event"}_C_06L={}_C_06M={}function _C_06N(self,super)return function(_C_self_passed,tokens,percentageValue,referencePropertyName,references)if _C_An(tokens)then _C_F(self,"tokens","resolve","Table",tokens)end if _C_CU(percentageValue)then _C_F(self,"percentageValue","resolve","Number (allowsNil)",percentageValue)end if _C_Aq(referencePropertyName)then _C_F(self,"referencePropertyName","resolve","String (allowsNil)",referencePropertyName)end if _C_At(references)then _C_F(self,"references","resolve","Table (allowsNil)",references)end 
		local knownList = {}
		for i = 1, #tokens do
			local token = tokens[i]
			if type( token ) == "number" or type( token ) == "string" then -- these will be raw numbers
				knownList[#knownList + 1] = token
			else
				local tokenType = token.type
				if tokenType == "constant" then -- these will be raw numbers
					knownList[#knownList + 1] = token.value
				elseif tokenType == "percentage" then -- these will be raw numbers
					knownList[#knownList + 1] = token.value * percentageValue
				elseif tokenType == "bracket" then -- this will be a bracket token
					knownList[#knownList + 1] = {
						type = "bracket";
						value = MathParser.static:resolve( token.value, percentageValue, references )
					}
				elseif tokenType == "call" then -- this will be a call token
					local parameters = {}
					for i, v in ipairs( token.value.parameters ) do
						parameters[i] = MathParser.static:resolve( v, percentageValue, references )
					end
					knownList[#knownList + 1] = {
						type = "call";
						value = {
							func = token.value.func;
							parameters = parameters;
						}
					}
				elseif tokenType == "relative" then -- this will be a raw number
					local identifier, index = token.value.parent, token.value.index
					local value = 0

					if identifier == "self" and referencePropertyName == index then
						error( "Cannot use recursive constraint index. (tried to use self." .. index .. " within self." .. index .. ")", 0 )
					else
						local reference = references[identifier]
						if reference then
							value = reference[index]
						else
							error( "Could not find view '" .. identifier .. "'", 0 )
						end
					end
					knownList[#knownList + 1] = value
				end
			end
		end
		return knownList
	end end
function _C_06O(self,super)return function(_C_self_passed,tokens)
		for i = 1, #tokens do
			if type( tokens[i] ) ~= "string" then
				if isKnownValue( tokens[i] ) then
					tokens[i] = eval.knownValue( tokens[i] )
				elseif tokens[i].type == "bracket" then
					tokens[i].value = MathParser.static:simplify( tokens[i].value )
				elseif tokens[i].type == "call" then
					local p = tokens[i].value.parameters
					for i = 1, #p do
						p[i] = MathParser.static:simplify( p[i] )
					end
				end
			end
		end
		for i = 1, #tokens do
			if type( tokens[i] ) == "table" and tokens[i].type == "constant" then
				tokens[i] = tokens[i].value
			end
		end
		for i = 1, #tokens do
			if i % 2 == 1 and not isKnownValue( tokens[i] ) then
				return tokens
			end
		end
		return { eval.knownList( tokens ) }
	end end
_C_06P={["resolve"]={_C_06N,},["simplify"]={_C_06O,}}_C_06Q={[MathParser]=1,[_C_9O]=1}_C_06R={}_C_06S={["tokens"]={_C_An,"Table"},}function _C_06T(self,super)return function(_C_self_passed,str)if _C_Ai(str)then _C_F(self,"str","initialise","String",str)end 
		local tokens = lex( str )
		parseRelativeIndexes( tokens )
		parseMathConstants( tokens )
		self.tokens = group( checkfunctionCalls( parse( tokens ) ) )
	end end
function _C_06U(self,super)return function(_C_self_passed,percentageValue,referencePropertyName,references)if _C_CU(percentageValue)then _C_F(self,"percentageValue","value","Number (allowsNil)",percentageValue)end if _C_Aq(referencePropertyName)then _C_F(self,"referencePropertyName","value","String (allowsNil)",referencePropertyName)end if _C_At(references)then _C_F(self,"references","value","Table (allowsNil)",references)end 
		local knownList = MathParser.static:resolve( self.tokens, percentageValue, referencePropertyName, references )
		return eval.knownList( knownList )
	end end
_C_06V={["initialise"]={_C_06T,},["value"]={_C_06U,}}_C_06W=setmetatable({["tokens"]=_C_9x,["initialise"]=_C_9x,["value"]=_C_9x},_C_9z)_C_06X=setmetatable({["tokens"]=_C_Ax,["initialise"]=_C_7,["value"]=_C_7},_C_9z)_C_06Y={[MathParser]=1}_C_06a={["eventType"]=loadstring("return \"interface_sibling_added\";\
\9\
\9\
"),}_C_06b={["eventType"]={_C_Ai,"String"},}_C_06c={["eventClasses"]=loadstring([[return {}

	
]])}_C_06d={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_06e=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_06f=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_06g={[SiblingAddedInterfaceEvent]=1,[_C_9Q]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_06h={"InterfaceEvent","Event"}_C_06i={["isSentToChildren"]=loadstring("return false\
\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_06j={["isSentToChildren"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["relativeView"]={_C_Cr,"View"},["view"]={_C_Cr,"View"},}function _C_06k(self,super)return function(_C_self_passed,view)if _C_Cr(view)then _C_F(self,"view","initialise","View",view)end 
		self.view = view
	end end
_C_06l={["initialise"]={_C_06k,},["makeRelative"]={[3]=_C_Cs,}}_C_06m=setmetatable({["isSentToChildren"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["view"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_06n=setmetatable({["isSentToChildren"]=_C_Cu,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["view"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_06o={[SiblingAddedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_06p={"InterfaceEvent","Event"}_C_06r={["eventType"]=loadstring("return \"mouse_click\";\
\9\
\9\
"),}_C_06s={["eventType"]={_C_Ai,"String"},}_C_06t={["eventClasses"]=loadstring([[return {}

	
]])}_C_06u={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_06v=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_06w=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_06x={[DownMouseEvent]=1,[_C_9S]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_06y={"MouseEvent","Event"}_C_06z={["globalY"]=loadstring("return 0\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToChildren"]=loadstring("return true \
\9\
"),}_C_070={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["mouseButton"]={_C_uI,"MouseEvent.mouseButtons"},["relativeView"]={_C_Cr,"View"},}function _C_071(self,super)return function(_C_self_passed,mouseButton,x,y)if _C_uI(mouseButton)then _C_F(self,"mouseButton","initialise","MouseEvent.mouseButtons",mouseButton)end if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end 
		self.mouseButton = mouseButton
		self.x = x
		self.y = y
		self.globalX = x
		self.globalY = y
	end end
_C_072={["initialise"]={_C_071,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}_C_073=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["mouseButton"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_074=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["mouseButton"]=_C_uL,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_075={[DownMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_076={"MouseEvent","Event"}_C_078={["eventType"]=loadstring("return \"mouse_held\"\
\9\
"),}_C_079={["eventType"]={_C_Ai,"String"},}_C_07A={["eventClasses"]=loadstring([[return {}

	
]])}_C_07B={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_07C=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_07D=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_07E={[HeldMouseEvent]=1,[_C_9U]=1,[MouseEvent]=1,[_C_8Z]=1,[Event]=1,[_C_7j]=1}_C_07F={"MouseEvent","Event"}_C_07G={["isSentToChildren"]=loadstring("return false\
\
\9\
\
\
\
\
\
\
\
\9\
"),["x"]=loadstring("return 0;\
\9\
"),["globalX"]=loadstring("return 0\
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),["y"]=loadstring("return 0;\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["globalY"]=loadstring("return 0\
\
\9\
"),}_C_07H={["isSentToChildren"]={_C_Cp,"Boolean"},["x"]={_C_Ar,"Number"},["globalX"]={_C_Ar,"Number"},["isSentToParents"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["isSentToSender"]={_C_Cp,"Boolean"},["globalY"]={_C_Ar,"Number"},["sender"]={_C_Cq,"Instance"},["mouseButton"]={_C_uI,"MouseEvent.mouseButtons"},["relativeView"]={_C_Cr,"View"},}function _C_07I(self,super)return function(_C_self_passed,mouseButton,x,y,globalX,globalY)if _C_uI(mouseButton)then _C_F(self,"mouseButton","initialise","MouseEvent.mouseButtons",mouseButton)end if _C_Ar(x)then _C_F(self,"x","initialise","Number",x)end if _C_Ar(y)then _C_F(self,"y","initialise","Number",y)end if _C_Ar(globalX)then _C_F(self,"globalX","initialise","Number",globalX)end if _C_Ar(globalY)then _C_F(self,"globalY","initialise","Number",globalY)end 
		self.mouseButton = mouseButton
		self.x = x
		self.y = y
		self.globalX = globalX
		self.globalY = globalY
	end end
_C_07J={["initialise"]={_C_07I,},["makeRelative"]={[2]=_C_Ze,[3]=_C_Cs,}}_C_07K=setmetatable({["isSentToChildren"]=_C_9x,["x"]=_C_9x,["globalX"]=_C_9x,["isSentToParents"]=_C_9x,["y"]=_C_9x,["isSentToSender"]=_C_9x,["globalY"]=_C_9x,["sender"]=_C_9x,["mouseButton"]=_C_9x,["relativeView"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_07L=setmetatable({["isSentToChildren"]=_C_Cu,["x"]=_C_B2,["globalX"]=_C_B2,["isSentToParents"]=_C_Cu,["y"]=_C_B2,["isSentToSender"]=_C_Cu,["globalY"]=_C_B2,["sender"]=_C_Cv,["mouseButton"]=_C_uL,["relativeView"]=_C_Cw,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_07M={[HeldMouseEvent]=1,[MouseEvent]=1,[Event]=1}_C_07N={"MouseEvent","Event"}_C_07P={["eventType"]=loadstring("return \"interface_child_removed\";\
\9\
\9\
"),}_C_07Q={["eventType"]={_C_Ai,"String"},}_C_07R={["eventClasses"]=loadstring([[return {}

	
]])}_C_07S={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_07T=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_07U=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_07V={[ChildRemovedInterfaceEvent]=1,[_C_9W]=1,[InterfaceEvent]=1,[_C_6N]=1,[Event]=1,[_C_7j]=1}_C_07W={"InterfaceEvent","Event"}_C_07X={["isSentToChildren"]=loadstring("return false\
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return true\
\
\9\
\
\
\
\
\9\
"),}_C_07Y={["isSentToChildren"]={_C_Cp,"Boolean"},["childView"]={_C_Cr,"View"},["sender"]={_C_Cq,"Instance"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["container"]={_C_PS,"Container"},["relativeView"]={_C_Cr,"View"},}function _C_07Z(self,super)return function(_C_self_passed,childView,container)if _C_Cr(childView)then _C_F(self,"childView","initialise","View",childView)end if _C_PS(container)then _C_F(self,"container","initialise","Container",container)end 
		self.childView = childView
		self.container = container
	end end
_C_07a={["initialise"]={_C_07Z,},["makeRelative"]={[3]=_C_Cs,}}_C_07b=setmetatable({["isSentToChildren"]=_C_9x,["childView"]=_C_9x,["sender"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["relativeView"]=_C_9x,["container"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_07c=setmetatable({["isSentToChildren"]=_C_Cu,["childView"]=_C_Cw,["sender"]=_C_Cv,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["relativeView"]=_C_Cw,["container"]=_C_Pt,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_07d={[ChildRemovedInterfaceEvent]=1,[InterfaceEvent]=1,[Event]=1}_C_07e={"InterfaceEvent","Event"}_C_07g={}_C_07h={}function _C_07i(self,super)return function(_C_self_passed,str)
		local parts = split( str, " " )
		local keys = {}

		local static = KeyboardShortcutManager.static
		for i, key in ipairs( parts ) do
			if #key > 0 then
				if static:isValid( key ) then
					table.insert( keys, key )
				else
					error( "Invalid keyboard shortcut '" .. str .."'. The key '" .. key .. "' is not valid. Omit sides (i.e. leftShift is just shift) and use the character where possible (i.e. / not slash)", 0 )
				end
			end
		end

		return KeyboardShortcut( unpack( keys ) )
	end end
_C_07j={["fromString"]={_C_07i,}}_C_07k={[KeyboardShortcut]=1,[_C_9a]=1}_C_07l={["keys"]=loadstring("return {}\
\
\9\
\
\
\
\
\9\
"),}_C_07m={["keys"]={_C_An,"Table"},}function _C_07n(self,super)return function(_C_self_passed,...)
		self.keys = { ... }
	end end
function _C_07o(self,super)return function(_C_self_passed,event)
		return event:matchesKeys( self.keys )
	end end
function _C_07p(self,super)return function(_C_self_passed)
		local symbols = ""
		local static = KeyboardShortcutManager.static
		for i, keyString in ipairs( self.keys ) do
			symbols = symbols .. static:symbol( keyString )
		end
		return symbols
	end end
_C_07q={["initialise"]={_C_07n,},["matchesEvent"]={_C_07o,},["symbols"]={_C_07p,}}_C_07r=setmetatable({["keys"]=_C_9x,["initialise"]=_C_9x,["matchesEvent"]=_C_9x,["symbols"]=_C_9x},_C_9z)_C_07s=setmetatable({["keys"]=_C_Ax,["initialise"]=_C_7,["matchesEvent"]=_C_7,["symbols"]=_C_7},_C_9z)_C_07t={[KeyboardShortcut]=1}setmetatable(IEditableFileSystemItem,{__index=_C_3,__newindex=_C_4,__tostring=function()return _C_9f end})_C_07v={}_C_07w={}_C_07x={[MenuNotSpecifiedException]=1,[_C_9j]=1,[Exception]=1,[_C_5t]=1}_C_07y={"Exception"}_C_07z={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_080={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}_C_081={["initialise"]={[2]=_C_ED,}}_C_082=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_083=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_084={[MenuNotSpecifiedException]=1,[Exception]=1}_C_085={"Exception"}_C_087={["eventType"]=loadstring("return \"key\"\
\
\9\
"),}_C_088={["eventType"]={_C_Ai,"String"},}_C_089={["eventClasses"]=loadstring([[return {}

	
]])}_C_08A={["initialise"]={[3]=_C_Cg,},["create"]={[3]=_C_Ch,},["register"]={[3]=_C_Ci,}}_C_08B=setmetatable({["eventType"]=_C_9x,["initialise"]=_C_9x,["create"]=_C_9x,["register"]=_C_9x},_C_9z)_C_08C=setmetatable({["eventType"]=_C_B1,["initialise"]=_C_7,["create"]=_C_7,["register"]=_C_7},_C_9z)_C_08D={[DownKeyEvent]=1,[_C_9l]=1,[KeyEvent]=1,[_C_8k]=1,[Event]=1,[_C_7j]=1}_C_08E={"KeyEvent","Event"}_C_08F={["isSentToChildren"]=loadstring("return true \
\9\
"),["isSentToSender"]=loadstring("return true \
\9\
"),["isSentToParents"]=loadstring("return false \
\
\9\
\9\
"),}_C_08G={["isSentToChildren"]={_C_Cp,"Boolean"},["isSentToParents"]={_C_Cp,"Boolean"},["isSentToSender"]={_C_Cp,"Boolean"},["isRepeat"]={_C_Cp,"Boolean"},["sender"]={_C_Cq,"Instance"},["relativeView"]={_C_Cr,"View"},["keyCode"]={_C_Ar,"Number"},["isCharacter"]={_C_Cp,"Boolean"},["keyString"]={_C_Aq,"String (allowsNil)"},}function _C_08H(self,super)return function(_C_self_passed,keyCode,isRepeat)if _C_Ar(keyCode)then _C_F(self,"keyCode","initialise","Number",keyCode)end if _C_Cp(isRepeat)then _C_F(self,"isRepeat","initialise","Boolean",isRepeat)end 
		super( keyCode )
		self.isRepeat = isRepeat
	end end
_C_08I={["initialise"]={_C_08H,_C_QV,},["makeRelative"]={[3]=_C_Cs,}}_C_08J=setmetatable({["isSentToChildren"]=_C_9x,["isSentToParents"]=_C_9x,["isSentToSender"]=_C_9x,["keyCode"]=_C_9x,["sender"]=_C_9x,["isRepeat"]=_C_9x,["relativeView"]=_C_9x,["isCharacter"]=_C_9x,["keyString"]=_C_9x,["initialise"]=_C_9x,["makeRelative"]=_C_9x},_C_9z)_C_08K=setmetatable({["isSentToChildren"]=_C_Cu,["isSentToParents"]=_C_Cu,["isSentToSender"]=_C_Cu,["keyCode"]=_C_B2,["sender"]=_C_Cv,["isRepeat"]=_C_Cu,["relativeView"]=_C_Cw,["isCharacter"]=_C_Cu,["keyString"]=_C_B0,["initialise"]=_C_7,["makeRelative"]=_C_7},_C_9z)_C_08L={[DownKeyEvent]=1,[KeyEvent]=1,[Event]=1}_C_08M={"KeyEvent","Event"}_C_08O={}_C_08P={}_C_08Q={[HomeSearchBox]=1,[_C_9n]=1,[IHomeItem]=1,[SearchBox]=1,[_C_4l]=1,[TextBox]=1,[_C_3E]=1,[View]=1,[_C_3N]=1}_C_08R={"SearchBox","TextBox","View"}_C_08S={["cursor"]=loadstring("return TextCursor.static\
\
\9\
"),["width"]=loadstring("return 120\
\9\
"),["selectionVisible"]=loadstring("return false\
\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["cursorX"]=loadstring("return 0\
\9\
"),["scroll"]=loadstring("return 0\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isPressed"]=loadstring("return false\
\9\
"),["placeholder"]=loadstring("return \"Search...\"\
\
\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["cursorFlashCounter"]=loadstring("return 0\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["cursorColour"]=loadstring("return Graphics.colours.BLACK;\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["maxScroll"]=loadstring("return 0\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["text"]=loadstring("return \"\"\
\9\
"),["isMasked"]=loadstring("return false \
\
\9\
"),["cursorPosition"]=loadstring("return 1\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["selectionWidth"]=loadstring("return 0\
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["height"]=loadstring("return 15\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}_C_08T={["selectionVisible"]={_C_Cp,"Boolean"},["parent"]={_C_F1,"Container (allowsNil)"},["isPressed"]={_C_Cp,"Boolean"},["placeholder"]={_C_Aq,"String (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["cursorColour"]={_C_GA,"Graphics.colours"},["cursorPosition"]={_C_Ar,"Number"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["maxScroll"]={_C_Ar,"Number"},["x"]={_C_Ar,"Number"},["needsDraw"]={_C_Cp,"Boolean"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["cursorX"]={_C_Ar,"Number"},["siblings"]={_C_At,"Table (allowsNil)"},["scroll"]={_C_Ar,"Number"},["isVisible"]={_C_Cp,"Boolean"},["width"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["canvas"]={_C_Dh,"Canvas"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["animations"]={_C_An,"Table"},["y"]={_C_Ar,"Number"},["eventManager"]={_C_Da,"EventManager"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["isFocusDismissable"]={_C_Cp,"Boolean"},["selectionPosition"]={_C_CU,"Number (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},["isMasked"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["isMouseInView"]={_C_Cp,"Boolean"},["selectionWidth"]={_C_Ar,"Number"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["selectionX"]={_C_CU,"Number (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["rightPin"]={_C_Aq,"String (allowsNil)"},["cursorFlashCounter"]={_C_Ar,"Number"},}_C_08U={["getCoordinates"]={[4]=_C_F3,},["focus"]={[4]=_C_F5,},["write"]={[3]=_C_GB,},["updateMaxScroll"]={[3]=_C_GC,},["unfocus"]={[4]=_C_F7,},["onKeyboardShortcut"]={[3]=_C_GD,},["clearFocus"]={[4]=_C_FP,},["update"]={[3]=_C_GG,[4]=_C_FC,},["animateMove"]={[4]=_C_FD,},["animateResize"]={[4]=_C_FW,},["onMouseDown"]={[3]=_C_Ga,},["onMouseUp"]={[3]=_C_GL,},["onMouseDoubleClick"]={[3]=_C_GZ,},["updateSelection"]={[3]=_C_GO,},["onDownSpecialMouseEvents"]={[4]=_C_FL,},["onMouseDrag"]={[3]=_C_GS,},["updateThemeStyle"]={[3]=_C_GT,},["updateCursorPosition"]={[3]=_C_GU,},["wordPosition"]={[3]=_C_GW,},["initialiseCanvas"]={[4]=_C_F6,},["getCoordinatesTo"]={[4]=_C_F8,},["draw"]={[4]=_C_F9,},["onGlobalMouseUp"]={[3]=_C_GM,},["onGlobalUpSpecialMouseEvents"]={[4]=_C_FA,},["addFocus"]={[4]=_C_FQ,},["onKeyUp"]={[3]=_C_GH,},["initialise"]={[3]=_C_GJ,[4]=_C_FG,},["siblingsOfType"]={[4]=_C_FH,},["hitTestEvent"]={[4]=_C_FI,},["startDragDrop"]={[4]=_C_FR,},["onKeyDown"]={[3]=_C_GQ,},["animate"]={[4]=_C_FV,},["onDraw"]={[2]=_C_Wo,[3]=_C_GP,[4]=_C_FU,},["getPosition"]={[4]=_C_FN,},["initialiseEventManager"]={[4]=_C_FO,},["dispose"]={[4]=_C_FK,},["viewToCharCoords"]={[3]=_C_GK,},["isValidChar"]={[3]=_C_GV,},["charToViewCoords"]={[3]=_C_GN,},["onCharacter"]={[3]=_C_GX,},["onMouseScroll"]={[3]=_C_GE,},["hitTest"]={[4]=_C_FX,}}_C_08V={set={["maxScroll"]={[3]=_C_Gc},["x"]={[4]=_C_Fq},["y"]={[4]=_C_Fh},["cursorX"]={[3]=_C_Gf},["scroll"]={[3]=_C_Gp},["leftPin"]={[4]=_C_Fm},["isPressed"]={[3]=_C_Ge},["selectionPosition"]={[3]=_C_Gk},["isFocused"]={[3]=_C_Gl,[4]=_C_Fi},["text"]={[3]=_C_Go},["placeholder"]={[3]=_C_Gn},["topPin"]={[4]=_C_Fj},["cursorColour"]={[3]=_C_Gd},["selectionWidth"]={[3]=_C_Gj},["width"]={[4]=_C_Fg},["height"]={[4]=_C_Fr},["shadowSize"]={[4]=_C_Fs},["isMasked"]={[3]=_C_Gg},["cursorPosition"]={[3]=_C_Gh},["rightPin"]={[4]=_C_Fk},["isEnabled"]={[3]=_C_Gi},["bottomPin"]={[4]=_C_Fn},["index"]={[4]=_C_Fo},["selectionX"]={[3]=_C_Gm},["isVisible"]={[4]=_C_Fl},["needsDraw"]={[4]=_C_Fp}},get={["isFirst"]={[4]=_C_Fb},["siblings"]={[4]=_C_Fe},["shadowMask"]={[4]=_C_Fd},["isEnabled"]={[4]=_C_Fa},["index"]={[4]=_C_Fc},["isVisible"]={[4]=_C_FZ},["isLast"]={[4]=_C_Ff}}}_C_08W=setmetatable({["selectionVisible"]=_C_9x,["parent"]=_C_9x,["isPressed"]=_C_9x,["selectionPosition"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["cursorColour"]=_C_9x,["cursorPosition"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["cursorFlashCounter"]=_C_9x,["placeholder"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["y"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["cursorX"]=_C_9x,["topPin"]=_C_9x,["scroll"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["isFocusDismissable"]=_C_9x,["maximumLength"]=_C_9x,["canvas"]=_C_9x,["isMouseInView"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["animations"]=_C_9x,["maxScroll"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isMasked"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["selectionWidth"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["selectionX"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["write"]=_C_9x,["updateMaxScroll"]=_C_9x,["unfocus"]=_C_9x,["onKeyboardShortcut"]=_C_9x,["clearFocus"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["animateResize"]=_C_9x,["onMouseDown"]=_C_9x,["onMouseUp"]=_C_9x,["onMouseDoubleClick"]=_C_9x,["updateSelection"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["onMouseDrag"]=_C_9x,["updateThemeStyle"]=_C_9x,["updateCursorPosition"]=_C_9x,["wordPosition"]=_C_9x,["initialiseCanvas"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["addFocus"]=_C_9x,["onKeyUp"]=_C_9x,["initialise"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTestEvent"]=_C_9x,["startDragDrop"]=_C_9x,["onKeyDown"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["dispose"]=_C_9x,["viewToCharCoords"]=_C_9x,["isValidChar"]=_C_9x,["charToViewCoords"]=_C_9x,["onCharacter"]=_C_9x,["onMouseScroll"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_08X=setmetatable({["selectionVisible"]=_C_Cu,["parent"]=_C_Fw,["isPressed"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionPosition"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["cursorColour"]=function(_,k,n,v,w,s,d,l)if _C_GA(n)then _C_D(_,k,"Graphics.colours",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorPosition"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorFlashCounter"]=_C_B2,["placeholder"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["cursorX"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["scroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFocusDismissable"]=_C_Cu,["maximumLength"]=_C_Gr,["canvas"]=_C_Fx,["isMouseInView"]=_C_Cu,["shadowMask"]=_C_Fy,["isSingleFocusOnly"]=_C_Cu,["animations"]=_C_Ax,["maxScroll"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isMasked"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["selectionWidth"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["selectionX"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["write"]=_C_7,["updateMaxScroll"]=_C_7,["unfocus"]=_C_7,["onKeyboardShortcut"]=_C_7,["clearFocus"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["animateResize"]=_C_7,["onMouseDown"]=_C_7,["onMouseUp"]=_C_7,["onMouseDoubleClick"]=_C_7,["updateSelection"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["onMouseDrag"]=_C_7,["updateThemeStyle"]=_C_7,["updateCursorPosition"]=_C_7,["wordPosition"]=_C_7,["initialiseCanvas"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onGlobalMouseUp"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["addFocus"]=_C_7,["onKeyUp"]=_C_7,["initialise"]=_C_7,["siblingsOfType"]=_C_7,["hitTestEvent"]=_C_7,["startDragDrop"]=_C_7,["onKeyDown"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["dispose"]=_C_7,["viewToCharCoords"]=_C_7,["isValidChar"]=_C_7,["charToViewCoords"]=_C_7,["onCharacter"]=_C_7,["onMouseScroll"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_08Y={[HomeSearchBox]=1,[IHomeItem]=1,[SearchBox]=1,[TextBox]=1,[View]=1}_C_08Z={"SearchBox","TextBox","View"}_C_08b={}_C_08c={}_C_08d={[StyleClassException]=1,[_C_9p]=1,[ClassException]=1,[_C_7l]=1,[FatalException]=1,[_C_6t]=1,[Exception]=1,[_C_5t]=1}_C_08e={"ClassException","FatalException","Exception"}_C_08f={["level"]=loadstring("return 1\
\9\9\
"),["traceback"]=loadstring("return {}\
\
\
\9\
"),}_C_08g={["level"]={_C_Ar,"Number"},["traceback"]={_C_An,"Table"},["message"]={_C_Ai,"String"},["id"]={_C_Ar,"Number"},}function _C_08h(self,super)return function(_C_self_passed,message,level)if _C_Ai(message)then _C_F(self,"message","initialise","String",message)end if _C_CU(level)then _C_F(self,"level","initialise","Number (allowsNil)",level)end 
		message = "Naming/code styling was incorrect (the Silica code style should consistent across all programs and developers): " .. message
		super( message, level )
	end end
_C_08i={["initialise"]={_C_08h,[4]=_C_ED,}}_C_08j=setmetatable({["level"]=_C_9x,["traceback"]=_C_9x,["message"]=_C_9x,["id"]=_C_9x,["initialise"]=_C_9x},_C_9z)_C_08k=setmetatable({["level"]=_C_B2,["traceback"]=_C_Ax,["message"]=_C_B1,["id"]=_C_B2,["initialise"]=_C_7},_C_9z)_C_08l={[StyleClassException]=1,[ClassException]=1,[FatalException]=1,[Exception]=1}_C_08m={"ClassException","FatalException","Exception"}_C_08o={}_C_08p={}_C_08q={[Animation]=1,[_C_9r]=1}_C_08r={["round"]=loadstring("return false\
\
\9\
\
\
\
\
\
\
\9\
"),}_C_08s={["round"]={_C_Cp,"Boolean"},["duration"]={_C_Ar,"Number"},["time"]={_C_Ar,"Number"},}function _C_08t(self,super)return function(_C_self_passed,duration,subject,targetValues,easingFunc,round)
		self.duration = duration
		self.subject = subject
		self.targetValues = targetValues
		self.easingFunc = easingFunc
		self.round = round
		self.initialValues = copyTables( {}, targetValues, subject )
		self.time = 0
	end end
function _C_08u(self,super)return function(_C_self_passed)
		return self:setTime( 0 )
	end end
function _C_08v(self,super)return function(_C_self_passed,time)
		assert( type(time ) == "number" and time >= 0, "time must be a positive number or 0")

		local duration = self.duration

		if time <= 0 then
			self.time = 0
			copyTables(self.subject, self.initialValues)
		elseif time >= duration then -- the tween has expired
			self.time = duration
			copyTables(self.subject, self.targetValues)
		else
			self.time = time
			performEasingOnSubject(self.subject, self.targetValues, self.initialValues, self.time, duration, self.easingFunc, self.round)
		end

		return self.time >= duration
	end end
function _C_08w(self,super)return function(_C_self_passed,deltaTime)
		return self:setTime( self.time + deltaTime )
	end end
_C_08x={["initialise"]={_C_08t,},["reset"]={_C_08u,},["setTime"]={_C_08v,},["update"]={_C_08w,}}_C_08y=setmetatable({["subject"]=_C_9x,["duration"]=_C_9x,["round"]=_C_9x,["targetValues"]=_C_9x,["easingFunc"]=_C_9x,["time"]=_C_9x,["initialValues"]=_C_9x,["initialise"]=_C_9x,["reset"]=_C_9x,["setTime"]=_C_9x,["update"]=_C_9x},_C_9z)_C_08z=setmetatable({["subject"]=_C_Gr,["duration"]=_C_B2,["round"]=_C_Cu,["targetValues"]=_C_Gr,["easingFunc"]=_C_Gr,["time"]=_C_B2,["initialValues"]=_C_Gr,["initialise"]=_C_7,["reset"]=_C_7,["setTime"]=_C_7,["update"]=_C_7},_C_9z)_C_090={[Animation]=1}_C_092={}_C_093={}_C_094={[TreeItem]=1,[_C_9t]=1,[ITreeChild]=1,[ListItem]=1,[_C_6x]=1,[IDraggableView]=1,[View]=1,[_C_3N]=1}_C_095={"ListItem","View"}_C_096={["cursor"]=loadstring("return ClickableCursor.static\
\
\
\9\
"),["x"]=loadstring("return 1\
\9\
"),["y"]=loadstring("return 1\
\9\
"),["isVisible"]=loadstring("return true\
\9\
"),["isFocused"]=loadstring("return false\
\9\
"),["isFocusDismissable"]=loadstring("return true \
\9\
"),["animations"]=loadstring("return { names = {} }\
\
\9\
"),["isSelected"]=loadstring("return false\
\
\9\
"),["needsDraw"]=loadstring("return true\
\9\
"),["width"]=loadstring("return 1\
\9\
"),["isSingleFocusOnly"]=loadstring("return false \
\9\
"),["shadowSize"]=loadstring("return 0\
\9\
"),["isMouseInView"]=loadstring("return false \
\9\
"),["isEnabled"]=loadstring("return true\
\9\
"),["specialMouseTimes"]=loadstring("return { timers = {}; up = {}; down = {}; }\
\
\9\
"),["isCanvasHitTested"]=loadstring("return false\
\9\
"),["height"]=loadstring("return 12\
\9\
"),["parsedPins"]=loadstring("return {}\
\9\
"),}function _C_098(v)if v==nil then return false end local j=_C_L[v]return not(j and j[TreeNode])end  _C_097={["parent"]={_C_F1,"Container (allowsNil)"},["isFocused"]={_C_Cp,"Boolean"},["theme"]={_C_Dc,"ThemeOutlet"},["isCanvasHitTested"]={_C_Cp,"Boolean"},["isEnabled"]={_C_Cp,"Boolean"},["bottomPin"]={_C_Aq,"String (allowsNil)"},["height"]={_C_Ar,"Number"},["parsedPins"]={_C_An,"Table"},["cursor"]={_C_Ez,"Cursor (allowsNil)"},["x"]={_C_Ar,"Number"},["isFirst"]={_C_F0,"Boolean (allowsNil)"},["shadowSize"]={_C_Ar,"Number"},["topPin"]={_C_Aq,"String (allowsNil)"},["isVisible"]={_C_Cp,"Boolean"},["canvas"]={_C_Dh,"Canvas"},["isLast"]={_C_F0,"Boolean (allowsNil)"},["shadowMask"]={_C_F2,"Mask (allowsNil)"},["needsDraw"]={_C_Cp,"Boolean"},["animations"]={_C_An,"Table"},["isSelected"]={_C_Cp,"Boolean"},["eventManager"]={_C_Da,"EventManager"},["width"]={_C_Ar,"Number"},["originalParent"]={_C_098,"TreeNode (allowsNil)"},["leftPin"]={_C_Aq,"String (allowsNil)"},["siblings"]={_C_At,"Table (allowsNil)"},["isFocusDismissable"]={_C_Cp,"Boolean"},["text"]={_C_Ai,"String"},["interfaceProperties"]={_C_At,"Table (allowsNil)"},["isMouseInView"]={_C_Cp,"Boolean"},["identifier"]={_C_Aq,"String (allowsNil)"},["index"]={_C_CU,"Number (allowsNil)"},["isSingleFocusOnly"]={_C_Cp,"Boolean"},["y"]={_C_Ar,"Number"},["rightPin"]={_C_Aq,"String (allowsNil)"},["specialMouseTimes"]={_C_An,"Table"},}function _C_099(self,super)return function(_C_self_passed,event,phase)if _C_pL(event)then _C_F(self,"event","onMouseHeld","HeldMouseEvent",event)end if _C_Df(phase)then _C_F(self,"phase","onMouseHeld","Event.phases",phase)end 
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT and ( self.parent.canRearrange or self.parent.canRemove) then
			self.isSelected = true
			self.originalParent = self.parent
			self:startDragDrop( event, TreeClipboardData( self ), true, function()self.originalParent = nil self.isSelected = false end )
		end
		return true
	end end
_C_09A={["getCoordinates"]={[3]=_C_F3,},["focus"]={[3]=_C_F5,},["initialiseCanvas"]={[3]=_C_F6,},["unfocus"]={[3]=_C_F7,},["getCoordinatesTo"]={[3]=_C_F8,},["draw"]={[3]=_C_F9,},["onMouseHeld"]={_C_099,_C_pK,},["dragDropCancelled"]={[2]=_C_pH,},["clearFocus"]={[3]=_C_FP,},["onGlobalUpSpecialMouseEvents"]={[3]=_C_FA,},["update"]={[3]=_C_FC,},["animateMove"]={[3]=_C_FD,},["initialise"]={[2]=_C_pE,[3]=_C_FG,},["onMouseDown"]={[2]=_C_pI,},["onGlobalMouseUp"]={[2]=_C_pG,},["addFocus"]={[3]=_C_FQ,},["onDownSpecialMouseEvents"]={[3]=_C_FL,},["animate"]={[3]=_C_FV,},["onDraw"]={[2]=_C_pJ,[3]=_C_FU,},["getPosition"]={[3]=_C_FN,},["initialiseEventManager"]={[3]=_C_FO,},["updateThemeStyle"]={[2]=_C_pF,},["animateResize"]={[3]=_C_FW,},["startDragDrop"]={[3]=_C_FR,},["dispose"]={[3]=_C_FK,},["hitTestEvent"]={[3]=_C_FI,},["siblingsOfType"]={[3]=_C_FH,},["hitTest"]={[3]=_C_FX,}}_C_09B={set={["x"]={[3]=_C_Fq},["y"]={[3]=_C_Fh},["leftPin"]={[3]=_C_Fm},["isFocused"]={[3]=_C_Fi},["isSelected"]={[2]=_C_pN},["width"]={[3]=_C_Fg},["shadowSize"]={[3]=_C_Fs},["height"]={[3]=_C_Fr},["text"]={[2]=_C_pP},["rightPin"]={[3]=_C_Fk},["isEnabled"]={[2]=_C_pO},["bottomPin"]={[3]=_C_Fn},["index"]={[3]=_C_Fo},["topPin"]={[3]=_C_Fj},["isVisible"]={[3]=_C_Fl},["needsDraw"]={[3]=_C_Fp}},get={["isFirst"]={[3]=_C_Fb},["siblings"]={[3]=_C_Fe},["shadowMask"]={[3]=_C_Fd},["isEnabled"]={[3]=_C_Fa},["index"]={[3]=_C_Fc},["isVisible"]={[3]=_C_FZ},["isLast"]={[3]=_C_Ff}}}function _C_09C(_,k,n,v)if _C_098(n)then _C_D(_,k,"TreeNode (allowsNil)",n)end v[k]=n end _C_09D=setmetatable({["parent"]=_C_9x,["isFocused"]=_C_9x,["theme"]=_C_9x,["isCanvasHitTested"]=_C_9x,["isEnabled"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["bottomPin"]=_C_9x,["needsDraw"]=_C_9x,["isLast"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["cursor"]=_C_9x,["x"]=_C_9x,["isFirst"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F0(v)then _C_H(_,k,"Boolean (allowsNil)",v)end return v end end,["shadowSize"]=_C_9x,["topPin"]=_C_9x,["isVisible"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_Cp(v)then _C_H(_,k,"Boolean",v)end return v end end,["canvas"]=_C_9x,["originalParent"]=_C_9x,["shadowMask"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_F2(v)then _C_H(_,k,"Mask (allowsNil)",v)end return v end end,["isMouseInView"]=_C_9x,["animations"]=_C_9x,["isSelected"]=_C_9x,["eventManager"]=_C_9x,["parsedPins"]=_C_9x,["specialMouseTimes"]=_C_9x,["leftPin"]=_C_9x,["siblings"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_At(v)then _C_H(_,k,"Table (allowsNil)",v)end return v end end,["isSingleFocusOnly"]=_C_9x,["text"]=_C_9x,["interfaceProperties"]=_C_9x,["isFocusDismissable"]=_C_9x,["identifier"]=_C_9x,["index"]=function(_,k,v,g,l)if l[k]then return v[k]else l[k]=true local v=g[k](_)l[k]=nil if _C_CU(v)then _C_H(_,k,"Number (allowsNil)",v)end return v end end,["y"]=_C_9x,["height"]=_C_9x,["rightPin"]=_C_9x,["width"]=_C_9x,["getCoordinates"]=_C_9x,["focus"]=_C_9x,["initialiseCanvas"]=_C_9x,["unfocus"]=_C_9x,["getCoordinatesTo"]=_C_9x,["draw"]=_C_9x,["onMouseHeld"]=_C_9x,["dragDropCancelled"]=_C_9x,["clearFocus"]=_C_9x,["onGlobalUpSpecialMouseEvents"]=_C_9x,["update"]=_C_9x,["animateMove"]=_C_9x,["initialise"]=_C_9x,["onMouseDown"]=_C_9x,["onGlobalMouseUp"]=_C_9x,["addFocus"]=_C_9x,["onDownSpecialMouseEvents"]=_C_9x,["animate"]=_C_9x,["onDraw"]=_C_9x,["getPosition"]=_C_9x,["initialiseEventManager"]=_C_9x,["updateThemeStyle"]=_C_9x,["animateResize"]=_C_9x,["startDragDrop"]=_C_9x,["dispose"]=_C_9x,["hitTestEvent"]=_C_9x,["siblingsOfType"]=_C_9x,["hitTest"]=_C_9x},_C_9z)_C_09E=setmetatable({["parent"]=_C_Fw,["isFocused"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["theme"]=_C_Do,["isCanvasHitTested"]=_C_Cu,["isEnabled"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["bottomPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["needsDraw"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isLast"]=_C_Fv,["cursor"]=_C_Fu,["x"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isFirst"]=_C_Fv,["shadowSize"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["topPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["isVisible"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["canvas"]=_C_Fx,["originalParent"]=_C_09C,["shadowMask"]=_C_Fy,["isMouseInView"]=_C_Cu,["animations"]=_C_Ax,["isSelected"]=function(_,k,n,v,w,s,d,l)if _C_Cp(n)then _C_D(_,k,"Boolean",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["eventManager"]=_C_Dm,["parsedPins"]=_C_Ax,["specialMouseTimes"]=_C_Ax,["leftPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["siblings"]=_C_Fz,["isSingleFocusOnly"]=_C_Cu,["text"]=function(_,k,n,v,w,s,d,l)if _C_Ai(n)then _C_D(_,k,"String",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["interfaceProperties"]=_C_Fz,["isFocusDismissable"]=_C_Cu,["identifier"]=_C_B0,["index"]=function(_,k,n,v,w,s,d,l)if _C_CU(n)then _C_D(_,k,"Number (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["y"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["height"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["rightPin"]=function(_,k,n,v,w,s,d,l)if _C_Aq(n)then _C_D(_,k,"String (allowsNil)",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["width"]=function(_,k,n,v,w,s,d,l)if _C_Ar(n)then _C_D(_,k,"Number",n)end if l[k]then v[k]=n else l[k]=true s[k](_,n)l[k]=nil end end,["getCoordinates"]=_C_7,["focus"]=_C_7,["initialiseCanvas"]=_C_7,["unfocus"]=_C_7,["getCoordinatesTo"]=_C_7,["draw"]=_C_7,["onMouseHeld"]=_C_7,["dragDropCancelled"]=_C_7,["clearFocus"]=_C_7,["onGlobalUpSpecialMouseEvents"]=_C_7,["update"]=_C_7,["animateMove"]=_C_7,["initialise"]=_C_7,["onMouseDown"]=_C_7,["onGlobalMouseUp"]=_C_7,["addFocus"]=_C_7,["onDownSpecialMouseEvents"]=_C_7,["animate"]=_C_7,["onDraw"]=_C_7,["getPosition"]=_C_7,["initialiseEventManager"]=_C_7,["updateThemeStyle"]=_C_7,["animateResize"]=_C_7,["startDragDrop"]=_C_7,["dispose"]=_C_7,["hitTestEvent"]=_C_7,["siblingsOfType"]=_C_7,["hitTest"]=_C_7},_C_9z)_C_09F={[TreeItem]=1,[ITreeChild]=1,[ListItem]=1,[IDraggableView]=1,[View]=1}_C_09G={"ListItem","View"}_C_09I={["width"]=loadstring("return 7\
\9\
"),["symbolName"]=loadstring("return \"thumbnail\"\
\
\9\
"),["height"]=loadstring("return 7\
\9\
"),}_C_09J={["path"]={_C_CA,"Path (allowsNil)"},["width"]={_C_Ar,"Number"},["symbolName"]={_C_Ai,"String"},["height"]={_C_Ar,"Number"},}function _C_09K(self,super)return function(_C_self_passed)
		local path = Path( self.width, self.height, 1, 1 )
		path:lineTo( 3, 1 )
		path:lineTo( 3, 3 )
		path:lineTo( 1, 3 )

		path:moveTo( 5, 1 )
		path:lineTo( 7, 1 )
		path:lineTo( 7, 3 )
		path:lineTo( 5, 3 )
		
		path:moveTo( 5, 5 )
		path:lineTo( 7, 5 )
		path:lineTo( 7, 7 )
		path:lineTo( 5, 7 )
		
		path:moveTo( 1, 5 )
		path:lineTo( 3, 5 )
		path:lineTo( 3, 7 )
		path:lineTo( 1, 7 )

		path:close()

		super( path )
	end end
_C_09L={["initialise"]={_C_09K,_C_CB,},["fromName"]={[2]=_C_CC,}}_C_09M=setmetatable({["path"]=_C_9x,["width"]=_C_9x,["symbolName"]=_C_9x,["height"]=_C_9x,["initialise"]=_C_9x,["fromName"]=_C_9x},_C_9z)_C_09N=setmetatable({["path"]=_C_CE,["width"]=_C_B2,["symbolName"]=_C_B1,["height"]=_C_B2,["initialise"]=_C_7,["fromName"]=_C_7},_C_9z)_C_09O={[ThumbnailSymbol]=1,[_C_9v]=1,[Symbol]=1,[_C_34]=1}_C_09P={"Symbol"}_C_09Q={}_C_09R={}_C_09S={[ThumbnailSymbol]=1,[Symbol]=1}_C_09T={"Symbol"}_C_K("/System/classes/Home/HomeContainer.luo",1,[[ANIMATION_FLY_TIME = 0.4
ANIMATION_FLY_UP_TIME = 0.3
ANIMATION_SCALE_TIME = 0.3
ANIMATION_FLY_DELAY = 0.05
print(Animation)
ANIMATION_FLY_EASING = Animation.easings.IN_SINE
ANIMATION_SCALE_EASING = Animation.easings.OUT_SINE
ANIMATION_SCALE = 0.8
ANIMATION_OVERLAP_TIME = 0.20]],_C_S)_C_K("/System/classes/Home/HomeTile.luo",1,[[SHADOW_SIZE_X = 2
SHADOW_SIZE_Y = 3]],_C_W)_C_K("/System/classes/Program Managing/Program.luo",1,[[states = {
    UNINTIALISED = 0;
    RUNNING = 1;
    PAUSED = 2;
    FINISHED = 3;
}

configKeys = {
    PROGRAM_TITLE = "title",
    BOOT_PATH = "bootPath",
    ICON_PATH = "iconPath",
    IDENTIFIER = "identifier",
}]],_C_Z)_C_K("/System/classes/Program Managing/ProgramItem.luo",1,[[ICON_WIDTH = 9
ICON_HEIGHT = 9]],_C_d)_C_K("/System/classes/Program Managing/ProgramView.luo",1,[[ANIMATION_FLY_TIME = 0.4
ANIMATION_FLY_UP_TIME = 0.3
ANIMATION_SCALE_TIME = 0.3
ANIMATION_FLY_DELAY = 0.05
ANIMATION_FLY_EASING = Animation.easings.IN_SINE
ANIMATION_SCALE_EASING = Animation.easings.OUT_SINE
ANIMATION_SCALE = 0.8
ANIMATION_OVERLAP_TIME = 0.1]],_C_g)_C_K("/System/classes/Program Managing/SilicaProgram.luo",1,[[states = Program.states]],_C_i)_C_K("/System/classes/TopBar/TopBarContainer.luo",1,[[ANIMATION_TIME = 0.3
ANIMATION_EASING = Animation.easings.OUT_SINE
pins = TopBarItem.pins]],_C_p)_C_K("/System/classes/TopBar/TopBarItem.luo",1,[[pins = {
    LEFT = 0;
    RIGHT = 1;
}]],_C_q)_C_K("/src/classes/Animation.luo",1,[[function copyTables(destination, keysTable, valuesTable)
	valuesTable = valuesTable or keysTable
	local mt = getmetatable( keysTable )
	if mt and getmetatable( destination ) == nil then
		setmetatable(destination, mt)
	end
	for k,v in pairs( keysTable ) do
		local value = valuesTable[k]
		if type( value ) == "table" then
			destination[k] = value[#value]
		else
			destination[k] = value
		end
	end
	return destination
end

function performEasingOnSubject(subject, targetValues, initialValues, time, duration, easingFunc, round)
	local t,b,c,d
	local progressPercentage, ceil, floor = false, math.ceil, math.floor
	for k,v in pairs( targetValues ) do
		if type( v ) == "table" then
			log('keyframe')
			
			

			
			progressPercentage = progressPercentage or easingFunc( time, 0, 1, duration )
			local keyframe = progressPercentage * #v 

			
			if round then
				local value = v[ ceil( keyframe ) ]
				if subject[k] ~= value then
					subject[k] = value
				end
			else
				
				local isInteger = ( keyframe % 1 == 0 )
				if isInteger then
					subject[k] = v[ floor( keyframe + 0.5) ]
				else
					local lowerKeyframe = floor( keyframe )
					local upperKeyframe = ceil( keyframe )
					local percentageUpper = keyframe - lowerKeyframe
					local lowerValue = v[ lowerKeyframe ]
					subject[k] = lowerValue + ( v[ upperKeyframe ] - lowerValue) * percentageUpper
				end
			end
		else
			b = initialValues[k]
			if not b then error( "No initial value for animation. Property name: " .. k ) end
			c = v - initialValues[k]
			if round then
				subject[k] = floor( easingFunc( time, b, c, duration ) + 0.5 )
			else
				subject[k] = easingFunc( time, b, c, duration )
			end
		end
	end
end]],_C_s)_C_K("/src/classes/Clipboard/Drag and Drop/DragDropManager.luo",1,[[SHADOW_RATIO = 2/3
MAX_SHADOW_SIZE = 3]],_C_v)_C_K("/src/classes/Constraints/MathParser.luo",1,[=[local symbols = {
	["+"] = true;
	["-"] = true;
	["*"] = true;
	["/"] = true;
	["("] = true;
	[")"] = true;
	[","] = true;
	["^"] = true;
	["%"] = true;
}

local operatorLevels = {
	["+"] = 1;
	["-"] = 1;
	["*"] = 2;
	["/"] = 2;
	["%"] = 2;
	["^"] = 3;
}

local functionParameterCounts = {
	min = 2;
	max = 2;
	sqrt = 1;
	sin = 1;
	cos = 1;
	tan = 1;
	abs = 1;
	random = 2;
	pow = 2;
	exp = 1;
	floor = 1;
	ceil = 1;
	log = 1;
	ran = 0;
	deg = 1;
	rad = 1;
}

local functions = {
	min = math.min;
	max = math.max;
	sqrt = math.sqrt;
	sin = math.sin;
	cos = math.cos;
	tan = math.tan;
	abs = math.abs;
	random = math.random;
	pow = math.pow;
	exp = math.exp;
	floor = math.floor;
	ceil = math.ceil;
	log = math.log;
	ran = math.random;
	deg = function( n )
		return n * 180 / math.pi
	end;
	rad = function( n )
		return n / 180 * math.pi
	end;
}

local allowedIndices = { left = true, right = true, top = true, bottom = true, width = true, height = true }

parse, eval = nil, {}

local function getpos( token )
	return token and "[" .. token.pos .. "]: "
end

local function getClosingBracket( tokens, pos )
	local level = 1
	while pos <= #tokens do
		if tokens[pos].type == "symbol" and tokens[pos].value == "(" then
			level = level + 1
		elseif tokens[pos].type == "symbol" and tokens[pos].value == ")" then
			level = level - 1
			if level == 0 then
				return pos
			end
		end
		pos = pos + 1
	end
end

local function getBracketContents( tokens, start )
	local close = getClosingBracket( tokens, start )
	if close then
		local t = {}
		for i = 1, close - start do
			t[#t + 1] = tokens[start]
			table.remove( tokens, start )
		end
		table.remove( tokens, start )
		return t
	end
end

function lex( str )
	local tokens = {}
	local pos = 1
	local lpos = 1
	local function push( t, v )
		tokens[#tokens + 1] = {
			type = t;
			value = v;
			pos = lpos;
		}
	end
	while pos <= #str do
		local c = str:sub( pos, pos )
		if str:find( "^%d*%.?%d+", pos ) then
			local num = str:match( "^%d*%.?%d+", pos )
			pos = pos + #num
			local exp = str:match( "^e%-?%d+", pos )
			if exp then
				pos = pos + #exp
			end
			local percentage = false
			if str:sub( pos, pos ) == "%" then
				percentage = true
				pos = pos + 1
			end
			local n = tonumber( num )
			if exp then
				n = n * 10 ^ tonumber( exp )
			end
			if percentage then
				push( "percentage", n / 100 )
			else
				push( "constant", n )
			end
		elseif c:find "%s" then
			pos = pos + #str:match( "^%s+", pos	 )
		elseif c == "." then
			push "dot"
			pos = pos + 1
		elseif c:find "[a-zA-Z_]" then
			local word = str:match( "^[_%w]+", pos )
			push( "word", word )
			pos = pos + #word
		elseif symbols[c] then
			push( "symbol", c )
			pos = pos + 1
		else
			error( "shit", 0 ) 
		end
		lpos = pos
	end
	return tokens
end

function parseRelativeIndexes( tokens )
	local i = 1
	while i <= #tokens do
		if tokens[i].type == "dot" then
			if not tokens[i-1] or tokens[i-1].type ~= "word" then
				error( getpos( tokens[i] ) .. "expected super before '.', got " .. ( tokens[i-1] and tokens[i-1].type or "nothing" ), 0 )
			end
			if not tokens[i+1] or tokens[i+1].type ~= "word" then
				error( getpos( tokens[i] ) .. "expected super after '.' (trying to index " .. tokens[i-1].value .. "), got " .. ( tokens[i-1] and tokens[i-1].type or "nothing" ), 0 )
			end
			tokens[i-1].type = "relative"
			local index = string.lower( tokens[i+1].value )
			if not allowedIndices[index] then
				error( "Illegal relative index: " .. index .. ". Possible indices are: left, right, top, bottom, width or height.", 0 )
			end
			tokens[i-1].value = {
				parent = tokens[i-1].value;
				index = index;
			}
			table.remove( tokens, i )
			table.remove( tokens, i )
		end
		i = i + 1
	end
end

local function parsefunctionCalls( tokens )
	local i = 1
	while i <= #tokens do
		if tokens[i].type == "word" and tokens[i + 1] and tokens[i + 1].type == "symbol" and tokens[i + 1].value == "(" then
			local content = getBracketContents( tokens, i + 2 )
			if content then
				table.remove( tokens, i + 1 )

				local parameters = {}
				if content[1] then
					parameters[1] = {}
				end

				for p = 1, #content do
					if content[p].type == "symbol" and content[p].value == "," then
						parameters[#parameters + 1] = {}
					else
						parameters[#parameters][#parameters[#parameters] + 1] = content[p]
					end
				end

				for i = 1, #parameters do
					if #parameters[i] == 0 then
						error( getpos( tokens[i] ) .. "function parameter is empty", 0 )
					end
					parse( parameters[i] )
				end

				tokens[i].type = "call"
				tokens[i].value = {
					func = tokens[i].value;
					parameters = parameters;
				}
			else
				error( getpos( tokens[i + 1] ) .. "expected ')' to close '('", 0 )
			end
		end
		i = i + 1
	end
end

local function parseBrackets( tokens )
	local i = 1
	while i <= #tokens do
		if tokens[i].type == "symbol" and tokens[i].value == "(" then
			local contents = getBracketContents( tokens, i + 1 )
			if contents then
				tokens[i] = {
					type = "bracket";
					contents = parse( value );
					pos = tokens[i].pos;
				}
			else
				error( getpos( tokens[i] ) .. "expected ')' to close '('", 0 )
			end
		elseif tokens[i].type == "symbol" and tokens[i].value == ")" then
			error( getpos( tokens[i] ) .. "unexpected ')' with no opening '('", 0 )
		else
			i = i + 1
		end
	end
end

local function parseUnaryMinuses( tokens )
	for i = #tokens, 1, -1 do
		if tokens[i].type == "symbol" and tokens[i].value == "-" and ( not tokens[i-1] or tokens[i-1].type == "symbol" ) then
			local n = tokens[i+1]
			if not n or n.type == "symbol" then
				error( getpos( tokens[i] ) .. "expected constant (number) or percentage after '-'", 0 )
			end
			tokens[i].type = "constant"
			tokens[i].value = -1
			table.insert( tokens, i + 1, {
				type = "symbol";
				value = "*";
				pos = tokens[i].pos;
			} )
		end
	end
end

function parseMathConstants( tokens )
	for i = 1, #tokens do
		if tokens[i].type == "word" and tokens[i].value:lower() == "pi" then
			tokens[i].type = "constant"
			tokens[i].value = math.pi
		elseif tokens[i].type == "word" and tokens[i].value:lower() == "phi" then
			tokens[i].type = "constant"
			tokens[i].value = 1.61803398875 
		end
	end
end

function parse( tokens )
	if #tokens == 0 then
		error( "no values in tokens", 0 )
	end
	parsefunctionCalls( tokens )
	parseBrackets( tokens )
	parseUnaryMinuses( tokens )
	for i = 1, #tokens do
		if i % 2 == 1 and tokens[i].type == "symbol" then
			error( getpos( tokens[i] ) .. "unexpected symbol, expected operand", 0 )
		elseif i % 2 == 0 and tokens[i].type ~= "symbol" then
			error( getpos( tokens[i] ) .. "expected symbol between operands", 0 )
		end
		if tokens[i].type == "symbol" and tokens[i].value == "," then
			error( getpos( tokens[i] ) .. "unexpected ','", 0 )
		end
	end
	if #tokens % 2 == 0 then
		error( getpos( tokens[#tokens] ) .. "expected operand", 0 )
	end
	return tokens
end

function checkfunctionCalls( tokens )
	for i = 1, #tokens do
		if tokens[i].type == "call" then
			local f = tokens[i].value.func
			local count = functionParameterCounts[f]
			if not count then
				error( getpos( tokens[i] ) .. "no such function '" .. f .. "'", 0 )
			end
			local p = tokens[i].value.parameters
			if #p ~= count then
				error( getpos( tokens[i] ) .. "expected " .. count .. " parameters, got " .. #p, 0 )
			end
			for i = 1, count do
				checkfunctionCalls( p[i] )
			end
			tokens[i].value.func = functions[f]
		elseif tokens[i].type == "bracket" then
			checkfunctionCalls( tokens[i].value )
		end
	end
	return tokens
end

function isKnownValue( t )
	if type( t ) == "number" then return true end
	if t.type == "bracket" then
		for i = 1, #t.value do
			if type( t.value[i] ) ~= "string" and not isKnownValue( t.value[i] ) then
				return false
			end
		end
		return true
	elseif t.type == "call" then
		for p = 1, #t.value.parameters do
			for i = 1, #t.value.parameters[p] do
				if type( t.value.parameters[p][i] ) ~= "string" and not isKnownValue( t.value.parameters[p][i] ) then
					return false
				end
			end
		end
		return true
	end
	return t.type == "constant"
end

local function groupByLevel( terms, operators, level )
	local i = 1
	while i <= #operators do
		local t = { terms[i] }
		while operatorLevels[operators[i]] == level do
			t[#t + 1] = operators[i]
			table.remove( operators, i )
			t[#t + 1] = terms[i + 1]
			table.remove( terms, i + 1 )
		end
		if #t > 1 then
			terms[i] = {
				type = "bracket";
				pos = terms[i].pos;
				value = t;
			}
		end
		i = i + 1
	end
end

function group( tokens )
	local levels = {}
	for i = 1, #tokens do
		tokens[i].pos = nil
		if tokens[i].type == "symbol" then
			levels[operatorLevels[tokens[i].value]] = true
		elseif tokens[i].type == "bracket" then
			tokens[i].value = group( tokens[i].value )
		elseif tokens[i].type == "call" then
			local p = tokens[i].value.parameters
			for i = 1, #p do
				p[i] = group( p[i] )
			end
		end
	end
	local terms = {}
	local operators = {}
	for i = 1, #tokens do
		local t = i % 2 == 1 and terms or operators
		t[#t + 1] = i % 2 == 0 and tokens[i].value or tokens[i]
	end

	if next( levels, next( levels ) ) then
		groupByLevel( terms, operators, 3 )
		groupByLevel( terms, operators, 2 )
	end

	local tokens = { terms[1] }
	for i = 1, #operators do
		tokens[#tokens + 1] = operators[i]
		tokens[#tokens + 1] = terms[i + 1]
	end

	return tokens
end


function eval.knownList( list )
	local n = eval.knownValue( list[1] )
	for i = 1, ( #list - 1 ) / 2 do
		local n2 = eval.knownValue( list[i * 2 + 1] )
		local op = list[i * 2]
		if op == "+" then
			n = n + n2
		elseif op == "-" then
			n = n - n2
		elseif op == "*" then
			n = n * n2
		elseif op == "/" then
			n = n / n2
		elseif op == "%" then
			n = n % n2
		elseif op == "^" then
			n = n ^ n2
		end
	end
	return n
end


function eval.knownValue( token )
	if type( token ) == "number" then
		return math.floor( token + .5 )
	elseif token.type == "bracket" then
		return math.floor( eval.knownList( token.value ) + .5 )
	elseif token.type == "call" then
		local p = token.value.parameters
		for i = 1, #p do
			p[i] = eval.knownList( p[i] )
		end
		return math.floor( token.value.func( unpack( p ) ) + .5 )
	elseif token.type == "constant" then
		return math.floor( token.value + .5 )
	else
		error( "Unknown value for token type: " .. tostring( token.type ), 0 )
	end
end]=],_C_z)_C_K("/src/classes/Cursors/BridgedCursor.luo",1,[[cursorStatic = Cursor.static
bridgeKeys = {
	HOT_SPOT_X = 1;
	HOT_SPOT_Y = 2;
	WIDTH = 3;
	HEIGHT = 4;
	PIXELS = 5;
}]],_C_00)_C_K("/src/classes/Exceptions/Exception.luo",1,[[thrownExceptions = {}
nextID = 1

	function _G.try( func )
		local ok, err = pcall( func )

		if not ok and type( err ) == "string" then
			local id = err:match( "SilicaException: (%d+)" )
			if id then
				local exception = thrownExceptions[tonumber( id )]
				return function( handles )
					for i, handle in ipairs( handles ) do
						if exception:typeOf( handle.catch ) or handle.default then
							return handle.handler( exception )
						end
					end
					return error( err, 0 )
				end
			end
			return error( err, 0 )
		end
		return function()end
	end

	function _G.catch( exceptionClass, handler )
		return { catch = exceptionClass, handler = handler }
	end

	function _G.default( handler )
		return { default = true, handler = handler }
	end]],_C_0u)_C_K("/src/classes/File Associations/FileAssociation.luo",1,[[n = 1]],_C_13)_C_K("/src/classes/File Associations/FileAssociationManager.luo",1,[[if Quartz then
		Quartz.fileAssociationBridge = function( serialised )
			FileAssociationManager.static:registerAssociation( FileAssociation.static:unserialise( serialised ) )
		end
	end

	local unknownFileAssociation]],_C_14)_C_K("/src/classes/File System/Bundle.luo",1,[[fs = Quartz and Quartz.fs or fs

function tidy( path )
	if path == "/" then return path end
	path = path:gsub( "/.-/%.%./", "/" )
			   :gsub( "^.-/%.%./", "" )
			   :gsub( "/%./", "/" )
			   :gsub( "^%.%./", "" )
			   :gsub( "^%.%.$", "" )
			   :gsub( "//+", "/" )
	return path
end

relativePath = tidy( shell.getRunningProgram():match( "(.*)/.+" ) ):gsub( "[^/]$", "%1/" )
function resolve( path )
	if not path or #path == 0 then return relativePath else return tidy( path ):gsub( "^[^/]", relativePath .. "%1" ) end
end

fileCache = FileSystemItem.static.fileCache
osClock = os.clock]],_C_16)_C_K("/src/classes/File System/File.luo",1,[[fs = Quartz and Quartz.fs or fs

function tidy( path )
	if path == "/" then return path end
	path = path:gsub( "/.-/%.%./", "/" )
			   :gsub( "^.-/%.%./", "" )
			   :gsub( "/%./", "/" )
			   :gsub( "^%.%./", "" )
			   :gsub( "^%.%.$", "" )
			   :gsub( "//+", "/" )
			   :gsub( "/$", "" )
	return path
end

relativePath = tidy( shell.getRunningProgram():match( "(.*)/.+" ) ):gsub( "[^/]$", "%1/" ):gsub( "^[^/]", "/%1" )
function resolve( path )
	if not path or #path == 0 then return "/" .. relativePath else local _ = tidy( path ):gsub( "^[^/]", relativePath .. "%1" ) return _ end
end

fileCache = FileSystemItem.static.fileCache
osClock = os.clock]],_C_17)_C_K("/src/classes/File System/FileSystemItem.luo",1,[[fs = Quartz and Quartz.fs or fs

function tidy( path )
	if path == "/" then return path end
	path = path:gsub( "/.-/%.%./", "/" )
			   :gsub( "^.-/%.%./", "" )
			   :gsub( "/%./", "/" )
			   :gsub( "^%.%./", "" )
			   :gsub( "^%.%.$", "" )
			   :gsub( "//+", "/" )
			   :gsub( "/$", "" )
	return path
end

relativePath = tidy( shell.getRunningProgram():match( "(.*)/.+" ) ):gsub( "[^/]$", "%1/" ):gsub( "^[^/]", "/%1" )
log(relativePath)
function resolve( path, to )
	to = to and tidy( to ) .. "/" or relativePath
	if not path or #path == 0 then return "/" .. to else local _ = tidy( path ):gsub( "^[^/]", to .. "%1" ) return _ end
end

MAX_FILE_AGE = 120
osClock = os.clock
iconCache = {}
fileCache = {}]],_C_18)_C_K("/src/classes/File System/Folder.luo",1,[[fs = Quartz and Quartz.fs or fs

function tidy( path )
	if path == "/" then return path end
	path = path:gsub( "/.-/%.%./", "/" )
			   :gsub( "^.-/%.%./", "" )
			   :gsub( "/%./", "/" )
			   :gsub( "^%.%./", "" )
			   :gsub( "^%.%.$", "" )
			   :gsub( "//+", "/" )
			   :gsub( "/$", "" )
	return path
end

relativePath = tidy( shell.getRunningProgram():match( "(.*)/.+" ) ):gsub( "[^/]$", "%1/" ):gsub( "^[^/]", "/%1" )
function resolve( path )
	if not path or #path == 0 then return "/" .. relativePath else local _ = tidy( path ):gsub( "^[^/]", relativePath .. "%1" ) return _ end
end

fileCache = FileSystemItem.static.fileCache
osClock = os.clock]],_C_19)_C_K("/src/classes/File System/Metadata.luo",1,[[fs = Quartz and Quartz.fs or fs

DEFAULT_TIMESTAMP = 1451606400; 

SAVED_PROPERTIES = { t = "mime"; c = "createdTimestamp"; o = "openedTimestamp"; m = "modifiedTimestamp"; }

g_tLuaKeywords = {
	[ "and" ] = true,
	[ "break" ] = true,
	[ "do" ] = true,
	[ "else" ] = true,
	[ "elseif" ] = true,
	[ "end" ] = true,
	[ "false" ] = true,
	[ "for" ] = true,
	[ "function" ] = true,
	[ "if" ] = true,
	[ "in" ] = true,
	[ "local" ] = true,
	[ "nil" ] = true,
	[ "not" ] = true,
	[ "or" ] = true,
	[ "repeat" ] = true,
	[ "return" ] = true,
	[ "then" ] = true,
	[ "true" ] = true,
	[ "until" ] = true,
	[ "while" ] = true,
}

function serialise( t, tTracking )
	local sType = type(t)
	if sType == "table" then
		if tTracking[t] ~= nil then
			error( "Cannot serialize table with recursive entries", 0 )
		end
		tTracking[t] = true

		if next(t) == nil then
			return "{}"
		else
			local sResult = "{"
			local tSeen = {}
			for k,v in ipairs(t) do
				tSeen[k] = true
				sResult = sResult .. serialise( v, tTracking ) .. ";"
			end
			for k,v in pairs(t) do
				if not tSeen[k] then
					local sEntry
					if type(k) == "string" and not g_tLuaKeywords[k] and string.match( k, "^[%a_][%a%d_]*$" ) then
						sEntry = k .. "=" .. serialise( v, tTracking ) .. ";"
					else
						sEntry = "[" .. serialise( k, tTracking ) .. "]=" .. serialise( v, tTracking ) .. ";"
					end
					sResult = sResult .. sEntry
				end
			end
			sResult = sResult:sub( 1, #sResult - 1 ) .. "}"
			return sResult
		end
	elseif sType == "string" then
		return string.format( "%q", t )
	elseif sType == "number" or sType == "boolean" or sType == "nil" then
		return tostring(t)
	else
		error( "Cannot serialize type "..sType, 0 )
	end
end

EXTENSION_MIMES = {
	LUA = "text/lua";
	TXT = "text/plain";
	TEXT = "text/plain";
	IMAGE = "image/paint";
	NFP = "image/paint";
	NFT = "image/nft";
	SKCH = "image/sketch";
	UCG = "image/ucg";
	SLUA = "silica/lua";
	SINTERFACE = "silica/interface";
	STHEME = "silica/theme";
	SCONFIG = "silica/config";
	SUSERDATA = "silica/suserdata";
	SBUNDLE = "silica/sbundle";
	SFONT = "silica/font";
	SICON = "silica/icon";
	RESOURCEPKG = "package/resource";
	PACKAGE = "package/plain";
	APPLICATION = "silica/application";
}

SPECIAL_MIMES = {
	FOLDER = "application/directory";
	
}]],_C_1B)_C_K("/src/classes/File System/Package.luo",1,[=[RESOURCE_PACKAGE_FOLDERS = { classes = true; fonts = true; interfaces = true; themes = true; resources = true; miscellaneous = true; }

RESOURCE_PACKAGE_TEMPLATE = [[

args = { ... }
if #args == 1 and args[1] == "contents" then
	return files
end

_G.__resourceTables = _G.__resourceTables or {}
_G.__resourceTables[#_G.__resourceTables + 1] = files
loaded = {}
classes = files["classes"]
loadClass

_G.shell = shell
f, err = loadstring( classes["class"]["text/lua"], "class.lua" )
if err then error( err, 0 ) end
ok, err = pcall( f )
if err then error( err, 0 ) end

table.insert( class.tables, classes )

-- we need to load any Exception subclasses first
for name, contents in pairs( classes ) do
	if name:sub( -9 ) == "Exception" then
		class.get( name )
	end
end

for name, contents in pairs( classes ) do
	if name ~= "class" then
		class.get( name )
	end
end

]]

g_tLuaKeywords = {
	[ "and" ] = true,
	[ "break" ] = true,
	[ "do" ] = true,
	[ "else" ] = true,
	[ "elseif" ] = true,
	[ "end" ] = true,
	[ "false" ] = true,
	[ "for" ] = true,
		[ "function" ] = true,
		[ "if" ] = true,
		[ "in" ] = true,
		[ "local" ] = true,
		[ "nil" ] = true,
		[ "not" ] = true,
		[ "or" ] = true,
		[ "repeat" ] = true,
		[ "return" ] = true,
		[ "then" ] = true,
		[ "true" ] = true,
		[ "until" ] = true,
		[ "while" ] = true,
	}

	
	local function serialise( t, tTracking )
		local sType = type(t)
		if sType == "table" then
			if tTracking[t] ~= nil then
				error( "Cannot serialize table with recursive entries", 0 )
			end
			tTracking[t] = true

			if next(t) == nil then
				return "{}"
			else
				local sResult = "{"
				local tSeen = {}
				for k,v in ipairs(t) do
					tSeen[k] = true
					sResult = sResult .. serialise( v, tTracking ) .. ";"
				end
				for k,v in pairs(t) do
					if not tSeen[k] then
						local sEntry
						if type(k) == "string" and not g_tLuaKeywords[k] and string.match( k, "^[%a_][%a%d_]*$" ) then
							sEntry = k .. "=" .. serialise( v, tTracking ) .. ";"
						else
							sEntry = "[" .. serialise( k, tTracking ) .. "]=" .. serialise( v, tTracking ) .. ";"
						end
						sResult = sResult .. sEntry
					end
				end
				sResult = sResult:sub( 1, #sResult - 1 ) .. "}"
				return sResult
			end
		elseif sType == "string" then
			return string.format( "%q", t )
		elseif sType == "number" or sType == "boolean" or sType == "nil" then
			return tostring(t)
		else
			error( "Cannot serialize type "..sType, 0 )
		end
	end]=],_C_1C)_C_K("/src/classes/FolderIcon.luo",1,[[folderFrontIcon, folderFrontOpenIcon, folderBackIcon, folderIcon, folderIconIcon, folderFrontOpenIconImages, folderFrontIconImages = nil
VISIBLE_THUMBNAIL_COUNT, MINIMUM_SIZE = 3, 15
THUMBNAIL_POSITION_X = 0.6
THUMBNAIL_SCALE = 0.625]],_C_1D)_C_K("/src/classes/Font/BitmapFont.luo",1,[[floor, ceil = math.floor, math.ceil

	local function readstring( handle )
		local v = handle.read()
		local s = ""
		while v ~= 0 do
			s = s .. string.char( v )
			v = handle.read()
		end
		return s
	end
	local function writestring( handle, text )
		for i = 1, #text do
			handle.write( text:byte( i ) )
		end
	end

	local function bhasbit( n, i )
		if not n then log(debug.traceback()) end
		return floor( n / 2 ^ ( 8 - i ) ) % 2 == 1
	end]],_C_1E)_C_K("/src/classes/Font/Font.luo",1,[[floor, ceil = math.floor, math.ceil
cache = {}

function readstring( handle )
	local v = handle.read()
	local s = ""
	while v ~= 0 do
		s = s .. string.char( v )
		v = handle.read()
	end
	return s
end
function writestring( handle, text )
	for i = 1, #text do
		handle.write( text:byte( i ) )
	end
end

NO_CHAR_MAP = {
	width = 5;
	{ true,	 true,	true,  true, true };
	{ true, false, false, false, true };
	{ true, false, false, false, true };
	{ true, false, false, false, true };
	{ true, false, false, false, true };
	{ true,	 true,	true,  true, true };
}]],_C_1F)_C_K("/src/classes/Graphics/Canvas.luo",1,[[SHADOW_RATIO = 2 / 3
SHADOW_COLOUR = Graphics.colours.GREY
TRANSPARENT = Graphics.colours.TRANSPARENT]],_C_1H)_C_K("/src/classes/Graphics/Mask.luo",1,[[function shapeMode( self, mask, maskX, maskY, func )
	local selfX, selfY, selfWidth, selfHeight, selfPixels = self.x, self.y, self.width, self.height, self.pixels
	local maskX, maskY, maskWidth, maskHeight, maskPixels = maskX or mask.x, maskY or mask.y, mask.width, mask.height, mask.pixels
	local x, y = math.min( selfX, maskX ), math.min( selfY, maskY )
	local width, height = math.max( selfX + selfWidth, maskX + maskWidth ) - x, math.max( selfY + selfHeight, maskY + maskHeight ) - y
	local pixels = {}
	for _x = 1, width do
		for _y = 1, height do
			local _selfX, _selfY = x - selfX + _x, y - selfY + _y
			local selfPixel = nil
			if _selfX >= 1 and _selfY >= 1 and _selfX <= selfWidth and _selfY <= selfHeight then
				selfPixel = selfPixels[(_selfY - 1) * selfWidth + _selfX]
			end
			local _maskX, _maskY = x - maskX + _x, y - maskY + _y
			local maskPixel = nil
			if _maskX >= 1 and _maskY >= 1 and _maskX <= maskWidth and _maskY <= maskHeight then
				maskPixel = maskPixels[(_maskY - 1) * maskWidth + _maskX]
			end
			pixels[(_y - 1) * width + _x] = func( selfPixel, maskPixel )
		end
	end
	return Mask( x, y, width, height, pixels )
end]],_C_1L)_C_K("/src/classes/Graphics/Path.luo",1,[[sin, cos, floor, min, max, abs, acos, PI, remove, insert = math.sin, math.cos, math.floor, math.min, math.max, math.abs, math.acos, math.pi, table.remove, table.insert

function round( num )
	return floor( num + 0.5 )
end


function sgn( n )
	return n < 0 and -1 or 1
end

function sortSpecial( a )
	local flip;
	local temp;
	
	repeat
		flip = false
		for i = 1, #a - 1 do
			if ( a[i+1] >= 0 and a[i] > a[i+1] ) or ( a[i] < 0 and a[i+1] >= 0 ) then
				flip = true
				temp = a[i]
				a[i] = a[i+1]
				a[i+1] = temp
			end
		end
	until not flip

	return a
end

function bezierCoeffs( P0, P1, P2, P3 )
	local Z = {};
	Z[1] = -P0 + 3 * P1 + -3 * P2 + P3; 
	Z[2] = 3 * P0 - 6 * P1 + 3 * P2;
	Z[3] = -3 * P0 + 3 * P1;
	Z[4] = P0;
	return Z;
end

function cubicRoots( P )

	local a = P[1]
	local b = P[2]
	local c = P[3]
	local d = P[4]
	
	local A = b / a
	local B = c / a
	local C = d / a

	local Q, R, D, S, T, Im 

	local Q = ( 3 * B - A ^ 2 )/9;
	local R = ( 9 * A * B - 27 * C - 2 * A ^ 3 ) / 54;
	local D = Q ^ 3 + R ^ 2;	

	local t = {}
	
	if D >= 0 then 
		local v1, v2, third = R + D^.5, R - D^.5, 1 / 3
		local T = sgn( v1 ) * abs( v1 ) ^ third
		local S = sgn( v2 ) * abs( v2 ) ^ third

		t[1] = A / -3 + ( S + T ) 
		t[2] = A / -3 - ( S + T ) / 2 
		t[3] = A / -3 - ( S + T ) / 2 
		local Im = abs( 3^.5 * ( S - T ) / 2 ) 
		
		if Im ~= 0 then
			t[2]=-1
			t[3]=-1
		end
	else 
		local th = acos( R / (-( Q^3) )^.5 )
		
		t[1] = 2 * ( -Q )^.5 * cos( th / 3 ) - A / 3
		t[2] = 2 * ( -Q )^.5 * cos( ( th + 2 * PI ) / 3 ) - A / 3
		t[3] = 2 * ( -Q )^.5 * cos( ( th + 4 * PI ) / 3 ) - A / 3
		local Im = 0.0
	end
	
	
	for i = 1, 3 do
		if t[i] < 0 or t[i] > 1 then
			t[i] = -1
		end
	end
				
	
	t = sortSpecial( t );
	
	return t;
end

ERROR_MARGIN = 0.001
function aproxEqual( n1, n2 )
	return n2 and ( n1 == n2 or ( n1 + ERROR_MARGIN > n2 and n1 - ERROR_MARGIN < n2 ) )
end]],_C_1N)_C_K("/src/classes/Graphics/RoundedRectangleMask.luo",1,[[local function corner( pixels, width, height, radius, position ) 
		if radius <= 0 then return end
		
		local minDistance = radius
		if radius % 2 ~= 0 then 
			radius = radius + 0.75
		else
			radius = radius + 0.5
		end

		local centerX = ( bit.band( position, 2 ) == 0 ) and radius or width - radius + 1
		local centerY = ( bit.band( position, 1 ) == 0 ) and radius or height - radius + 1
		local minX = ( bit.band( position, 2 ) == 0 ) and 1 or width - minDistance + 1
		local minY = ( bit.band( position, 1 ) == 0 ) and 1 or height - minDistance + 1

		for x = minX, minX + radius - 1 do
			local xDistance = ( x - centerX ) ^ 2
			for y = minY, minY + radius - 1 do
				local distance = ( xDistance + ( y - centerY) ^ 2 ) ^ 0.5
				if distance <= minDistance then
					pixels[(y - 1) * width + x] = true
				end
			end
		end
	end]],_C_1Q)_C_K("/src/classes/Graphics/ScaleableCanvas.luo",1,[[ceil, floor = math.ceil, math.floor]],_C_1R)_C_K("/src/classes/Graphics/TextMask.luo",1,[[alignments = Font.alignments

ceil, floor = math.ceil, math.floor

NO_CHAR_MAP = {
	width = 5;
	{ true,	 true,	true,  true, true };
	{ true, false, false, false, true };
	{ true, false, false, false, true };
	{ true, false, false, false, true };
	{ true, false, false, false, true };
	{ true,	 true,	true,  true, true };
}]],_C_1W)_C_K("/src/classes/Icon.luo",1,[[ucgValues = Image.ucgValues
iconValues = {
	SIGNATURE = 0xFF2138;
	DEFAULT_WIDTH = 32;
	DEFAULT_HEIGHT = 32;
}

mimes = Metadata.mimes
ICON_MIMES = { mimes.SICON }
availableMimes = {}
for i, v in ipairs( ICON_MIMES ) do
	availableMimes[v] = true
end]],_C_1a)_C_K("/src/classes/Image.luo",1,[[TRANSPARENT = Graphics.colours.TRANSPARENT

hexnums = { [10] = "a", [11] = "b", [12] = "c", [13] = "d", [14] = "e" , [15] = "f" }
function getHexOf(colour)
	if colour == TRANSPARENT or not colour or not tonumber(colour) then
		return " "
	end
	local value = math.log(colour)/math.log(2)
	if value > 9 then
			value = hexnums[value]
	end
	return value
end

function getColourOf(hex)
	if hex == ' ' then
		return TRANSPARENT
	end
	local value = tonumber(hex, 16)
	if not value then return nil end
	value = math.pow(2,value)
	return value
end

function split(a,e)
	local t,e=e or":",{}
	local t=string.format("([^%s]+)",t)
	a:gsub(t,function(t)e[#e+1]=t end)
	return e
end

mimes = Metadata.mimes
ucgValues = {
	SIGNATURE = 0xFF2137,
	VERSION = 3
}

IMAGE_MIMES = { mimes.IMAGE, mimes.UCG, mimes.SICON }
availableMimes = {}
for i, v in ipairs( IMAGE_MIMES ) do
	availableMimes[v] = true
end

scaleMethods = {
	STRETCH = 1;
	FIT = 2;
	COVER = 3;
}

function newBuffer(mode, source)
	local bytes = {}
	local bits = {}
	
	if type(source) == "table" then
		local b
		for a = 1, #source do
			b = source[a]
			if type(b) == "number" and b >= 0 and b < 256 then
				bytes[#bytes +1] = math.floor(b)
			else
				bytes[#bytes +1] = 0
			end
		end
	elseif type(source) == "string" then
		for a = 1, #source do
			bytes[#bytes +1] = source:sub(a, a):byte()
		end
	end
	
	local bitcache = {}
	local pointer = 1
	local bitcounter = 0
	
	local buf = {}
	if mode == "w" then
		bitcache = 0
		buf.vcfaces = {}
		
		local function writeByteRaw(b)
			bytes[pointer] = b
			pointer = pointer +1
		end
		
		local function flushBitcacheReal()
			local rest = bitcounter % 8
			local low, x
			for a = bitcounter, 8, -8 do
				low = 2^(a-8)
				bitcache = bitcache % 2^a
				x = (bitcache - (bitcache % low)) / low
				writeByteRaw(x)
			end
			bitcache = bitcache % 2^rest
			bitcounter = rest
		end
	
		local function flushBitcache()
			if bitcounter >= 8 then
				flushBitcacheReal()
			end
		end
		
		local function writeBit(b)
			bitcache = bitcache *2
			if b == 1 or b == true then
				bitcache = bitcache +1 
			end
			bitcounter = bitcounter +1
			
			if bitcounter >= 8 then
				flushBitcacheReal()
			end
		end
		buf.writeBit = writeBit
		
		local function writeByte(b)
			if bitcounter == 0 then
				writeByteRaw(b)
				return
			end
			
			bitcache = (bitcache * 256) + b
			bitcounter = bitcounter + 8
			
			if bitcounter >= 8 then
				flushBitcacheReal()
			end
		end
		buf.writeByte = writeByte
		
		local function writeNumber(nbits, n)
			if nbits == 1 then
				writeBit(n)
			end
			
			bitcache = (bitcache * 2^nbits) + n
			bitcounter = bitcounter + nbits
			
			if bitcounter >= 8 then
				flushBitcacheReal()
			end
		end
		buf.writeNumber = writeNumber
		
		function buf.writeBytes(bs)
			for a = 1, #bs do
				writeByte(bs[a])
			end
		end
		
		function buf.writeBits(bits)
			for a = 1, #bits do
				writeBit(bits[a])
			end
		end
		
		function buf.writeChar(c)
			writeByte(c:byte())
		end
		
		function buf.writeWord(b)
			if bitcounter == 0 then
				writeByteRaw((b-(b%256))/256)
				writeByteRaw(b%256)
				return
			end
			
			bitcache = (bitcache * 2^16) + b
			bitcounter = bitcounter + 16
			
			flushBitcacheReal()
		end
		
		function buf.writeInteger(b)
			if bitcounter == 0 then
				local h1, h2, h3 = 2^24, 2^16, 2^8
				writeByteRaw((b-(b%h1))/h1)
				writeByteRaw(((b%h1)-(b%h2))/h2)
				writeByteRaw(((b%h2)-(b%h3))/h3)
				writeByteRaw(b%h3)
				return
			end
			
			bitcache = (bitcache * 2^32) + b
			bitcounter = bitcounter + 32
			
			flushBitcacheReal()
		end
		
		function buf.finishByte(b)
			local rest = 8 - (bitcounter % 8)
			if rest == 8 then
				rest = 0
			end
			bitcache = bitcache * 2^rest
			bitcounter = bitcounter + rest
			flushBitcacheReal()
		end
		
		function buf.getBytes()
			return bytes
		end
		
		function buf.writeToFile(path)
			local w = fs.open(path, "wb")
			for a = 1, #bytes do
				w.write(bytes[a])
			end
			w.close()
		end
		
		function buf.writeToBuffer(b)
			if b.writeBytes and b.writeBits then
				b.writeBytes(bytes)
				b.writeBits(bitcache)
			end
		end
		
		function buf.readFromFile(path)
			local r = fs.open(path, "rb")
			local b = r.read()
			while b do
				buf.writeByte(b)
				b = r.read()
			end
			r.close()
		end
		
		function buf.readFromBuffer(r)
			if r.readByte and r.readBit then
				local b = r.readByte()
				while b do
					buf.writeByte(b)
					b = r.readByte()
				end
				b = r.readBit()
				while b do
					buf.writeBit(b)
					b = r.readBit()
				end
			end
		end
		
		function buf.getSize()
			return #bytes
		end
		
		local ternaryCache = {} 
		local ternaryToHuff = {}
		local function writeTernary(t)
			local v = ternaryCache[t]
			bitcache = bitcache * 2^v.l + v.v
			bitcounter = bitcounter + v.l
			
			if bitcounter >= 8 then
				flushBitcacheReal()
			end
		end
		buf.writeTernary = writeTernary
		
		function buf.newVariableCodeInterface()
			local f = {}
			
			local vcodeToTernary = {}
			local valueToTernary = {}
			
			function f.loadCodes(t)
				local n, n2, len
				for a, b in pairs(t) do
					n, n2, len = 0, 0, #b
					for c = 1, len do
						if b[c] == 1 then
							n = n + (3^(c-1))
							n2 = n2 + (2^(len-c))
						end
					end
					n = n + ((3^len)-1)/2
					ternaryCache[n] = {l=len, v=n2}
					
					vcodeToTernary[b] = n
					valueToTernary[a] = n
				end
				
				return valueToTernary, vcodeToTernary
			end
			
			function f.loadCode(value, code)
				n, n2, len = 0, 0, #code
				for a = 1, len do
					if code[a] == 1 then
						n = n + (3^(a-1))
						n2 = n2 + (2^(len-c))
					end
				end
				n = n + ((3^len)-1)/2
				ternaryCache[n] = {l=len, v=n2}
				
				vcodeToTernary[code] = n
				valueToTernary[value] = n
				
				return valueToTernary, vcodeToTernary
			end
			
			function f.getConversion_valueToTernary()
				return valueToTernary
			end
			
			function f.getConversion_vcodeToTernary()
				return vcodeToTernary
			end
			
			f.writeTernary = writeTernary
			
			function f.writeValue(a)
				local v = valueToTernary[a]
				if v then
					local x = ternaryCache[v]
					local cacheBefore = bitcache
					local counterBefore = bitcounter
					bitcache = bitcache * 2^x.l + x.v
					bitcounter = bitcounter + x.l
					if bitcounter >= 8 then
						flushBitcacheReal()
					end
				else
					error("valueToTernary: Ternary value not found! Key: "..tostring(a), 2)
				end
			end
			
			function f.writeVCode(v)
				local val = vcodeToTernary[v]
				if val then
					local v2 = ternaryCache[val]
					bitcache = bitcache * 2^v2.l + v2.v
					bitcounter = bitcounter + v2.l
					
					if bitcounter >= 8 then
						flushBitcacheReal()
					end
				else
					error("vcodeToTernary: Ternary value not found! Key: "..tostring(v), 2)
				end
			end
			
			local _ = setmetatable({}, {__index = f, __newindex = function() end, metatable = "protected"})
			local id = #buf.vcfaces +1
			f.id = id
			buf.vcfaces[id] = _
			return _, id
		end
	elseif mode == "r" then
		local function readByteRaw()
			local b = bytes[pointer]
			pointer = pointer +1
			return b
		end
		
		local function readBit()
			if bitcache[1] == nil or bitpointer > 8 then
				local by = readByteRaw()
				if by then
					bitcache = {
						by >= 128,
						(by % 128) >= 64,
						(by % 64) >= 32,
						(by % 32) >= 16,
						(by % 16) >= 8,
						(by % 8) >= 4,
						(by % 4) >= 2,
						(by % 2) >= 1
					}
				else
					bitcache = {}
				end
				bitpointer = 1
			end
			
			local b = bitcache[bitpointer]
			bitpointer = bitpointer +1
			if b == false then
				return 0
			elseif b == true then
				return 1
			end
			return b
		end
		buf.readBit = readBit
		
		local function readByte()
			if bitpointer == 1 then
				return readByteRaw()
			else
				return readBit()*128 + readBit()*64 + readBit()*32 + readBit()*16 + readBit()*8 + readBit()*4 + readBit()*2 + readBit()
			end
		end
		buf.readByte = readByte
		
		function buf.readBits(nbits)
			local t = {}
			for a = 1, nbits do
				t[a] = readBit()
			end
			return t
		end
		
		function buf.readNumber(nbits)
			if nbits <= 0 then
				return
			elseif nbits == 1 then
				return readBit()
			else
				local n=0
				for a=nbits-1, 0, -1 do
					local bit = readBit()
					if bit then
						n=n+ bit*2^a
					else
						return nil
					end
				end
				return n
			end
		end
		function buf.readWord()
			return readByte() * 256 + readByte()
		end
		function buf.readInteger()
			return readByte()*2^24 + readByte()*2^16 + readByte()*256 + readByte()
		end
		
	else
		error("invalid buffer mode: "..tostring(mode), 2)
	end
	
	function buf.getPointer()
		return pointer
	end
	function buf.getBitPointer()
		return bitcounter or bitpointer
	end
	function buf.getType()
		return mode
	end
	
	return setmetatable({}, {__index=buf, __newindex=function() end, metatable="protected"})
end]],_C_1b)_C_K("/src/classes/Interface/Interface.luo",1,[[RESERVED_NAMES = { super = true, static = true, metatable = true, 
class  = true, raw = true, application = true, className = true, typeOf = true, isDefined = true, isDefinedProperty = true, isDefinedfunction = true }
TYPETABLE_ALLOWS_NIL = 4]],_C_1c)_C_K("/src/classes/KeyboardShortcut.luo",1,[[function split(a,e)
	local t,e=e or":",{}
	local t=string.format("([^%s]+)",t)
	a:gsub(t,function(t)e[#e+1]=t end)
	return e
end]],_C_1d)_C_K("/src/classes/Settings.luo",1,[[hasInitialised = false

FILE_NAME = "settings.suserdata"
TYPETABLE_NAME, TYPETABLE_TYPE, TYPETABLE_CLASS, TYPETABLE_ALLOWS_NIL, TYPETABLE_IS_VAR_ARG, TYPETABLE_IS_LINK, TYPETABLE_IS_ENUM, TYPETABLE_ENUM_ITEM_TYPE, TYPETABLE_HAS_DEFAULT_VALUE, TYPETABLE_IS_DEFAULT_VALUE_REFERENCE, TYPETABLE_DEFAULT_VALUE = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
SYSTEM_KEYS = { defaults = true; settingsFile = true; }]],_C_1e)_C_K("/src/classes/Symbols/Symbol.luo",1,[[symbolClasses = {}]],_C_1r)_C_K("/src/classes/ThumbnailIcon.luo",1,[[iconValues = Icon.iconValues
scaleMethods = Image.scaleMethods
DEFAULT_WIDTH, DEFAULT_HEIGHT = iconValues.DEFAULT_WIDTH, iconValues.DEFAULT_HEIGHT
FLAP_SIZE, OUTLINE_SIZE, MINIMUM_SIZE = 7, 3, 12
GREY, WHITE, LIGHT_GREY, TRANSPARENT = Graphics.colours.GREY, Graphics.colours.WHITE, Graphics.colours.LIGHT_GREY, Graphics.colours.TRANSPARENT]],_C_1y)_C_K("/src/classes/Utilities/KeyboardShortcutManager.luo",1,[[keyStrings = {
	nil,	"1",	"2",	"3",	"4",
	"5",	"6",	"7",	"8",	"9",
	"0",	"-",	"=",	"backspace","tab",
	"q",	"w",	"e",	"r",	"t",
	"y",	"u",	"i",	"o",	"p",
	"(",	")",	"enter","ctrl","a",
	"s",	"d",	"f",	"g",	"h",
	"j",	"k",	"l",	";",	"'",
	"`",	"shift","\\",	"z",	"x",
	"c",	"v",	"b",	"n",	"m",
	",",	".",	"/",	"shift",nil,
	"alt",	"space",nil,	"f1",	"f2",
	"f3",	"f4",	"f5",	"f6",	"f7",
	"f8",	"f9",	"f10",	[87] = "f11",
	[88] = "f12",	[153] = "ctrl",
	[199] = "home",	[207] = "end",
	[184] = "alt",	[200] = "up",
	[203] = "left",	[205] = "right",
	[208] = "down",	[211] = "delete",				
	[219] = "ctrl",	[220] = "ctrl",				
}

keySymbols = {
	
	backspace = string.char( 144 );
	enter = string.char( 157 );
	ctrl = string.char( 141 );
	shift = string.char( 129 );
	alt = string.char( 143 );
}]],_C_20)_C_K("/src/classes/Utilities/XML.luo",1,[[function fromXMLString( value )
	value = string.gsub(value, "&#x( [%x]+ )%;",
		function( h ) 
			return string.char( tonumber(h,16) )
		end);
	value = string.gsub(value, "&#([0-9]+)%;",
		function( h )
			return string.char( tonumber(h,10) )
		end);
	value = string.gsub (value, "&quot;", "\\");
	value = string.gsub (value, "&quot;", "\"");
	value = string.gsub (value, "&apos;", "'");
	value = string.gsub (value, "&gt;", ">");
	value = string.gsub (value, "&lt;", "<");
	value = string.gsub (value, "&amp;", "&");
	return value;
end

function lex( text )
	local tokens = {}
	local pos, line, char = 1, 1, 1
	local function push( type, value )
		tokens[#tokens + 1] = {
			type = type;
			value = value;
			char = char;
			line = line;
		}
	end
	while pos <= #text do
		local c = text:sub( pos, pos )
		if c == "\n" then
			line = line + 1
			char = 1
			pos = pos + 1
		elseif c:find "%s" then
			pos = pos + #text:match( "%s+", pos )
		elseif c == "\"" or c == "'" then
			local e, f, l = false, false, line
			for i = pos + 1, #text do
				if e then
					e = false
				elseif text:sub( i, i ) == "\\" then
					e = true
				elseif text:sub( i, i ) == c then
					push( "string", fromXMLString( text:sub( pos + 1, i - 1 ) ) )
					pos = i + 1
					f = true
					break
				elseif text:sub( i, i ) == "\n" then
					line = line + 1
				end
			end
			if not f then
				return false, "[" .. l .. " (char:" .. char .. ")]: expected '" .. c .. "' to close string"
			end
		elseif c:find "[a-zA-Z%-%._]" then
			local v = text:match( "[a-zA-Z%d%-%._]+", pos )
			push( "word", v )
			pos = pos + #v
		elseif text:find( "^#?%.?%d", pos ) then
			local v = text:match( "^#?%d*%.?%d+%%?", pos )
			pos = pos + #v
			local percentage = false
			if v:sub( -1 ) == "%" then
				v = v:sub( 1, -2 )
				percentage = true
			end
			if v:sub( 1, 1 ) == "#" then
				v = tonumber( v:sub( 2 ), 16 )
			else
				v = tonumber( v )
			end
			if percentage then
				v = v / 100
			end
			push( "number", v )
		elseif text:find( "^<!%-%-.-%-%->", pos ) then
			pos = pos + #text:match( "^<!%-%-.-%-%->", pos )
		else
			push( "symbol", c )
			pos = pos + 1
		end
	end
	return tokens
end

parser = {}
function new( tokens )
	local t = setmetatable( {}, { __index = self } )
	t.tokens = tokens
	t.pos = 1
	t.last = tokens[1]
	t.exception = false
	return t
end

function throw( message )
	if self.last then
		self.exception = "[line " .. self.last.line .. ", char " .. self.last.char .. "]: " .. message
	else
		self.exception = "[unknown]: " .. message
	end
	return false, self.exception
end

function thrown()
	return self.exception
end

function peek()
	return self.tokens[self.pos]
end

function next()
	self.pos = self.pos + 1
	self.last = self.tokens[self.pos] or self.last
	return self.tokens[self.pos]
end

function test( type, value )
	local token = self:peek()
	return token and token.type == type and ( not value or token.value == value )
end

function parseXMLInitialiser()
	local closing = false

	if self:test( "symbol", "/" ) then
		closing = true
		self:next()
	end

	if not self:test "word" then
		return self:throw "expected name of XML item"
	end

	local name = self:peek().value
	self:next()

	if closing then
		if self:test( "symbol", ">" ) then
			self:next()
		else
			return self:throw "expected '>' to close closing tag"
		end
	end

	return name, closing
end

function parseXMLAttributes()
	local attributes = {}
	while true do
		if self:test "word" then
			local name = self:peek().value
			self:next()

			if self:test( "symbol", "=" ) or self:test( "symbol", ":" ) then
				local v = self:next()

				if v.type == "number" or v.type == "string" then
					attributes[name] = v.value
				elseif v.type == "word" then
					local word = v.value
					if word == "true" or word == "false" then
						word = word == "true"
					end
					attributes[name] = word
				else
					return self:throw( "unexpected " .. v.type .. " as attribute value" )
				end

				self:next()
			else
				attributes[name] = true
				self:next()
			end
		elseif self:test( "symbol", "/" ) then
			self:next()
			if not self:test( "symbol", ">" ) then
				return self:throw "expected '>' after '/' to close opening tag"
			end

			self:next()
			return attributes, false
		elseif self:test( "symbol", ">" ) then
			self:next()
			return attributes, true
		elseif not self:peek() then
			return attributes, false
		else
			return self:throw( "unexpected " .. self:peek().type .. " in attributes" )
		end
	end
end

function parseXMLBody()
	local blocks = {}

	while self:peek() do
		while not self:test( "symbol", "<" ) do
			self:next()
		end

		self:next()
		local type, isClosing = self:parseXMLInitialiser()
		if self:thrown() then
			return false, self.exception
		end

		if isClosing then
			return blocks, type
		end

		local attributes, hasBody = self:parseXMLAttributes()
		if self:thrown() then
			return false, self.exception
		end

		local body, closer
		if hasBody then
			body, closer = self:parseXMLBody()
			if self:thrown() then
				return false, self.exception
			end
			if not closer then
				return self:throw( "expected '</" .. type .. ">' to close XML item, got nothing" )
			elseif closer ~= type then
				return self:throw( "expected '</" .. type .. ">' to close XML item, got '</" .. closer .. ">'" )
			end
		end

		blocks[#blocks + 1] = {
			type = type;
			attributes = attributes;
			body = body;
		}
	end

	return blocks
end]],_C_23)_C_K("/src/classes/Views/Button.luo",1,[[SHADOW_RATIO = Canvas.shadows.SHADOW_RATIO]],_C_24)_C_K("/src/classes/Views/Containers/ApplicationContainer.luo",1,[[w, h = term.getSize()]],_C_26)_C_K("/src/classes/Views/Containers/Container.luo",1,[[pins = View.pins
pinProperties = {}]],_C_27)_C_K("/src/classes/Views/Containers/Menu.luo",1,[[MENU_OWNER_LEFT_OFFSET = 5
MENU_OWNER_TOP_OFFSET = 9
MENU_CONTEXT_OFFSET = 5]],_C_2G)_C_K("/src/classes/Views/Containers/ScrollView.luo",1,[[exp = math.exp

SCROLL_DECAY = -8
SCROLL_SPEED = 180
SCROLL_ACCELERATION = 1.2
SPEED_CUTOFF = 0.2]],_C_2J)_C_K("/src/classes/Views/Containers/SegmentContainer.luo",1,[[SHADOW_RATIO = Canvas.shadows.SHADOW_RATIO]],_C_2K)_C_K("/src/classes/Views/Containers/Tree/TreeNode.luo",1,[[clickableCursor, cursor = ClickableCursor.static, Cursor.static]],_C_2c)_C_K("/src/classes/Views/Containers/Window/Window.luo",1,[[RESIZE_MARGIN_X, RESIZE_MARGIN_Y = 3, 4]],_C_2d)_C_K("/src/classes/Views/MenuBarItem.luo",1,[[TEXT_MARGIN = 12]],_C_2h)_C_K("/src/classes/Views/MenuButton.luo",1,[[SHADOW_RATIO = Canvas.shadows.SHADOW_RATIO]],_C_2i)_C_K("/src/classes/Views/SegmentButton.luo",1,[[SHADOW_RATIO = Canvas.shadows.SHADOW_RATIO]],_C_2o)_C_K("/src/classes/Views/SymbolButton.luo",1,[[SHADOW_RATIO = Canvas.shadows.SHADOW_RATIO]],_C_2r)_C_K("/src/classes/Views/SymbolSegmentButton.luo",1,[[SHADOW_RATIO = Canvas.shadows.SHADOW_RATIO]],_C_2s)_C_K("/src/classes/Views/TextBox.luo",1,[[CURSOR_ANIMATION_SPEED = 0.4
CURSOR_ANIMATION_EASING = Animation.easings.OUT_QUART
SCROLL_SPEED = 4

sub = string.sub 
concat = table.concat
floor = math.floor

SELECTION_DIRECTIONS = {
	BOTH = 0;
	LEFT = -1;
	RIGHT = 0;
}]],_C_2t)_C_K("/src/classes/Views/View.luo",1,[[MAX_DOUBLE_CLICK_TIME = 0.8
MIN_MOUSE_HOLD_TIME = 0.3

ANIMATION_DEFAULT_TIME = 0.3
DEFAULT_EASING = Animation.easings.IN_OUT_SINE

pins = {
	LEFT = "left",
	RIGHT = "right",
	TOP = "top",
	BOTTOM = "bottom",
}]],_C_2u)_C_K("/src/classes/Views/Window Buttons/WindowButton.luo",1,[[BUTTON_DIAMETER = 5]],_C_2x)setmetatable(FileAssociation,{__index=setmetatable({static=_C_Ae},_C_3R),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Aw,nil,_C_Al,_C_Am,_C_13,"FileAssociation",_C_B3,_C_B4,nil,nil,_C_B5,...)end,__tostring=function()return _C_3Q end})setmetatable(FakeFileAssociation,{__index=setmetatable({static=_C_B6},_C_30),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_BG,nil,_C_BC,_C_BD,_C_12,"FakeFileAssociation",_C_BH,_C_BI,_C_BK,nil,_C_BJ,...)end,__tostring=function()return _C_2z end})local function _C_09U(t,n)if type(t)~="table"then error("Compiler Error: Value of enum "..n.." is not a table!",0)end return t end _C_A0=_C_09U(_C_K("/src/classes/Font/Font.luo",37,[[return {
		LEFT = 0;
		CENTER = 1;
		CENTRE = 1;
		RIGHT = 2;
		JUSTIFIED = 3;
	}]],_C_1F),"Font.alignments")local _C_09V="enum 'Font.alignments': " .. tostring(_C_A0):sub(8)setmetatable(_C_A0,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09V end})for k,v in pairs(_C_A0)do if _C_Ar(v)then _C_G("Font.alignments",k,"Number",v)end _C_A1[v]=true end setmetatable(Font,{__index=setmetatable({static=_C_BL,alignments=_C_A0},_C_8m),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Bh,nil,_C_Bc,_C_Bd,_C_1F,"Font",_C_Bi,_C_Bj,nil,nil,_C_Bk,...)end,__tostring=function()return _C_8l end})setmetatable(BitmapFont,{__index=setmetatable({static=_C_Bl},_C_32),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_C2,nil,_C_C0,_C_C1,_C_1E,"BitmapFont",_C_C3,_C_C4,_C_C6,nil,_C_C5,...)end,__tostring=function()return _C_31 end})setmetatable(Symbol,{__index=setmetatable({static=_C_C7},_C_34),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_CI,_C_CJ,_C_1r,"Symbol",_C_9z,_C_9z,nil,nil,_C_CK,...)end,__tostring=function()return _C_33 end})setmetatable(Mask,{__index=setmetatable({static=_C_CL},_C_36),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_CY,nil,_C_CP,_C_CQ,_C_1L,"Mask",_C_CZ,_C_Ca,nil,nil,_C_Cb,...)end,__tostring=function()return _C_35 end})_C_A2=_C_09U(_C_K("/src/classes/Events/Event.luo",14,[[return {
		BEFORE = 1;
		AFTER = 2;
	}]],_C_0A),"Event.phases")local _C_09W="enum 'Event.phases': " .. tostring(_C_A2):sub(8)setmetatable(_C_A2,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09W end})for k,v in pairs(_C_A2)do if _C_Ar(v)then _C_G("Event.phases",k,"Number",v)end _C_A3[v]=true end setmetatable(Event,{__index=setmetatable({static=_C_Cc,phases=_C_A2},_C_7j),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Ct,nil,_C_Cn,_C_Co,_C_0A,"Event",_C_Cx,_C_Cy,nil,nil,_C_Cz,...)end,__tostring=function()return _C_7i end})setmetatable(InterfaceEvent,{__index=setmetatable({static=_C_D0},_C_6N),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_DB,nil,_C_D9,_C_DA,_C_0I,"InterfaceEvent",_C_DC,_C_DD,_C_DF,nil,_C_DE,...)end,__tostring=function()return _C_6M end})setmetatable(ChildRepositionedInterfaceEvent,{__index=setmetatable({static=_C_DG},_C_38),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_DS,nil,_C_DP,_C_DQ,_C_0E,"ChildRepositionedInterfaceEvent",_C_DT,_C_DU,_C_DW,nil,_C_DV,...)end,__tostring=function()return _C_37 end})setmetatable(Cursor,{__index=setmetatable({static=_C_DX},_C_3d),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_Ds,_C_Dt,_C_02,"Cursor",_C_9z,_C_9z,nil,nil,_C_Du,...)end,__tostring=function()return _C_3c end})setmetatable(ResizeVerticalCursor,{__index=setmetatable({static=_C_Dv},_C_3A),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_E3,_C_E4,_C_05,"ResizeVerticalCursor",_C_9z,_C_9z,_C_E6,nil,_C_E5,...)end,__tostring=function()return _C_39 end})setmetatable(Exception,{__index=setmetatable({static=_C_E7},_C_5t),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_EE,nil,_C_EB,_C_EC,_C_0u,"Exception",_C_EF,_C_EG,nil,nil,_C_EH,...)end,__tostring=function()return _C_5s end})setmetatable(FatalException,{__index=setmetatable({static=_C_EI},_C_6t),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_EP,nil,_C_EN,_C_EO,_C_0v,"FatalException",_C_EQ,_C_ER,_C_ET,nil,_C_ES,...)end,__tostring=function()return _C_6s end})setmetatable(ClassException,{__index=setmetatable({static=_C_EU},_C_7l),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Eb,nil,_C_EZ,_C_Ea,_C_0m,"ClassException",_C_Ec,_C_Ed,_C_Ef,nil,_C_Ee,...)end,__tostring=function()return _C_7k end})setmetatable(ArgumentValueTypeParsingClassException,{__index=setmetatable({static=_C_Eg},_C_3C),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Eo,nil,_C_El,_C_Em,_C_0l,"ArgumentValueTypeParsingClassException",_C_Ep,_C_Eq,_C_Es,nil,_C_Er,...)end,__tostring=function()return _C_3B end})_C_A4=_C_09U(_C_K("/src/classes/Views/View.luo",54,[[return pins]],_C_2u),"View.pins")local _C_09X="enum 'View.pins': " .. tostring(_C_A4):sub(8)setmetatable(_C_A4,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09X end})for k,v in pairs(_C_A4)do if _C_Ai(v)then _C_G("View.pins",k,"String",v)end _C_A5[v]=true end setmetatable(View,{__index=setmetatable({static=_C_Et,pins=_C_A4},_C_3N),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_FY,nil,_C_Ex,_C_Ey,_C_2u,"View",_C_G0,_C_G1,nil,_C_Ft,_C_G2,...)end,__tostring=function()return _C_3M end})_C_A6=_C_09U(_C_K("/src/classes/Views/TextBox.luo",54,[[return SELECTION_DIRECTIONS]],_C_2t),"TextBox.selectionDirections")local _C_09Y="enum 'TextBox.selectionDirections': " .. tostring(_C_A6):sub(8)setmetatable(_C_A6,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09Y end})for k,v in pairs(_C_A6)do if _C_Ar(v)then _C_G("TextBox.selectionDirections",k,"Number",v)end _C_A7[v]=true end setmetatable(TextBox,{__index=setmetatable({static=_C_G3,selectionDirections=_C_A6},_C_3E),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Gb,nil,_C_G8,_C_G9,_C_2t,"TextBox",_C_Gs,_C_Gt,_C_Gv,_C_Gq,_C_Gu,...)end,__tostring=function()return _C_3D end})_C_A8=_C_09U(_C_K("/src/classes/Image.luo",457,[[return ucgValues]],_C_1b),"Image.ucgValues")local _C_09Z="enum 'Image.ucgValues': " .. tostring(_C_A8):sub(8)setmetatable(_C_A8,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09Z end})for k,v in pairs(_C_A8)do if _C_Ar(v)then _C_G("Image.ucgValues",k,"Number",v)end _C_A9[v]=true end _C_AA=_C_09U(_C_K("/src/classes/Image.luo",458,[[return scaleMethods]],_C_1b),"Image.scaleMethods")local _C_09a="enum 'Image.scaleMethods': " .. tostring(_C_AA):sub(8)setmetatable(_C_AA,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09a end})for k,v in pairs(_C_AA)do if _C_Ar(v)then _C_G("Image.scaleMethods",k,"Number",v)end _C_AB[v]=true end setmetatable(Image,{__index=setmetatable({static=_C_Gw,ucgValues=_C_A8,scaleMethods=_C_AA},_C_8X),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_HP,nil,_C_HE,_C_HF,_C_1b,"Image",_C_HS,_C_HT,nil,_C_HR,_C_HU,...)end,__tostring=function()return _C_8W end})_C_AC=_C_09U(_C_K("/src/classes/Icon.luo",17,[[return iconValues]],_C_1a),"Icon.iconValues")local _C_09b="enum 'Icon.iconValues': " .. tostring(_C_AC):sub(8)setmetatable(_C_AC,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09b end})for k,v in pairs(_C_AC)do if _C_Ar(v)then _C_G("Icon.iconValues",k,"Number",v)end _C_AD[v]=true end setmetatable(Icon,{__index=setmetatable({static=_C_HV,iconValues=_C_AC},_C_3G),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Hl,nil,_C_Hg,_C_Hh,_C_1a,"Icon",_C_Ho,_C_Hp,_C_Hr,_C_Hn,_C_Hq,...)end,__tostring=function()return _C_3F end})setmetatable(ProgramEnvironment,{__index=setmetatable({static=_C_Hs},_C_3I),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_I2,nil,_C_Hw,_C_Hx,_C_b,"ProgramEnvironment",_C_I4,_C_I5,nil,nil,_C_I6,...)end,__tostring=function()return _C_3H end})setmetatable(ClipboardData,{__index=setmetatable({static=_C_I7},_C_3K),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_IB,_C_IC,_C_u,"ClipboardData",_C_ID,_C_IE,nil,nil,_C_IF,...)end,__tostring=function()return _C_3J end})_C_AE=_C_09U(_C_K("/src/classes/Graphics/Canvas.luo",15,[[return {
		property SHADOW_RATIO SHADOW_RATIO
		property SHADOW_COLOUR SHADOW_COLOUR
	}]],_C_1H),"Canvas.shadows")local _C_09c="enum 'Canvas.shadows': " .. tostring(_C_AE):sub(8)setmetatable(_C_AE,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09c end})for k,v in pairs(_C_AE)do if _C_Ar(v)then _C_G("Canvas.shadows",k,"Number",v)end _C_AF[v]=true end setmetatable(Canvas,{__index=setmetatable({static=_C_IG,shadows=_C_AE},_C_3j),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_IX,nil,_C_IK,_C_IL,_C_1H,"Canvas",_C_Ic,_C_Id,nil,_C_Ia,_C_Ie,...)end,__tostring=function()return _C_3i end})setmetatable(ScaleableCanvas,{__index=setmetatable({static=_C_If},_C_3P),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Iq,nil,_C_Ik,_C_Il,_C_1R,"ScaleableCanvas",_C_It,_C_Iu,_C_Iw,_C_Is,_C_Iv,...)end,__tostring=function()return _C_3O end})_C_AG=_C_09U(_C_K("/src/classes/Cursors/BridgedCursor.luo",12,[[return {bridgeKeys}]],_C_00),"BridgedCursor.bridgeKeys")local _C_09d="enum 'BridgedCursor.bridgeKeys': " .. tostring(_C_AG):sub(8)setmetatable(_C_AG,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09d end})for k,v in pairs(_C_AG)do if _C_Ar(v)then _C_G("BridgedCursor.bridgeKeys",k,"Number",v)end _C_AH[v]=true end setmetatable(BridgedCursor,{__index=setmetatable({static=_C_Ix,bridgeKeys=_C_AG},_C_3T),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_J8,_C_J9,_C_00,"BridgedCursor",_C_9z,_C_9z,_C_JB,nil,_C_JA,...)end,__tostring=function()return _C_3S end})setmetatable(CharacterEvent,{__index=setmetatable({static=_C_JC},_C_3V),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_JO,nil,_C_JL,_C_JM,_C_0V,"CharacterEvent",_C_JP,_C_JQ,_C_JS,nil,_C_JR,...)end,__tostring=function()return _C_3U end})setmetatable(Document,{__index=setmetatable({static=_C_JT},_C_3X),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Jn,nil,_C_JZ,_C_Ja,_C_1z,"Document",_C_Jq,_C_Jr,nil,_C_Jp,_C_Js,...)end,__tostring=function()return _C_3W end})setmetatable(Button,{__index=setmetatable({static=_C_Jt},_C_9c),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_K9,nil,_C_Jy,_C_Jz,_C_24,"Button",_C_KF,_C_KG,_C_KI,_C_KE,_C_KH,...)end,__tostring=function()return _C_9b end})setmetatable(SegmentButton,{__index=setmetatable({static=_C_KJ},_C_3Z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_KU,nil,_C_KO,_C_KP,_C_2o,"SegmentButton",_C_KX,_C_KY,_C_Ka,_C_KW,_C_KZ,...)end,__tostring=function()return _C_3Y end})setmetatable(Container,{__index=setmetatable({static=_C_Kb},_C_42),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_LE,nil,_C_Ki,_C_Kj,_C_27,"Container",_C_LM,_C_LN,_C_LP,_C_LK,_C_LO,...)end,__tostring=function()return _C_41 end})setmetatable(LayoutContainer,{__index=setmetatable({static=_C_LQ},_C_3b),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Le,nil,_C_LW,_C_LX,_C_2C,"LayoutContainer",_C_Li,_C_Lj,_C_Ll,_C_Lh,_C_Lk,...)end,__tostring=function()return _C_3a end})setmetatable(ExitedInterfaceMouseEvent,{__index=setmetatable({static=_C_Lm},_C_3f),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Ly,nil,_C_Lv,_C_Lw,_C_0N,"ExitedInterfaceMouseEvent",_C_Lz,_C_M0,_C_M2,nil,_C_M1,...)end,__tostring=function()return _C_3e end})setmetatable(ThemeChangedInterfaceEvent,{__index=setmetatable({static=_C_M3},_C_3h),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_MG,nil,_C_MC,_C_MD,_C_0U,"ThemeChangedInterfaceEvent",_C_MI,_C_MJ,_C_ML,nil,_C_MK,...)end,__tostring=function()return _C_3g end})setmetatable(FileSystemItem,{__index=setmetatable({static=_C_MM},_C_5H),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Mf,nil,_C_MW,_C_MX,_C_18,"FileSystemItem",_C_Mu,_C_Mv,nil,_C_Mt,_C_Mw,...)end,__tostring=function()return _C_5G end})setmetatable(File,{__index=setmetatable({static=_C_Mx},_C_3l),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_N6,nil,_C_N4,_C_N5,_C_17,"File",_C_NE,_C_NF,_C_NH,_C_ND,_C_NG,...)end,__tostring=function()return _C_3k end})setmetatable(SegmentContainer,{__index=setmetatable({static=_C_NI},_C_3n),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_NU,nil,_C_NO,_C_NP,_C_2K,"SegmentContainer",_C_NW,_C_NX,_C_NZ,_C_NV,_C_NY,...)end,__tostring=function()return _C_3m end})setmetatable(ArgumentCountClassException,{__index=setmetatable({static=_C_Na},_C_3p),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Ni,nil,_C_Nf,_C_Ng,_C_0j,"ArgumentCountClassException",_C_Nj,_C_Nk,_C_Nm,nil,_C_Nl,...)end,__tostring=function()return _C_3o end})setmetatable(SettingsException,{__index=setmetatable({static=_C_Nn},_C_3r),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Nu,nil,_C_Ns,_C_Nt,_C_0x,"SettingsException",_C_Nv,_C_Nw,_C_Ny,nil,_C_Nx,...)end,__tostring=function()return _C_3q end})setmetatable(RightSymbol,{__index=setmetatable({static=_C_Nz},_C_3t),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_O8,_C_O9,_C_1o,"RightSymbol",_C_9z,_C_9z,_C_OB,nil,_C_OA,...)end,__tostring=function()return _C_3s end})setmetatable(SymbolButton,{__index=setmetatable({static=_C_OC},_C_4d),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_OM,nil,_C_OH,_C_OI,_C_2r,"SymbolButton",_C_OQ,_C_OR,_C_OT,_C_OP,_C_OS,...)end,__tostring=function()return _C_4c end})setmetatable(ToolbarSymbolButton,{__index=setmetatable({static=_C_OU},_C_3w),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Ob,nil,_C_OZ,_C_Oa,_C_2W,"ToolbarSymbolButton",_C_Od,_C_Oe,_C_Og,_C_Oc,_C_Of,...)end,__tostring=function()return _C_3v end})setmetatable(QuartzProxy,{__index=setmetatable({static=_C_Oh},_C_3y),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",_C_On,_C_Oq,nil,_C_Ol,_C_Om,_C_h,"QuartzProxy",_C_Ou,_C_Ov,nil,_C_Ot,_C_Ow,...)end,__tostring=function()return _C_3x end})setmetatable(BridgedFileAssociation,{__index=setmetatable({static=_C_Ox},_C_40),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_P6,nil,_C_P3,_C_P4,_C_11,"BridgedFileAssociation",_C_P7,_C_P8,_C_PA,nil,_C_P9,...)end,__tostring=function()return _C_3z end})setmetatable(Application,{__index=setmetatable({static=_C_PB},_C_9h),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Pi,_C_Pk,_C_PK,_C_PL,_C_t,"Application",_C_Pu,_C_Pv,nil,_C_Pm,_C_Pw,...)end,__tostring=function()return _C_9g end})setmetatable(QuartzApplication,{__index=setmetatable({static=_C_Px},_C_44),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_QC,_C_QD,_C_Q5,_C_Q6,_C_k,"QuartzApplication",_C_QG,_C_QH,_C_QJ,_C_QE,_C_QI,...)end,__tostring=function()return _C_43 end})setmetatable(KeyEvent,{__index=setmetatable({static=_C_QK},_C_8k),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_QW,nil,_C_QT,_C_QU,_C_0X,"KeyEvent",_C_QX,_C_QY,_C_Qa,nil,_C_QZ,...)end,__tostring=function()return _C_8j end})setmetatable(UpKeyEvent,{__index=setmetatable({static=_C_Qb},_C_46),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Qm,nil,_C_Qk,_C_Ql,_C_0Y,"UpKeyEvent",_C_Qn,_C_Qo,_C_Qq,nil,_C_Qp,...)end,__tostring=function()return _C_45 end})setmetatable(MultipleInstancesSettingsException,{__index=setmetatable({static=_C_Qr},_C_48),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Qy,nil,_C_Qw,_C_Qx,_C_0w,"MultipleInstancesSettingsException",_C_Qz,_C_R0,_C_R2,nil,_C_R1,...)end,__tostring=function()return _C_47 end})setmetatable(OutlineMask,{__index=setmetatable({static=_C_R3},_C_4A),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_RB,nil,_C_R8,_C_R9,_C_1M,"OutlineMask",_C_RC,_C_RD,_C_RF,nil,_C_RE,...)end,__tostring=function()return _C_49 end})setmetatable(Settings,{__index=setmetatable({static=_C_RG},_C_4C),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_RP,nil,_C_RK,_C_RL,_C_1e,"Settings",_C_RR,_C_RS,nil,nil,_C_RT,...)end,__tostring=function()return _C_4B end})setmetatable(ResizeHorizontalCursor,{__index=setmetatable({static=_C_RU},_C_4E),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_Rc,_C_Rd,_C_04,"ResizeHorizontalCursor",_C_9z,_C_9z,_C_Rf,nil,_C_Re,...)end,__tostring=function()return _C_4D end})setmetatable(CircleMask,{__index=setmetatable({static=_C_Rg},_C_4G),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Ro,nil,_C_Rl,_C_Rm,_C_1I,"CircleMask",_C_Rp,_C_Rq,_C_Rs,nil,_C_Rr,...)end,__tostring=function()return _C_4F end})setmetatable(Window,{__index=setmetatable({static=_C_Rt},_C_5J),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_SF,nil,_C_Rz,_C_S0,_C_2d,"Window",_C_SK,_C_SL,_C_SN,_C_SJ,_C_SM,...)end,__tostring=function()return _C_5I end})setmetatable(AlertWindow,{__index=setmetatable({static=_C_SO},_C_4I),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Sa,nil,_C_SV,_C_SW,_C_2y,"AlertWindow",_C_Sd,_C_Se,_C_Sg,_C_Sb,_C_Sf,...)end,__tostring=function()return _C_4H end})setmetatable(FileAssociationRegisteredInterfaceEvent,{__index=setmetatable({static=_C_Sh},_C_4K),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Su,nil,_C_Sq,_C_Sr,_C_0G,"FileAssociationRegisteredInterfaceEvent",_C_Sw,_C_Sx,_C_Sz,nil,_C_Sy,...)end,__tostring=function()return _C_4J end})setmetatable(WindowButton,{__index=setmetatable({static=_C_T0},_C_4M),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_TD,nil,_C_T5,_C_T6,_C_2x,"WindowButton",_C_TI,_C_TJ,_C_TL,_C_TG,_C_TK,...)end,__tostring=function()return _C_4L end})setmetatable(MaximiseWindowButton,{__index=setmetatable({static=_C_TM},_C_4O),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_TU,nil,_C_TR,_C_TS,_C_2w,"MaximiseWindowButton",_C_TW,_C_TX,_C_TZ,_C_TV,_C_TY,...)end,__tostring=function()return _C_4N end})setmetatable(CloseWindowButton,{__index=setmetatable({static=_C_Ta},_C_4Q),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Ti,nil,_C_Tf,_C_Tg,_C_2v,"CloseWindowButton",_C_Tk,_C_Tl,_C_Tn,_C_Tj,_C_Tm,...)end,__tostring=function()return _C_4P end})_C_AI=_C_09U(_C_K("/System/classes/Program Managing/Program.luo",47,[[return configKeys]],_C_Z),"Program.configKeys")local _C_09e="enum 'Program.configKeys': " .. tostring(_C_AI):sub(8)setmetatable(_C_AI,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09e end})for k,v in pairs(_C_AI)do if _C_Ai(v)then _C_G("Program.configKeys",k,"String",v)end _C_AJ[v]=true end _C_AK=_C_09U(_C_K("/System/classes/Program Managing/Program.luo",28,[[return states]],_C_Z),"Program.states")local _C_09f="enum 'Program.states': " .. tostring(_C_AK):sub(8)setmetatable(_C_AK,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09f end})for k,v in pairs(_C_AK)do if _C_Ar(v)then _C_G("Program.states",k,"Number",v)end _C_AL[v]=true end _C_AM=_C_09U(_C_K("/System/classes/Program Managing/Program.luo",30,[[return {
        ONE = EXTERNAL,
        TWO = 2,
        THREE = 3
    }]],_C_Z),"Program.numbers")local _C_09g="enum 'Program.numbers': " .. tostring(_C_AM):sub(8)setmetatable(_C_AM,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09g end})for k,v in pairs(_C_AM)do if _C_Ar(v)then _C_G("Program.numbers",k,"Number",v)end _C_AN[v]=true end setmetatable(Program,{__index=setmetatable({static=_C_To,configKeys=_C_AI,states=_C_AK,numbers=_C_AM},_C_7v),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_U7,nil,_C_Ts,_C_Tt,_C_Z,"Program",_C_UK,_C_UL,nil,_C_UC,_C_UM,...)end,__tostring=function()return _C_7u end})setmetatable(SilicaProgram,{__index=setmetatable({static=_C_UN},_C_4S),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_UX,nil,_C_US,_C_UT,_C_i,"SilicaProgram",_C_UZ,_C_Ua,_C_Uc,_C_UY,_C_Ub,...)end,__tostring=function()return _C_4R end})setmetatable(ActionInterfaceEvent,{__index=setmetatable({static=_C_Ud},_C_4U),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Up,nil,_C_Um,_C_Un,_C_0B,"ActionInterfaceEvent",_C_Ur,_C_Us,_C_Uu,nil,_C_Ut,...)end,__tostring=function()return _C_4T end})setmetatable(SymbolSegmentButton,{__index=setmetatable({static=_C_Uv},_C_4W),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_V4,nil,_C_V0,_C_V1,_C_2s,"SymbolSegmentButton",_C_V8,_C_V9,_C_VB,_C_V7,_C_VA,...)end,__tostring=function()return _C_4V end})setmetatable(FolderIcon,{__index=setmetatable({static=_C_VC},_C_4Z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_VM,nil,_C_VJ,_C_VK,_C_1D,"FolderIcon",_C_VO,_C_VP,_C_VR,_C_VN,_C_VQ,...)end,__tostring=function()return _C_4Y end})setmetatable(LoadingClassException,{__index=setmetatable({static=_C_VS},_C_4b),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Va,nil,_C_VX,_C_VY,_C_0q,"LoadingClassException",_C_Vb,_C_Vc,_C_Ve,nil,_C_Vd,...)end,__tostring=function()return _C_4a end})_C_AO=_C_09U(_C_K("/src/classes/Graphics/Graphics.luo",3,[[return {
		TRANSPARENT = 0;
		WHITE = colours.white;
		ORANGE = colours.orange;
		MAGENTA = colours.magenta;
		LIGHT_BLUE = colours.lightBlue;
		YELLOW = colours.yellow;
		LIME = colours.lime;
		PINK = colours.pink;
		GREY = colours.grey;
		LIGHT_GREY = colours.lightGrey;
		CYAN = colours.cyan;
		PURPLE = colours.purple;
		BLUE = colours.blue;
		BROWN = colours.brown;
		GREEN = colours.green;
		RED = colours.red;
		BLACK = colours.black;

		
		GRAY = colours.grey;
		LIGHT_GRAY = colours.lightGrey;
	}

	
	alias colors = colours]],_C_1J),"Graphics.colours")local _C_09h="enum 'Graphics.colours': " .. tostring(_C_AO):sub(8)setmetatable(_C_AO,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09h end})for k,v in pairs(_C_AO)do if _C_Ar(v)then _C_G("Graphics.colours",k,"Number",v)end _C_AP[v]=true end setmetatable(Graphics,{__index=setmetatable({static=_C_Vf,colours=_C_AO},_C_4f),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_Vj,_C_Vk,_C_1J,"Graphics",_C_9z,_C_9z,nil,nil,_C_Vl,...)end,__tostring=function()return _C_4e end})setmetatable(SeparatorView,{__index=setmetatable({static=_C_Vm},_C_4h),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Vu,nil,_C_Vr,_C_Vs,_C_2q,"SeparatorView",_C_Vw,_C_Vx,_C_Vz,_C_Vv,_C_Vy,...)end,__tostring=function()return _C_4g end})setmetatable(MenuItem,{__index=setmetatable({static=_C_W0},_C_4v),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_WH,nil,_C_W5,_C_W6,_C_2j,"MenuItem",_C_WN,_C_WO,_C_WQ,_C_WM,_C_WP,...)end,__tostring=function()return _C_4u end})setmetatable(SeparatorMenuItem,{__index=setmetatable({static=_C_WR},_C_4j),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Wb,nil,_C_WW,_C_WX,_C_2p,"SeparatorMenuItem",_C_Wd,_C_We,_C_Wg,_C_Wc,_C_Wf,...)end,__tostring=function()return _C_4i end})setmetatable(SearchBox,{__index=setmetatable({static=_C_Wh},_C_4l),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Wp,nil,_C_Wm,_C_Wn,_C_2n,"SearchBox",_C_Wr,_C_Ws,_C_Wu,_C_Wq,_C_Wt,...)end,__tostring=function()return _C_4k end})setmetatable(UnknownFileAssociation,{__index=setmetatable({static=_C_Wv},_C_4n),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_X4,nil,_C_X1,_C_X2,_C_15,"UnknownFileAssociation",_C_X5,_C_X6,_C_X8,nil,_C_X7,...)end,__tostring=function()return _C_4m end})setmetatable(ToolbarSegmentContainer,{__index=setmetatable({static=_C_X9},_C_4p),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_XH,nil,_C_XF,_C_XG,_C_2U,"ToolbarSegmentContainer",_C_XJ,_C_XK,_C_XM,_C_XI,_C_XL,...)end,__tostring=function()return _C_4o end})setmetatable(Radio,{__index=setmetatable({static=_C_XN},_C_4r),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Xb,nil,_C_XS,_C_XT,_C_2l,"Radio",_C_Xg,_C_Xh,_C_Xj,_C_Xf,_C_Xi,...)end,__tostring=function()return _C_4q end})setmetatable(ProgressBar,{__index=setmetatable({static=_C_Xk},_C_4t),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Xt,nil,_C_Xp,_C_Xq,_C_2k,"ProgressBar",_C_Xz,_C_Y0,_C_Y2,_C_Xy,_C_Y1,...)end,__tostring=function()return _C_4s end})setmetatable(MenuButton,{__index=setmetatable({static=_C_Y3},_C_4x),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_YJ,nil,_C_Y8,_C_Y9,_C_2i,"MenuButton",_C_YQ,_C_YR,_C_YT,_C_YO,_C_YS,...)end,__tostring=function()return _C_4w end})setmetatable(MenuBarItem,{__index=setmetatable({static=_C_YU},_C_4z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Yn,nil,_C_YZ,_C_Ya,_C_2h,"MenuBarItem",_C_Yw,_C_Yx,_C_Yz,_C_Yu,_C_Yy,...)end,__tostring=function()return _C_4y end})setmetatable(TopBarSeparatorView,{__index=setmetatable({static=_C_Z0},_C_51),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Z8,nil,_C_Z5,_C_Z6,_C_r,"TopBarSeparatorView",_C_ZC,_C_ZD,_C_ZF,_C_ZB,_C_ZE,...)end,__tostring=function()return _C_50 end})setmetatable(MaskedTextBox,{__index=setmetatable({static=_C_ZG},_C_53),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ZN,nil,_C_ZL,_C_ZM,_C_2g,"MaskedTextBox",_C_ZP,_C_ZQ,_C_ZS,_C_ZO,_C_ZR,...)end,__tostring=function()return _C_52 end})_C_AQ=_C_09U(_C_K("/src/classes/Events/Mouse Events/MouseEvent.luo",14,[[return {
		UP = -1;
		DOWN = 1;
	}]],_C_0d),"MouseEvent.directions")local _C_09i="enum 'MouseEvent.directions': " .. tostring(_C_AQ):sub(8)setmetatable(_C_AQ,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09i end})for k,v in pairs(_C_AQ)do if _C_Ar(v)then _C_G("MouseEvent.directions",k,"Number",v)end _C_AR[v]=true end _C_AS=_C_09U(_C_K("/src/classes/Events/Mouse Events/MouseEvent.luo",8,[[return {
		LEFT = 1;
		MIDDLE = 3;
		RIGHT = 2;
	}]],_C_0d),"MouseEvent.mouseButtons")local _C_09j="enum 'MouseEvent.mouseButtons': " .. tostring(_C_AS):sub(8)setmetatable(_C_AS,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09j end})for k,v in pairs(_C_AS)do if _C_Ar(v)then _C_G("MouseEvent.mouseButtons",k,"Number",v)end _C_AT[v]=true end setmetatable(MouseEvent,{__index=setmetatable({static=_C_ZT,mouseButtons=_C_AS,directions=_C_AQ},_C_8Z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Zf,nil,_C_Zc,_C_Zd,_C_0d,"MouseEvent",_C_Zg,_C_Zh,_C_Zj,nil,_C_Zi,...)end,__tostring=function()return _C_8Y end})setmetatable(ScrollMouseEvent,{__index=setmetatable({static=_C_Zk},_C_55),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_Zx,nil,_C_Zt,_C_Zu,_C_0f,"ScrollMouseEvent",_C_Zz,_C_a0,_C_a2,nil,_C_a1,...)end,__tostring=function()return _C_54 end})setmetatable(Label,{__index=setmetatable({static=_C_a3},_C_57),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_aE,nil,_C_a8,_C_a9,_C_2f,"Label",_C_aJ,_C_aK,_C_aM,_C_aI,_C_aL,...)end,__tostring=function()return _C_56 end})setmetatable(ParentChangedInterfaceEvent,{__index=setmetatable({static=_C_aN},_C_59),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_aZ,nil,_C_aW,_C_aX,_C_0O,"ParentChangedInterfaceEvent",_C_aa,_C_ab,_C_ad,nil,_C_ac,...)end,__tostring=function()return _C_58 end})setmetatable(RectangleMask,{__index=setmetatable({static=_C_ae},_C_5B),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_am,nil,_C_aj,_C_ak,_C_1P,"RectangleMask",_C_an,_C_ao,_C_aq,nil,_C_ap,...)end,__tostring=function()return _C_5A end})setmetatable(DragView,{__index=setmetatable({static=_C_ar},_C_5D),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_az,nil,_C_aw,_C_ax,_C_w,"DragView",_C_b4,_C_b5,_C_b7,_C_b3,_C_b6,...)end,__tostring=function()return _C_5C end})setmetatable(WindowContainer,{__index=setmetatable({static=_C_b8},_C_5F),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_bG,nil,_C_bE,_C_bF,_C_2e,"WindowContainer",_C_bI,_C_bJ,_C_bL,_C_bH,_C_bK,...)end,__tostring=function()return _C_5E end})_C_AU=_C_09U(_C_K("/src/classes/File System/Metadata.luo",108,[[return EXTENSION_MIMES]],_C_1B),"Metadata.mimes")local _C_09k="enum 'Metadata.mimes': " .. tostring(_C_AU):sub(8)setmetatable(_C_AU,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09k end})for k,v in pairs(_C_AU)do if _C_Ai(v)then _C_G("Metadata.mimes",k,"String",v)end _C_AV[v]=true end _C_AW=_C_09U(_C_K("/src/classes/File System/Metadata.luo",109,[[return SPECIAL_MIMES]],_C_1B),"Metadata.specialMimes")local _C_09l="enum 'Metadata.specialMimes': " .. tostring(_C_AW):sub(8)setmetatable(_C_AW,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09l end})for k,v in pairs(_C_AW)do if _C_Ai(v)then _C_G("Metadata.specialMimes",k,"String",v)end _C_AX[v]=true end setmetatable(Metadata,{__index=setmetatable({static=_C_bM,mimes=_C_AU,specialMimes=_C_AW},_C_5L),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_bg,nil,_C_bQ,_C_bR,_C_1B,"Metadata",_C_bm,_C_bn,nil,_C_bk,_C_bo,...)end,__tostring=function()return _C_5K end})setmetatable(HomeContainer,{__index=setmetatable({static=_C_bp},_C_5O),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_c2,nil,_C_bv,_C_bw,_C_S,"HomeContainer",_C_c7,_C_c8,_C_cA,_C_c6,_C_c9,...)end,__tostring=function()return _C_5N end})setmetatable(FileAssociationManager,{__index=setmetatable({static=_C_cB},_C_5Q),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_cN,_C_cO,_C_14,"FileAssociationManager",_C_9z,_C_9z,nil,nil,_C_cP,...)end,__tostring=function()return _C_5P end})setmetatable(MenuChangedInterfaceEvent,{__index=setmetatable({static=_C_cQ},_C_5S),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_cb,nil,_C_cZ,_C_ca,_C_0L,"MenuChangedInterfaceEvent",_C_cc,_C_cd,_C_cf,nil,_C_ce,...)end,__tostring=function()return _C_5R end})setmetatable(KeyboardShortcutManager,{__index=setmetatable({static=_C_cg},_C_5U),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_cy,nil,_C_co,_C_cp,_C_20,"KeyboardShortcutManager",_C_d0,_C_d1,nil,nil,_C_d2,...)end,__tostring=function()return _C_5T end})_C_AY=_C_09U(_C_K("/System/classes/TopBar/TopBarItem.luo",8,[[return {
        LEFT = 0;
        RIGHT = 1;
    }]],_C_q),"TopBarItem.pins")local _C_09m="enum 'TopBarItem.pins': " .. tostring(_C_AY):sub(8)setmetatable(_C_AY,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09m end})for k,v in pairs(_C_AY)do if _C_Ar(v)then _C_G("TopBarItem.pins",k,"Number",v)end _C_AZ[v]=true end setmetatable(TopBarItem,{__index=setmetatable({static=_C_d3,pins=_C_AY},_C_9Y),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_dF,nil,_C_d8,_C_d9,_C_q,"TopBarItem",_C_dJ,_C_dK,_C_dM,_C_dI,_C_dL,...)end,__tostring=function()return _C_9X end})setmetatable(ClockItem,{__index=setmetatable({static=_C_dN},_C_5X),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_da,nil,_C_dS,_C_dT,_C_o,"ClockItem",_C_dg,_C_dh,_C_dj,_C_df,_C_di,...)end,__tostring=function()return _C_5W end})setmetatable(RoundedRectangleMask,{__index=setmetatable({static=_C_dk},_C_5Z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ds,nil,_C_dp,_C_dq,_C_1Q,"RoundedRectangleMask",_C_dt,_C_du,_C_dw,nil,_C_dv,...)end,__tostring=function()return _C_5Y end})setmetatable(ContainerReadyInterfaceEvent,{__index=setmetatable({static=_C_dx},_C_5b),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_e8,nil,_C_e6,_C_e7,_C_0F,"ContainerReadyInterfaceEvent",_C_e9,_C_eA,_C_eC,nil,_C_eB,...)end,__tostring=function()return _C_5a end})setmetatable(ClickableCursor,{__index=setmetatable({static=_C_eD},_C_5d),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_eO,_C_eP,_C_01,"ClickableCursor",_C_9z,_C_9z,_C_eR,nil,_C_eQ,...)end,__tostring=function()return _C_5c end})setmetatable(VectorFont,{__index=setmetatable({static=_C_eS},_C_5f),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ec,nil,_C_ea,_C_eb,_C_1G,"VectorFont",_C_ed,_C_ee,_C_eg,nil,_C_ef,...)end,__tostring=function()return _C_5e end})setmetatable(ScrollContainer,{__index=setmetatable({static=_C_eh},_C_6n),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_er,nil,_C_en,_C_eo,_C_2I,"ScrollContainer",_C_et,_C_eu,_C_ew,_C_es,_C_ev,...)end,__tostring=function()return _C_6m end})setmetatable(ListContainer,{__index=setmetatable({static=_C_ex},_C_6L),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_fI,nil,_C_f3,_C_f4,_C_2E,"ListContainer",_C_fN,_C_fO,_C_fQ,_C_fL,_C_fP,...)end,__tostring=function()return _C_6K end})setmetatable(TreeContainer,{__index=setmetatable({static=_C_fR},_C_5h),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_fb,nil,_C_fX,_C_fY,_C_2a,"TreeContainer",_C_fd,_C_fe,_C_fg,_C_fc,_C_ff,...)end,__tostring=function()return _C_5g end})setmetatable(TreeClipboardData,{__index=setmetatable({static=_C_fh},_C_5j),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_fq,nil,_C_fm,_C_fn,_C_2Z,"TreeClipboardData",_C_fs,_C_ft,_C_fv,nil,_C_fu,...)end,__tostring=function()return _C_5i end})setmetatable(ArgumentTypeClassException,{__index=setmetatable({static=_C_fw},_C_5l),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_g4,nil,_C_g1,_C_g2,_C_0k,"ArgumentTypeClassException",_C_g5,_C_g6,_C_g8,nil,_C_g7,...)end,__tostring=function()return _C_5k end})setmetatable(TreeFoldedSymbol,{__index=setmetatable({static=_C_g9},_C_5n),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_gI,_C_gJ,_C_1u,"TreeFoldedSymbol",_C_9z,_C_9z,_C_gL,nil,_C_gK,...)end,__tostring=function()return _C_5m end})setmetatable(ToolbarContainer,{__index=setmetatable({static=_C_gM},_C_5p),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ga,nil,_C_gS,_C_gT,_C_2R,"ToolbarContainer",_C_gc,_C_gd,_C_gf,_C_gb,_C_ge,...)end,__tostring=function()return _C_5o end})setmetatable(HomeItemContainer,{__index=setmetatable({static=_C_gg},_C_5r),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_gv,nil,_C_gm,_C_gn,_C_U,"HomeItemContainer",_C_gx,_C_gy,_C_h0,_C_gw,_C_gz,...)end,__tostring=function()return _C_5q end})setmetatable(LoadedInterfaceEvent,{__index=setmetatable({static=_C_h1},_C_5v),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_hC,nil,_C_hA,_C_hB,_C_0K,"LoadedInterfaceEvent",_C_hD,_C_hE,_C_hG,nil,_C_hF,...)end,__tostring=function()return _C_5u end})setmetatable(ToolbarSymbolSegmentButton,{__index=setmetatable({static=_C_hH},_C_5x),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_hO,nil,_C_hM,_C_hN,_C_2X,"ToolbarSymbolSegmentButton",_C_hQ,_C_hR,_C_hT,_C_hP,_C_hS,...)end,__tostring=function()return _C_5w end})setmetatable(Menu,{__index=setmetatable({static=_C_hU},_C_5z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_hn,nil,_C_ha,_C_hb,_C_2G,"Menu",_C_hs,_C_ht,_C_hv,_C_hr,_C_hu,...)end,__tostring=function()return _C_5y end})setmetatable(ToolbarStaticSpace,{__index=setmetatable({static=_C_hw},_C_61),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_i3,nil,_C_i1,_C_i2,_C_2V,"ToolbarStaticSpace",_C_i5,_C_i6,_C_i8,_C_i4,_C_i7,...)end,__tostring=function()return _C_60 end})setmetatable(ProgramManager,{__index=setmetatable({static=_C_i9},_C_63),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_iK,nil,_C_iD,_C_iE,_C_e,"ProgramManager",_C_iM,_C_iN,nil,nil,_C_iO,...)end,__tostring=function()return _C_62 end})setmetatable(Scrollbar,{__index=setmetatable({static=_C_iP},_C_65),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ie,nil,_C_iU,_C_iV,_C_2m,"Scrollbar",_C_ii,_C_ij,_C_il,_C_ih,_C_ik,...)end,__tostring=function()return _C_64 end})setmetatable(ToolbarSegmentButton,{__index=setmetatable({static=_C_im},_C_67),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_it,nil,_C_ir,_C_is,_C_2T,"ToolbarSegmentButton",_C_iv,_C_iw,_C_iy,_C_iu,_C_ix,...)end,__tostring=function()return _C_66 end})setmetatable(ProgramException,{__index=setmetatable({static=_C_iz},_C_69),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_j7,nil,_C_j4,_C_j5,_C_R,"ProgramException",_C_j8,_C_j9,_C_jB,nil,_C_jA,...)end,__tostring=function()return _C_68 end})setmetatable(ConfigurationFatalProgramException,{__index=setmetatable({static=_C_jC},_C_6B),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_jJ,nil,_C_jH,_C_jI,_C_P,"ConfigurationFatalProgramException",_C_jK,_C_jL,_C_jN,nil,_C_jM,...)end,__tostring=function()return _C_6A end})setmetatable(EnumValueTypeClassException,{__index=setmetatable({static=_C_jO},_C_6D),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_jW,nil,_C_jT,_C_jU,_C_0o,"EnumValueTypeClassException",_C_jX,_C_jY,_C_ja,nil,_C_jZ,...)end,__tostring=function()return _C_6C end})setmetatable(ToolbarDynamicSpace,{__index=setmetatable({static=_C_jb},_C_6F),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ji,nil,_C_jg,_C_jh,_C_2S,"ToolbarDynamicSpace",_C_jk,_C_jl,_C_jn,_C_jj,_C_jm,...)end,__tostring=function()return _C_6E end})setmetatable(ToolbarButton,{__index=setmetatable({static=_C_jo},_C_6H),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_jv,nil,_C_jt,_C_ju,_C_2Q,"ToolbarButton",_C_jx,_C_jy,_C_k0,_C_jw,_C_jz,...)end,__tostring=function()return _C_6G end})setmetatable(TerminateEvent,{__index=setmetatable({static=_C_k1},_C_6J),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_kC,nil,_C_kA,_C_kB,_C_0h,"TerminateEvent",_C_kD,_C_kE,_C_kG,nil,_C_kF,...)end,__tostring=function()return _C_6I end})setmetatable(HomeSymbol,{__index=setmetatable({static=_C_kH},_C_6P),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_kQ,_C_kR,_C_1j,"HomeSymbol",_C_9z,_C_9z,_C_kT,nil,_C_kS,...)end,__tostring=function()return _C_6O end})setmetatable(ProgramView,{__index=setmetatable({static=_C_kU},_C_6R),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_kp,nil,_C_kZ,_C_ka,_C_g,"ProgramView",_C_ku,_C_kv,_C_kx,_C_kt,_C_kw,...)end,__tostring=function()return _C_6Q end})setmetatable(StripeMask,{__index=setmetatable({static=_C_ky},_C_6U),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_l6,nil,_C_l3,_C_l4,_C_1U,"StripeMask",_C_l7,_C_l8,_C_lA,nil,_C_l9,...)end,__tostring=function()return _C_6T end})setmetatable(SplitHandleView,{__index=setmetatable({static=_C_lB},_C_6X),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_lO,nil,_C_lG,_C_lH,_C_2M,"SplitHandleView",_C_lS,_C_lT,_C_lV,_C_lR,_C_lU,...)end,__tostring=function()return _C_6W end})setmetatable(EventManager,{__index=setmetatable({static=_C_lW},_C_6Z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_lq,nil,_C_la,_C_lb,_C_09,"EventManager",_C_ls,_C_lt,nil,nil,_C_lu,...)end,__tostring=function()return _C_6Y end})setmetatable(SplitContainer,{__index=setmetatable({static=_C_lv},_C_6b),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_m8,nil,_C_m1,_C_m2,_C_2L,"SplitContainer",_C_mD,_C_mE,_C_mG,_C_mC,_C_mF,...)end,__tostring=function()return _C_6a end})setmetatable(ApplicationContainer,{__index=setmetatable({static=_C_mH},_C_7H),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ma,nil,_C_mN,_C_mO,_C_26,"ApplicationContainer",_C_mh,_C_mi,_C_mk,_C_mf,_C_mj,...)end,__tostring=function()return _C_7G end})setmetatable(QuartzApplicationContainer,{__index=setmetatable({static=_C_ml},_C_6d),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_mx,nil,_C_mr,_C_ms,_C_l,"QuartzApplicationContainer",_C_n1,_C_n2,_C_n4,_C_my,_C_n3,...)end,__tostring=function()return _C_6c end})setmetatable(ProgramClosedInterfaceEvent,{__index=setmetatable({static=_C_n5},_C_6f),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_nH,nil,_C_nE,_C_nF,_C_a,"ProgramClosedInterfaceEvent",_C_nI,_C_nJ,_C_nL,nil,_C_nK,...)end,__tostring=function()return _C_6e end})setmetatable(MenuOpenSymbol,{__index=setmetatable({static=_C_nM},_C_6h),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_nV,_C_nW,_C_1n,"MenuOpenSymbol",_C_9z,_C_9z,_C_nY,nil,_C_nX,...)end,__tostring=function()return _C_6g end})setmetatable(ProgramInformationChangedInterfaceEvent,{__index=setmetatable({static=_C_nZ},_C_6j),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_nl,nil,_C_ni,_C_nj,_C_c,"ProgramInformationChangedInterfaceEvent",_C_nm,_C_nn,_C_np,nil,_C_no,...)end,__tostring=function()return _C_6i end})setmetatable(ScrollView,{__index=setmetatable({static=_C_nq},_C_6l),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_oA,nil,_C_nw,_C_nx,_C_2J,"ScrollView",_C_oE,_C_oF,_C_oH,_C_oB,_C_oG,...)end,__tostring=function()return _C_6k end})setmetatable(MenuBar,{__index=setmetatable({static=_C_oI},_C_6p),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_oW,nil,_C_oO,_C_oP,_C_2H,"MenuBar",_C_oZ,_C_oa,_C_oc,_C_oY,_C_ob,...)end,__tostring=function()return _C_6o end})setmetatable(LineMask,{__index=setmetatable({static=_C_od},_C_6r),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ol,nil,_C_oi,_C_oj,_C_1K,"LineMask",_C_om,_C_on,_C_op,nil,_C_oo,...)end,__tostring=function()return _C_6q end})setmetatable(ChildAddedInterfaceEvent,{__index=setmetatable({static=_C_oq},_C_6v),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_p2,nil,_C_oz,_C_p0,_C_0C,"ChildAddedInterfaceEvent",_C_p3,_C_p4,_C_p6,nil,_C_p5,...)end,__tostring=function()return _C_6u end})setmetatable(ListItem,{__index=setmetatable({static=_C_p7},_C_6x),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_pM,nil,_C_pC,_C_pD,_C_2F,"ListItem",_C_pR,_C_pS,_C_pU,_C_pQ,_C_pT,...)end,__tostring=function()return _C_6w end})setmetatable(ListClipboardData,{__index=setmetatable({static=_C_pV},_C_6z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_pe,nil,_C_pa,_C_pb,_C_2D,"ListClipboardData",_C_pg,_C_ph,_C_pj,nil,_C_pi,...)end,__tostring=function()return _C_6y end})setmetatable(ContainerEventManager,{__index=setmetatable({static=_C_pk},_C_71),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ps,nil,_C_pp,_C_pq,_C_08,"ContainerEventManager",_C_pt,_C_pu,_C_pw,nil,_C_pv,...)end,__tostring=function()return _C_70 end})setmetatable(ProgramOpenedInterfaceEvent,{__index=setmetatable({static=_C_px},_C_73),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_q9,nil,_C_q6,_C_q7,_C_f,"ProgramOpenedInterfaceEvent",_C_qA,_C_qB,_C_qD,nil,_C_qC,...)end,__tostring=function()return _C_72 end})setmetatable(DeleteCursor,{__index=setmetatable({static=_C_qE},_C_75),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_qM,_C_qN,_C_03,"DeleteCursor",_C_9z,_C_9z,_C_qP,nil,_C_qO,...)end,__tostring=function()return _C_74 end})setmetatable(SettingsSymbol,{__index=setmetatable({static=_C_qQ},_C_77),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_qZ,_C_qa,_C_1q,"SettingsSymbol",_C_9z,_C_9z,_C_qc,nil,_C_qb,...)end,__tostring=function()return _C_76 end})setmetatable(GridContainer,{__index=setmetatable({static=_C_qd},_C_79),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_qm,nil,_C_qj,_C_qk,_C_2B,"GridContainer",_C_qp,_C_qq,_C_qs,_C_qo,_C_qr,...)end,__tostring=function()return _C_78 end})setmetatable(FontWindowContainer,{__index=setmetatable({static=_C_qt},_C_7B),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_r2,nil,_C_qz,_C_r0,_C_2A,"FontWindowContainer",_C_r4,_C_r5,_C_r7,_C_r3,_C_r6,...)end,__tostring=function()return _C_7A end})setmetatable(PathMask,{__index=setmetatable({static=_C_r8},_C_7D),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_rH,nil,_C_rD,_C_rE,_C_1O,"PathMask",_C_rI,_C_rJ,_C_rL,nil,_C_rK,...)end,__tostring=function()return _C_7C end})setmetatable(FlowContainer,{__index=setmetatable({static=_C_rM},_C_7F),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ra,nil,_C_rS,_C_rT,_C_28,"FlowContainer",_C_rd,_C_re,_C_rg,_C_rc,_C_rf,...)end,__tostring=function()return _C_7E end})setmetatable(Checkbox,{__index=setmetatable({static=_C_rh},_C_7J),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_rt,nil,_C_rm,_C_rn,_C_25,"Checkbox",_C_ry,_C_rz,_C_s1,_C_rx,_C_s0,...)end,__tostring=function()return _C_7I end})setmetatable(ParentResizedInterfaceEvent,{__index=setmetatable({static=_C_s2},_C_7M),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_sE,nil,_C_sB,_C_sC,_C_0P,"ParentResizedInterfaceEvent",_C_sF,_C_sG,_C_sI,nil,_C_sH,...)end,__tostring=function()return _C_7L end})setmetatable(XML,{__index=setmetatable({static=_C_sJ},_C_7O),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_sQ,_C_sR,_C_23,"XML",_C_9z,_C_9z,nil,nil,_C_sS,...)end,__tostring=function()return _C_7N end})setmetatable(Validator,{__index=setmetatable({static=_C_sT},_C_7Q),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_sZ,_C_sa,_C_22,"Validator",_C_9z,_C_9z,nil,nil,_C_sb,...)end,__tostring=function()return _C_7P end})setmetatable(Resource,{__index=setmetatable({static=_C_sc},_C_7S),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_sl,nil,_C_sg,_C_sh,_C_21,"Resource",_C_sr,_C_ss,nil,_C_so,_C_st,...)end,__tostring=function()return _C_7R end})setmetatable(ThumbnailIcon,{__index=setmetatable({static=_C_su},_C_7U),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_t5,nil,_C_t1,_C_t2,_C_1y,"ThumbnailIcon",_C_t9,_C_tA,_C_tC,_C_t7,_C_tB,...)end,__tostring=function()return _C_7T end})setmetatable(InvalidValueTypeClassException,{__index=setmetatable({static=_C_tD},_C_7W),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_tL,nil,_C_tI,_C_tJ,_C_0p,"InvalidValueTypeClassException",_C_tM,_C_tN,_C_tP,nil,_C_tO,...)end,__tostring=function()return _C_7V end})setmetatable(HomeTile,{__index=setmetatable({static=_C_tQ},_C_7Y),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_tZ,nil,_C_tW,_C_tX,_C_W,"HomeTile",_C_tb,_C_tc,_C_te,_C_ta,_C_td,...)end,__tostring=function()return _C_7X end})setmetatable(ReadyInterfaceEvent,{__index=setmetatable({static=_C_tf},_C_7b),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_tq,nil,_C_to,_C_tp,_C_0Q,"ReadyInterfaceEvent",_C_tr,_C_ts,_C_tu,nil,_C_tt,...)end,__tostring=function()return _C_7a end})setmetatable(FatalProgramException,{__index=setmetatable({static=_C_tv},_C_7d),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_u2,nil,_C_u0,_C_u1,_C_Q,"FatalProgramException",_C_u3,_C_u4,_C_u6,nil,_C_u5,...)end,__tostring=function()return _C_7c end})setmetatable(DoubleClickMouseEvent,{__index=setmetatable({static=_C_u7},_C_7f),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_uK,nil,_C_uG,_C_uH,_C_0Z,"DoubleClickMouseEvent",_C_uM,_C_uN,_C_uP,nil,_C_uO,...)end,__tostring=function()return _C_7e end})setmetatable(ThemeOutlet,{__index=setmetatable({static=_C_uQ},_C_7h),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_uY,nil,_C_uU,_C_uV,_C_1x,"ThemeOutlet",_C_ub,_C_uc,nil,_C_ua,_C_ud,...)end,__tostring=function()return _C_7g end})setmetatable(Theme,{__index=setmetatable({static=_C_ue},_C_7n),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_ur,nil,_C_um,_C_un,_C_1w,"Theme",_C_us,_C_ut,nil,nil,_C_uu,...)end,__tostring=function()return _C_7m end})setmetatable(TimerEvent,{__index=setmetatable({static=_C_uv},_C_7p),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_v7,nil,_C_v4,_C_v5,_C_0i,"TimerEvent",_C_v8,_C_v9,_C_vB,nil,_C_vA,...)end,__tostring=function()return _C_7o end})setmetatable(UpSymbol,{__index=setmetatable({static=_C_vC},_C_7r),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_vL,_C_vM,_C_1v,"UpSymbol",_C_9z,_C_9z,_C_vO,nil,_C_vN,...)end,__tostring=function()return _C_7q end})setmetatable(TreeExpandedSymbol,{__index=setmetatable({static=_C_vP},_C_7t),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_vY,_C_vZ,_C_1t,"TreeExpandedSymbol",_C_9z,_C_9z,_C_vb,nil,_C_va,...)end,__tostring=function()return _C_7s end})setmetatable(Path,{__index=setmetatable({static=_C_vc},_C_7x),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_vr,nil,_C_vi,_C_vj,_C_1N,"Path",_C_vu,_C_vv,nil,_C_vt,_C_vw,...)end,__tostring=function()return _C_7w end})setmetatable(ApplicationEventManager,{__index=setmetatable({static=_C_vx},_C_7z),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_w7,nil,_C_w2,_C_w3,_C_07,"ApplicationEventManager",_C_w8,_C_w9,_C_wB,nil,_C_wA,...)end,__tostring=function()return _C_7y end})setmetatable(ListSymbol,{__index=setmetatable({static=_C_wC},_C_81),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_wL,_C_wM,_C_1l,"ListSymbol",_C_9z,_C_9z,_C_wO,nil,_C_wN,...)end,__tostring=function()return _C_80 end})setmetatable(SearchSymbol,{__index=setmetatable({static=_C_wP},_C_83),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_wY,_C_wZ,_C_1p,"SearchSymbol",_C_9z,_C_9z,_C_wb,nil,_C_wa,...)end,__tostring=function()return _C_82 end})setmetatable(MenuCloseSymbol,{__index=setmetatable({static=_C_wc},_C_85),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_wl,_C_wm,_C_1m,"MenuCloseSymbol",_C_9z,_C_9z,_C_wo,nil,_C_wn,...)end,__tostring=function()return _C_84 end})setmetatable(Interface,{__index=setmetatable({static=_C_wp},_C_87),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_wy,nil,_C_wt,_C_wu,_C_1c,"Interface",_C_wz,_C_x0,nil,nil,_C_x1,...)end,__tostring=function()return _C_86 end})setmetatable(ForwardSymbol,{__index=setmetatable({static=_C_x2},_C_8B),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_xB,_C_xC,_C_1i,"ForwardSymbol",_C_9z,_C_9z,_C_xE,nil,_C_xD,...)end,__tostring=function()return _C_8A end})setmetatable(ProgramItem,{__index=setmetatable({static=_C_xF},_C_8D),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_xY,nil,_C_xK,_C_xL,_C_d,"ProgramItem",_C_xb,_C_xc,_C_xe,_C_xa,_C_xd,...)end,__tostring=function()return _C_8C end})setmetatable(DownSymbol,{__index=setmetatable({static=_C_xf},_C_8F),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_xo,_C_xp,_C_1h,"DownSymbol",_C_9z,_C_9z,_C_xr,nil,_C_xq,...)end,__tostring=function()return _C_8E end})setmetatable(SymbolMask,{__index=setmetatable({static=_C_xs},_C_8H),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_y0,nil,_C_xx,_C_xy,_C_1V,"SymbolMask",_C_y1,_C_y2,_C_y4,nil,_C_y3,...)end,__tostring=function()return _C_8G end})setmetatable(DragMouseEvent,{__index=setmetatable({static=_C_y5},_C_8J),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_yH,nil,_C_yE,_C_yF,_C_0b,"DragMouseEvent",_C_yI,_C_yJ,_C_yL,nil,_C_yK,...)end,__tostring=function()return _C_8I end})setmetatable(CloseSymbol,{__index=setmetatable({static=_C_yM},_C_8L),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_yV,_C_yW,_C_1g,"CloseSymbol",_C_9z,_C_9z,_C_yY,nil,_C_yX,...)end,__tostring=function()return _C_8K end})setmetatable(BackSymbol,{__index=setmetatable({static=_C_yZ},_C_8N),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_yi,_C_yj,_C_1f,"BackSymbol",_C_9z,_C_9z,_C_yl,nil,_C_yk,...)end,__tostring=function()return _C_8M end})setmetatable(KeyboardShortcutEvent,{__index=setmetatable({static=_C_ym},_C_8P),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_yz,nil,_C_yv,_C_yw,_C_0J,"KeyboardShortcutEvent",_C_z0,_C_z1,_C_z3,nil,_C_z2,...)end,__tostring=function()return _C_8O end})setmetatable(Folder,{__index=setmetatable({static=_C_z4},_C_8R),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_zN,nil,_C_zB,_C_zC,_C_19,"Folder",_C_zX,_C_zY,_C_za,_C_zW,_C_zZ,...)end,__tostring=function()return _C_8Q end})setmetatable(ConstructionClassException,{__index=setmetatable({static=_C_zb},_C_8T),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_zj,nil,_C_zg,_C_zh,_C_0n,"ConstructionClassException",_C_zk,_C_zl,_C_zn,nil,_C_zm,...)end,__tostring=function()return _C_8S end})setmetatable(LeftSymbol,{__index=setmetatable({static=_C_zo},_C_8V),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_zx,_C_zy,_C_1k,"LeftSymbol",_C_9z,_C_9z,_C_000,nil,_C_zz,...)end,__tostring=function()return _C_8U end})setmetatable(ValidationException,{__index=setmetatable({static=_C_001},_C_9e),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_009,nil,_C_006,_C_007,_C_0z,"ValidationException",_C_00A,_C_00B,_C_00D,nil,_C_00C,...)end,__tostring=function()return _C_9d end})setmetatable(UnknownTypeValidationException,{__index=setmetatable({static=_C_00E},_C_8b),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_00L,nil,_C_00J,_C_00K,_C_0y,"UnknownTypeValidationException",_C_00M,_C_00N,_C_00P,nil,_C_00O,...)end,__tostring=function()return _C_8a end})setmetatable(TextMask,{__index=setmetatable({static=_C_00Q},_C_8e),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_00Z,nil,_C_00V,_C_00W,_C_1W,"TextMask",_C_00a,_C_00b,_C_00d,nil,_C_00c,...)end,__tostring=function()return _C_8d end})setmetatable(SeparatorMask,{__index=setmetatable({static=_C_00e},_C_8g),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_00m,nil,_C_00j,_C_00k,_C_1T,"SeparatorMask",_C_00n,_C_00o,_C_00q,nil,_C_00p,...)end,__tostring=function()return _C_8f end})setmetatable(TreeNode,{__index=setmetatable({static=_C_00r},_C_8i),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_01C,nil,_C_00x,_C_00y,_C_2c,"TreeNode",_C_01L,_C_01M,_C_01O,_C_01K,_C_01N,...)end,__tostring=function()return _C_8h end})setmetatable(Bundle,{__index=setmetatable({static=_C_01P},_C_8o),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_01X,nil,_C_01V,_C_01W,_C_16,"Bundle",_C_01a,_C_01b,_C_01d,_C_01Z,_C_01c,...)end,__tostring=function()return _C_8n end})setmetatable(ScreenCanvas,{__index=setmetatable({static=_C_01e},_C_8q),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_01n,nil,_C_01j,_C_01k,_C_1S,"ScreenCanvas",_C_01p,_C_01q,_C_01s,_C_01o,_C_01r,...)end,__tostring=function()return _C_8p end})setmetatable(QuartzSettings,{__index=setmetatable({static=_C_01t},_C_8s),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_020,nil,_C_01y,_C_01z,_C_m,"QuartzSettings",_C_023,_C_024,_C_026,_C_022,_C_025,...)end,__tostring=function()return _C_8r end})setmetatable(MoveMouseEvent,{__index=setmetatable({static=_C_027},_C_8u),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_02J,nil,_C_02G,_C_02H,_C_0e,"MoveMouseEvent",_C_02K,_C_02L,_C_02N,nil,_C_02M,...)end,__tostring=function()return _C_8t end})setmetatable(SplashApplicationContainer,{__index=setmetatable({static=_C_02O},_C_8w),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_02Y,nil,_C_02U,_C_02V,_C_n,"SplashApplicationContainer",_C_02a,_C_02b,_C_02d,_C_02Z,_C_02c,...)end,__tostring=function()return _C_8v end})setmetatable(HomeItem,{__index=setmetatable({static=_C_02e},_C_8y),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_02q,nil,_C_02j,_C_02k,_C_T,"HomeItem",_C_02t,_C_02u,_C_02w,_C_02r,_C_02v,...)end,__tostring=function()return _C_8x end})_C_Aa=_C_09U(_C_K("/src/classes/Clipboard/Drag and Drop/DragDropManager.luo",16,[[return {
		DISAPPEAR = 0;
		SHRINK = 1;
		RETURN = 2;
	}]],_C_v),"DragDropManager.dropStyles")local _C_09n="enum 'DragDropManager.dropStyles': " .. tostring(_C_Aa):sub(8)setmetatable(_C_Aa,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09n end})for k,v in pairs(_C_Aa)do if _C_Ar(v)then _C_G("DragDropManager.dropStyles",k,"Number",v)end _C_Ab[v]=true end setmetatable(DragDropManager,{__index=setmetatable({static=_C_02x,dropStyles=_C_Aa},_C_90),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_03C,nil,_C_031,_C_032,_C_v,"DragDropManager",_C_03H,_C_03I,nil,nil,_C_03J,...)end,__tostring=function()return _C_8z end})setmetatable(TextChangedInterfaceEvent,{__index=setmetatable({static=_C_03K},_C_92),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_03W,nil,_C_03T,_C_03U,_C_0T,"TextChangedInterfaceEvent",_C_03X,_C_03Y,_C_03a,nil,_C_03Z,...)end,__tostring=function()return _C_91 end})setmetatable(TopBarContainer,{__index=setmetatable({static=_C_03b},_C_94),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_03y,nil,_C_03h,_C_03i,_C_p,"TopBarContainer",_C_043,_C_044,_C_046,_C_040,_C_045,...)end,__tostring=function()return _C_93 end})setmetatable(SilicaProgramEnvironment,{__index=setmetatable({static=_C_047},_C_96),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_04E,nil,_C_04C,_C_04D,_C_j,"SilicaProgramEnvironment",_C_04F,_C_04G,_C_04I,nil,_C_04H,...)end,__tostring=function()return _C_95 end})setmetatable(EnteredInterfaceMouseEvent,{__index=setmetatable({static=_C_04J},_C_98),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_04V,nil,_C_04S,_C_04T,_C_0M,"EnteredInterfaceMouseEvent",_C_04W,_C_04X,_C_04Z,nil,_C_04Y,...)end,__tostring=function()return _C_97 end})setmetatable(SiblingRemovedInterfaceEvent,{__index=setmetatable({static=_C_04a},_C_9A),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_04m,nil,_C_04j,_C_04k,_C_0S,"SiblingRemovedInterfaceEvent",_C_04n,_C_04o,_C_04q,nil,_C_04p,...)end,__tostring=function()return _C_99 end})setmetatable(Package,{__index=setmetatable({static=_C_04r},_C_9C),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_050,nil,_C_04y,_C_04z,_C_1C,"Package",_C_052,_C_053,_C_055,_C_051,_C_054,...)end,__tostring=function()return _C_9B end})setmetatable(PseudoReferenceClassException,{__index=setmetatable({static=_C_056},_C_9E),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_05E,nil,_C_05B,_C_05C,_C_0r,"PseudoReferenceClassException",_C_05F,_C_05G,_C_05I,nil,_C_05H,...)end,__tostring=function()return _C_9D end})setmetatable(ValueTypeClassException,{__index=setmetatable({static=_C_05J},_C_9G),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_05R,nil,_C_05O,_C_05P,_C_0t,"ValueTypeClassException",_C_05S,_C_05T,_C_05V,nil,_C_05U,...)end,__tostring=function()return _C_9F end})setmetatable(TextCursor,{__index=setmetatable({static=_C_05W},_C_9I),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_05e,_C_05f,_C_06,"TextCursor",_C_9z,_C_9z,_C_05h,nil,_C_05g,...)end,__tostring=function()return _C_9H end})setmetatable(FocusesChangedInterfaceEvent,{__index=setmetatable({static=_C_05i},_C_9K),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_05x,nil,_C_05r,_C_05s,_C_0H,"FocusesChangedInterfaceEvent",_C_05z,_C_060,_C_062,nil,_C_061,...)end,__tostring=function()return _C_9J end})setmetatable(UpMouseEvent,{__index=setmetatable({static=_C_063},_C_9M),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_06F,nil,_C_06C,_C_06D,_C_0g,"UpMouseEvent",_C_06G,_C_06H,_C_06J,nil,_C_06I,...)end,__tostring=function()return _C_9L end})setmetatable(MathParser,{__index=setmetatable({static=_C_06K},_C_9O),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_06V,nil,_C_06R,_C_06S,_C_z,"MathParser",_C_06W,_C_06X,nil,nil,_C_06Y,...)end,__tostring=function()return _C_9N end})setmetatable(SiblingAddedInterfaceEvent,{__index=setmetatable({static=_C_06Z},_C_9Q),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_06l,nil,_C_06i,_C_06j,_C_0R,"SiblingAddedInterfaceEvent",_C_06m,_C_06n,_C_06p,nil,_C_06o,...)end,__tostring=function()return _C_9P end})setmetatable(DownMouseEvent,{__index=setmetatable({static=_C_06q},_C_9S),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_072,nil,_C_06z,_C_070,_C_0a,"DownMouseEvent",_C_073,_C_074,_C_076,nil,_C_075,...)end,__tostring=function()return _C_9R end})setmetatable(HeldMouseEvent,{__index=setmetatable({static=_C_077},_C_9U),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_07J,nil,_C_07G,_C_07H,_C_0c,"HeldMouseEvent",_C_07K,_C_07L,_C_07N,nil,_C_07M,...)end,__tostring=function()return _C_9T end})setmetatable(ChildRemovedInterfaceEvent,{__index=setmetatable({static=_C_07O},_C_9W),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_07a,nil,_C_07X,_C_07Y,_C_0D,"ChildRemovedInterfaceEvent",_C_07b,_C_07c,_C_07e,nil,_C_07d,...)end,__tostring=function()return _C_9V end})setmetatable(KeyboardShortcut,{__index=setmetatable({static=_C_07f},_C_9a),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_07q,nil,_C_07l,_C_07m,_C_1d,"KeyboardShortcut",_C_07r,_C_07s,nil,nil,_C_07t,...)end,__tostring=function()return _C_9Z end})setmetatable(MenuNotSpecifiedException,{__index=setmetatable({static=_C_07u},_C_9j),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_081,nil,_C_07z,_C_080,_C_10,"MenuNotSpecifiedException",_C_082,_C_083,_C_085,nil,_C_084,...)end,__tostring=function()return _C_9i end})setmetatable(DownKeyEvent,{__index=setmetatable({static=_C_086},_C_9l),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_08I,nil,_C_08F,_C_08G,_C_0W,"DownKeyEvent",_C_08J,_C_08K,_C_08M,nil,_C_08L,...)end,__tostring=function()return _C_9k end})setmetatable(HomeSearchBox,{__index=setmetatable({static=_C_08N},_C_9n),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_08U,nil,_C_08S,_C_08T,_C_V,"HomeSearchBox",_C_08W,_C_08X,_C_08Z,_C_08V,_C_08Y,...)end,__tostring=function()return _C_9m end})setmetatable(StyleClassException,{__index=setmetatable({static=_C_08a},_C_9p),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_08i,nil,_C_08f,_C_08g,_C_0s,"StyleClassException",_C_08j,_C_08k,_C_08m,nil,_C_08l,...)end,__tostring=function()return _C_9o end})_C_Ac=_C_09U(_C_K("/src/classes/Animation.luo",131,[[return {
		
		LINEAR = function( t, b, c, d )
			return c * t / d + b
		end;

		
		IN_QUAD = function( t, b, c, d )
			return c * pow(t / d, 2) + b
		end;

		OUT_QUAD = function( t, b, c, d )
			t = t / d
			return -c * t * (t - 2) + b
		end;

		IN_OUT_QUAD = function( t, b, c, d )
			t = t / d * 2
			if t < 1 then return c / 2 * pow(t, 2) + b end
			return -c / 2 * ((t - 1) * (t - 3) - 1) + b
		end;

		OUT_IN_QUAD = function( t, b, c, d )
			if t < d / 2 then return outQuad(t * 2, b, c / 2, d) end
			return inQuad((t * 2) - d, b + c / 2, c / 2, d)
		end;

		
		IN_CUBIC = function ( t, b, c, d )
			return c * pow(t / d, 3) + b
		end;

		OUT_CUBIC = function( t, b, c, d )
			return c * (pow(t / d - 1, 3) + 1) + b
		end;

		IN_OUT_CUBIC = function( t, b, c, d )
			t = t / d * 2
			if t < 1 then return c / 2 * t * t * t + b end
			t = t - 2
			return c / 2 * (t * t * t + 2) + b
		end;

		OUT_IN_CUBIC = function( t, b, c, d )
			if t < d / 2 then return outCubic(t * 2, b, c / 2, d) end
			return inCubic((t * 2) - d, b + c / 2, c / 2, d)
		end;

		
		IN_QUART = function( t, b, c, d )
			return c * pow(t / d, 4) + b
		end;

		OUT_QUART = function( t, b, c, d )
			return -c * (pow(t / d - 1, 4) - 1) + b
		end;

		IN_OUT_QUART = function( t, b, c, d )
			t = t / d * 2
			if t < 1 then return c / 2 * pow(t, 4) + b end
			return -c / 2 * (pow(t - 2, 4) - 2) + b
		end;

		OUT_IN_QUART = function( t, b, c, d )
			if t < d / 2 then return outQuart(t * 2, b, c / 2, d) end
			return inQuart((t * 2) - d, b + c / 2, c / 2, d)
		end;

		
		IN_QUINT = function( t, b, c, d )
			return c * pow(t / d, 5) + b
		end;

		OUT_QUINT = function( t, b, c, d )
			return c * (pow(t / d - 1, 5) + 1) + b
		end;

		IN_OUT_QUINT = function( t, b, c, d )
			t = t / d * 2
			if t < 1 then return c / 2 * pow(t, 5) + b end
			return c / 2 * (pow(t - 2, 5) + 2) + b
		end;

		OUT_IN_QUINT = function( t, b, c, d )
			if t < d / 2 then return outQuint(t * 2, b, c / 2, d) end
			return inQuint((t * 2) - d, b + c / 2, c / 2, d)
		end;

		
		IN_SINE = function( t, b, c, d )
			return -c * cos(t / d * (pi / 2)) + c + b
		end;

		OUT_SINE = function( t, b, c, d )
			return c * sin(t / d * (pi / 2)) + b
		end;

		IN_OUT_SINE = function( t, b, c, d )
			return -c / 2 * (cos(pi * t / d) - 1) + b
		end;

		OUT_IN_SINE = function( t, b, c, d )
			if t < d / 2 then return outSine(t * 2, b, c / 2, d) end
			return inSine((t * 2) -d, b + c / 2, c / 2, d)
		end;

		
		IN_EXPO = function( t, b, c, d )
			if t == 0 then return b end
			return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
		end;

		OUT_EXPO = function( t, b, c, d )
			if t == d then return b + c end
			return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
		end;

		IN_OUT_EXPO = function( t, b, c, d )
			if t == 0 then return b end
			if t == d then return b + c end
			t = t / d * 2
			if t < 1 then return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005 end
			return c / 2 * 1.0005 * (-pow(2, -10 * (t - 1)) + 2) + b
		end;

		OUT_IN_EXPO = function( t, b, c, d )
			if t < d / 2 then return outExpo(t * 2, b, c / 2, d) end
			return inExpo((t * 2) - d, b + c / 2, c / 2, d)
		end;

		
		IN_CIRC = function( t, b, c, d )
			return(-c * (sqrt(1 - pow(t / d, 2)) - 1) + b)
		end;

		OUT_CIRC = function( t, b, c, d )
			return(c * sqrt(1 - pow(t / d - 1, 2)) + b)
		end;

		IN_OUT_CIRC = function( t, b, c, d )
			t = t / d * 2
			if t < 1 then return -c / 2 * (sqrt(1 - t * t) - 1) + b end
			t = t - 2
			return c / 2 * (sqrt(1 - t * t) + 1) + b
		end;

		OUT_IN_CIRC = function( t, b, c, d )
			if t < d / 2 then return outCirc(t * 2, b, c / 2, d) end
			return inCirc((t * 2) - d, b + c / 2, c / 2, d)
		end;

		
		CALCULATE_P_A_S = function( p,a,c,d )
			p, a = p or d * 0.3, a or 0
			if a < abs( c ) then return p, c, p / 4 end 
			return p, a, p / (2 * pi) * asin( c/a ) 
		end;

		IN_ELASTIC = function( t, b, c, d, a, p )
			local s
			if t == 0 then return b end
			t = t / d
			if t == 1 then return b + c end
			p,a,s = calculatePAS( p,a,c,d )
			t = t - 1
			return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
		end;

		OUT_ELASTIC = function( t, b, c, d, a, p )
			local s
			if t == 0 then return b end
			t = t / d
			if t == 1 then return b + c end
			p,a,s = calculatePAS( p,a,c,d )
			return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
		end;

		IN_OUT_ELASTIC = function( t, b, c, d, a, p )
			local s
			if t == 0 then return b end
			t = t / d * 2
			if t == 2 then return b + c end
			p,a,s = calculatePAS( p,a,c,d )
			t = t - 1
			if t < 0 then return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b end
			return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
		end;

		OUT_IN_ELASTIC = function( t, b, c, d, a, p )
			if t < d / 2 then return outElastic(t * 2, b, c / 2, d, a, p) end
			return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
		end;

		
		IN_BACK = function( t, b, c, d, s )
			s = s or 1.70158
			t = t / d
			return c * t * t * ((s + 1) * t - s) + b
		end;

		OUT_BACK = function( t, b, c, d, s )
			s = s or 1.70158
			t = t / d - 1
			return c * (t * t * ((s + 1) * t + s) + 1) + b
		end;

		IN_OUT_BACK = function( t, b, c, d, s )
			s = (s or 1.70158) * 1.525
			t = t / d * 2
			if t < 1 then return c / 2 * (t * t * ((s + 1) * t - s)) + b end
			t = t - 2
			return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
		end;

		OUT_IN_BACK = function( t, b, c, d, s )
			if t < d / 2 then return outBack(t * 2, b, c / 2, d, s) end
			return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
		end;

		
		OUT_BOUNCE = function( t, b, c, d )
			t = t / d
			if t < 1 / 2.75 then return c * (7.5625 * t * t) + b end
			if t < 2 / 2.75 then
				t = t - (1.5 / 2.75)
				return c * (7.5625 * t * t + 0.75) + b
			elseif t < 2.5 / 2.75 then
				t = t - (2.25 / 2.75)
				return c * (7.5625 * t * t + 0.9375) + b
			end
			t = t - (2.625 / 2.75)
			return c * (7.5625 * t * t + 0.984375) + b
		end;

		IN_BOUNCE = function( t, b, c, d )
			return c - outBounce(d - t, 0, c, d) + b
		end;

		IN_OUT_BOUNCE = function( t, b, c, d )
			if t < d / 2 then return inBounce(t * 2, 0, c, d) * 0.5 + b end
			return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
		end;

		OUT_IN_BOUNCE = function( t, b, c, d )
			if t < d / 2 then return outBounce(t * 2, b, c / 2, d) end
			return inBounce((t * 2) - d, b + c / 2, c / 2, d)
		end;
	}]],_C_s),"Animation.easings")local _C_09o="enum 'Animation.easings': " .. tostring(_C_Ac):sub(8)setmetatable(_C_Ac,{__index=_C_8,__newindex=_C_9,__tostring=function()return _C_09o end})for k,v in pairs(_C_Ac)do if _C_li(v)then _C_G("Animation.easings",k,"Function",v)end _C_Ad[v]=true end setmetatable(Animation,{__index=setmetatable({static=_C_08n,easings=_C_Ac},_C_9r),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_08x,nil,_C_08r,_C_08s,_C_s,"Animation",_C_08y,_C_08z,nil,nil,_C_090,...)end,__tostring=function()return _C_9q end})setmetatable(TreeItem,{__index=setmetatable({static=_C_091},_C_9t),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,_C_09A,nil,_C_096,_C_097,_C_2b,"TreeItem",_C_09D,_C_09E,_C_09G,_C_09B,_C_09F,...)end,__tostring=function()return _C_9s end})setmetatable(ThumbnailSymbol,{__index=setmetatable({static=_C_09H},_C_9v),__newindex=_C_2,__call=function(_,...)return _C_N({},"instance",nil,nil,nil,_C_09Q,_C_09R,_C_1s,"ThumbnailSymbol",_C_9z,_C_9z,_C_09T,nil,_C_09S,...)end,__tostring=function()return _C_9u end})_C_N(_C_3R,"static",nil,_C_Aj,nil,_C_Af,_C_Ag,_C_13,"FileAssociation",_C_9z,_C_9z,nil,nil,_C_Ak)_C_N(_C_30,"static",nil,_C_B9,nil,_C_B7,_C_B8,_C_12,"FakeFileAssociation",_C_9z,_C_9z,_C_BB,nil,_C_BA)_C_N(_C_8m,"static",nil,_C_BX,nil,_C_BM,_C_BN,_C_1F,"Font",_C_BZ,_C_Ba,nil,nil,_C_Bb)_C_N(_C_32,"static",nil,_C_Bv,nil,_C_Bm,_C_Bn,_C_1E,"BitmapFont",_C_Bw,_C_Bx,_C_Bz,nil,_C_By)_C_N(_C_34,"static",nil,_C_CD,nil,_C_C8,_C_C9,_C_1r,"Symbol",_C_CF,_C_CG,nil,nil,_C_CH)_C_N(_C_36,"static",nil,nil,nil,_C_CM,_C_CN,_C_1L,"Mask",_C_9z,_C_9z,nil,nil,_C_CO)_C_N(_C_7j,"static",_C_Cf,_C_Cj,nil,_C_Cd,_C_Ce,_C_0A,"Event",_C_Ck,_C_Cl,nil,nil,_C_Cm)_C_N(_C_6N,"static",_C_D3,_C_D4,nil,_C_D1,_C_D2,_C_0I,"InterfaceEvent",_C_D5,_C_D6,_C_D8,nil,_C_D7)_C_N(_C_38,"static",_C_DJ,_C_DK,nil,_C_DH,_C_DI,_C_0E,"ChildRepositionedInterfaceEvent",_C_DL,_C_DM,_C_DO,nil,_C_DN)_C_N(_C_3d,"static",nil,_C_Dl,nil,_C_DY,_C_DZ,_C_02,"Cursor",_C_Dp,_C_Dq,nil,nil,_C_Dr)_C_N(_C_3A,"static",nil,_C_Dy,nil,_C_Dw,_C_Dx,_C_05,"ResizeVerticalCursor",_C_Dz,_C_E0,_C_E2,nil,_C_E1)_C_N(_C_5t,"static",nil,nil,nil,_C_E8,_C_E9,_C_0u,"Exception",_C_9z,_C_9z,nil,nil,_C_EA)_C_N(_C_6t,"static",nil,nil,nil,_C_EJ,_C_EK,_C_0v,"FatalException",_C_9z,_C_9z,_C_EM,nil,_C_EL)_C_N(_C_7l,"static",nil,nil,nil,_C_EV,_C_EW,_C_0m,"ClassException",_C_9z,_C_9z,_C_EY,nil,_C_EX)_C_N(_C_3C,"static",nil,nil,nil,_C_Eh,_C_Ei,_C_0l,"ArgumentValueTypeParsingClassException",_C_9z,_C_9z,_C_Ek,nil,_C_Ej)_C_N(_C_3N,"static",nil,nil,nil,_C_Eu,_C_Ev,_C_2u,"View",_C_9z,_C_9z,nil,nil,_C_Ew)_C_N(_C_3E,"static",nil,nil,nil,_C_G4,_C_G5,_C_2t,"TextBox",_C_9z,_C_9z,_C_G7,nil,_C_G6)_C_N(_C_8X,"static",nil,_C_HC,nil,_C_Gx,_C_Gy,_C_1b,"Image",_C_9z,_C_9z,nil,nil,_C_HD)_C_N(_C_3G,"static",nil,_C_Hd,nil,_C_HW,_C_HX,_C_1a,"Icon",_C_9z,_C_9z,_C_Hf,nil,_C_He)_C_N(_C_3I,"static",nil,nil,nil,_C_Ht,_C_Hu,_C_b,"ProgramEnvironment",_C_9z,_C_9z,nil,nil,_C_Hv)_C_N(_C_3K,"static",nil,nil,nil,_C_I8,_C_I9,_C_u,"ClipboardData",_C_9z,_C_9z,nil,nil,_C_IA)_C_N(_C_3j,"static",nil,nil,nil,_C_IH,_C_II,_C_1H,"Canvas",_C_9z,_C_9z,nil,nil,_C_IJ)_C_N(_C_3P,"static",nil,nil,nil,_C_Ig,_C_Ih,_C_1R,"ScaleableCanvas",_C_9z,_C_9z,_C_Ij,nil,_C_Ii)_C_N(_C_3T,"static",nil,_C_J3,nil,_C_Iy,_C_Iz,_C_00,"BridgedCursor",_C_J4,_C_J5,_C_J7,nil,_C_J6)_C_N(_C_3V,"static",_C_JF,_C_JG,nil,_C_JD,_C_JE,_C_0V,"CharacterEvent",_C_JH,_C_JI,_C_JK,nil,_C_JJ)_C_N(_C_3X,"static",nil,_C_JX,nil,_C_JU,_C_JV,_C_1z,"Document",_C_9z,_C_9z,nil,nil,_C_JY)_C_N(_C_9c,"static",nil,nil,nil,_C_Ju,_C_Jv,_C_24,"Button",_C_9z,_C_9z,_C_Jx,nil,_C_Jw)_C_N(_C_3Z,"static",nil,nil,nil,_C_KK,_C_KL,_C_2o,"SegmentButton",_C_9z,_C_9z,_C_KN,nil,_C_KM)_C_N(_C_42,"static",nil,_C_Kf,nil,_C_Kc,_C_Kd,_C_27,"Container",_C_9z,_C_9z,_C_Kh,nil,_C_Kg)_C_N(_C_3b,"static",nil,_C_LT,nil,_C_LR,_C_LS,_C_2C,"LayoutContainer",_C_9z,_C_9z,_C_LV,nil,_C_LU)_C_N(_C_3f,"static",_C_Lp,_C_Lq,nil,_C_Ln,_C_Lo,_C_0N,"ExitedInterfaceMouseEvent",_C_Lr,_C_Ls,_C_Lu,nil,_C_Lt)_C_N(_C_3h,"static",_C_M6,_C_M7,nil,_C_M4,_C_M5,_C_0U,"ThemeChangedInterfaceEvent",_C_M8,_C_M9,_C_MB,nil,_C_MA)_C_N(_C_5H,"static",nil,_C_MU,nil,_C_MN,_C_MO,_C_18,"FileSystemItem",_C_9z,_C_9z,nil,nil,_C_MV)_C_N(_C_3l,"static",nil,_C_N1,nil,_C_My,_C_Mz,_C_17,"File",_C_9z,_C_9z,_C_N3,nil,_C_N2)_C_N(_C_3n,"static",nil,_C_NL,nil,_C_NJ,_C_NK,_C_2K,"SegmentContainer",_C_9z,_C_9z,_C_NN,nil,_C_NM)_C_N(_C_3p,"static",nil,nil,nil,_C_Nb,_C_Nc,_C_0j,"ArgumentCountClassException",_C_9z,_C_9z,_C_Ne,nil,_C_Nd)_C_N(_C_3r,"static",nil,nil,nil,_C_No,_C_Np,_C_0x,"SettingsException",_C_9z,_C_9z,_C_Nr,nil,_C_Nq)_C_N(_C_3t,"static",nil,_C_O3,nil,_C_O0,_C_O1,_C_1o,"RightSymbol",_C_O4,_C_O5,_C_O7,nil,_C_O6)_C_N(_C_4d,"static",nil,nil,nil,_C_OD,_C_OE,_C_2r,"SymbolButton",_C_9z,_C_9z,_C_OG,nil,_C_OF)_C_N(_C_3w,"static",nil,nil,nil,_C_OV,_C_OW,_C_2W,"ToolbarSymbolButton",_C_9z,_C_9z,_C_OY,nil,_C_OX)_C_N(_C_3y,"static",nil,nil,nil,_C_Oi,_C_Oj,_C_h,"QuartzProxy",_C_9z,_C_9z,nil,nil,_C_Ok)_C_N(_C_40,"static",nil,_C_P0,nil,_C_Oy,_C_Oz,_C_11,"BridgedFileAssociation",_C_9z,_C_9z,_C_P2,nil,_C_P1)_C_N(_C_9h,"static",nil,_C_PG,nil,_C_PC,_C_PD,_C_t,"Application",_C_PH,_C_PI,nil,nil,_C_PJ)_C_N(_C_44,"static",nil,_C_Q0,nil,_C_Py,_C_Pz,_C_k,"QuartzApplication",_C_Q1,_C_Q2,_C_Q4,nil,_C_Q3)_C_N(_C_8k,"static",_C_QN,_C_QO,nil,_C_QL,_C_QM,_C_0X,"KeyEvent",_C_QP,_C_QQ,_C_QS,nil,_C_QR)_C_N(_C_46,"static",_C_Qe,_C_Qf,nil,_C_Qc,_C_Qd,_C_0Y,"UpKeyEvent",_C_Qg,_C_Qh,_C_Qj,nil,_C_Qi)_C_N(_C_48,"static",nil,nil,nil,_C_Qs,_C_Qt,_C_0w,"MultipleInstancesSettingsException",_C_9z,_C_9z,_C_Qv,nil,_C_Qu)_C_N(_C_4A,"static",nil,nil,nil,_C_R4,_C_R5,_C_1M,"OutlineMask",_C_9z,_C_9z,_C_R7,nil,_C_R6)_C_N(_C_4C,"static",nil,nil,nil,_C_RH,_C_RI,_C_1e,"Settings",_C_9z,_C_9z,nil,nil,_C_RJ)_C_N(_C_4E,"static",nil,_C_RX,nil,_C_RV,_C_RW,_C_04,"ResizeHorizontalCursor",_C_RY,_C_RZ,_C_Rb,nil,_C_Ra)_C_N(_C_4G,"static",nil,nil,nil,_C_Rh,_C_Ri,_C_1I,"CircleMask",_C_9z,_C_9z,_C_Rk,nil,_C_Rj)_C_N(_C_5J,"static",nil,_C_Rw,nil,_C_Ru,_C_Rv,_C_2d,"Window",_C_9z,_C_9z,_C_Ry,nil,_C_Rx)_C_N(_C_4I,"static",nil,_C_SS,nil,_C_SP,_C_SQ,_C_2y,"AlertWindow",_C_9z,_C_9z,_C_SU,nil,_C_ST)_C_N(_C_4K,"static",_C_Sk,_C_Sl,nil,_C_Si,_C_Sj,_C_0G,"FileAssociationRegisteredInterfaceEvent",_C_Sm,_C_Sn,_C_Sp,nil,_C_So)_C_N(_C_4M,"static",nil,nil,nil,_C_T1,_C_T2,_C_2x,"WindowButton",_C_9z,_C_9z,_C_T4,nil,_C_T3)_C_N(_C_4O,"static",nil,nil,nil,_C_TN,_C_TO,_C_2w,"MaximiseWindowButton",_C_9z,_C_9z,_C_TQ,nil,_C_TP)_C_N(_C_4Q,"static",nil,nil,nil,_C_Tb,_C_Tc,_C_2v,"CloseWindowButton",_C_9z,_C_9z,_C_Te,nil,_C_Td)_C_N(_C_7v,"static",nil,nil,nil,_C_Tp,_C_Tq,_C_Z,"Program",_C_9z,_C_9z,nil,nil,_C_Tr)_C_N(_C_4S,"static",nil,nil,nil,_C_UO,_C_UP,_C_i,"SilicaProgram",_C_9z,_C_9z,_C_UR,nil,_C_UQ)_C_N(_C_4U,"static",_C_Ug,_C_Uh,nil,_C_Ue,_C_Uf,_C_0B,"ActionInterfaceEvent",_C_Ui,_C_Uj,_C_Ul,nil,_C_Uk)_C_N(_C_4W,"static",nil,nil,nil,_C_Uw,_C_Ux,_C_2s,"SymbolSegmentButton",_C_9z,_C_9z,_C_Uz,nil,_C_Uy)_C_N(_C_4Z,"static",nil,_C_VG,nil,_C_VD,_C_VE,_C_1D,"FolderIcon",_C_9z,_C_9z,_C_VI,nil,_C_VH)_C_N(_C_4b,"static",nil,nil,nil,_C_VT,_C_VU,_C_0q,"LoadingClassException",_C_9z,_C_9z,_C_VW,nil,_C_VV)_C_N(_C_4f,"static",nil,nil,nil,_C_Vg,_C_Vh,_C_1J,"Graphics",_C_9z,_C_9z,nil,nil,_C_Vi)_C_N(_C_4h,"static",nil,nil,nil,_C_Vn,_C_Vo,_C_2q,"SeparatorView",_C_9z,_C_9z,_C_Vq,nil,_C_Vp)_C_N(_C_4v,"static",nil,nil,nil,_C_W1,_C_W2,_C_2j,"MenuItem",_C_9z,_C_9z,_C_W4,nil,_C_W3)_C_N(_C_4j,"static",nil,nil,nil,_C_WS,_C_WT,_C_2p,"SeparatorMenuItem",_C_9z,_C_9z,_C_WV,nil,_C_WU)_C_N(_C_4l,"static",nil,nil,nil,_C_Wi,_C_Wj,_C_2n,"SearchBox",_C_9z,_C_9z,_C_Wl,nil,_C_Wk)_C_N(_C_4n,"static",nil,_C_Wy,nil,_C_Ww,_C_Wx,_C_15,"UnknownFileAssociation",_C_9z,_C_9z,_C_X0,nil,_C_Wz)_C_N(_C_4p,"static",nil,_C_XC,nil,_C_XA,_C_XB,_C_2U,"ToolbarSegmentContainer",_C_9z,_C_9z,_C_XE,nil,_C_XD)_C_N(_C_4r,"static",nil,nil,nil,_C_XO,_C_XP,_C_2l,"Radio",_C_9z,_C_9z,_C_XR,nil,_C_XQ)_C_N(_C_4t,"static",nil,nil,nil,_C_Xl,_C_Xm,_C_2k,"ProgressBar",_C_9z,_C_9z,_C_Xo,nil,_C_Xn)_C_N(_C_4x,"static",nil,nil,nil,_C_Y4,_C_Y5,_C_2i,"MenuButton",_C_9z,_C_9z,_C_Y7,nil,_C_Y6)_C_N(_C_4z,"static",nil,nil,nil,_C_YV,_C_YW,_C_2h,"MenuBarItem",_C_9z,_C_9z,_C_YY,nil,_C_YX)_C_N(_C_51,"static",nil,nil,nil,_C_Z1,_C_Z2,_C_r,"TopBarSeparatorView",_C_9z,_C_9z,_C_Z4,nil,_C_Z3)_C_N(_C_53,"static",nil,nil,nil,_C_ZH,_C_ZI,_C_2g,"MaskedTextBox",_C_9z,_C_9z,_C_ZK,nil,_C_ZJ)_C_N(_C_8Z,"static",_C_ZW,_C_ZX,nil,_C_ZU,_C_ZV,_C_0d,"MouseEvent",_C_ZY,_C_ZZ,_C_Zb,nil,_C_Za)_C_N(_C_55,"static",_C_Zn,_C_Zo,nil,_C_Zl,_C_Zm,_C_0f,"ScrollMouseEvent",_C_Zp,_C_Zq,_C_Zs,nil,_C_Zr)_C_N(_C_57,"static",nil,nil,nil,_C_a4,_C_a5,_C_2f,"Label",_C_9z,_C_9z,_C_a7,nil,_C_a6)_C_N(_C_59,"static",_C_aQ,_C_aR,nil,_C_aO,_C_aP,_C_0O,"ParentChangedInterfaceEvent",_C_aS,_C_aT,_C_aV,nil,_C_aU)_C_N(_C_5B,"static",nil,nil,nil,_C_af,_C_ag,_C_1P,"RectangleMask",_C_9z,_C_9z,_C_ai,nil,_C_ah)_C_N(_C_5D,"static",nil,nil,nil,_C_as,_C_at,_C_w,"DragView",_C_9z,_C_9z,_C_av,nil,_C_au)_C_N(_C_5F,"static",nil,_C_bB,nil,_C_b9,_C_bA,_C_2e,"WindowContainer",_C_9z,_C_9z,_C_bD,nil,_C_bC)_C_N(_C_5L,"static",nil,nil,nil,_C_bN,_C_bO,_C_1B,"Metadata",_C_9z,_C_9z,nil,nil,_C_bP)_C_N(_C_5O,"static",nil,_C_bs,nil,_C_bq,_C_br,_C_S,"HomeContainer",_C_9z,_C_9z,_C_bu,nil,_C_bt)_C_N(_C_5Q,"static",nil,_C_cJ,nil,_C_cC,_C_cD,_C_14,"FileAssociationManager",_C_cK,_C_cL,nil,nil,_C_cM)_C_N(_C_5S,"static",_C_cT,_C_cU,nil,_C_cR,_C_cS,_C_0L,"MenuChangedInterfaceEvent",_C_cV,_C_cW,_C_cY,nil,_C_cX)_C_N(_C_5U,"static",nil,_C_cm,nil,_C_ch,_C_ci,_C_20,"KeyboardShortcutManager",_C_9z,_C_9z,nil,nil,_C_cn)_C_N(_C_9Y,"static",nil,nil,nil,_C_d4,_C_d5,_C_q,"TopBarItem",_C_9z,_C_9z,_C_d7,nil,_C_d6)_C_N(_C_5X,"static",nil,nil,nil,_C_dO,_C_dP,_C_o,"ClockItem",_C_9z,_C_9z,_C_dR,nil,_C_dQ)_C_N(_C_5Z,"static",nil,nil,nil,_C_dl,_C_dm,_C_1Q,"RoundedRectangleMask",_C_9z,_C_9z,_C_do,nil,_C_dn)_C_N(_C_5b,"static",_C_e0,_C_e1,nil,_C_dy,_C_dz,_C_0F,"ContainerReadyInterfaceEvent",_C_e2,_C_e3,_C_e5,nil,_C_e4)_C_N(_C_5d,"static",nil,_C_eJ,nil,_C_eE,_C_eF,_C_01,"ClickableCursor",_C_eK,_C_eL,_C_eN,nil,_C_eM)_C_N(_C_5f,"static",nil,_C_eV,nil,_C_eT,_C_eU,_C_1G,"VectorFont",_C_eW,_C_eX,_C_eZ,nil,_C_eY)_C_N(_C_6n,"static",nil,_C_ek,nil,_C_ei,_C_ej,_C_2I,"ScrollContainer",_C_9z,_C_9z,_C_em,nil,_C_el)_C_N(_C_6L,"static",nil,_C_f0,nil,_C_ey,_C_ez,_C_2E,"ListContainer",_C_9z,_C_9z,_C_f2,nil,_C_f1)_C_N(_C_5h,"static",nil,_C_fU,nil,_C_fS,_C_fT,_C_2a,"TreeContainer",_C_9z,_C_9z,_C_fW,nil,_C_fV)_C_N(_C_5j,"static",nil,nil,nil,_C_fi,_C_fj,_C_2Z,"TreeClipboardData",_C_9z,_C_9z,_C_fl,nil,_C_fk)_C_N(_C_5l,"static",nil,nil,nil,_C_fx,_C_fy,_C_0k,"ArgumentTypeClassException",_C_9z,_C_9z,_C_g0,nil,_C_fz)_C_N(_C_5n,"static",nil,_C_gD,nil,_C_gA,_C_gB,_C_1u,"TreeFoldedSymbol",_C_gE,_C_gF,_C_gH,nil,_C_gG)_C_N(_C_5p,"static",nil,_C_gP,nil,_C_gN,_C_gO,_C_2R,"ToolbarContainer",_C_9z,_C_9z,_C_gR,nil,_C_gQ)_C_N(_C_5r,"static",nil,_C_gj,nil,_C_gh,_C_gi,_C_U,"HomeItemContainer",_C_9z,_C_9z,_C_gl,nil,_C_gk)_C_N(_C_5v,"static",_C_h4,_C_h5,nil,_C_h2,_C_h3,_C_0K,"LoadedInterfaceEvent",_C_h6,_C_h7,_C_h9,nil,_C_h8)_C_N(_C_5x,"static",nil,nil,nil,_C_hI,_C_hJ,_C_2X,"ToolbarSymbolSegmentButton",_C_9z,_C_9z,_C_hL,nil,_C_hK)_C_N(_C_5z,"static",nil,_C_hX,nil,_C_hV,_C_hW,_C_2G,"Menu",_C_9z,_C_9z,_C_hZ,nil,_C_hY)_C_N(_C_61,"static",nil,nil,nil,_C_hx,_C_hy,_C_2V,"ToolbarStaticSpace",_C_9z,_C_9z,_C_i0,nil,_C_hz)_C_N(_C_63,"static",nil,nil,nil,_C_iA,_C_iB,_C_e,"ProgramManager",_C_9z,_C_9z,nil,nil,_C_iC)_C_N(_C_65,"static",nil,nil,nil,_C_iQ,_C_iR,_C_2m,"Scrollbar",_C_9z,_C_9z,_C_iT,nil,_C_iS)_C_N(_C_67,"static",nil,nil,nil,_C_in,_C_io,_C_2T,"ToolbarSegmentButton",_C_9z,_C_9z,_C_iq,nil,_C_ip)_C_N(_C_69,"static",nil,nil,nil,_C_j0,_C_j1,_C_R,"ProgramException",_C_9z,_C_9z,_C_j3,nil,_C_j2)_C_N(_C_6B,"static",nil,nil,nil,_C_jD,_C_jE,_C_P,"ConfigurationFatalProgramException",_C_9z,_C_9z,_C_jG,nil,_C_jF)_C_N(_C_6D,"static",nil,nil,nil,_C_jP,_C_jQ,_C_0o,"EnumValueTypeClassException",_C_9z,_C_9z,_C_jS,nil,_C_jR)_C_N(_C_6F,"static",nil,nil,nil,_C_jc,_C_jd,_C_2S,"ToolbarDynamicSpace",_C_9z,_C_9z,_C_jf,nil,_C_je)_C_N(_C_6H,"static",nil,nil,nil,_C_jp,_C_jq,_C_2Q,"ToolbarButton",_C_9z,_C_9z,_C_js,nil,_C_jr)_C_N(_C_6J,"static",_C_k4,_C_k5,nil,_C_k2,_C_k3,_C_0h,"TerminateEvent",_C_k6,_C_k7,_C_k9,nil,_C_k8)_C_N(_C_6P,"static",nil,_C_kL,nil,_C_kI,_C_kJ,_C_1j,"HomeSymbol",_C_kM,_C_kN,_C_kP,nil,_C_kO)_C_N(_C_6R,"static",nil,nil,nil,_C_kV,_C_kW,_C_g,"ProgramView",_C_9z,_C_9z,_C_kY,nil,_C_kX)_C_N(_C_6U,"static",nil,nil,nil,_C_kz,_C_l0,_C_1U,"StripeMask",_C_9z,_C_9z,_C_l2,nil,_C_l1)_C_N(_C_6X,"static",nil,nil,nil,_C_lC,_C_lD,_C_2M,"SplitHandleView",_C_9z,_C_9z,_C_lF,nil,_C_lE)_C_N(_C_6Z,"static",nil,nil,nil,_C_lX,_C_lY,_C_09,"EventManager",_C_9z,_C_9z,nil,nil,_C_lZ)_C_N(_C_6b,"static",nil,_C_ly,nil,_C_lw,_C_lx,_C_2L,"SplitContainer",_C_9z,_C_9z,_C_m0,nil,_C_lz)_C_N(_C_7H,"static",nil,_C_mK,nil,_C_mI,_C_mJ,_C_26,"ApplicationContainer",_C_9z,_C_9z,_C_mM,nil,_C_mL)_C_N(_C_6d,"static",nil,_C_mo,nil,_C_mm,_C_mn,_C_l,"QuartzApplicationContainer",_C_9z,_C_9z,_C_mq,nil,_C_mp)_C_N(_C_6f,"static",_C_n8,_C_n9,nil,_C_n6,_C_n7,_C_a,"ProgramClosedInterfaceEvent",_C_nA,_C_nB,_C_nD,nil,_C_nC)_C_N(_C_6h,"static",nil,_C_nQ,nil,_C_nN,_C_nO,_C_1n,"MenuOpenSymbol",_C_nR,_C_nS,_C_nU,nil,_C_nT)_C_N(_C_6j,"static",_C_nc,_C_nd,nil,_C_na,_C_nb,_C_c,"ProgramInformationChangedInterfaceEvent",_C_ne,_C_nf,_C_nh,nil,_C_ng)_C_N(_C_6l,"static",nil,_C_nt,nil,_C_nr,_C_ns,_C_2J,"ScrollView",_C_9z,_C_9z,_C_nv,nil,_C_nu)_C_N(_C_6p,"static",nil,_C_oL,nil,_C_oJ,_C_oK,_C_2H,"MenuBar",_C_9z,_C_9z,_C_oN,nil,_C_oM)_C_N(_C_6r,"static",nil,nil,nil,_C_oe,_C_of,_C_1K,"LineMask",_C_9z,_C_9z,_C_oh,nil,_C_og)_C_N(_C_6v,"static",_C_ot,_C_ou,nil,_C_or,_C_os,_C_0C,"ChildAddedInterfaceEvent",_C_ov,_C_ow,_C_oy,nil,_C_ox)_C_N(_C_6x,"static",nil,nil,nil,_C_p8,_C_p9,_C_2F,"ListItem",_C_9z,_C_9z,_C_pB,nil,_C_pA)_C_N(_C_6z,"static",nil,nil,nil,_C_pW,_C_pX,_C_2D,"ListClipboardData",_C_9z,_C_9z,_C_pZ,nil,_C_pY)_C_N(_C_71,"static",nil,nil,nil,_C_pl,_C_pm,_C_08,"ContainerEventManager",_C_9z,_C_9z,_C_po,nil,_C_pn)_C_N(_C_73,"static",_C_q0,_C_q1,nil,_C_py,_C_pz,_C_f,"ProgramOpenedInterfaceEvent",_C_q2,_C_q3,_C_q5,nil,_C_q4)_C_N(_C_75,"static",nil,_C_qH,nil,_C_qF,_C_qG,_C_03,"DeleteCursor",_C_qI,_C_qJ,_C_qL,nil,_C_qK)_C_N(_C_77,"static",nil,_C_qU,nil,_C_qR,_C_qS,_C_1q,"SettingsSymbol",_C_qV,_C_qW,_C_qY,nil,_C_qX)_C_N(_C_79,"static",nil,_C_qg,nil,_C_qe,_C_qf,_C_2B,"GridContainer",_C_9z,_C_9z,_C_qi,nil,_C_qh)_C_N(_C_7B,"static",nil,_C_qw,nil,_C_qu,_C_qv,_C_2A,"FontWindowContainer",_C_9z,_C_9z,_C_qy,nil,_C_qx)_C_N(_C_7D,"static",nil,nil,nil,_C_r9,_C_rA,_C_1O,"PathMask",_C_9z,_C_9z,_C_rC,nil,_C_rB)_C_N(_C_7F,"static",nil,_C_rP,nil,_C_rN,_C_rO,_C_28,"FlowContainer",_C_9z,_C_9z,_C_rR,nil,_C_rQ)_C_N(_C_7J,"static",nil,nil,nil,_C_ri,_C_rj,_C_25,"Checkbox",_C_9z,_C_9z,_C_rl,nil,_C_rk)_C_N(_C_7M,"static",_C_s5,_C_s6,nil,_C_s3,_C_s4,_C_0P,"ParentResizedInterfaceEvent",_C_s7,_C_s8,_C_sA,nil,_C_s9)_C_N(_C_7O,"static",nil,_C_sO,nil,_C_sK,_C_sL,_C_23,"XML",_C_9z,_C_9z,nil,nil,_C_sP)_C_N(_C_7Q,"static",nil,_C_sX,nil,_C_sU,_C_sV,_C_22,"Validator",_C_9z,_C_9z,nil,nil,_C_sY)_C_N(_C_7S,"static",nil,nil,nil,_C_sd,_C_se,_C_21,"Resource",_C_9z,_C_9z,nil,nil,_C_sf)_C_N(_C_7U,"static",nil,_C_sy,nil,_C_sv,_C_sw,_C_1y,"ThumbnailIcon",_C_9z,_C_9z,_C_t0,nil,_C_sz)_C_N(_C_7W,"static",nil,nil,nil,_C_tE,_C_tF,_C_0p,"InvalidValueTypeClassException",_C_9z,_C_9z,_C_tH,nil,_C_tG)_C_N(_C_7Y,"static",nil,_C_tT,nil,_C_tR,_C_tS,_C_W,"HomeTile",_C_9z,_C_9z,_C_tV,nil,_C_tU)_C_N(_C_7b,"static",_C_ti,_C_tj,nil,_C_tg,_C_th,_C_0Q,"ReadyInterfaceEvent",_C_tk,_C_tl,_C_tn,nil,_C_tm)_C_N(_C_7d,"static",nil,nil,nil,_C_tw,_C_tx,_C_Q,"FatalProgramException",_C_9z,_C_9z,_C_tz,nil,_C_ty)_C_N(_C_7f,"static",_C_uA,_C_uB,nil,_C_u8,_C_u9,_C_0Z,"DoubleClickMouseEvent",_C_uC,_C_uD,_C_uF,nil,_C_uE)_C_N(_C_7h,"static",nil,nil,nil,_C_uR,_C_uS,_C_1x,"ThemeOutlet",_C_9z,_C_9z,nil,nil,_C_uT)_C_N(_C_7n,"static",nil,_C_ui,nil,_C_uf,_C_ug,_C_1w,"Theme",_C_uj,_C_uk,nil,nil,_C_ul)_C_N(_C_7p,"static",_C_uy,_C_uz,nil,_C_uw,_C_ux,_C_0i,"TimerEvent",_C_v0,_C_v1,_C_v3,nil,_C_v2)_C_N(_C_7r,"static",nil,_C_vG,nil,_C_vD,_C_vE,_C_1v,"UpSymbol",_C_vH,_C_vI,_C_vK,nil,_C_vJ)_C_N(_C_7t,"static",nil,_C_vT,nil,_C_vQ,_C_vR,_C_1t,"TreeExpandedSymbol",_C_vU,_C_vV,_C_vX,nil,_C_vW)_C_N(_C_7x,"static",nil,_C_vg,nil,_C_vd,_C_ve,_C_1N,"Path",_C_9z,_C_9z,nil,nil,_C_vh)_C_N(_C_7z,"static",nil,nil,nil,_C_vy,_C_vz,_C_07,"ApplicationEventManager",_C_9z,_C_9z,_C_w1,nil,_C_w0)_C_N(_C_81,"static",nil,_C_wG,nil,_C_wD,_C_wE,_C_1l,"ListSymbol",_C_wH,_C_wI,_C_wK,nil,_C_wJ)_C_N(_C_83,"static",nil,_C_wT,nil,_C_wQ,_C_wR,_C_1p,"SearchSymbol",_C_wU,_C_wV,_C_wX,nil,_C_wW)_C_N(_C_85,"static",nil,_C_wg,nil,_C_wd,_C_we,_C_1m,"MenuCloseSymbol",_C_wh,_C_wi,_C_wk,nil,_C_wj)_C_N(_C_87,"static",nil,nil,nil,_C_wq,_C_wr,_C_1c,"Interface",_C_9z,_C_9z,nil,nil,_C_ws)_C_N(_C_8B,"static",nil,_C_x6,nil,_C_x3,_C_x4,_C_1i,"ForwardSymbol",_C_x7,_C_x8,_C_xA,nil,_C_x9)_C_N(_C_8D,"static",nil,nil,nil,_C_xG,_C_xH,_C_d,"ProgramItem",_C_9z,_C_9z,_C_xJ,nil,_C_xI)_C_N(_C_8F,"static",nil,_C_xj,nil,_C_xg,_C_xh,_C_1h,"DownSymbol",_C_xk,_C_xl,_C_xn,nil,_C_xm)_C_N(_C_8H,"static",nil,nil,nil,_C_xt,_C_xu,_C_1V,"SymbolMask",_C_9z,_C_9z,_C_xw,nil,_C_xv)_C_N(_C_8J,"static",_C_y8,_C_y9,nil,_C_y6,_C_y7,_C_0b,"DragMouseEvent",_C_yA,_C_yB,_C_yD,nil,_C_yC)_C_N(_C_8L,"static",nil,_C_yQ,nil,_C_yN,_C_yO,_C_1g,"CloseSymbol",_C_yR,_C_yS,_C_yU,nil,_C_yT)_C_N(_C_8N,"static",nil,_C_yd,nil,_C_ya,_C_yb,_C_1f,"BackSymbol",_C_ye,_C_yf,_C_yh,nil,_C_yg)_C_N(_C_8P,"static",_C_yp,_C_yq,nil,_C_yn,_C_yo,_C_0J,"KeyboardShortcutEvent",_C_yr,_C_ys,_C_yu,nil,_C_yt)_C_N(_C_8R,"static",nil,_C_z8,nil,_C_z5,_C_z6,_C_19,"Folder",_C_9z,_C_9z,_C_zA,nil,_C_z9)_C_N(_C_8T,"static",nil,nil,nil,_C_zc,_C_zd,_C_0n,"ConstructionClassException",_C_9z,_C_9z,_C_zf,nil,_C_ze)_C_N(_C_8V,"static",nil,_C_zs,nil,_C_zp,_C_zq,_C_1k,"LeftSymbol",_C_zt,_C_zu,_C_zw,nil,_C_zv)_C_N(_C_9e,"static",nil,nil,nil,_C_002,_C_003,_C_0z,"ValidationException",_C_9z,_C_9z,_C_005,nil,_C_004)_C_N(_C_8b,"static",nil,nil,nil,_C_00F,_C_00G,_C_0y,"UnknownTypeValidationException",_C_9z,_C_9z,_C_00I,nil,_C_00H)_C_N(_C_8e,"static",nil,nil,nil,_C_00R,_C_00S,_C_1W,"TextMask",_C_9z,_C_9z,_C_00U,nil,_C_00T)_C_N(_C_8g,"static",nil,nil,nil,_C_00f,_C_00g,_C_1T,"SeparatorMask",_C_9z,_C_9z,_C_00i,nil,_C_00h)_C_N(_C_8i,"static",nil,_C_00u,nil,_C_00s,_C_00t,_C_2c,"TreeNode",_C_9z,_C_9z,_C_00w,nil,_C_00v)_C_N(_C_8o,"static",nil,_C_01S,nil,_C_01Q,_C_01R,_C_16,"Bundle",_C_9z,_C_9z,_C_01U,nil,_C_01T)_C_N(_C_8q,"static",nil,nil,nil,_C_01f,_C_01g,_C_1S,"ScreenCanvas",_C_9z,_C_9z,_C_01i,nil,_C_01h)_C_N(_C_8s,"static",nil,nil,nil,_C_01u,_C_01v,_C_m,"QuartzSettings",_C_9z,_C_9z,_C_01x,nil,_C_01w)_C_N(_C_8u,"static",_C_02A,_C_02B,nil,_C_028,_C_029,_C_0e,"MoveMouseEvent",_C_02C,_C_02D,_C_02F,nil,_C_02E)_C_N(_C_8w,"static",nil,_C_02R,nil,_C_02P,_C_02Q,_C_n,"SplashApplicationContainer",_C_9z,_C_9z,_C_02T,nil,_C_02S)_C_N(_C_8y,"static",nil,nil,nil,_C_02f,_C_02g,_C_T,"HomeItem",_C_9z,_C_9z,_C_02i,nil,_C_02h)_C_N(_C_90,"static",nil,nil,nil,_C_02y,_C_02z,_C_v,"DragDropManager",_C_9z,_C_9z,nil,nil,_C_030)_C_N(_C_92,"static",_C_03N,_C_03O,nil,_C_03L,_C_03M,_C_0T,"TextChangedInterfaceEvent",_C_03P,_C_03Q,_C_03S,nil,_C_03R)_C_N(_C_94,"static",nil,_C_03e,nil,_C_03c,_C_03d,_C_p,"TopBarContainer",_C_9z,_C_9z,_C_03g,nil,_C_03f)_C_N(_C_96,"static",nil,nil,nil,_C_048,_C_049,_C_j,"SilicaProgramEnvironment",_C_9z,_C_9z,_C_04B,nil,_C_04A)_C_N(_C_98,"static",_C_04M,_C_04N,nil,_C_04K,_C_04L,_C_0M,"EnteredInterfaceMouseEvent",_C_04O,_C_04P,_C_04R,nil,_C_04Q)_C_N(_C_9A,"static",_C_04d,_C_04e,nil,_C_04b,_C_04c,_C_0S,"SiblingRemovedInterfaceEvent",_C_04f,_C_04g,_C_04i,nil,_C_04h)_C_N(_C_9C,"static",nil,_C_04v,nil,_C_04s,_C_04t,_C_1C,"Package",_C_9z,_C_9z,_C_04x,nil,_C_04w)_C_N(_C_9E,"static",nil,nil,nil,_C_057,_C_058,_C_0r,"PseudoReferenceClassException",_C_9z,_C_9z,_C_05A,nil,_C_059)_C_N(_C_9G,"static",nil,nil,nil,_C_05K,_C_05L,_C_0t,"ValueTypeClassException",_C_9z,_C_9z,_C_05N,nil,_C_05M)_C_N(_C_9I,"static",nil,_C_05Z,nil,_C_05X,_C_05Y,_C_06,"TextCursor",_C_05a,_C_05b,_C_05d,nil,_C_05c)_C_N(_C_9K,"static",_C_05l,_C_05m,nil,_C_05j,_C_05k,_C_0H,"FocusesChangedInterfaceEvent",_C_05n,_C_05o,_C_05q,nil,_C_05p)_C_N(_C_9M,"static",_C_066,_C_067,nil,_C_064,_C_065,_C_0g,"UpMouseEvent",_C_068,_C_069,_C_06B,nil,_C_06A)_C_N(_C_9O,"static",nil,_C_06P,nil,_C_06L,_C_06M,_C_z,"MathParser",_C_9z,_C_9z,nil,nil,_C_06Q)_C_N(_C_9Q,"static",_C_06c,_C_06d,nil,_C_06a,_C_06b,_C_0R,"SiblingAddedInterfaceEvent",_C_06e,_C_06f,_C_06h,nil,_C_06g)_C_N(_C_9S,"static",_C_06t,_C_06u,nil,_C_06r,_C_06s,_C_0a,"DownMouseEvent",_C_06v,_C_06w,_C_06y,nil,_C_06x)_C_N(_C_9U,"static",_C_07A,_C_07B,nil,_C_078,_C_079,_C_0c,"HeldMouseEvent",_C_07C,_C_07D,_C_07F,nil,_C_07E)_C_N(_C_9W,"static",_C_07R,_C_07S,nil,_C_07P,_C_07Q,_C_0D,"ChildRemovedInterfaceEvent",_C_07T,_C_07U,_C_07W,nil,_C_07V)_C_N(_C_9a,"static",nil,_C_07j,nil,_C_07g,_C_07h,_C_1d,"KeyboardShortcut",_C_9z,_C_9z,nil,nil,_C_07k)_C_N(_C_9j,"static",nil,nil,nil,_C_07v,_C_07w,_C_10,"MenuNotSpecifiedException",_C_9z,_C_9z,_C_07y,nil,_C_07x)_C_N(_C_9l,"static",_C_089,_C_08A,nil,_C_087,_C_088,_C_0W,"DownKeyEvent",_C_08B,_C_08C,_C_08E,nil,_C_08D)_C_N(_C_9n,"static",nil,nil,nil,_C_08O,_C_08P,_C_V,"HomeSearchBox",_C_9z,_C_9z,_C_08R,nil,_C_08Q)_C_N(_C_9p,"static",nil,nil,nil,_C_08b,_C_08c,_C_0s,"StyleClassException",_C_9z,_C_9z,_C_08e,nil,_C_08d)_C_N(_C_9r,"static",nil,nil,nil,_C_08o,_C_08p,_C_s,"Animation",_C_9z,_C_9z,nil,nil,_C_08q)_C_N(_C_9t,"static",nil,nil,nil,_C_092,_C_093,_C_2b,"TreeItem",_C_9z,_C_9z,_C_095,nil,_C_094)_C_N(_C_9v,"static",nil,_C_09L,nil,_C_09I,_C_09J,_C_1s,"ThumbnailSymbol",_C_09M,_C_09N,_C_09P,nil,_C_09O)local _C_09p={
["174"]="/src/classes/File Associations/FileAssociation.luo:36:",
["175"]="/src/classes/File Associations/FileAssociation.luo:37:",
["176"]="/src/classes/File Associations/FileAssociation.luo:38:",
["177"]="/src/classes/File Associations/FileAssociation.luo:39:",
["181"]="/src/classes/File Associations/FileAssociation.luo:13:",
["182"]="/src/classes/File Associations/FileAssociation.luo:14:",
["183"]="/src/classes/File Associations/FileAssociation.luo:15:",
["184"]="/src/classes/File Associations/FileAssociation.luo:16:",
["185"]="/src/classes/File Associations/FileAssociation.luo:17:",
["186"]="/src/classes/File Associations/FileAssociation.luo:18:",
["187"]="/src/classes/File Associations/FileAssociation.luo:19:",
["188"]="/src/classes/File Associations/FileAssociation.luo:20:",
["189"]="/src/classes/File Associations/FileAssociation.luo:21:",
["190"]="/src/classes/File Associations/FileAssociation.luo:22:",
["191"]="/src/classes/File Associations/FileAssociation.luo:24:",
["192"]="/src/classes/File Associations/FileAssociation.luo:25:",
["193"]="/src/classes/File Associations/FileAssociation.luo:26:",
["194"]="/src/classes/File Associations/FileAssociation.luo:27:",
["195"]="/src/classes/File Associations/FileAssociation.luo:28:",
["196"]="/src/classes/File Associations/FileAssociation.luo:29:",
["197"]="/src/classes/File Associations/FileAssociation.luo:30:",
["198"]="/src/classes/File Associations/FileAssociation.luo:31:",
["199"]="/src/classes/File Associations/FileAssociation.luo:32:",
["200"]="/src/classes/File Associations/FileAssociation.luo:33:",
["201"]="/src/classes/File Associations/FileAssociation.luo:34:",
["205"]="/src/classes/File Associations/FakeFileAssociation.luo:4:",
["206"]="/src/classes/File Associations/FakeFileAssociation.luo:5:",
["207"]="/src/classes/File Associations/FakeFileAssociation.luo:6:",
["208"]="/src/classes/File Associations/FakeFileAssociation.luo:7:",
["209"]="/src/classes/File Associations/FakeFileAssociation.luo:8:",
["210"]="/src/classes/File Associations/FakeFileAssociation.luo:9:",
["211"]="/src/classes/File Associations/FakeFileAssociation.luo:10:",
["223"]="/src/classes/Font/Font.luo:112:",
["224"]="/src/classes/Font/Font.luo:113:",
["225"]="/src/classes/Font/Font.luo:114:",
["226"]="/src/classes/Font/Font.luo:115:",
["227"]="/src/classes/Font/Font.luo:116:",
["228"]="/src/classes/Font/Font.luo:117:",
["229"]="/src/classes/Font/Font.luo:118:",
["230"]="/src/classes/Font/Font.luo:119:",
["231"]="/src/classes/Font/Font.luo:120:",
["232"]="/src/classes/Font/Font.luo:121:",
["233"]="/src/classes/Font/Font.luo:122:",
["234"]="/src/classes/Font/Font.luo:123:",
["235"]="/src/classes/Font/Font.luo:124:",
["236"]="/src/classes/Font/Font.luo:125:",
["237"]="/src/classes/Font/Font.luo:126:",
["238"]="/src/classes/Font/Font.luo:127:",
["239"]="/src/classes/Font/Font.luo:128:",
["240"]="/src/classes/Font/Font.luo:129:",
["241"]="/src/classes/Font/Font.luo:130:",
["242"]="/src/classes/Font/Font.luo:131:",
["243"]="/src/classes/Font/Font.luo:132:",
["244"]="/src/classes/Font/Font.luo:133:",
["245"]="/src/classes/Font/Font.luo:134:",
["246"]="/src/classes/Font/Font.luo:135:",
["247"]="/src/classes/Font/Font.luo:107:",
["248"]="/src/classes/Font/Font.luo:108:",
["249"]="/src/classes/Font/Font.luo:109:",
["250"]="/src/classes/Font/Font.luo:110:",
["251"]="/src/classes/Font/Font.luo:86:",
["252"]="/src/classes/Font/Font.luo:87:",
["253"]="/src/classes/Font/Font.luo:88:",
["254"]="/src/classes/Font/Font.luo:89:",
["255"]="/src/classes/Font/Font.luo:90:",
["256"]="/src/classes/Font/Font.luo:161:",
["257"]="/src/classes/Font/Font.luo:162:",
["258"]="/src/classes/Font/Font.luo:163:",
["259"]="/src/classes/Font/Font.luo:164:",
["260"]="/src/classes/Font/Font.luo:166:",
["261"]="/src/classes/Font/Font.luo:167:",
["262"]="/src/classes/Font/Font.luo:168:",
["263"]="/src/classes/Font/Font.luo:169:",
["264"]="/src/classes/Font/Font.luo:170:",
["265"]="/src/classes/Font/Font.luo:171:",
["266"]="/src/classes/Font/Font.luo:172:",
["267"]="/src/classes/Font/Font.luo:173:",
["268"]="/src/classes/Font/Font.luo:174:",
["269"]="/src/classes/Font/Font.luo:175:",
["270"]="/src/classes/Font/Font.luo:176:",
["271"]="/src/classes/Font/Font.luo:177:",
["272"]="/src/classes/Font/Font.luo:178:",
["273"]="/src/classes/Font/Font.luo:179:",
["274"]="/src/classes/Font/Font.luo:180:",
["275"]="/src/classes/Font/Font.luo:181:",
["276"]="/src/classes/Font/Font.luo:182:",
["277"]="/src/classes/Font/Font.luo:183:",
["278"]="/src/classes/Font/Font.luo:184:",
["279"]="/src/classes/Font/Font.luo:185:",
["280"]="/src/classes/Font/Font.luo:186:",
["281"]="/src/classes/Font/Font.luo:187:",
["282"]="/src/classes/Font/Font.luo:188:",
["283"]="/src/classes/Font/Font.luo:189:",
["284"]="/src/classes/Font/Font.luo:190:",
["285"]="/src/classes/Font/Font.luo:191:",
["286"]="/src/classes/Font/Font.luo:137:",
["287"]="/src/classes/Font/Font.luo:138:",
["288"]="/src/classes/Font/Font.luo:139:",
["289"]="/src/classes/Font/Font.luo:140:",
["290"]="/src/classes/Font/Font.luo:141:",
["291"]="/src/classes/Font/Font.luo:142:",
["292"]="/src/classes/Font/Font.luo:143:",
["293"]="/src/classes/Font/Font.luo:144:",
["294"]="/src/classes/Font/Font.luo:145:",
["295"]="/src/classes/Font/Font.luo:146:",
["296"]="/src/classes/Font/Font.luo:147:",
["297"]="/src/classes/Font/Font.luo:148:",
["298"]="/src/classes/Font/Font.luo:149:",
["299"]="/src/classes/Font/Font.luo:150:",
["300"]="/src/classes/Font/Font.luo:151:",
["301"]="/src/classes/Font/Font.luo:152:",
["302"]="/src/classes/Font/Font.luo:153:",
["303"]="/src/classes/Font/Font.luo:154:",
["304"]="/src/classes/Font/Font.luo:155:",
["305"]="/src/classes/Font/Font.luo:156:",
["306"]="/src/classes/Font/Font.luo:157:",
["307"]="/src/classes/Font/Font.luo:158:",
["308"]="/src/classes/Font/Font.luo:159:",
["309"]="/src/classes/Font/Font.luo:92:",
["310"]="/src/classes/Font/Font.luo:93:",
["311"]="/src/classes/Font/Font.luo:94:",
["312"]="/src/classes/Font/Font.luo:95:",
["313"]="/src/classes/Font/Font.luo:96:",
["314"]="/src/classes/Font/Font.luo:97:",
["315"]="/src/classes/Font/Font.luo:98:",
["316"]="/src/classes/Font/Font.luo:99:",
["317"]="/src/classes/Font/Font.luo:100:",
["318"]="/src/classes/Font/Font.luo:101:",
["319"]="/src/classes/Font/Font.luo:102:",
["320"]="/src/classes/Font/Font.luo:103:",
["321"]="/src/classes/Font/Font.luo:104:",
["322"]="/src/classes/Font/Font.luo:105:",
["323"]="/src/classes/Font/Font.luo:74:",
["324"]="/src/classes/Font/Font.luo:75:",
["325"]="/src/classes/Font/Font.luo:76:",
["326"]="/src/classes/Font/Font.luo:77:",
["327"]="/src/classes/Font/Font.luo:78:",
["328"]="/src/classes/Font/Font.luo:79:",
["329"]="/src/classes/Font/Font.luo:80:",
["330"]="/src/classes/Font/Font.luo:81:",
["331"]="/src/classes/Font/Font.luo:82:",
["332"]="/src/classes/Font/Font.luo:83:",
["333"]="/src/classes/Font/Font.luo:84:",
["340"]="/src/classes/Font/Font.luo:57:",
["341"]="/src/classes/Font/Font.luo:58:",
["342"]="/src/classes/Font/Font.luo:59:",
["343"]="/src/classes/Font/Font.luo:60:",
["344"]="/src/classes/Font/Font.luo:61:",
["345"]="/src/classes/Font/Font.luo:62:",
["346"]="/src/classes/Font/Font.luo:63:",
["347"]="/src/classes/Font/Font.luo:64:",
["348"]="/src/classes/Font/Font.luo:65:",
["349"]="/src/classes/Font/Font.luo:66:",
["350"]="/src/classes/Font/Font.luo:67:",
["351"]="/src/classes/Font/Font.luo:68:",
["352"]="/src/classes/Font/Font.luo:69:",
["353"]="/src/classes/Font/Font.luo:70:",
["354"]="/src/classes/Font/Font.luo:71:",
["355"]="/src/classes/Font/Font.luo:72:",
["356"]="/src/classes/Font/Font.luo:211:",
["357"]="/src/classes/Font/Font.luo:212:",
["358"]="/src/classes/Font/Font.luo:213:",
["359"]="/src/classes/Font/Font.luo:214:",
["360"]="/src/classes/Font/Font.luo:215:",
["361"]="/src/classes/Font/Font.luo:216:",
["362"]="/src/classes/Font/Font.luo:217:",
["363"]="/src/classes/Font/Font.luo:218:",
["364"]="/src/classes/Font/Font.luo:219:",
["365"]="/src/classes/Font/Font.luo:220:",
["366"]="/src/classes/Font/Font.luo:221:",
["367"]="/src/classes/Font/Font.luo:222:",
["368"]="/src/classes/Font/Font.luo:223:",
["369"]="/src/classes/Font/Font.luo:224:",
["370"]="/src/classes/Font/Font.luo:225:",
["371"]="/src/classes/Font/Font.luo:226:",
["372"]="/src/classes/Font/Font.luo:227:",
["373"]="/src/classes/Font/Font.luo:193:",
["374"]="/src/classes/Font/Font.luo:194:",
["375"]="/src/classes/Font/Font.luo:195:",
["376"]="/src/classes/Font/Font.luo:196:",
["377"]="/src/classes/Font/Font.luo:197:",
["378"]="/src/classes/Font/Font.luo:198:",
["379"]="/src/classes/Font/Font.luo:199:",
["380"]="/src/classes/Font/Font.luo:200:",
["381"]="/src/classes/Font/Font.luo:201:",
["382"]="/src/classes/Font/Font.luo:202:",
["383"]="/src/classes/Font/Font.luo:203:",
["384"]="/src/classes/Font/Font.luo:204:",
["385"]="/src/classes/Font/Font.luo:205:",
["386"]="/src/classes/Font/Font.luo:206:",
["387"]="/src/classes/Font/Font.luo:207:",
["388"]="/src/classes/Font/Font.luo:208:",
["389"]="/src/classes/Font/Font.luo:209:",
["401"]="/src/classes/Font/BitmapFont.luo:26:",
["402"]="/src/classes/Font/BitmapFont.luo:27:",
["403"]="/src/classes/Font/BitmapFont.luo:28:",
["404"]="/src/classes/Font/BitmapFont.luo:29:",
["405"]="/src/classes/Font/BitmapFont.luo:30:",
["406"]="/src/classes/Font/BitmapFont.luo:31:",
["407"]="/src/classes/Font/BitmapFont.luo:32:",
["408"]="/src/classes/Font/BitmapFont.luo:33:",
["409"]="/src/classes/Font/BitmapFont.luo:34:",
["410"]="/src/classes/Font/BitmapFont.luo:35:",
["411"]="/src/classes/Font/BitmapFont.luo:36:",
["412"]="/src/classes/Font/BitmapFont.luo:37:",
["413"]="/src/classes/Font/BitmapFont.luo:38:",
["414"]="/src/classes/Font/BitmapFont.luo:39:",
["415"]="/src/classes/Font/BitmapFont.luo:40:",
["416"]="/src/classes/Font/BitmapFont.luo:41:",
["417"]="/src/classes/Font/BitmapFont.luo:42:",
["418"]="/src/classes/Font/BitmapFont.luo:43:",
["419"]="/src/classes/Font/BitmapFont.luo:44:",
["420"]="/src/classes/Font/BitmapFont.luo:45:",
["421"]="/src/classes/Font/BitmapFont.luo:46:",
["422"]="/src/classes/Font/BitmapFont.luo:47:",
["423"]="/src/classes/Font/BitmapFont.luo:48:",
["424"]="/src/classes/Font/BitmapFont.luo:111:",
["425"]="/src/classes/Font/BitmapFont.luo:112:",
["426"]="/src/classes/Font/BitmapFont.luo:113:",
["427"]="/src/classes/Font/BitmapFont.luo:114:",
["428"]="/src/classes/Font/BitmapFont.luo:115:",
["429"]="/src/classes/Font/BitmapFont.luo:116:",
["430"]="/src/classes/Font/BitmapFont.luo:117:",
["431"]="/src/classes/Font/BitmapFont.luo:118:",
["432"]="/src/classes/Font/BitmapFont.luo:119:",
["433"]="/src/classes/Font/BitmapFont.luo:120:",
["434"]="/src/classes/Font/BitmapFont.luo:121:",
["435"]="/src/classes/Font/BitmapFont.luo:122:",
["436"]="/src/classes/Font/BitmapFont.luo:123:",
["437"]="/src/classes/Font/BitmapFont.luo:124:",
["438"]="/src/classes/Font/BitmapFont.luo:125:",
["439"]="/src/classes/Font/BitmapFont.luo:126:",
["440"]="/src/classes/Font/BitmapFont.luo:127:",
["441"]="/src/classes/Font/BitmapFont.luo:128:",
["442"]="/src/classes/Font/BitmapFont.luo:129:",
["443"]="/src/classes/Font/BitmapFont.luo:131:",
["444"]="/src/classes/Font/BitmapFont.luo:132:",
["445"]="/src/classes/Font/BitmapFont.luo:133:",
["446"]="/src/classes/Font/BitmapFont.luo:134:",
["447"]="/src/classes/Font/BitmapFont.luo:135:",
["448"]="/src/classes/Font/BitmapFont.luo:136:",
["449"]="/src/classes/Font/BitmapFont.luo:137:",
["450"]="/src/classes/Font/BitmapFont.luo:138:",
["451"]="/src/classes/Font/BitmapFont.luo:139:",
["452"]="/src/classes/Font/BitmapFont.luo:140:",
["453"]="/src/classes/Font/BitmapFont.luo:141:",
["454"]="/src/classes/Font/BitmapFont.luo:142:",
["455"]="/src/classes/Font/BitmapFont.luo:143:",
["456"]="/src/classes/Font/BitmapFont.luo:144:",
["457"]="/src/classes/Font/BitmapFont.luo:145:",
["458"]="/src/classes/Font/BitmapFont.luo:146:",
["459"]="/src/classes/Font/BitmapFont.luo:147:",
["460"]="/src/classes/Font/BitmapFont.luo:148:",
["461"]="/src/classes/Font/BitmapFont.luo:149:",
["462"]="/src/classes/Font/BitmapFont.luo:151:",
["463"]="/src/classes/Font/BitmapFont.luo:152:",
["464"]="/src/classes/Font/BitmapFont.luo:153:",
["465"]="/src/classes/Font/BitmapFont.luo:154:",
["466"]="/src/classes/Font/BitmapFont.luo:155:",
["467"]="/src/classes/Font/BitmapFont.luo:156:",
["468"]="/src/classes/Font/BitmapFont.luo:157:",
["469"]="/src/classes/Font/BitmapFont.luo:158:",
["470"]="/src/classes/Font/BitmapFont.luo:159:",
["471"]="/src/classes/Font/BitmapFont.luo:160:",
["472"]="/src/classes/Font/BitmapFont.luo:161:",
["473"]="/src/classes/Font/BitmapFont.luo:162:",
["474"]="/src/classes/Font/BitmapFont.luo:163:",
["475"]="/src/classes/Font/BitmapFont.luo:164:",
["476"]="/src/classes/Font/BitmapFont.luo:165:",
["477"]="/src/classes/Font/BitmapFont.luo:166:",
["478"]="/src/classes/Font/BitmapFont.luo:167:",
["479"]="/src/classes/Font/BitmapFont.luo:168:",
["480"]="/src/classes/Font/BitmapFont.luo:169:",
["481"]="/src/classes/Font/BitmapFont.luo:170:",
["482"]="/src/classes/Font/BitmapFont.luo:171:",
["483"]="/src/classes/Font/BitmapFont.luo:50:",
["484"]="/src/classes/Font/BitmapFont.luo:51:",
["485"]="/src/classes/Font/BitmapFont.luo:52:",
["486"]="/src/classes/Font/BitmapFont.luo:53:",
["487"]="/src/classes/Font/BitmapFont.luo:54:",
["488"]="/src/classes/Font/BitmapFont.luo:55:",
["489"]="/src/classes/Font/BitmapFont.luo:56:",
["490"]="/src/classes/Font/BitmapFont.luo:57:",
["491"]="/src/classes/Font/BitmapFont.luo:58:",
["492"]="/src/classes/Font/BitmapFont.luo:59:",
["493"]="/src/classes/Font/BitmapFont.luo:60:",
["494"]="/src/classes/Font/BitmapFont.luo:61:",
["495"]="/src/classes/Font/BitmapFont.luo:62:",
["496"]="/src/classes/Font/BitmapFont.luo:63:",
["497"]="/src/classes/Font/BitmapFont.luo:64:",
["498"]="/src/classes/Font/BitmapFont.luo:65:",
["499"]="/src/classes/Font/BitmapFont.luo:66:",
["500"]="/src/classes/Font/BitmapFont.luo:67:",
["501"]="/src/classes/Font/BitmapFont.luo:68:",
["502"]="/src/classes/Font/BitmapFont.luo:69:",
["503"]="/src/classes/Font/BitmapFont.luo:70:",
["504"]="/src/classes/Font/BitmapFont.luo:71:",
["505"]="/src/classes/Font/BitmapFont.luo:72:",
["506"]="/src/classes/Font/BitmapFont.luo:73:",
["507"]="/src/classes/Font/BitmapFont.luo:74:",
["508"]="/src/classes/Font/BitmapFont.luo:75:",
["509"]="/src/classes/Font/BitmapFont.luo:76:",
["510"]="/src/classes/Font/BitmapFont.luo:77:",
["511"]="/src/classes/Font/BitmapFont.luo:78:",
["512"]="/src/classes/Font/BitmapFont.luo:79:",
["513"]="/src/classes/Font/BitmapFont.luo:81:",
["514"]="/src/classes/Font/BitmapFont.luo:82:",
["515"]="/src/classes/Font/BitmapFont.luo:83:",
["516"]="/src/classes/Font/BitmapFont.luo:84:",
["517"]="/src/classes/Font/BitmapFont.luo:85:",
["518"]="/src/classes/Font/BitmapFont.luo:86:",
["519"]="/src/classes/Font/BitmapFont.luo:87:",
["520"]="/src/classes/Font/BitmapFont.luo:88:",
["521"]="/src/classes/Font/BitmapFont.luo:89:",
["522"]="/src/classes/Font/BitmapFont.luo:90:",
["523"]="/src/classes/Font/BitmapFont.luo:91:",
["524"]="/src/classes/Font/BitmapFont.luo:92:",
["525"]="/src/classes/Font/BitmapFont.luo:94:",
["526"]="/src/classes/Font/BitmapFont.luo:95:",
["527"]="/src/classes/Font/BitmapFont.luo:96:",
["528"]="/src/classes/Font/BitmapFont.luo:97:",
["529"]="/src/classes/Font/BitmapFont.luo:98:",
["530"]="/src/classes/Font/BitmapFont.luo:99:",
["531"]="/src/classes/Font/BitmapFont.luo:100:",
["532"]="/src/classes/Font/BitmapFont.luo:101:",
["533"]="/src/classes/Font/BitmapFont.luo:102:",
["534"]="/src/classes/Font/BitmapFont.luo:103:",
["535"]="/src/classes/Font/BitmapFont.luo:104:",
["536"]="/src/classes/Font/BitmapFont.luo:105:",
["537"]="/src/classes/Font/BitmapFont.luo:106:",
["538"]="/src/classes/Font/BitmapFont.luo:107:",
["539"]="/src/classes/Font/BitmapFont.luo:108:",
["540"]="/src/classes/Font/BitmapFont.luo:109:",
["553"]="/src/classes/Symbols/Symbol.luo:10:",
["554"]="/src/classes/Symbols/Symbol.luo:11:",
["555"]="/src/classes/Symbols/Symbol.luo:12:",
["556"]="/src/classes/Symbols/Symbol.luo:13:",
["557"]="/src/classes/Symbols/Symbol.luo:14:",
["558"]="/src/classes/Symbols/Symbol.luo:15:",
["559"]="/src/classes/Symbols/Symbol.luo:16:",
["560"]="/src/classes/Symbols/Symbol.luo:17:",
["561"]="/src/classes/Symbols/Symbol.luo:18:",
["562"]="/src/classes/Symbols/Symbol.luo:19:",
["563"]="/src/classes/Symbols/Symbol.luo:20:",
["564"]="/src/classes/Symbols/Symbol.luo:21:",
["565"]="/src/classes/Symbols/Symbol.luo:22:",
["566"]="/src/classes/Symbols/Symbol.luo:23:",
["567"]="/src/classes/Symbols/Symbol.luo:24:",
["568"]="/src/classes/Symbols/Symbol.luo:26:",
["569"]="/src/classes/Symbols/Symbol.luo:27:",
["570"]="/src/classes/Symbols/Symbol.luo:28:",
["571"]="/src/classes/Symbols/Symbol.luo:29:",
["572"]="/src/classes/Symbols/Symbol.luo:30:",
["573"]="/src/classes/Symbols/Symbol.luo:31:",
["574"]="/src/classes/Symbols/Symbol.luo:32:",
["575"]="/src/classes/Graphics/Mask.luo:35:",
["576"]="/src/classes/Graphics/Mask.luo:36:",
["577"]="/src/classes/Graphics/Mask.luo:37:",
["578"]="/src/classes/Graphics/Mask.luo:38:",
["579"]="/src/classes/Graphics/Mask.luo:39:",
["580"]="/src/classes/Graphics/Mask.luo:40:",
["581"]="/src/classes/Graphics/Mask.luo:41:",
["582"]="/src/classes/Graphics/Mask.luo:63:",
["583"]="/src/classes/Graphics/Mask.luo:64:",
["584"]="/src/classes/Graphics/Mask.luo:65:",
["585"]="/src/classes/Graphics/Mask.luo:47:",
["586"]="/src/classes/Graphics/Mask.luo:48:",
["587"]="/src/classes/Graphics/Mask.luo:49:",
["588"]="/src/classes/Graphics/Mask.luo:55:",
["589"]="/src/classes/Graphics/Mask.luo:56:",
["590"]="/src/classes/Graphics/Mask.luo:57:",
["591"]="/src/classes/Graphics/Mask.luo:71:",
["592"]="/src/classes/Graphics/Mask.luo:72:",
["593"]="/src/classes/Graphics/Mask.luo:73:",
["599"]="/src/classes/Events/Event.luo:30:",
["600"]="/src/classes/Events/Event.luo:31:",
["601"]="/src/classes/Events/Event.luo:32:",
["602"]="/src/classes/Events/Event.luo:33:",
["603"]="/src/classes/Events/Event.luo:34:",
["604"]="/src/classes/Events/Event.luo:35:",
["605"]="/src/classes/Events/Event.luo:43:",
["606"]="/src/classes/Events/Event.luo:44:",
["607"]="/src/classes/Events/Event.luo:45:",
["608"]="/src/classes/Events/Event.luo:46:",
["609"]="/src/classes/Events/Event.luo:47:",
["610"]="/src/classes/Events/Event.luo:48:",
["611"]="/src/classes/Events/Event.luo:49:",
["612"]="/src/classes/Events/Event.luo:50:",
["613"]="/src/classes/Events/Event.luo:51:",
["614"]="/src/classes/Events/Event.luo:52:",
["615"]="/src/classes/Events/Event.luo:53:",
["616"]="/src/classes/Events/Event.luo:54:",
["617"]="/src/classes/Events/Event.luo:55:",
["618"]="/src/classes/Events/Event.luo:23:",
["619"]="/src/classes/Events/Event.luo:24:",
["620"]="/src/classes/Events/Event.luo:25:",
["629"]="/src/classes/Events/Event.luo:61:",
["630"]="/src/classes/Events/Event.luo:62:",
["631"]="/src/classes/Events/Event.luo:63:",
["658"]="/src/classes/Events/Interface Events/ChildRepositionedInterfaceEvent.luo:10:",
["659"]="/src/classes/Events/Interface Events/ChildRepositionedInterfaceEvent.luo:11:",
["660"]="/src/classes/Events/Interface Events/ChildRepositionedInterfaceEvent.luo:12:",
["664"]="/src/classes/Cursors/Cursor.luo:37:",
["665"]="/src/classes/Cursors/Cursor.luo:38:",
["666"]="/src/classes/Cursors/Cursor.luo:39:",
["667"]="/src/classes/Cursors/Cursor.luo:41:",
["668"]="/src/classes/Cursors/Cursor.luo:42:",
["669"]="/src/classes/Cursors/Cursor.luo:43:",
["670"]="/src/classes/Cursors/Cursor.luo:44:",
["671"]="/src/classes/Cursors/Cursor.luo:45:",
["672"]="/src/classes/Cursors/Cursor.luo:46:",
["673"]="/src/classes/Cursors/Cursor.luo:25:",
["674"]="/src/classes/Cursors/Cursor.luo:26:",
["675"]="/src/classes/Cursors/Cursor.luo:27:",
["676"]="/src/classes/Cursors/Cursor.luo:28:",
["677"]="/src/classes/Cursors/Cursor.luo:29:",
["678"]="/src/classes/Cursors/Cursor.luo:30:",
["679"]="/src/classes/Cursors/Cursor.luo:31:",
["680"]="/src/classes/Cursors/Cursor.luo:32:",
["681"]="/src/classes/Cursors/Cursor.luo:33:",
["682"]="/src/classes/Cursors/Cursor.luo:34:",
["683"]="/src/classes/Cursors/Cursor.luo:35:",
["684"]="/src/classes/Cursors/Cursor.luo:18:",
["685"]="/src/classes/Cursors/Cursor.luo:19:",
["686"]="/src/classes/Cursors/Cursor.luo:20:",
["687"]="/src/classes/Cursors/Cursor.luo:21:",
["688"]="/src/classes/Cursors/Cursor.luo:22:",
["689"]="/src/classes/Cursors/Cursor.luo:23:",
["690"]="/src/classes/Cursors/Cursor.luo:10:",
["691"]="/src/classes/Cursors/Cursor.luo:11:",
["692"]="/src/classes/Cursors/Cursor.luo:12:",
["693"]="/src/classes/Cursors/Cursor.luo:13:",
["694"]="/src/classes/Cursors/Cursor.luo:14:",
["695"]="/src/classes/Cursors/Cursor.luo:15:",
["705"]="/src/classes/Exceptions/Exception.luo:41:",
["706"]="/src/classes/Exceptions/Exception.luo:42:",
["707"]="/src/classes/Exceptions/Exception.luo:43:",
["708"]="/src/classes/Exceptions/Exception.luo:44:",
["709"]="/src/classes/Exceptions/Exception.luo:45:",
["710"]="/src/classes/Exceptions/Exception.luo:46:",
["711"]="/src/classes/Exceptions/Exception.luo:47:",
["712"]="/src/classes/Exceptions/Exception.luo:48:",
["713"]="/src/classes/Exceptions/Exception.luo:49:",
["714"]="/src/classes/Exceptions/Exception.luo:50:",
["715"]="/src/classes/Exceptions/Exception.luo:51:",
["716"]="/src/classes/Exceptions/Exception.luo:52:",
["717"]="/src/classes/Exceptions/Exception.luo:53:",
["718"]="/src/classes/Exceptions/Exception.luo:54:",
["719"]="/src/classes/Exceptions/Exception.luo:55:",
["720"]="/src/classes/Exceptions/Exception.luo:56:",
["721"]="/src/classes/Exceptions/Exception.luo:57:",
["722"]="/src/classes/Exceptions/Exception.luo:58:",
["723"]="/src/classes/Exceptions/Exception.luo:59:",
["724"]="/src/classes/Exceptions/Exception.luo:60:",
["725"]="/src/classes/Exceptions/Exception.luo:61:",
["726"]="/src/classes/Exceptions/Exception.luo:62:",
["727"]="/src/classes/Exceptions/Exception.luo:63:",
["728"]="/src/classes/Exceptions/Exception.luo:64:",
["747"]="/src/classes/Exceptions/Class System/ArgumentValueTypeParsingClassException.luo:4:",
["748"]="/src/classes/Exceptions/Class System/ArgumentValueTypeParsingClassException.luo:5:",
["749"]="/src/classes/Exceptions/Class System/ArgumentValueTypeParsingClassException.luo:6:",
["750"]="/src/classes/Exceptions/Class System/ArgumentValueTypeParsingClassException.luo:7:",
["785"]="/src/classes/Views/View.luo:369:",
["786"]="/src/classes/Views/View.luo:370:",
["787"]="/src/classes/Views/View.luo:371:",
["788"]="/src/classes/Views/View.luo:372:",
["789"]="/src/classes/Views/View.luo:373:",
["790"]="/src/classes/Views/View.luo:374:",
["791"]="/src/classes/Views/View.luo:375:",
["792"]="/src/classes/Views/View.luo:376:",
["793"]="/src/classes/Views/View.luo:377:",
["794"]="/src/classes/Views/View.luo:378:",
["795"]="/src/classes/Views/View.luo:547:",
["796"]="/src/classes/Views/View.luo:548:",
["797"]="/src/classes/Views/View.luo:549:",
["798"]="/src/classes/Views/View.luo:96:",
["799"]="/src/classes/Views/View.luo:97:",
["800"]="/src/classes/Views/View.luo:98:",
["801"]="/src/classes/Views/View.luo:555:",
["802"]="/src/classes/Views/View.luo:556:",
["803"]="/src/classes/Views/View.luo:557:",
["804"]="/src/classes/Views/View.luo:336:",
["805"]="/src/classes/Views/View.luo:337:",
["806"]="/src/classes/Views/View.luo:338:",
["807"]="/src/classes/Views/View.luo:339:",
["808"]="/src/classes/Views/View.luo:340:",
["809"]="/src/classes/Views/View.luo:341:",
["810"]="/src/classes/Views/View.luo:342:",
["811"]="/src/classes/Views/View.luo:343:",
["812"]="/src/classes/Views/View.luo:344:",
["813"]="/src/classes/Views/View.luo:115:",
["814"]="/src/classes/Views/View.luo:116:",
["815"]="/src/classes/Views/View.luo:117:",
["816"]="/src/classes/Views/View.luo:118:",
["817"]="/src/classes/Views/View.luo:526:",
["818"]="/src/classes/Views/View.luo:527:",
["819"]="/src/classes/Views/View.luo:528:",
["820"]="/src/classes/Views/View.luo:417:",
["821"]="/src/classes/Views/View.luo:418:",
["822"]="/src/classes/Views/View.luo:419:",
["823"]="/src/classes/Views/View.luo:420:",
["824"]="/src/classes/Views/View.luo:421:",
["825"]="/src/classes/Views/View.luo:422:",
["826"]="/src/classes/Views/View.luo:423:",
["827"]="/src/classes/Views/View.luo:424:",
["828"]="/src/classes/Views/View.luo:425:",
["829"]="/src/classes/Views/View.luo:426:",
["830"]="/src/classes/Views/View.luo:427:",
["831"]="/src/classes/Views/View.luo:428:",
["832"]="/src/classes/Views/View.luo:429:",
["833"]="/src/classes/Views/View.luo:465:",
["834"]="/src/classes/Views/View.luo:466:",
["835"]="/src/classes/Views/View.luo:467:",
["836"]="/src/classes/Views/View.luo:468:",
["837"]="/src/classes/Views/View.luo:60:",
["838"]="/src/classes/Views/View.luo:61:",
["839"]="/src/classes/Views/View.luo:62:",
["840"]="/src/classes/Views/View.luo:63:",
["841"]="/src/classes/Views/View.luo:64:",
["842"]="/src/classes/Views/View.luo:65:",
["843"]="/src/classes/Views/View.luo:66:",
["844"]="/src/classes/Views/View.luo:67:",
["845"]="/src/classes/Views/View.luo:68:",
["846"]="/src/classes/Views/View.luo:69:",
["847"]="/src/classes/Views/View.luo:70:",
["848"]="/src/classes/Views/View.luo:71:",
["849"]="/src/classes/Views/View.luo:72:",
["850"]="/src/classes/Views/View.luo:73:",
["851"]="/src/classes/Views/View.luo:74:",
["852"]="/src/classes/Views/View.luo:75:",
["853"]="/src/classes/Views/View.luo:76:",
["854"]="/src/classes/Views/View.luo:77:",
["855"]="/src/classes/Views/View.luo:78:",
["856"]="/src/classes/Views/View.luo:79:",
["857"]="/src/classes/Views/View.luo:80:",
["858"]="/src/classes/Views/View.luo:81:",
["859"]="/src/classes/Views/View.luo:82:",
["860"]="/src/classes/Views/View.luo:83:",
["861"]="/src/classes/Views/View.luo:84:",
["862"]="/src/classes/Views/View.luo:236:",
["863"]="/src/classes/Views/View.luo:237:",
["864"]="/src/classes/Views/View.luo:238:",
["865"]="/src/classes/Views/View.luo:239:",
["866"]="/src/classes/Views/View.luo:240:",
["867"]="/src/classes/Views/View.luo:241:",
["868"]="/src/classes/Views/View.luo:242:",
["869"]="/src/classes/Views/View.luo:243:",
["870"]="/src/classes/Views/View.luo:244:",
["871"]="/src/classes/Views/View.luo:245:",
["872"]="/src/classes/Views/View.luo:246:",
["873"]="/src/classes/Views/View.luo:401:",
["874"]="/src/classes/Views/View.luo:402:",
["875"]="/src/classes/Views/View.luo:403:",
["876"]="/src/classes/Views/View.luo:404:",
["877"]="/src/classes/Views/View.luo:405:",
["878"]="/src/classes/Views/View.luo:406:",
["879"]="/src/classes/Views/View.luo:407:",
["880"]="/src/classes/Views/View.luo:408:",
["881"]="/src/classes/Views/View.luo:409:",
["882"]="/src/classes/Views/View.luo:410:",
["883"]="/src/classes/Views/View.luo:411:",
["884"]="/src/classes/Views/View.luo:628:",
["885"]="/src/classes/Views/View.luo:629:",
["886"]="/src/classes/Views/View.luo:630:",
["887"]="/src/classes/Views/View.luo:631:",
["888"]="/src/classes/Views/View.luo:632:",
["889"]="/src/classes/Views/View.luo:633:",
["890"]="/src/classes/Views/View.luo:634:",
["891"]="/src/classes/Views/View.luo:635:",
["892"]="/src/classes/Views/View.luo:636:",
["893"]="/src/classes/Views/View.luo:637:",
["894"]="/src/classes/Views/View.luo:638:",
["895"]="/src/classes/Views/View.luo:639:",
["896"]="/src/classes/Views/View.luo:481:",
["897"]="/src/classes/Views/View.luo:482:",
["898"]="/src/classes/Views/View.luo:483:",
["899"]="/src/classes/Views/View.luo:484:",
["900"]="/src/classes/Views/View.luo:485:",
["901"]="/src/classes/Views/View.luo:486:",
["902"]="/src/classes/Views/View.luo:487:",
["903"]="/src/classes/Views/View.luo:488:",
["904"]="/src/classes/Views/View.luo:489:",
["905"]="/src/classes/Views/View.luo:490:",
["906"]="/src/classes/Views/View.luo:491:",
["907"]="/src/classes/Views/View.luo:492:",
["908"]="/src/classes/Views/View.luo:493:",
["909"]="/src/classes/Views/View.luo:494:",
["910"]="/src/classes/Views/View.luo:495:",
["911"]="/src/classes/Views/View.luo:496:",
["912"]="/src/classes/Views/View.luo:497:",
["913"]="/src/classes/Views/View.luo:498:",
["914"]="/src/classes/Views/View.luo:499:",
["915"]="/src/classes/Views/View.luo:500:",
["916"]="/src/classes/Views/View.luo:501:",
["917"]="/src/classes/Views/View.luo:502:",
["918"]="/src/classes/Views/View.luo:503:",
["919"]="/src/classes/Views/View.luo:504:",
["920"]="/src/classes/Views/View.luo:505:",
["921"]="/src/classes/Views/View.luo:506:",
["922"]="/src/classes/Views/View.luo:507:",
["923"]="/src/classes/Views/View.luo:508:",
["924"]="/src/classes/Views/View.luo:509:",
["925"]="/src/classes/Views/View.luo:510:",
["926"]="/src/classes/Views/View.luo:511:",
["927"]="/src/classes/Views/View.luo:512:",
["928"]="/src/classes/Views/View.luo:513:",
["929"]="/src/classes/Views/View.luo:514:",
["930"]="/src/classes/Views/View.luo:515:",
["931"]="/src/classes/Views/View.luo:516:",
["932"]="/src/classes/Views/View.luo:517:",
["933"]="/src/classes/Views/View.luo:518:",
["934"]="/src/classes/Views/View.luo:519:",
["935"]="/src/classes/Views/View.luo:520:",
["936"]="/src/classes/Views/View.luo:521:",
["937"]="/src/classes/Views/View.luo:353:",
["938"]="/src/classes/Views/View.luo:354:",
["939"]="/src/classes/Views/View.luo:355:",
["940"]="/src/classes/Views/View.luo:356:",
["941"]="/src/classes/Views/View.luo:357:",
["942"]="/src/classes/Views/View.luo:358:",
["943"]="/src/classes/Views/View.luo:359:",
["944"]="/src/classes/Views/View.luo:360:",
["945"]="/src/classes/Views/View.luo:361:",
["946"]="/src/classes/Views/View.luo:89:",
["947"]="/src/classes/Views/View.luo:90:",
["948"]="/src/classes/Views/View.luo:91:",
["949"]="/src/classes/Views/View.luo:559:",
["950"]="/src/classes/Views/View.luo:560:",
["951"]="/src/classes/Views/View.luo:561:",
["952"]="/src/classes/Views/View.luo:551:",
["953"]="/src/classes/Views/View.luo:552:",
["954"]="/src/classes/Views/View.luo:553:",
["955"]="/src/classes/Views/View.luo:533:",
["956"]="/src/classes/Views/View.luo:534:",
["957"]="/src/classes/Views/View.luo:535:",
["958"]="/src/classes/Views/View.luo:123:",
["959"]="/src/classes/Views/View.luo:124:",
["960"]="/src/classes/Views/View.luo:125:",
["961"]="/src/classes/Views/View.luo:434:",
["962"]="/src/classes/Views/View.luo:435:",
["963"]="/src/classes/Views/View.luo:436:",
["964"]="/src/classes/Views/View.luo:437:",
["965"]="/src/classes/Views/View.luo:438:",
["966"]="/src/classes/Views/View.luo:439:",
["967"]="/src/classes/Views/View.luo:440:",
["968"]="/src/classes/Views/View.luo:441:",
["969"]="/src/classes/Views/View.luo:442:",
["970"]="/src/classes/Views/View.luo:443:",
["971"]="/src/classes/Views/View.luo:444:",
["972"]="/src/classes/Views/View.luo:445:",
["973"]="/src/classes/Views/View.luo:446:",
["974"]="/src/classes/Views/View.luo:447:",
["975"]="/src/classes/Views/View.luo:448:",
["976"]="/src/classes/Views/View.luo:449:",
["977"]="/src/classes/Views/View.luo:450:",
["978"]="/src/classes/Views/View.luo:451:",
["979"]="/src/classes/Views/View.luo:452:",
["980"]="/src/classes/Views/View.luo:453:",
["981"]="/src/classes/Views/View.luo:454:",
["982"]="/src/classes/Views/View.luo:455:",
["983"]="/src/classes/Views/View.luo:456:",
["984"]="/src/classes/Views/View.luo:457:",
["985"]="/src/classes/Views/View.luo:458:",
["986"]="/src/classes/Views/View.luo:459:",
["987"]="/src/classes/Views/View.luo:460:",
["988"]="/src/classes/Views/View.luo:473:",
["989"]="/src/classes/Views/View.luo:474:",
["990"]="/src/classes/Views/View.luo:475:",
["991"]="/src/classes/Views/View.luo:476:",
["992"]="/src/classes/Views/View.luo:386:",
["993"]="/src/classes/Views/View.luo:387:",
["994"]="/src/classes/Views/View.luo:388:",
["995"]="/src/classes/Views/View.luo:389:",
["996"]="/src/classes/Views/View.luo:390:",
["997"]="/src/classes/Views/View.luo:391:",
["998"]="/src/classes/Views/View.luo:392:",
["1265"]="/src/classes/Views/TextBox.luo:293:",
["1266"]="/src/classes/Views/TextBox.luo:294:",
["1267"]="/src/classes/Views/TextBox.luo:295:",
["1268"]="/src/classes/Views/TextBox.luo:296:",
["1269"]="/src/classes/Views/TextBox.luo:297:",
["1270"]="/src/classes/Views/TextBox.luo:298:",
["1271"]="/src/classes/Views/TextBox.luo:299:",
["1272"]="/src/classes/Views/TextBox.luo:300:",
["1273"]="/src/classes/Views/TextBox.luo:301:",
["1274"]="/src/classes/Views/TextBox.luo:302:",
["1275"]="/src/classes/Views/TextBox.luo:303:",
["1276"]="/src/classes/Views/TextBox.luo:304:",
["1277"]="/src/classes/Views/TextBox.luo:305:",
["1278"]="/src/classes/Views/TextBox.luo:306:",
["1279"]="/src/classes/Views/TextBox.luo:307:",
["1280"]="/src/classes/Views/TextBox.luo:308:",
["1281"]="/src/classes/Views/TextBox.luo:309:",
["1282"]="/src/classes/Views/TextBox.luo:310:",
["1283"]="/src/classes/Views/TextBox.luo:311:",
["1284"]="/src/classes/Views/TextBox.luo:312:",
["1285"]="/src/classes/Views/TextBox.luo:313:",
["1286"]="/src/classes/Views/TextBox.luo:314:",
["1287"]="/src/classes/Views/TextBox.luo:315:",
["1288"]="/src/classes/Views/TextBox.luo:235:",
["1289"]="/src/classes/Views/TextBox.luo:236:",
["1290"]="/src/classes/Views/TextBox.luo:237:",
["1291"]="/src/classes/Views/TextBox.luo:238:",
["1292"]="/src/classes/Views/TextBox.luo:519:",
["1293"]="/src/classes/Views/TextBox.luo:520:",
["1294"]="/src/classes/Views/TextBox.luo:521:",
["1295"]="/src/classes/Views/TextBox.luo:522:",
["1296"]="/src/classes/Views/TextBox.luo:523:",
["1297"]="/src/classes/Views/TextBox.luo:524:",
["1298"]="/src/classes/Views/TextBox.luo:525:",
["1299"]="/src/classes/Views/TextBox.luo:526:",
["1300"]="/src/classes/Views/TextBox.luo:527:",
["1301"]="/src/classes/Views/TextBox.luo:528:",
["1302"]="/src/classes/Views/TextBox.luo:529:",
["1303"]="/src/classes/Views/TextBox.luo:530:",
["1304"]="/src/classes/Views/TextBox.luo:531:",
["1305"]="/src/classes/Views/TextBox.luo:532:",
["1306"]="/src/classes/Views/TextBox.luo:533:",
["1307"]="/src/classes/Views/TextBox.luo:534:",
["1308"]="/src/classes/Views/TextBox.luo:535:",
["1309"]="/src/classes/Views/TextBox.luo:536:",
["1310"]="/src/classes/Views/TextBox.luo:537:",
["1311"]="/src/classes/Views/TextBox.luo:538:",
["1312"]="/src/classes/Views/TextBox.luo:539:",
["1313"]="/src/classes/Views/TextBox.luo:540:",
["1314"]="/src/classes/Views/TextBox.luo:541:",
["1315"]="/src/classes/Views/TextBox.luo:542:",
["1316"]="/src/classes/Views/TextBox.luo:543:",
["1317"]="/src/classes/Views/TextBox.luo:544:",
["1318"]="/src/classes/Views/TextBox.luo:545:",
["1319"]="/src/classes/Views/TextBox.luo:546:",
["1320"]="/src/classes/Views/TextBox.luo:547:",
["1321"]="/src/classes/Views/TextBox.luo:548:",
["1322"]="/src/classes/Views/TextBox.luo:549:",
["1323"]="/src/classes/Views/TextBox.luo:550:",
["1324"]="/src/classes/Views/TextBox.luo:551:",
["1325"]="/src/classes/Views/TextBox.luo:552:",
["1326"]="/src/classes/Views/TextBox.luo:553:",
["1327"]="/src/classes/Views/TextBox.luo:554:",
["1328"]="/src/classes/Views/TextBox.luo:555:",
["1329"]="/src/classes/Views/TextBox.luo:556:",
["1330"]="/src/classes/Views/TextBox.luo:557:",
["1331"]="/src/classes/Views/TextBox.luo:558:",
["1332"]="/src/classes/Views/TextBox.luo:559:",
["1333"]="/src/classes/Views/TextBox.luo:560:",
["1334"]="/src/classes/Views/TextBox.luo:561:",
["1335"]="/src/classes/Views/TextBox.luo:562:",
["1336"]="/src/classes/Views/TextBox.luo:563:",
["1337"]="/src/classes/Views/TextBox.luo:564:",
["1338"]="/src/classes/Views/TextBox.luo:565:",
["1339"]="/src/classes/Views/TextBox.luo:566:",
["1340"]="/src/classes/Views/TextBox.luo:567:",
["1341"]="/src/classes/Views/TextBox.luo:568:",
["1342"]="/src/classes/Views/TextBox.luo:423:",
["1343"]="/src/classes/Views/TextBox.luo:424:",
["1344"]="/src/classes/Views/TextBox.luo:425:",
["1345"]="/src/classes/Views/TextBox.luo:426:",
["1346"]="/src/classes/Views/TextBox.luo:427:",
["1347"]="/src/classes/Views/TextBox.luo:428:",
["1348"]="/src/classes/Views/TextBox.luo:121:",
["1349"]="/src/classes/Views/TextBox.luo:122:",
["1350"]="/src/classes/Views/TextBox.luo:123:",
["1351"]="/src/classes/Views/TextBox.luo:124:",
["1352"]="/src/classes/Views/TextBox.luo:125:",
["1353"]="/src/classes/Views/TextBox.luo:126:",
["1354"]="/src/classes/Views/TextBox.luo:127:",
["1355"]="/src/classes/Views/TextBox.luo:128:",
["1356"]="/src/classes/Views/TextBox.luo:129:",
["1357"]="/src/classes/Views/TextBox.luo:130:",
["1358"]="/src/classes/Views/TextBox.luo:131:",
["1359"]="/src/classes/Views/TextBox.luo:132:",
["1360"]="/src/classes/Views/TextBox.luo:133:",
["1361"]="/src/classes/Views/TextBox.luo:134:",
["1362"]="/src/classes/Views/TextBox.luo:135:",
["1363"]="/src/classes/Views/TextBox.luo:136:",
["1364"]="/src/classes/Views/TextBox.luo:137:",
["1365"]="/src/classes/Views/TextBox.luo:138:",
["1366"]="/src/classes/Views/TextBox.luo:139:",
["1367"]="/src/classes/Views/TextBox.luo:140:",
["1368"]="/src/classes/Views/TextBox.luo:141:",
["1369"]="/src/classes/Views/TextBox.luo:142:",
["1370"]="/src/classes/Views/TextBox.luo:471:",
["1371"]="/src/classes/Views/TextBox.luo:472:",
["1372"]="/src/classes/Views/TextBox.luo:473:",
["1373"]="/src/classes/Views/TextBox.luo:474:",
["1374"]="/src/classes/Views/TextBox.luo:475:",
["1375"]="/src/classes/Views/TextBox.luo:60:",
["1376"]="/src/classes/Views/TextBox.luo:61:",
["1377"]="/src/classes/Views/TextBox.luo:62:",
["1378"]="/src/classes/Views/TextBox.luo:63:",
["1379"]="/src/classes/Views/TextBox.luo:64:",
["1380"]="/src/classes/Views/TextBox.luo:65:",
["1381"]="/src/classes/Views/TextBox.luo:66:",
["1382"]="/src/classes/Views/TextBox.luo:67:",
["1383"]="/src/classes/Views/TextBox.luo:68:",
["1384"]="/src/classes/Views/TextBox.luo:69:",
["1385"]="/src/classes/Views/TextBox.luo:70:",
["1386"]="/src/classes/Views/TextBox.luo:71:",
["1387"]="/src/classes/Views/TextBox.luo:72:",
["1388"]="/src/classes/Views/TextBox.luo:156:",
["1389"]="/src/classes/Views/TextBox.luo:157:",
["1390"]="/src/classes/Views/TextBox.luo:158:",
["1391"]="/src/classes/Views/TextBox.luo:159:",
["1392"]="/src/classes/Views/TextBox.luo:160:",
["1393"]="/src/classes/Views/TextBox.luo:161:",
["1394"]="/src/classes/Views/TextBox.luo:162:",
["1395"]="/src/classes/Views/TextBox.luo:163:",
["1396"]="/src/classes/Views/TextBox.luo:164:",
["1397"]="/src/classes/Views/TextBox.luo:165:",
["1398"]="/src/classes/Views/TextBox.luo:166:",
["1399"]="/src/classes/Views/TextBox.luo:167:",
["1400"]="/src/classes/Views/TextBox.luo:168:",
["1401"]="/src/classes/Views/TextBox.luo:169:",
["1402"]="/src/classes/Views/TextBox.luo:170:",
["1403"]="/src/classes/Views/TextBox.luo:171:",
["1404"]="/src/classes/Views/TextBox.luo:172:",
["1405"]="/src/classes/Views/TextBox.luo:173:",
["1406"]="/src/classes/Views/TextBox.luo:379:",
["1407"]="/src/classes/Views/TextBox.luo:380:",
["1408"]="/src/classes/Views/TextBox.luo:381:",
["1409"]="/src/classes/Views/TextBox.luo:382:",
["1410"]="/src/classes/Views/TextBox.luo:383:",
["1411"]="/src/classes/Views/TextBox.luo:384:",
["1412"]="/src/classes/Views/TextBox.luo:365:",
["1413"]="/src/classes/Views/TextBox.luo:366:",
["1414"]="/src/classes/Views/TextBox.luo:367:",
["1415"]="/src/classes/Views/TextBox.luo:368:",
["1416"]="/src/classes/Views/TextBox.luo:369:",
["1417"]="/src/classes/Views/TextBox.luo:370:",
["1418"]="/src/classes/Views/TextBox.luo:371:",
["1419"]="/src/classes/Views/TextBox.luo:372:",
["1420"]="/src/classes/Views/TextBox.luo:175:",
["1421"]="/src/classes/Views/TextBox.luo:176:",
["1422"]="/src/classes/Views/TextBox.luo:177:",
["1423"]="/src/classes/Views/TextBox.luo:178:",
["1424"]="/src/classes/Views/TextBox.luo:202:",
["1425"]="/src/classes/Views/TextBox.luo:203:",
["1426"]="/src/classes/Views/TextBox.luo:204:",
["1427"]="/src/classes/Views/TextBox.luo:205:",
["1428"]="/src/classes/Views/TextBox.luo:206:",
["1429"]="/src/classes/Views/TextBox.luo:207:",
["1430"]="/src/classes/Views/TextBox.luo:208:",
["1431"]="/src/classes/Views/TextBox.luo:209:",
["1432"]="/src/classes/Views/TextBox.luo:210:",
["1433"]="/src/classes/Views/TextBox.luo:211:",
["1434"]="/src/classes/Views/TextBox.luo:212:",
["1435"]="/src/classes/Views/TextBox.luo:213:",
["1436"]="/src/classes/Views/TextBox.luo:214:",
["1437"]="/src/classes/Views/TextBox.luo:215:",
["1438"]="/src/classes/Views/TextBox.luo:216:",
["1439"]="/src/classes/Views/TextBox.luo:217:",
["1440"]="/src/classes/Views/TextBox.luo:218:",
["1441"]="/src/classes/Views/TextBox.luo:219:",
["1442"]="/src/classes/Views/TextBox.luo:220:",
["1443"]="/src/classes/Views/TextBox.luo:221:",
["1444"]="/src/classes/Views/TextBox.luo:222:",
["1445"]="/src/classes/Views/TextBox.luo:223:",
["1446"]="/src/classes/Views/TextBox.luo:224:",
["1447"]="/src/classes/Views/TextBox.luo:225:",
["1448"]="/src/classes/Views/TextBox.luo:226:",
["1449"]="/src/classes/Views/TextBox.luo:227:",
["1450"]="/src/classes/Views/TextBox.luo:228:",
["1451"]="/src/classes/Views/TextBox.luo:229:",
["1452"]="/src/classes/Views/TextBox.luo:230:",
["1453"]="/src/classes/Views/TextBox.luo:74:",
["1454"]="/src/classes/Views/TextBox.luo:75:",
["1455"]="/src/classes/Views/TextBox.luo:76:",
["1456"]="/src/classes/Views/TextBox.luo:77:",
["1457"]="/src/classes/Views/TextBox.luo:78:",
["1458"]="/src/classes/Views/TextBox.luo:79:",
["1459"]="/src/classes/Views/TextBox.luo:80:",
["1460"]="/src/classes/Views/TextBox.luo:81:",
["1461"]="/src/classes/Views/TextBox.luo:82:",
["1462"]="/src/classes/Views/TextBox.luo:83:",
["1463"]="/src/classes/Views/TextBox.luo:84:",
["1464"]="/src/classes/Views/TextBox.luo:85:",
["1465"]="/src/classes/Views/TextBox.luo:86:",
["1466"]="/src/classes/Views/TextBox.luo:87:",
["1467"]="/src/classes/Views/TextBox.luo:88:",
["1468"]="/src/classes/Views/TextBox.luo:89:",
["1469"]="/src/classes/Views/TextBox.luo:90:",
["1470"]="/src/classes/Views/TextBox.luo:91:",
["1471"]="/src/classes/Views/TextBox.luo:92:",
["1472"]="/src/classes/Views/TextBox.luo:93:",
["1473"]="/src/classes/Views/TextBox.luo:94:",
["1474"]="/src/classes/Views/TextBox.luo:95:",
["1475"]="/src/classes/Views/TextBox.luo:96:",
["1476"]="/src/classes/Views/TextBox.luo:97:",
["1477"]="/src/classes/Views/TextBox.luo:98:",
["1478"]="/src/classes/Views/TextBox.luo:99:",
["1479"]="/src/classes/Views/TextBox.luo:100:",
["1480"]="/src/classes/Views/TextBox.luo:101:",
["1481"]="/src/classes/Views/TextBox.luo:102:",
["1482"]="/src/classes/Views/TextBox.luo:103:",
["1483"]="/src/classes/Views/TextBox.luo:104:",
["1484"]="/src/classes/Views/TextBox.luo:105:",
["1485"]="/src/classes/Views/TextBox.luo:106:",
["1486"]="/src/classes/Views/TextBox.luo:107:",
["1487"]="/src/classes/Views/TextBox.luo:108:",
["1488"]="/src/classes/Views/TextBox.luo:109:",
["1489"]="/src/classes/Views/TextBox.luo:110:",
["1490"]="/src/classes/Views/TextBox.luo:111:",
["1491"]="/src/classes/Views/TextBox.luo:112:",
["1492"]="/src/classes/Views/TextBox.luo:113:",
["1493"]="/src/classes/Views/TextBox.luo:114:",
["1494"]="/src/classes/Views/TextBox.luo:115:",
["1495"]="/src/classes/Views/TextBox.luo:116:",
["1496"]="/src/classes/Views/TextBox.luo:117:",
["1497"]="/src/classes/Views/TextBox.luo:118:",
["1498"]="/src/classes/Views/TextBox.luo:119:",
["1499"]="/src/classes/Views/TextBox.luo:430:",
["1500"]="/src/classes/Views/TextBox.luo:431:",
["1501"]="/src/classes/Views/TextBox.luo:432:",
["1502"]="/src/classes/Views/TextBox.luo:433:",
["1503"]="/src/classes/Views/TextBox.luo:434:",
["1504"]="/src/classes/Views/TextBox.luo:435:",
["1505"]="/src/classes/Views/TextBox.luo:436:",
["1506"]="/src/classes/Views/TextBox.luo:437:",
["1507"]="/src/classes/Views/TextBox.luo:438:",
["1508"]="/src/classes/Views/TextBox.luo:439:",
["1509"]="/src/classes/Views/TextBox.luo:440:",
["1510"]="/src/classes/Views/TextBox.luo:441:",
["1511"]="/src/classes/Views/TextBox.luo:442:",
["1512"]="/src/classes/Views/TextBox.luo:443:",
["1513"]="/src/classes/Views/TextBox.luo:444:",
["1514"]="/src/classes/Views/TextBox.luo:445:",
["1515"]="/src/classes/Views/TextBox.luo:446:",
["1516"]="/src/classes/Views/TextBox.luo:447:",
["1517"]="/src/classes/Views/TextBox.luo:448:",
["1518"]="/src/classes/Views/TextBox.luo:449:",
["1519"]="/src/classes/Views/TextBox.luo:450:",
["1520"]="/src/classes/Views/TextBox.luo:451:",
["1521"]="/src/classes/Views/TextBox.luo:452:",
["1522"]="/src/classes/Views/TextBox.luo:453:",
["1523"]="/src/classes/Views/TextBox.luo:454:",
["1524"]="/src/classes/Views/TextBox.luo:455:",
["1525"]="/src/classes/Views/TextBox.luo:456:",
["1526"]="/src/classes/Views/TextBox.luo:457:",
["1527"]="/src/classes/Views/TextBox.luo:458:",
["1528"]="/src/classes/Views/TextBox.luo:459:",
["1529"]="/src/classes/Views/TextBox.luo:460:",
["1530"]="/src/classes/Views/TextBox.luo:461:",
["1531"]="/src/classes/Views/TextBox.luo:462:",
["1532"]="/src/classes/Views/TextBox.luo:463:",
["1533"]="/src/classes/Views/TextBox.luo:464:",
["1534"]="/src/classes/Views/TextBox.luo:465:",
["1535"]="/src/classes/Views/TextBox.luo:466:",
["1536"]="/src/classes/Views/TextBox.luo:467:",
["1537"]="/src/classes/Views/TextBox.luo:468:",
["1538"]="/src/classes/Views/TextBox.luo:469:",
["1539"]="/src/classes/Views/TextBox.luo:415:",
["1540"]="/src/classes/Views/TextBox.luo:416:",
["1541"]="/src/classes/Views/TextBox.luo:417:",
["1542"]="/src/classes/Views/TextBox.luo:418:",
["1543"]="/src/classes/Views/TextBox.luo:419:",
["1544"]="/src/classes/Views/TextBox.luo:420:",
["1545"]="/src/classes/Views/TextBox.luo:421:",
["1546"]="/src/classes/Views/TextBox.luo:337:",
["1547"]="/src/classes/Views/TextBox.luo:338:",
["1548"]="/src/classes/Views/TextBox.luo:339:",
["1549"]="/src/classes/Views/TextBox.luo:197:",
["1550"]="/src/classes/Views/TextBox.luo:198:",
["1551"]="/src/classes/Views/TextBox.luo:199:",
["1552"]="/src/classes/Views/TextBox.luo:200:",
["1553"]="/src/classes/Views/TextBox.luo:185:",
["1554"]="/src/classes/Views/TextBox.luo:186:",
["1555"]="/src/classes/Views/TextBox.luo:187:",
["1556"]="/src/classes/Views/TextBox.luo:484:",
["1557"]="/src/classes/Views/TextBox.luo:485:",
["1558"]="/src/classes/Views/TextBox.luo:486:",
["1559"]="/src/classes/Views/TextBox.luo:487:",
["1560"]="/src/classes/Views/TextBox.luo:488:",
["1561"]="/src/classes/Views/TextBox.luo:489:",
["1562"]="/src/classes/Views/TextBox.luo:490:",
["1563"]="/src/classes/Views/TextBox.luo:491:",
["1564"]="/src/classes/Views/TextBox.luo:492:",
["1565"]="/src/classes/Views/TextBox.luo:493:",
["1566"]="/src/classes/Views/TextBox.luo:494:",
["1567"]="/src/classes/Views/TextBox.luo:495:",
["1568"]="/src/classes/Views/TextBox.luo:496:",
["1569"]="/src/classes/Views/TextBox.luo:497:",
["1570"]="/src/classes/Views/TextBox.luo:498:",
["1571"]="/src/classes/Views/TextBox.luo:499:",
["1572"]="/src/classes/Views/TextBox.luo:500:",
["1573"]="/src/classes/Views/TextBox.luo:501:",
["1574"]="/src/classes/Views/TextBox.luo:502:",
["1575"]="/src/classes/Views/TextBox.luo:503:",
["1576"]="/src/classes/Views/TextBox.luo:504:",
["1577"]="/src/classes/Views/TextBox.luo:505:",
["1578"]="/src/classes/Views/TextBox.luo:506:",
["1579"]="/src/classes/Views/TextBox.luo:507:",
["1580"]="/src/classes/Views/TextBox.luo:508:",
["1581"]="/src/classes/Views/TextBox.luo:509:",
["1582"]="/src/classes/Views/TextBox.luo:510:",
["1583"]="/src/classes/Views/TextBox.luo:511:",
["1584"]="/src/classes/Views/TextBox.luo:512:",
["1585"]="/src/classes/Views/TextBox.luo:477:",
["1586"]="/src/classes/Views/TextBox.luo:478:",
["1587"]="/src/classes/Views/TextBox.luo:479:",
["1588"]="/src/classes/Views/TextBox.luo:480:",
["1589"]="/src/classes/Views/TextBox.luo:481:",
["1590"]="/src/classes/Views/TextBox.luo:386:",
["1591"]="/src/classes/Views/TextBox.luo:387:",
["1592"]="/src/classes/Views/TextBox.luo:388:",
["1593"]="/src/classes/Views/TextBox.luo:389:",
["1594"]="/src/classes/Views/TextBox.luo:390:",
["1595"]="/src/classes/Views/TextBox.luo:391:",
["1596"]="/src/classes/Views/TextBox.luo:392:",
["1597"]="/src/classes/Views/TextBox.luo:393:",
["1598"]="/src/classes/Views/TextBox.luo:394:",
["1599"]="/src/classes/Views/TextBox.luo:395:",
["1600"]="/src/classes/Views/TextBox.luo:402:",
["1601"]="/src/classes/Views/TextBox.luo:403:",
["1602"]="/src/classes/Views/TextBox.luo:404:",
["1603"]="/src/classes/Views/TextBox.luo:405:",
["1604"]="/src/classes/Views/TextBox.luo:406:",
["1605"]="/src/classes/Views/TextBox.luo:407:",
["1606"]="/src/classes/Views/TextBox.luo:408:",
["1607"]="/src/classes/Views/TextBox.luo:409:",
["1608"]="/src/classes/Views/TextBox.luo:410:",
["1609"]="/src/classes/Views/TextBox.luo:411:",
["1610"]="/src/classes/Views/TextBox.luo:412:",
["1611"]="/src/classes/Views/TextBox.luo:413:",
["1682"]="/src/classes/Image.luo:479:",
["1683"]="/src/classes/Image.luo:480:",
["1684"]="/src/classes/Image.luo:481:",
["1685"]="/src/classes/Image.luo:522:",
["1686"]="/src/classes/Image.luo:523:",
["1687"]="/src/classes/Image.luo:524:",
["1688"]="/src/classes/Image.luo:525:",
["1689"]="/src/classes/Image.luo:526:",
["1690"]="/src/classes/Image.luo:527:",
["1691"]="/src/classes/Image.luo:528:",
["1692"]="/src/classes/Image.luo:529:",
["1693"]="/src/classes/Image.luo:530:",
["1694"]="/src/classes/Image.luo:531:",
["1695"]="/src/classes/Image.luo:514:",
["1696"]="/src/classes/Image.luo:515:",
["1697"]="/src/classes/Image.luo:516:",
["1698"]="/src/classes/Image.luo:483:",
["1699"]="/src/classes/Image.luo:484:",
["1700"]="/src/classes/Image.luo:485:",
["1701"]="/src/classes/Image.luo:486:",
["1702"]="/src/classes/Image.luo:487:",
["1703"]="/src/classes/Image.luo:488:",
["1704"]="/src/classes/Image.luo:489:",
["1705"]="/src/classes/Image.luo:490:",
["1706"]="/src/classes/Image.luo:496:",
["1707"]="/src/classes/Image.luo:497:",
["1708"]="/src/classes/Image.luo:498:",
["1709"]="/src/classes/Image.luo:499:",
["1710"]="/src/classes/Image.luo:500:",
["1711"]="/src/classes/Image.luo:501:",
["1712"]="/src/classes/Image.luo:502:",
["1713"]="/src/classes/Image.luo:503:",
["1714"]="/src/classes/Image.luo:504:",
["1715"]="/src/classes/Image.luo:505:",
["1716"]="/src/classes/Image.luo:492:",
["1717"]="/src/classes/Image.luo:493:",
["1718"]="/src/classes/Image.luo:494:",
["1719"]="/src/classes/Image.luo:537:",
["1720"]="/src/classes/Image.luo:538:",
["1721"]="/src/classes/Image.luo:539:",
["1722"]="/src/classes/Image.luo:540:",
["1723"]="/src/classes/Image.luo:541:",
["1724"]="/src/classes/Image.luo:542:",
["1725"]="/src/classes/Image.luo:543:",
["1726"]="/src/classes/Image.luo:544:",
["1727"]="/src/classes/Image.luo:545:",
["1728"]="/src/classes/Image.luo:546:",
["1729"]="/src/classes/Image.luo:547:",
["1730"]="/src/classes/Image.luo:548:",
["1731"]="/src/classes/Image.luo:549:",
["1732"]="/src/classes/Image.luo:550:",
["1733"]="/src/classes/Image.luo:551:",
["1734"]="/src/classes/Image.luo:552:",
["1735"]="/src/classes/Image.luo:575:",
["1736"]="/src/classes/Image.luo:576:",
["1737"]="/src/classes/Image.luo:577:",
["1738"]="/src/classes/Image.luo:578:",
["1739"]="/src/classes/Image.luo:579:",
["1740"]="/src/classes/Image.luo:580:",
["1741"]="/src/classes/Image.luo:581:",
["1742"]="/src/classes/Image.luo:582:",
["1743"]="/src/classes/Image.luo:583:",
["1744"]="/src/classes/Image.luo:584:",
["1745"]="/src/classes/Image.luo:585:",
["1746"]="/src/classes/Image.luo:586:",
["1747"]="/src/classes/Image.luo:587:",
["1748"]="/src/classes/Image.luo:588:",
["1749"]="/src/classes/Image.luo:589:",
["1750"]="/src/classes/Image.luo:590:",
["1751"]="/src/classes/Image.luo:591:",
["1752"]="/src/classes/Image.luo:592:",
["1753"]="/src/classes/Image.luo:593:",
["1754"]="/src/classes/Image.luo:594:",
["1755"]="/src/classes/Image.luo:595:",
["1756"]="/src/classes/Image.luo:596:",
["1757"]="/src/classes/Image.luo:597:",
["1758"]="/src/classes/Image.luo:598:",
["1759"]="/src/classes/Image.luo:599:",
["1760"]="/src/classes/Image.luo:600:",
["1761"]="/src/classes/Image.luo:601:",
["1762"]="/src/classes/Image.luo:602:",
["1763"]="/src/classes/Image.luo:603:",
["1764"]="/src/classes/Image.luo:604:",
["1765"]="/src/classes/Image.luo:605:",
["1766"]="/src/classes/Image.luo:606:",
["1767"]="/src/classes/Image.luo:607:",
["1768"]="/src/classes/Image.luo:608:",
["1769"]="/src/classes/Image.luo:609:",
["1770"]="/src/classes/Image.luo:610:",
["1771"]="/src/classes/Image.luo:611:",
["1772"]="/src/classes/Image.luo:612:",
["1773"]="/src/classes/Image.luo:613:",
["1774"]="/src/classes/Image.luo:614:",
["1775"]="/src/classes/Image.luo:615:",
["1776"]="/src/classes/Image.luo:616:",
["1777"]="/src/classes/Image.luo:617:",
["1778"]="/src/classes/Image.luo:618:",
["1779"]="/src/classes/Image.luo:619:",
["1780"]="/src/classes/Image.luo:620:",
["1781"]="/src/classes/Image.luo:621:",
["1782"]="/src/classes/Image.luo:622:",
["1783"]="/src/classes/Image.luo:623:",
["1784"]="/src/classes/Image.luo:624:",
["1785"]="/src/classes/Image.luo:625:",
["1786"]="/src/classes/Image.luo:626:",
["1787"]="/src/classes/Image.luo:627:",
["1788"]="/src/classes/Image.luo:628:",
["1789"]="/src/classes/Image.luo:629:",
["1790"]="/src/classes/Image.luo:630:",
["1791"]="/src/classes/Image.luo:631:",
["1792"]="/src/classes/Image.luo:632:",
["1793"]="/src/classes/Image.luo:633:",
["1794"]="/src/classes/Image.luo:634:",
["1795"]="/src/classes/Image.luo:635:",
["1796"]="/src/classes/Image.luo:636:",
["1797"]="/src/classes/Image.luo:637:",
["1798"]="/src/classes/Image.luo:638:",
["1799"]="/src/classes/Image.luo:639:",
["1800"]="/src/classes/Image.luo:640:",
["1801"]="/src/classes/Image.luo:641:",
["1802"]="/src/classes/Image.luo:642:",
["1803"]="/src/classes/Image.luo:643:",
["1804"]="/src/classes/Image.luo:644:",
["1805"]="/src/classes/Image.luo:645:",
["1806"]="/src/classes/Image.luo:646:",
["1807"]="/src/classes/Image.luo:647:",
["1808"]="/src/classes/Image.luo:648:",
["1809"]="/src/classes/Image.luo:649:",
["1810"]="/src/classes/Image.luo:650:",
["1811"]="/src/classes/Image.luo:651:",
["1812"]="/src/classes/Image.luo:652:",
["1813"]="/src/classes/Image.luo:653:",
["1814"]="/src/classes/Image.luo:654:",
["1815"]="/src/classes/Image.luo:655:",
["1816"]="/src/classes/Image.luo:656:",
["1817"]="/src/classes/Image.luo:657:",
["1818"]="/src/classes/Image.luo:658:",
["1819"]="/src/classes/Image.luo:659:",
["1820"]="/src/classes/Image.luo:660:",
["1821"]="/src/classes/Image.luo:661:",
["1822"]="/src/classes/Image.luo:662:",
["1823"]="/src/classes/Image.luo:663:",
["1824"]="/src/classes/Image.luo:664:",
["1825"]="/src/classes/Image.luo:665:",
["1826"]="/src/classes/Image.luo:666:",
["1827"]="/src/classes/Image.luo:667:",
["1828"]="/src/classes/Image.luo:668:",
["1829"]="/src/classes/Image.luo:669:",
["1830"]="/src/classes/Image.luo:670:",
["1831"]="/src/classes/Image.luo:671:",
["1832"]="/src/classes/Image.luo:672:",
["1833"]="/src/classes/Image.luo:673:",
["1834"]="/src/classes/Image.luo:674:",
["1835"]="/src/classes/Image.luo:675:",
["1836"]="/src/classes/Image.luo:676:",
["1837"]="/src/classes/Image.luo:677:",
["1838"]="/src/classes/Image.luo:678:",
["1839"]="/src/classes/Image.luo:679:",
["1840"]="/src/classes/Image.luo:680:",
["1841"]="/src/classes/Image.luo:681:",
["1842"]="/src/classes/Image.luo:682:",
["1843"]="/src/classes/Image.luo:683:",
["1844"]="/src/classes/Image.luo:684:",
["1845"]="/src/classes/Image.luo:685:",
["1846"]="/src/classes/Image.luo:686:",
["1847"]="/src/classes/Image.luo:687:",
["1848"]="/src/classes/Image.luo:688:",
["1849"]="/src/classes/Image.luo:689:",
["1850"]="/src/classes/Image.luo:690:",
["1851"]="/src/classes/Image.luo:691:",
["1852"]="/src/classes/Image.luo:692:",
["1853"]="/src/classes/Image.luo:693:",
["1854"]="/src/classes/Image.luo:694:",
["1855"]="/src/classes/Image.luo:695:",
["1856"]="/src/classes/Image.luo:696:",
["1857"]="/src/classes/Image.luo:697:",
["1858"]="/src/classes/Image.luo:698:",
["1859"]="/src/classes/Image.luo:699:",
["1860"]="/src/classes/Image.luo:700:",
["1861"]="/src/classes/Image.luo:701:",
["1862"]="/src/classes/Image.luo:702:",
["1863"]="/src/classes/Image.luo:703:",
["1864"]="/src/classes/Image.luo:704:",
["1865"]="/src/classes/Image.luo:705:",
["1866"]="/src/classes/Image.luo:706:",
["1867"]="/src/classes/Image.luo:707:",
["1868"]="/src/classes/Image.luo:708:",
["1869"]="/src/classes/Image.luo:709:",
["1870"]="/src/classes/Image.luo:518:",
["1871"]="/src/classes/Image.luo:519:",
["1872"]="/src/classes/Image.luo:520:",
["1873"]="/src/classes/Image.luo:533:",
["1874"]="/src/classes/Image.luo:534:",
["1875"]="/src/classes/Image.luo:535:",
["1876"]="/src/classes/Image.luo:507:",
["1877"]="/src/classes/Image.luo:508:",
["1878"]="/src/classes/Image.luo:509:",
["1879"]="/src/classes/Image.luo:510:",
["1880"]="/src/classes/Image.luo:511:",
["1881"]="/src/classes/Image.luo:512:",
["1884"]="/src/classes/Image.luo:461:",
["1885"]="/src/classes/Image.luo:462:",
["1886"]="/src/classes/Image.luo:463:",
["1887"]="/src/classes/Image.luo:464:",
["1888"]="/src/classes/Image.luo:465:",
["1889"]="/src/classes/Image.luo:466:",
["1890"]="/src/classes/Image.luo:467:",
["1891"]="/src/classes/Image.luo:468:",
["1892"]="/src/classes/Image.luo:469:",
["1893"]="/src/classes/Image.luo:470:",
["1894"]="/src/classes/Image.luo:471:",
["1895"]="/src/classes/Image.luo:472:",
["1896"]="/src/classes/Image.luo:473:",
["1897"]="/src/classes/Image.luo:474:",
["1898"]="/src/classes/Image.luo:554:",
["1899"]="/src/classes/Image.luo:555:",
["1900"]="/src/classes/Image.luo:556:",
["1901"]="/src/classes/Image.luo:557:",
["1902"]="/src/classes/Image.luo:558:",
["1903"]="/src/classes/Image.luo:559:",
["1904"]="/src/classes/Image.luo:560:",
["1905"]="/src/classes/Image.luo:561:",
["1906"]="/src/classes/Image.luo:562:",
["1907"]="/src/classes/Image.luo:563:",
["1908"]="/src/classes/Image.luo:564:",
["1909"]="/src/classes/Image.luo:565:",
["1910"]="/src/classes/Image.luo:566:",
["1911"]="/src/classes/Image.luo:567:",
["1912"]="/src/classes/Image.luo:568:",
["1913"]="/src/classes/Image.luo:569:",
["1914"]="/src/classes/Image.luo:570:",
["1915"]="/src/classes/Image.luo:571:",
["1916"]="/src/classes/Image.luo:1053:",
["1917"]="/src/classes/Image.luo:1054:",
["1918"]="/src/classes/Image.luo:1055:",
["1919"]="/src/classes/Image.luo:1056:",
["1920"]="/src/classes/Image.luo:1057:",
["1921"]="/src/classes/Image.luo:1058:",
["1922"]="/src/classes/Image.luo:1059:",
["1923"]="/src/classes/Image.luo:1060:",
["1924"]="/src/classes/Image.luo:1061:",
["1925"]="/src/classes/Image.luo:1062:",
["1926"]="/src/classes/Image.luo:1063:",
["1927"]="/src/classes/Image.luo:1064:",
["1928"]="/src/classes/Image.luo:1065:",
["1929"]="/src/classes/Image.luo:1066:",
["1930"]="/src/classes/Image.luo:1067:",
["1931"]="/src/classes/Image.luo:1068:",
["1932"]="/src/classes/Image.luo:1069:",
["1933"]="/src/classes/Image.luo:1070:",
["1934"]="/src/classes/Image.luo:1071:",
["1935"]="/src/classes/Image.luo:1072:",
["1936"]="/src/classes/Image.luo:1073:",
["1937"]="/src/classes/Image.luo:1074:",
["1938"]="/src/classes/Image.luo:1075:",
["1939"]="/src/classes/Image.luo:1076:",
["1940"]="/src/classes/Image.luo:1077:",
["1941"]="/src/classes/Image.luo:1078:",
["1942"]="/src/classes/Image.luo:1079:",
["1943"]="/src/classes/Image.luo:1080:",
["1944"]="/src/classes/Image.luo:1081:",
["1945"]="/src/classes/Image.luo:1082:",
["1946"]="/src/classes/Image.luo:1083:",
["1947"]="/src/classes/Image.luo:1084:",
["1948"]="/src/classes/Image.luo:1085:",
["1949"]="/src/classes/Image.luo:1086:",
["1950"]="/src/classes/Image.luo:1087:",
["1951"]="/src/classes/Image.luo:1088:",
["1952"]="/src/classes/Image.luo:1089:",
["1953"]="/src/classes/Image.luo:1090:",
["1954"]="/src/classes/Image.luo:1091:",
["1955"]="/src/classes/Image.luo:1092:",
["1956"]="/src/classes/Image.luo:1093:",
["1957"]="/src/classes/Image.luo:1094:",
["1958"]="/src/classes/Image.luo:1095:",
["1959"]="/src/classes/Image.luo:1096:",
["1960"]="/src/classes/Image.luo:1169:",
["1961"]="/src/classes/Image.luo:1170:",
["1962"]="/src/classes/Image.luo:1171:",
["1963"]="/src/classes/Image.luo:1104:",
["1964"]="/src/classes/Image.luo:1105:",
["1965"]="/src/classes/Image.luo:1106:",
["1966"]="/src/classes/Image.luo:1107:",
["1967"]="/src/classes/Image.luo:1109:",
["1968"]="/src/classes/Image.luo:1110:",
["1969"]="/src/classes/Image.luo:1111:",
["1970"]="/src/classes/Image.luo:1112:",
["1971"]="/src/classes/Image.luo:1113:",
["1972"]="/src/classes/Image.luo:1114:",
["1973"]="/src/classes/Image.luo:1115:",
["1974"]="/src/classes/Image.luo:1116:",
["1975"]="/src/classes/Image.luo:1117:",
["1976"]="/src/classes/Image.luo:1118:",
["1977"]="/src/classes/Image.luo:1119:",
["1978"]="/src/classes/Image.luo:1120:",
["1979"]="/src/classes/Image.luo:1121:",
["1980"]="/src/classes/Image.luo:711:",
["1981"]="/src/classes/Image.luo:712:",
["1982"]="/src/classes/Image.luo:713:",
["1983"]="/src/classes/Image.luo:714:",
["1984"]="/src/classes/Image.luo:715:",
["1985"]="/src/classes/Image.luo:716:",
["1986"]="/src/classes/Image.luo:717:",
["1987"]="/src/classes/Image.luo:718:",
["1988"]="/src/classes/Image.luo:719:",
["1989"]="/src/classes/Image.luo:720:",
["1990"]="/src/classes/Image.luo:721:",
["1991"]="/src/classes/Image.luo:722:",
["1992"]="/src/classes/Image.luo:723:",
["1993"]="/src/classes/Image.luo:724:",
["1994"]="/src/classes/Image.luo:725:",
["1995"]="/src/classes/Image.luo:726:",
["1996"]="/src/classes/Image.luo:727:",
["1997"]="/src/classes/Image.luo:728:",
["1998"]="/src/classes/Image.luo:729:",
["1999"]="/src/classes/Image.luo:730:",
["2000"]="/src/classes/Image.luo:731:",
["2001"]="/src/classes/Image.luo:732:",
["2002"]="/src/classes/Image.luo:733:",
["2003"]="/src/classes/Image.luo:734:",
["2004"]="/src/classes/Image.luo:735:",
["2005"]="/src/classes/Image.luo:736:",
["2006"]="/src/classes/Image.luo:737:",
["2007"]="/src/classes/Image.luo:738:",
["2008"]="/src/classes/Image.luo:739:",
["2009"]="/src/classes/Image.luo:740:",
["2010"]="/src/classes/Image.luo:741:",
["2011"]="/src/classes/Image.luo:742:",
["2012"]="/src/classes/Image.luo:743:",
["2013"]="/src/classes/Image.luo:744:",
["2014"]="/src/classes/Image.luo:745:",
["2015"]="/src/classes/Image.luo:746:",
["2016"]="/src/classes/Image.luo:747:",
["2017"]="/src/classes/Image.luo:748:",
["2018"]="/src/classes/Image.luo:749:",
["2019"]="/src/classes/Image.luo:750:",
["2020"]="/src/classes/Image.luo:751:",
["2021"]="/src/classes/Image.luo:752:",
["2022"]="/src/classes/Image.luo:753:",
["2023"]="/src/classes/Image.luo:754:",
["2024"]="/src/classes/Image.luo:755:",
["2025"]="/src/classes/Image.luo:756:",
["2026"]="/src/classes/Image.luo:757:",
["2027"]="/src/classes/Image.luo:758:",
["2028"]="/src/classes/Image.luo:759:",
["2029"]="/src/classes/Image.luo:760:",
["2030"]="/src/classes/Image.luo:761:",
["2031"]="/src/classes/Image.luo:762:",
["2032"]="/src/classes/Image.luo:763:",
["2033"]="/src/classes/Image.luo:764:",
["2034"]="/src/classes/Image.luo:765:",
["2035"]="/src/classes/Image.luo:766:",
["2036"]="/src/classes/Image.luo:767:",
["2037"]="/src/classes/Image.luo:768:",
["2038"]="/src/classes/Image.luo:769:",
["2039"]="/src/classes/Image.luo:770:",
["2040"]="/src/classes/Image.luo:771:",
["2041"]="/src/classes/Image.luo:772:",
["2042"]="/src/classes/Image.luo:773:",
["2043"]="/src/classes/Image.luo:774:",
["2044"]="/src/classes/Image.luo:775:",
["2045"]="/src/classes/Image.luo:776:",
["2046"]="/src/classes/Image.luo:777:",
["2047"]="/src/classes/Image.luo:778:",
["2048"]="/src/classes/Image.luo:779:",
["2049"]="/src/classes/Image.luo:780:",
["2050"]="/src/classes/Image.luo:781:",
["2051"]="/src/classes/Image.luo:782:",
["2052"]="/src/classes/Image.luo:783:",
["2053"]="/src/classes/Image.luo:784:",
["2054"]="/src/classes/Image.luo:785:",
["2055"]="/src/classes/Image.luo:786:",
["2056"]="/src/classes/Image.luo:787:",
["2057"]="/src/classes/Image.luo:788:",
["2058"]="/src/classes/Image.luo:789:",
["2059"]="/src/classes/Image.luo:790:",
["2060"]="/src/classes/Image.luo:791:",
["2061"]="/src/classes/Image.luo:792:",
["2062"]="/src/classes/Image.luo:793:",
["2063"]="/src/classes/Image.luo:794:",
["2064"]="/src/classes/Image.luo:795:",
["2065"]="/src/classes/Image.luo:796:",
["2066"]="/src/classes/Image.luo:797:",
["2067"]="/src/classes/Image.luo:798:",
["2068"]="/src/classes/Image.luo:799:",
["2069"]="/src/classes/Image.luo:800:",
["2070"]="/src/classes/Image.luo:801:",
["2071"]="/src/classes/Image.luo:802:",
["2072"]="/src/classes/Image.luo:803:",
["2073"]="/src/classes/Image.luo:804:",
["2074"]="/src/classes/Image.luo:805:",
["2075"]="/src/classes/Image.luo:806:",
["2076"]="/src/classes/Image.luo:807:",
["2077"]="/src/classes/Image.luo:808:",
["2078"]="/src/classes/Image.luo:809:",
["2079"]="/src/classes/Image.luo:810:",
["2080"]="/src/classes/Image.luo:811:",
["2081"]="/src/classes/Image.luo:812:",
["2082"]="/src/classes/Image.luo:813:",
["2083"]="/src/classes/Image.luo:814:",
["2084"]="/src/classes/Image.luo:815:",
["2085"]="/src/classes/Image.luo:816:",
["2086"]="/src/classes/Image.luo:817:",
["2087"]="/src/classes/Image.luo:818:",
["2088"]="/src/classes/Image.luo:819:",
["2089"]="/src/classes/Image.luo:820:",
["2090"]="/src/classes/Image.luo:821:",
["2091"]="/src/classes/Image.luo:822:",
["2092"]="/src/classes/Image.luo:823:",
["2093"]="/src/classes/Image.luo:824:",
["2094"]="/src/classes/Image.luo:825:",
["2095"]="/src/classes/Image.luo:826:",
["2096"]="/src/classes/Image.luo:827:",
["2097"]="/src/classes/Image.luo:828:",
["2098"]="/src/classes/Image.luo:829:",
["2099"]="/src/classes/Image.luo:830:",
["2100"]="/src/classes/Image.luo:831:",
["2101"]="/src/classes/Image.luo:832:",
["2102"]="/src/classes/Image.luo:833:",
["2103"]="/src/classes/Image.luo:834:",
["2104"]="/src/classes/Image.luo:835:",
["2105"]="/src/classes/Image.luo:836:",
["2106"]="/src/classes/Image.luo:837:",
["2107"]="/src/classes/Image.luo:838:",
["2108"]="/src/classes/Image.luo:839:",
["2109"]="/src/classes/Image.luo:840:",
["2110"]="/src/classes/Image.luo:841:",
["2111"]="/src/classes/Image.luo:842:",
["2112"]="/src/classes/Image.luo:843:",
["2113"]="/src/classes/Image.luo:844:",
["2114"]="/src/classes/Image.luo:845:",
["2115"]="/src/classes/Image.luo:846:",
["2116"]="/src/classes/Image.luo:847:",
["2117"]="/src/classes/Image.luo:848:",
["2118"]="/src/classes/Image.luo:849:",
["2119"]="/src/classes/Image.luo:850:",
["2120"]="/src/classes/Image.luo:851:",
["2121"]="/src/classes/Image.luo:852:",
["2122"]="/src/classes/Image.luo:853:",
["2123"]="/src/classes/Image.luo:854:",
["2124"]="/src/classes/Image.luo:855:",
["2125"]="/src/classes/Image.luo:856:",
["2126"]="/src/classes/Image.luo:857:",
["2127"]="/src/classes/Image.luo:858:",
["2128"]="/src/classes/Image.luo:859:",
["2129"]="/src/classes/Image.luo:860:",
["2130"]="/src/classes/Image.luo:861:",
["2131"]="/src/classes/Image.luo:862:",
["2132"]="/src/classes/Image.luo:863:",
["2133"]="/src/classes/Image.luo:864:",
["2134"]="/src/classes/Image.luo:865:",
["2135"]="/src/classes/Image.luo:866:",
["2136"]="/src/classes/Image.luo:867:",
["2137"]="/src/classes/Image.luo:868:",
["2138"]="/src/classes/Image.luo:869:",
["2139"]="/src/classes/Image.luo:870:",
["2140"]="/src/classes/Image.luo:871:",
["2141"]="/src/classes/Image.luo:872:",
["2142"]="/src/classes/Image.luo:873:",
["2143"]="/src/classes/Image.luo:874:",
["2144"]="/src/classes/Image.luo:875:",
["2145"]="/src/classes/Image.luo:876:",
["2146"]="/src/classes/Image.luo:877:",
["2147"]="/src/classes/Image.luo:878:",
["2148"]="/src/classes/Image.luo:879:",
["2149"]="/src/classes/Image.luo:880:",
["2150"]="/src/classes/Image.luo:881:",
["2151"]="/src/classes/Image.luo:882:",
["2152"]="/src/classes/Image.luo:883:",
["2153"]="/src/classes/Image.luo:884:",
["2154"]="/src/classes/Image.luo:885:",
["2155"]="/src/classes/Image.luo:886:",
["2156"]="/src/classes/Image.luo:887:",
["2157"]="/src/classes/Image.luo:888:",
["2158"]="/src/classes/Image.luo:889:",
["2159"]="/src/classes/Image.luo:890:",
["2160"]="/src/classes/Image.luo:891:",
["2161"]="/src/classes/Image.luo:892:",
["2162"]="/src/classes/Image.luo:893:",
["2163"]="/src/classes/Image.luo:894:",
["2164"]="/src/classes/Image.luo:895:",
["2165"]="/src/classes/Image.luo:896:",
["2166"]="/src/classes/Image.luo:897:",
["2167"]="/src/classes/Image.luo:898:",
["2168"]="/src/classes/Image.luo:899:",
["2169"]="/src/classes/Image.luo:900:",
["2170"]="/src/classes/Image.luo:901:",
["2171"]="/src/classes/Image.luo:902:",
["2172"]="/src/classes/Image.luo:903:",
["2173"]="/src/classes/Image.luo:904:",
["2174"]="/src/classes/Image.luo:905:",
["2175"]="/src/classes/Image.luo:906:",
["2176"]="/src/classes/Image.luo:907:",
["2177"]="/src/classes/Image.luo:908:",
["2178"]="/src/classes/Image.luo:909:",
["2179"]="/src/classes/Image.luo:910:",
["2180"]="/src/classes/Image.luo:911:",
["2181"]="/src/classes/Image.luo:912:",
["2182"]="/src/classes/Image.luo:913:",
["2183"]="/src/classes/Image.luo:914:",
["2184"]="/src/classes/Image.luo:915:",
["2185"]="/src/classes/Image.luo:916:",
["2186"]="/src/classes/Image.luo:917:",
["2187"]="/src/classes/Image.luo:918:",
["2188"]="/src/classes/Image.luo:919:",
["2189"]="/src/classes/Image.luo:920:",
["2190"]="/src/classes/Image.luo:921:",
["2191"]="/src/classes/Image.luo:922:",
["2192"]="/src/classes/Image.luo:923:",
["2193"]="/src/classes/Image.luo:924:",
["2194"]="/src/classes/Image.luo:925:",
["2195"]="/src/classes/Image.luo:926:",
["2196"]="/src/classes/Image.luo:927:",
["2197"]="/src/classes/Image.luo:928:",
["2198"]="/src/classes/Image.luo:929:",
["2199"]="/src/classes/Image.luo:930:",
["2200"]="/src/classes/Image.luo:931:",
["2201"]="/src/classes/Image.luo:932:",
["2202"]="/src/classes/Image.luo:933:",
["2203"]="/src/classes/Image.luo:934:",
["2204"]="/src/classes/Image.luo:935:",
["2205"]="/src/classes/Image.luo:936:",
["2206"]="/src/classes/Image.luo:937:",
["2207"]="/src/classes/Image.luo:938:",
["2208"]="/src/classes/Image.luo:939:",
["2209"]="/src/classes/Image.luo:940:",
["2210"]="/src/classes/Image.luo:941:",
["2211"]="/src/classes/Image.luo:942:",
["2212"]="/src/classes/Image.luo:943:",
["2213"]="/src/classes/Image.luo:944:",
["2214"]="/src/classes/Image.luo:945:",
["2215"]="/src/classes/Image.luo:946:",
["2216"]="/src/classes/Image.luo:947:",
["2217"]="/src/classes/Image.luo:948:",
["2218"]="/src/classes/Image.luo:949:",
["2219"]="/src/classes/Image.luo:950:",
["2220"]="/src/classes/Image.luo:951:",
["2221"]="/src/classes/Image.luo:952:",
["2222"]="/src/classes/Image.luo:953:",
["2223"]="/src/classes/Image.luo:954:",
["2224"]="/src/classes/Image.luo:955:",
["2225"]="/src/classes/Image.luo:956:",
["2226"]="/src/classes/Image.luo:957:",
["2227"]="/src/classes/Image.luo:958:",
["2228"]="/src/classes/Image.luo:959:",
["2229"]="/src/classes/Image.luo:960:",
["2230"]="/src/classes/Image.luo:961:",
["2231"]="/src/classes/Image.luo:962:",
["2232"]="/src/classes/Image.luo:963:",
["2233"]="/src/classes/Image.luo:964:",
["2234"]="/src/classes/Image.luo:965:",
["2235"]="/src/classes/Image.luo:966:",
["2236"]="/src/classes/Image.luo:967:",
["2237"]="/src/classes/Image.luo:968:",
["2238"]="/src/classes/Image.luo:969:",
["2239"]="/src/classes/Image.luo:970:",
["2240"]="/src/classes/Image.luo:971:",
["2241"]="/src/classes/Image.luo:972:",
["2242"]="/src/classes/Image.luo:973:",
["2243"]="/src/classes/Image.luo:974:",
["2244"]="/src/classes/Image.luo:975:",
["2245"]="/src/classes/Image.luo:976:",
["2246"]="/src/classes/Image.luo:977:",
["2247"]="/src/classes/Image.luo:978:",
["2248"]="/src/classes/Image.luo:979:",
["2249"]="/src/classes/Image.luo:980:",
["2250"]="/src/classes/Image.luo:981:",
["2251"]="/src/classes/Image.luo:982:",
["2252"]="/src/classes/Image.luo:983:",
["2253"]="/src/classes/Image.luo:984:",
["2254"]="/src/classes/Image.luo:985:",
["2255"]="/src/classes/Image.luo:986:",
["2256"]="/src/classes/Image.luo:987:",
["2257"]="/src/classes/Image.luo:988:",
["2258"]="/src/classes/Image.luo:989:",
["2259"]="/src/classes/Image.luo:990:",
["2260"]="/src/classes/Image.luo:991:",
["2261"]="/src/classes/Image.luo:992:",
["2262"]="/src/classes/Image.luo:993:",
["2263"]="/src/classes/Image.luo:994:",
["2264"]="/src/classes/Image.luo:995:",
["2265"]="/src/classes/Image.luo:996:",
["2266"]="/src/classes/Image.luo:997:",
["2267"]="/src/classes/Image.luo:998:",
["2268"]="/src/classes/Image.luo:999:",
["2269"]="/src/classes/Image.luo:1000:",
["2270"]="/src/classes/Image.luo:1001:",
["2271"]="/src/classes/Image.luo:1002:",
["2272"]="/src/classes/Image.luo:1003:",
["2273"]="/src/classes/Image.luo:1004:",
["2274"]="/src/classes/Image.luo:1005:",
["2275"]="/src/classes/Image.luo:1006:",
["2276"]="/src/classes/Image.luo:1007:",
["2277"]="/src/classes/Image.luo:1008:",
["2278"]="/src/classes/Image.luo:1009:",
["2279"]="/src/classes/Image.luo:1010:",
["2280"]="/src/classes/Image.luo:1011:",
["2281"]="/src/classes/Image.luo:1012:",
["2282"]="/src/classes/Image.luo:1013:",
["2283"]="/src/classes/Image.luo:1014:",
["2284"]="/src/classes/Image.luo:1015:",
["2285"]="/src/classes/Image.luo:1016:",
["2286"]="/src/classes/Image.luo:1017:",
["2287"]="/src/classes/Image.luo:1018:",
["2288"]="/src/classes/Image.luo:1019:",
["2289"]="/src/classes/Image.luo:1020:",
["2290"]="/src/classes/Image.luo:1021:",
["2291"]="/src/classes/Image.luo:1022:",
["2292"]="/src/classes/Image.luo:1023:",
["2293"]="/src/classes/Image.luo:1024:",
["2294"]="/src/classes/Image.luo:1025:",
["2295"]="/src/classes/Image.luo:1026:",
["2296"]="/src/classes/Image.luo:1027:",
["2297"]="/src/classes/Image.luo:1028:",
["2298"]="/src/classes/Image.luo:1029:",
["2299"]="/src/classes/Image.luo:1030:",
["2300"]="/src/classes/Image.luo:1031:",
["2301"]="/src/classes/Image.luo:1032:",
["2302"]="/src/classes/Image.luo:1033:",
["2303"]="/src/classes/Image.luo:1034:",
["2304"]="/src/classes/Image.luo:1126:",
["2305"]="/src/classes/Image.luo:1127:",
["2306"]="/src/classes/Image.luo:1128:",
["2307"]="/src/classes/Image.luo:1129:",
["2308"]="/src/classes/Image.luo:1130:",
["2309"]="/src/classes/Image.luo:1131:",
["2310"]="/src/classes/Image.luo:1132:",
["2311"]="/src/classes/Image.luo:1133:",
["2312"]="/src/classes/Image.luo:1134:",
["2313"]="/src/classes/Image.luo:1135:",
["2314"]="/src/classes/Image.luo:1136:",
["2315"]="/src/classes/Image.luo:1137:",
["2316"]="/src/classes/Image.luo:1138:",
["2317"]="/src/classes/Image.luo:1139:",
["2318"]="/src/classes/Image.luo:1140:",
["2319"]="/src/classes/Image.luo:1141:",
["2320"]="/src/classes/Image.luo:1142:",
["2321"]="/src/classes/Image.luo:1143:",
["2322"]="/src/classes/Image.luo:1144:",
["2323"]="/src/classes/Image.luo:1145:",
["2324"]="/src/classes/Image.luo:1146:",
["2325"]="/src/classes/Image.luo:1147:",
["2326"]="/src/classes/Image.luo:1148:",
["2327"]="/src/classes/Image.luo:1149:",
["2328"]="/src/classes/Image.luo:1150:",
["2329"]="/src/classes/Image.luo:1151:",
["2330"]="/src/classes/Image.luo:1152:",
["2331"]="/src/classes/Image.luo:1153:",
["2332"]="/src/classes/Image.luo:1154:",
["2333"]="/src/classes/Image.luo:1155:",
["2334"]="/src/classes/Image.luo:1156:",
["2335"]="/src/classes/Image.luo:1157:",
["2336"]="/src/classes/Image.luo:1158:",
["2337"]="/src/classes/Image.luo:1159:",
["2338"]="/src/classes/Image.luo:1160:",
["2339"]="/src/classes/Image.luo:1161:",
["2340"]="/src/classes/Image.luo:1162:",
["2341"]="/src/classes/Image.luo:1163:",
["2342"]="/src/classes/Image.luo:1164:",
["2351"]="/src/classes/Icon.luo:46:",
["2352"]="/src/classes/Icon.luo:47:",
["2353"]="/src/classes/Icon.luo:48:",
["2354"]="/src/classes/Icon.luo:49:",
["2355"]="/src/classes/Icon.luo:50:",
["2356"]="/src/classes/Icon.luo:51:",
["2357"]="/src/classes/Icon.luo:52:",
["2358"]="/src/classes/Icon.luo:53:",
["2359"]="/src/classes/Icon.luo:54:",
["2360"]="/src/classes/Icon.luo:55:",
["2361"]="/src/classes/Icon.luo:56:",
["2362"]="/src/classes/Icon.luo:57:",
["2363"]="/src/classes/Icon.luo:58:",
["2364"]="/src/classes/Icon.luo:59:",
["2365"]="/src/classes/Icon.luo:60:",
["2366"]="/src/classes/Icon.luo:61:",
["2367"]="/src/classes/Icon.luo:62:",
["2368"]="/src/classes/Icon.luo:63:",
["2369"]="/src/classes/Icon.luo:64:",
["2370"]="/src/classes/Icon.luo:65:",
["2371"]="/src/classes/Icon.luo:66:",
["2372"]="/src/classes/Icon.luo:67:",
["2373"]="/src/classes/Icon.luo:68:",
["2374"]="/src/classes/Icon.luo:69:",
["2375"]="/src/classes/Icon.luo:70:",
["2376"]="/src/classes/Icon.luo:71:",
["2377"]="/src/classes/Icon.luo:72:",
["2378"]="/src/classes/Icon.luo:73:",
["2379"]="/src/classes/Icon.luo:74:",
["2380"]="/src/classes/Icon.luo:75:",
["2381"]="/src/classes/Icon.luo:76:",
["2382"]="/src/classes/Icon.luo:77:",
["2383"]="/src/classes/Icon.luo:78:",
["2384"]="/src/classes/Icon.luo:79:",
["2385"]="/src/classes/Icon.luo:80:",
["2386"]="/src/classes/Icon.luo:81:",
["2387"]="/src/classes/Icon.luo:82:",
["2388"]="/src/classes/Icon.luo:83:",
["2389"]="/src/classes/Icon.luo:84:",
["2390"]="/src/classes/Icon.luo:85:",
["2391"]="/src/classes/Icon.luo:86:",
["2392"]="/src/classes/Icon.luo:87:",
["2393"]="/src/classes/Icon.luo:88:",
["2394"]="/src/classes/Icon.luo:89:",
["2395"]="/src/classes/Icon.luo:90:",
["2396"]="/src/classes/Icon.luo:91:",
["2397"]="/src/classes/Icon.luo:92:",
["2398"]="/src/classes/Icon.luo:93:",
["2399"]="/src/classes/Icon.luo:94:",
["2400"]="/src/classes/Icon.luo:95:",
["2401"]="/src/classes/Icon.luo:96:",
["2402"]="/src/classes/Icon.luo:97:",
["2403"]="/src/classes/Icon.luo:98:",
["2404"]="/src/classes/Icon.luo:99:",
["2405"]="/src/classes/Icon.luo:100:",
["2406"]="/src/classes/Icon.luo:101:",
["2407"]="/src/classes/Icon.luo:102:",
["2408"]="/src/classes/Icon.luo:103:",
["2409"]="/src/classes/Icon.luo:104:",
["2410"]="/src/classes/Icon.luo:105:",
["2411"]="/src/classes/Icon.luo:106:",
["2412"]="/src/classes/Icon.luo:107:",
["2413"]="/src/classes/Icon.luo:108:",
["2414"]="/src/classes/Icon.luo:109:",
["2415"]="/src/classes/Icon.luo:110:",
["2416"]="/src/classes/Icon.luo:111:",
["2417"]="/src/classes/Icon.luo:112:",
["2418"]="/src/classes/Icon.luo:113:",
["2419"]="/src/classes/Icon.luo:114:",
["2420"]="/src/classes/Icon.luo:115:",
["2421"]="/src/classes/Icon.luo:116:",
["2422"]="/src/classes/Icon.luo:117:",
["2423"]="/src/classes/Icon.luo:118:",
["2424"]="/src/classes/Icon.luo:119:",
["2425"]="/src/classes/Icon.luo:120:",
["2426"]="/src/classes/Icon.luo:121:",
["2427"]="/src/classes/Icon.luo:122:",
["2428"]="/src/classes/Icon.luo:123:",
["2429"]="/src/classes/Icon.luo:124:",
["2430"]="/src/classes/Icon.luo:125:",
["2431"]="/src/classes/Icon.luo:126:",
["2432"]="/src/classes/Icon.luo:127:",
["2433"]="/src/classes/Icon.luo:128:",
["2434"]="/src/classes/Icon.luo:129:",
["2435"]="/src/classes/Icon.luo:130:",
["2436"]="/src/classes/Icon.luo:131:",
["2437"]="/src/classes/Icon.luo:132:",
["2438"]="/src/classes/Icon.luo:133:",
["2439"]="/src/classes/Icon.luo:134:",
["2440"]="/src/classes/Icon.luo:135:",
["2441"]="/src/classes/Icon.luo:136:",
["2442"]="/src/classes/Icon.luo:137:",
["2443"]="/src/classes/Icon.luo:138:",
["2444"]="/src/classes/Icon.luo:158:",
["2445"]="/src/classes/Icon.luo:159:",
["2446"]="/src/classes/Icon.luo:160:",
["2447"]="/src/classes/Icon.luo:161:",
["2448"]="/src/classes/Icon.luo:162:",
["2449"]="/src/classes/Icon.luo:154:",
["2450"]="/src/classes/Icon.luo:155:",
["2451"]="/src/classes/Icon.luo:156:",
["2452"]="/src/classes/Icon.luo:143:",
["2453"]="/src/classes/Icon.luo:144:",
["2454"]="/src/classes/Icon.luo:145:",
["2455"]="/src/classes/Icon.luo:147:",
["2456"]="/src/classes/Icon.luo:148:",
["2457"]="/src/classes/Icon.luo:149:",
["2458"]="/src/classes/Icon.luo:150:",
["2459"]="/src/classes/Icon.luo:151:",
["2460"]="/src/classes/Icon.luo:152:",
["2463"]="/src/classes/Icon.luo:20:",
["2464"]="/src/classes/Icon.luo:21:",
["2465"]="/src/classes/Icon.luo:22:",
["2466"]="/src/classes/Icon.luo:23:",
["2467"]="/src/classes/Icon.luo:24:",
["2468"]="/src/classes/Icon.luo:25:",
["2469"]="/src/classes/Icon.luo:26:",
["2470"]="/src/classes/Icon.luo:27:",
["2471"]="/src/classes/Icon.luo:28:",
["2472"]="/src/classes/Icon.luo:29:",
["2473"]="/src/classes/Icon.luo:30:",
["2474"]="/src/classes/Icon.luo:31:",
["2475"]="/src/classes/Icon.luo:32:",
["2476"]="/src/classes/Icon.luo:33:",
["2477"]="/src/classes/Icon.luo:34:",
["2478"]="/src/classes/Icon.luo:35:",
["2479"]="/src/classes/Icon.luo:36:",
["2480"]="/src/classes/Icon.luo:164:",
["2481"]="/src/classes/Icon.luo:165:",
["2482"]="/src/classes/Icon.luo:166:",
["2483"]="/src/classes/Icon.luo:167:",
["2484"]="/src/classes/Icon.luo:168:",
["2485"]="/src/classes/Icon.luo:169:",
["2486"]="/src/classes/Icon.luo:170:",
["2487"]="/src/classes/Icon.luo:171:",
["2488"]="/src/classes/Icon.luo:172:",
["2489"]="/src/classes/Icon.luo:173:",
["2490"]="/src/classes/Icon.luo:174:",
["2491"]="/src/classes/Icon.luo:175:",
["2492"]="/src/classes/Icon.luo:176:",
["2493"]="/src/classes/Icon.luo:177:",
["2494"]="/src/classes/Icon.luo:178:",
["2495"]="/src/classes/Icon.luo:179:",
["2496"]="/src/classes/Icon.luo:180:",
["2497"]="/src/classes/Icon.luo:181:",
["2498"]="/src/classes/Icon.luo:182:",
["2499"]="/src/classes/Icon.luo:183:",
["2500"]="/src/classes/Icon.luo:184:",
["2501"]="/src/classes/Icon.luo:185:",
["2502"]="/src/classes/Icon.luo:186:",
["2503"]="/src/classes/Icon.luo:187:",
["2504"]="/src/classes/Icon.luo:188:",
["2505"]="/src/classes/Icon.luo:189:",
["2506"]="/src/classes/Icon.luo:190:",
["2507"]="/src/classes/Icon.luo:191:",
["2508"]="/src/classes/Icon.luo:192:",
["2509"]="/src/classes/Icon.luo:193:",
["2520"]="/System/classes/Program Managing/ProgramEnvironment.luo:7:",
["2521"]="/System/classes/Program Managing/ProgramEnvironment.luo:8:",
["2522"]="/System/classes/Program Managing/ProgramEnvironment.luo:9:",
["2523"]="/System/classes/Program Managing/ProgramEnvironment.luo:10:",
["2524"]="/System/classes/Program Managing/ProgramEnvironment.luo:104:",
["2525"]="/System/classes/Program Managing/ProgramEnvironment.luo:105:",
["2526"]="/System/classes/Program Managing/ProgramEnvironment.luo:106:",
["2527"]="/System/classes/Program Managing/ProgramEnvironment.luo:107:",
["2528"]="/System/classes/Program Managing/ProgramEnvironment.luo:108:",
["2529"]="/System/classes/Program Managing/ProgramEnvironment.luo:109:",
["2530"]="/System/classes/Program Managing/ProgramEnvironment.luo:110:",
["2531"]="/System/classes/Program Managing/ProgramEnvironment.luo:111:",
["2532"]="/System/classes/Program Managing/ProgramEnvironment.luo:112:",
["2533"]="/System/classes/Program Managing/ProgramEnvironment.luo:113:",
["2534"]="/System/classes/Program Managing/ProgramEnvironment.luo:114:",
["2535"]="/System/classes/Program Managing/ProgramEnvironment.luo:115:",
["2536"]="/System/classes/Program Managing/ProgramEnvironment.luo:116:",
["2537"]="/System/classes/Program Managing/ProgramEnvironment.luo:117:",
["2538"]="/System/classes/Program Managing/ProgramEnvironment.luo:118:",
["2539"]="/System/classes/Program Managing/ProgramEnvironment.luo:119:",
["2540"]="/System/classes/Program Managing/ProgramEnvironment.luo:120:",
["2541"]="/System/classes/Program Managing/ProgramEnvironment.luo:121:",
["2542"]="/System/classes/Program Managing/ProgramEnvironment.luo:122:",
["2543"]="/System/classes/Program Managing/ProgramEnvironment.luo:123:",
["2544"]="/System/classes/Program Managing/ProgramEnvironment.luo:124:",
["2545"]="/System/classes/Program Managing/ProgramEnvironment.luo:125:",
["2546"]="/System/classes/Program Managing/ProgramEnvironment.luo:126:",
["2547"]="/System/classes/Program Managing/ProgramEnvironment.luo:127:",
["2548"]="/System/classes/Program Managing/ProgramEnvironment.luo:128:",
["2549"]="/System/classes/Program Managing/ProgramEnvironment.luo:129:",
["2550"]="/System/classes/Program Managing/ProgramEnvironment.luo:130:",
["2551"]="/System/classes/Program Managing/ProgramEnvironment.luo:131:",
["2552"]="/System/classes/Program Managing/ProgramEnvironment.luo:132:",
["2553"]="/System/classes/Program Managing/ProgramEnvironment.luo:133:",
["2554"]="/System/classes/Program Managing/ProgramEnvironment.luo:134:",
["2555"]="/System/classes/Program Managing/ProgramEnvironment.luo:135:",
["2556"]="/System/classes/Program Managing/ProgramEnvironment.luo:136:",
["2557"]="/System/classes/Program Managing/ProgramEnvironment.luo:137:",
["2558"]="/System/classes/Program Managing/ProgramEnvironment.luo:138:",
["2559"]="/System/classes/Program Managing/ProgramEnvironment.luo:139:",
["2560"]="/System/classes/Program Managing/ProgramEnvironment.luo:140:",
["2561"]="/System/classes/Program Managing/ProgramEnvironment.luo:141:",
["2562"]="/System/classes/Program Managing/ProgramEnvironment.luo:142:",
["2563"]="/System/classes/Program Managing/ProgramEnvironment.luo:143:",
["2564"]="/System/classes/Program Managing/ProgramEnvironment.luo:144:",
["2565"]="/System/classes/Program Managing/ProgramEnvironment.luo:145:",
["2566"]="/System/classes/Program Managing/ProgramEnvironment.luo:146:",
["2567"]="/System/classes/Program Managing/ProgramEnvironment.luo:147:",
["2568"]="/System/classes/Program Managing/ProgramEnvironment.luo:148:",
["2569"]="/System/classes/Program Managing/ProgramEnvironment.luo:149:",
["2570"]="/System/classes/Program Managing/ProgramEnvironment.luo:150:",
["2571"]="/System/classes/Program Managing/ProgramEnvironment.luo:151:",
["2572"]="/System/classes/Program Managing/ProgramEnvironment.luo:152:",
["2573"]="/System/classes/Program Managing/ProgramEnvironment.luo:153:",
["2574"]="/System/classes/Program Managing/ProgramEnvironment.luo:154:",
["2575"]="/System/classes/Program Managing/ProgramEnvironment.luo:155:",
["2576"]="/System/classes/Program Managing/ProgramEnvironment.luo:156:",
["2577"]="/System/classes/Program Managing/ProgramEnvironment.luo:157:",
["2578"]="/System/classes/Program Managing/ProgramEnvironment.luo:158:",
["2579"]="/System/classes/Program Managing/ProgramEnvironment.luo:159:",
["2580"]="/System/classes/Program Managing/ProgramEnvironment.luo:160:",
["2581"]="/System/classes/Program Managing/ProgramEnvironment.luo:161:",
["2582"]="/System/classes/Program Managing/ProgramEnvironment.luo:162:",
["2583"]="/System/classes/Program Managing/ProgramEnvironment.luo:163:",
["2584"]="/System/classes/Program Managing/ProgramEnvironment.luo:164:",
["2585"]="/System/classes/Program Managing/ProgramEnvironment.luo:165:",
["2586"]="/System/classes/Program Managing/ProgramEnvironment.luo:166:",
["2587"]="/System/classes/Program Managing/ProgramEnvironment.luo:167:",
["2588"]="/System/classes/Program Managing/ProgramEnvironment.luo:168:",
["2589"]="/System/classes/Program Managing/ProgramEnvironment.luo:169:",
["2590"]="/System/classes/Program Managing/ProgramEnvironment.luo:170:",
["2591"]="/System/classes/Program Managing/ProgramEnvironment.luo:171:",
["2592"]="/System/classes/Program Managing/ProgramEnvironment.luo:172:",
["2593"]="/System/classes/Program Managing/ProgramEnvironment.luo:173:",
["2594"]="/System/classes/Program Managing/ProgramEnvironment.luo:174:",
["2595"]="/System/classes/Program Managing/ProgramEnvironment.luo:175:",
["2596"]="/System/classes/Program Managing/ProgramEnvironment.luo:176:",
["2597"]="/System/classes/Program Managing/ProgramEnvironment.luo:177:",
["2598"]="/System/classes/Program Managing/ProgramEnvironment.luo:178:",
["2599"]="/System/classes/Program Managing/ProgramEnvironment.luo:179:",
["2600"]="/System/classes/Program Managing/ProgramEnvironment.luo:180:",
["2601"]="/System/classes/Program Managing/ProgramEnvironment.luo:181:",
["2602"]="/System/classes/Program Managing/ProgramEnvironment.luo:182:",
["2603"]="/System/classes/Program Managing/ProgramEnvironment.luo:183:",
["2604"]="/System/classes/Program Managing/ProgramEnvironment.luo:184:",
["2605"]="/System/classes/Program Managing/ProgramEnvironment.luo:185:",
["2606"]="/System/classes/Program Managing/ProgramEnvironment.luo:186:",
["2607"]="/System/classes/Program Managing/ProgramEnvironment.luo:187:",
["2608"]="/System/classes/Program Managing/ProgramEnvironment.luo:188:",
["2609"]="/System/classes/Program Managing/ProgramEnvironment.luo:189:",
["2610"]="/System/classes/Program Managing/ProgramEnvironment.luo:190:",
["2611"]="/System/classes/Program Managing/ProgramEnvironment.luo:191:",
["2612"]="/System/classes/Program Managing/ProgramEnvironment.luo:192:",
["2613"]="/System/classes/Program Managing/ProgramEnvironment.luo:193:",
["2614"]="/System/classes/Program Managing/ProgramEnvironment.luo:194:",
["2615"]="/System/classes/Program Managing/ProgramEnvironment.luo:195:",
["2616"]="/System/classes/Program Managing/ProgramEnvironment.luo:196:",
["2617"]="/System/classes/Program Managing/ProgramEnvironment.luo:197:",
["2618"]="/System/classes/Program Managing/ProgramEnvironment.luo:198:",
["2619"]="/System/classes/Program Managing/ProgramEnvironment.luo:199:",
["2620"]="/System/classes/Program Managing/ProgramEnvironment.luo:200:",
["2621"]="/System/classes/Program Managing/ProgramEnvironment.luo:201:",
["2622"]="/System/classes/Program Managing/ProgramEnvironment.luo:202:",
["2623"]="/System/classes/Program Managing/ProgramEnvironment.luo:203:",
["2624"]="/System/classes/Program Managing/ProgramEnvironment.luo:204:",
["2625"]="/System/classes/Program Managing/ProgramEnvironment.luo:205:",
["2626"]="/System/classes/Program Managing/ProgramEnvironment.luo:206:",
["2627"]="/System/classes/Program Managing/ProgramEnvironment.luo:207:",
["2628"]="/System/classes/Program Managing/ProgramEnvironment.luo:208:",
["2629"]="/System/classes/Program Managing/ProgramEnvironment.luo:209:",
["2630"]="/System/classes/Program Managing/ProgramEnvironment.luo:210:",
["2631"]="/System/classes/Program Managing/ProgramEnvironment.luo:211:",
["2632"]="/System/classes/Program Managing/ProgramEnvironment.luo:212:",
["2633"]="/System/classes/Program Managing/ProgramEnvironment.luo:213:",
["2634"]="/System/classes/Program Managing/ProgramEnvironment.luo:214:",
["2635"]="/System/classes/Program Managing/ProgramEnvironment.luo:215:",
["2636"]="/System/classes/Program Managing/ProgramEnvironment.luo:216:",
["2637"]="/System/classes/Program Managing/ProgramEnvironment.luo:217:",
["2638"]="/System/classes/Program Managing/ProgramEnvironment.luo:218:",
["2639"]="/System/classes/Program Managing/ProgramEnvironment.luo:219:",
["2640"]="/System/classes/Program Managing/ProgramEnvironment.luo:220:",
["2641"]="/System/classes/Program Managing/ProgramEnvironment.luo:221:",
["2642"]="/System/classes/Program Managing/ProgramEnvironment.luo:222:",
["2643"]="/System/classes/Program Managing/ProgramEnvironment.luo:223:",
["2644"]="/System/classes/Program Managing/ProgramEnvironment.luo:224:",
["2645"]="/System/classes/Program Managing/ProgramEnvironment.luo:225:",
["2646"]="/System/classes/Program Managing/ProgramEnvironment.luo:226:",
["2647"]="/System/classes/Program Managing/ProgramEnvironment.luo:227:",
["2648"]="/System/classes/Program Managing/ProgramEnvironment.luo:228:",
["2649"]="/System/classes/Program Managing/ProgramEnvironment.luo:229:",
["2650"]="/System/classes/Program Managing/ProgramEnvironment.luo:230:",
["2651"]="/System/classes/Program Managing/ProgramEnvironment.luo:231:",
["2652"]="/System/classes/Program Managing/ProgramEnvironment.luo:232:",
["2653"]="/System/classes/Program Managing/ProgramEnvironment.luo:233:",
["2654"]="/System/classes/Program Managing/ProgramEnvironment.luo:234:",
["2655"]="/System/classes/Program Managing/ProgramEnvironment.luo:235:",
["2656"]="/System/classes/Program Managing/ProgramEnvironment.luo:236:",
["2657"]="/System/classes/Program Managing/ProgramEnvironment.luo:237:",
["2658"]="/System/classes/Program Managing/ProgramEnvironment.luo:238:",
["2659"]="/System/classes/Program Managing/ProgramEnvironment.luo:239:",
["2660"]="/System/classes/Program Managing/ProgramEnvironment.luo:240:",
["2661"]="/System/classes/Program Managing/ProgramEnvironment.luo:241:",
["2662"]="/System/classes/Program Managing/ProgramEnvironment.luo:242:",
["2663"]="/System/classes/Program Managing/ProgramEnvironment.luo:243:",
["2664"]="/System/classes/Program Managing/ProgramEnvironment.luo:244:",
["2665"]="/System/classes/Program Managing/ProgramEnvironment.luo:245:",
["2666"]="/System/classes/Program Managing/ProgramEnvironment.luo:246:",
["2667"]="/System/classes/Program Managing/ProgramEnvironment.luo:247:",
["2668"]="/System/classes/Program Managing/ProgramEnvironment.luo:248:",
["2669"]="/System/classes/Program Managing/ProgramEnvironment.luo:249:",
["2670"]="/System/classes/Program Managing/ProgramEnvironment.luo:250:",
["2671"]="/System/classes/Program Managing/ProgramEnvironment.luo:251:",
["2672"]="/System/classes/Program Managing/ProgramEnvironment.luo:252:",
["2673"]="/System/classes/Program Managing/ProgramEnvironment.luo:253:",
["2674"]="/System/classes/Program Managing/ProgramEnvironment.luo:254:",
["2675"]="/System/classes/Program Managing/ProgramEnvironment.luo:255:",
["2676"]="/System/classes/Program Managing/ProgramEnvironment.luo:256:",
["2677"]="/System/classes/Program Managing/ProgramEnvironment.luo:257:",
["2678"]="/System/classes/Program Managing/ProgramEnvironment.luo:258:",
["2679"]="/System/classes/Program Managing/ProgramEnvironment.luo:259:",
["2680"]="/System/classes/Program Managing/ProgramEnvironment.luo:260:",
["2681"]="/System/classes/Program Managing/ProgramEnvironment.luo:261:",
["2682"]="/System/classes/Program Managing/ProgramEnvironment.luo:262:",
["2683"]="/System/classes/Program Managing/ProgramEnvironment.luo:263:",
["2684"]="/System/classes/Program Managing/ProgramEnvironment.luo:264:",
["2685"]="/System/classes/Program Managing/ProgramEnvironment.luo:265:",
["2686"]="/System/classes/Program Managing/ProgramEnvironment.luo:266:",
["2687"]="/System/classes/Program Managing/ProgramEnvironment.luo:267:",
["2688"]="/System/classes/Program Managing/ProgramEnvironment.luo:268:",
["2689"]="/System/classes/Program Managing/ProgramEnvironment.luo:269:",
["2690"]="/System/classes/Program Managing/ProgramEnvironment.luo:270:",
["2691"]="/System/classes/Program Managing/ProgramEnvironment.luo:271:",
["2692"]="/System/classes/Program Managing/ProgramEnvironment.luo:272:",
["2693"]="/System/classes/Program Managing/ProgramEnvironment.luo:273:",
["2694"]="/System/classes/Program Managing/ProgramEnvironment.luo:274:",
["2695"]="/System/classes/Program Managing/ProgramEnvironment.luo:275:",
["2696"]="/System/classes/Program Managing/ProgramEnvironment.luo:276:",
["2697"]="/System/classes/Program Managing/ProgramEnvironment.luo:277:",
["2698"]="/System/classes/Program Managing/ProgramEnvironment.luo:278:",
["2699"]="/System/classes/Program Managing/ProgramEnvironment.luo:279:",
["2700"]="/System/classes/Program Managing/ProgramEnvironment.luo:280:",
["2701"]="/System/classes/Program Managing/ProgramEnvironment.luo:281:",
["2702"]="/System/classes/Program Managing/ProgramEnvironment.luo:282:",
["2703"]="/System/classes/Program Managing/ProgramEnvironment.luo:283:",
["2704"]="/System/classes/Program Managing/ProgramEnvironment.luo:284:",
["2705"]="/System/classes/Program Managing/ProgramEnvironment.luo:285:",
["2706"]="/System/classes/Program Managing/ProgramEnvironment.luo:286:",
["2707"]="/System/classes/Program Managing/ProgramEnvironment.luo:12:",
["2708"]="/System/classes/Program Managing/ProgramEnvironment.luo:13:",
["2709"]="/System/classes/Program Managing/ProgramEnvironment.luo:14:",
["2710"]="/System/classes/Program Managing/ProgramEnvironment.luo:15:",
["2711"]="/System/classes/Program Managing/ProgramEnvironment.luo:16:",
["2712"]="/System/classes/Program Managing/ProgramEnvironment.luo:17:",
["2713"]="/System/classes/Program Managing/ProgramEnvironment.luo:18:",
["2714"]="/System/classes/Program Managing/ProgramEnvironment.luo:19:",
["2715"]="/System/classes/Program Managing/ProgramEnvironment.luo:20:",
["2716"]="/System/classes/Program Managing/ProgramEnvironment.luo:21:",
["2717"]="/System/classes/Program Managing/ProgramEnvironment.luo:22:",
["2718"]="/System/classes/Program Managing/ProgramEnvironment.luo:23:",
["2719"]="/System/classes/Program Managing/ProgramEnvironment.luo:24:",
["2720"]="/System/classes/Program Managing/ProgramEnvironment.luo:25:",
["2721"]="/System/classes/Program Managing/ProgramEnvironment.luo:26:",
["2722"]="/System/classes/Program Managing/ProgramEnvironment.luo:27:",
["2723"]="/System/classes/Program Managing/ProgramEnvironment.luo:28:",
["2724"]="/System/classes/Program Managing/ProgramEnvironment.luo:29:",
["2725"]="/System/classes/Program Managing/ProgramEnvironment.luo:30:",
["2726"]="/System/classes/Program Managing/ProgramEnvironment.luo:31:",
["2727"]="/System/classes/Program Managing/ProgramEnvironment.luo:32:",
["2728"]="/System/classes/Program Managing/ProgramEnvironment.luo:33:",
["2729"]="/System/classes/Program Managing/ProgramEnvironment.luo:34:",
["2730"]="/System/classes/Program Managing/ProgramEnvironment.luo:35:",
["2731"]="/System/classes/Program Managing/ProgramEnvironment.luo:36:",
["2732"]="/System/classes/Program Managing/ProgramEnvironment.luo:37:",
["2733"]="/System/classes/Program Managing/ProgramEnvironment.luo:38:",
["2734"]="/System/classes/Program Managing/ProgramEnvironment.luo:39:",
["2735"]="/System/classes/Program Managing/ProgramEnvironment.luo:40:",
["2736"]="/System/classes/Program Managing/ProgramEnvironment.luo:41:",
["2737"]="/System/classes/Program Managing/ProgramEnvironment.luo:42:",
["2738"]="/System/classes/Program Managing/ProgramEnvironment.luo:43:",
["2739"]="/System/classes/Program Managing/ProgramEnvironment.luo:44:",
["2740"]="/System/classes/Program Managing/ProgramEnvironment.luo:45:",
["2741"]="/System/classes/Program Managing/ProgramEnvironment.luo:46:",
["2742"]="/System/classes/Program Managing/ProgramEnvironment.luo:47:",
["2743"]="/System/classes/Program Managing/ProgramEnvironment.luo:48:",
["2744"]="/System/classes/Program Managing/ProgramEnvironment.luo:49:",
["2745"]="/System/classes/Program Managing/ProgramEnvironment.luo:50:",
["2746"]="/System/classes/Program Managing/ProgramEnvironment.luo:51:",
["2747"]="/System/classes/Program Managing/ProgramEnvironment.luo:52:",
["2748"]="/System/classes/Program Managing/ProgramEnvironment.luo:53:",
["2749"]="/System/classes/Program Managing/ProgramEnvironment.luo:54:",
["2750"]="/System/classes/Program Managing/ProgramEnvironment.luo:55:",
["2751"]="/System/classes/Program Managing/ProgramEnvironment.luo:56:",
["2752"]="/System/classes/Program Managing/ProgramEnvironment.luo:57:",
["2753"]="/System/classes/Program Managing/ProgramEnvironment.luo:58:",
["2754"]="/System/classes/Program Managing/ProgramEnvironment.luo:59:",
["2755"]="/System/classes/Program Managing/ProgramEnvironment.luo:60:",
["2756"]="/System/classes/Program Managing/ProgramEnvironment.luo:61:",
["2757"]="/System/classes/Program Managing/ProgramEnvironment.luo:62:",
["2758"]="/System/classes/Program Managing/ProgramEnvironment.luo:63:",
["2759"]="/System/classes/Program Managing/ProgramEnvironment.luo:64:",
["2760"]="/System/classes/Program Managing/ProgramEnvironment.luo:65:",
["2761"]="/System/classes/Program Managing/ProgramEnvironment.luo:66:",
["2762"]="/System/classes/Program Managing/ProgramEnvironment.luo:67:",
["2763"]="/System/classes/Program Managing/ProgramEnvironment.luo:68:",
["2764"]="/System/classes/Program Managing/ProgramEnvironment.luo:69:",
["2765"]="/System/classes/Program Managing/ProgramEnvironment.luo:70:",
["2766"]="/System/classes/Program Managing/ProgramEnvironment.luo:71:",
["2767"]="/System/classes/Program Managing/ProgramEnvironment.luo:72:",
["2768"]="/System/classes/Program Managing/ProgramEnvironment.luo:73:",
["2769"]="/System/classes/Program Managing/ProgramEnvironment.luo:74:",
["2770"]="/System/classes/Program Managing/ProgramEnvironment.luo:75:",
["2771"]="/System/classes/Program Managing/ProgramEnvironment.luo:76:",
["2772"]="/System/classes/Program Managing/ProgramEnvironment.luo:77:",
["2773"]="/System/classes/Program Managing/ProgramEnvironment.luo:78:",
["2774"]="/System/classes/Program Managing/ProgramEnvironment.luo:79:",
["2775"]="/System/classes/Program Managing/ProgramEnvironment.luo:80:",
["2776"]="/System/classes/Program Managing/ProgramEnvironment.luo:81:",
["2777"]="/System/classes/Program Managing/ProgramEnvironment.luo:82:",
["2778"]="/System/classes/Program Managing/ProgramEnvironment.luo:83:",
["2779"]="/System/classes/Program Managing/ProgramEnvironment.luo:84:",
["2780"]="/System/classes/Program Managing/ProgramEnvironment.luo:85:",
["2781"]="/System/classes/Program Managing/ProgramEnvironment.luo:86:",
["2782"]="/System/classes/Program Managing/ProgramEnvironment.luo:87:",
["2783"]="/System/classes/Program Managing/ProgramEnvironment.luo:88:",
["2784"]="/System/classes/Program Managing/ProgramEnvironment.luo:89:",
["2785"]="/System/classes/Program Managing/ProgramEnvironment.luo:90:",
["2786"]="/System/classes/Program Managing/ProgramEnvironment.luo:91:",
["2787"]="/System/classes/Program Managing/ProgramEnvironment.luo:92:",
["2788"]="/System/classes/Program Managing/ProgramEnvironment.luo:93:",
["2789"]="/System/classes/Program Managing/ProgramEnvironment.luo:94:",
["2790"]="/System/classes/Program Managing/ProgramEnvironment.luo:95:",
["2791"]="/System/classes/Program Managing/ProgramEnvironment.luo:96:",
["2792"]="/System/classes/Program Managing/ProgramEnvironment.luo:97:",
["2793"]="/System/classes/Program Managing/ProgramEnvironment.luo:98:",
["2794"]="/System/classes/Program Managing/ProgramEnvironment.luo:99:",
["2795"]="/System/classes/Program Managing/ProgramEnvironment.luo:100:",
["2796"]="/System/classes/Program Managing/ProgramEnvironment.luo:101:",
["2797"]="/System/classes/Program Managing/ProgramEnvironment.luo:102:",
["2801"]="/src/classes/Graphics/Canvas.luo:21:",
["2802"]="/src/classes/Graphics/Canvas.luo:22:",
["2803"]="/src/classes/Graphics/Canvas.luo:23:",
["2804"]="/src/classes/Graphics/Canvas.luo:24:",
["2805"]="/src/classes/Graphics/Canvas.luo:25:",
["2806"]="/src/classes/Graphics/Canvas.luo:84:",
["2807"]="/src/classes/Graphics/Canvas.luo:85:",
["2808"]="/src/classes/Graphics/Canvas.luo:86:",
["2809"]="/src/classes/Graphics/Canvas.luo:87:",
["2810"]="/src/classes/Graphics/Canvas.luo:88:",
["2811"]="/src/classes/Graphics/Canvas.luo:89:",
["2812"]="/src/classes/Graphics/Canvas.luo:90:",
["2813"]="/src/classes/Graphics/Canvas.luo:91:",
["2814"]="/src/classes/Graphics/Canvas.luo:92:",
["2815"]="/src/classes/Graphics/Canvas.luo:93:",
["2816"]="/src/classes/Graphics/Canvas.luo:94:",
["2817"]="/src/classes/Graphics/Canvas.luo:95:",
["2818"]="/src/classes/Graphics/Canvas.luo:96:",
["2819"]="/src/classes/Graphics/Canvas.luo:97:",
["2820"]="/src/classes/Graphics/Canvas.luo:98:",
["2821"]="/src/classes/Graphics/Canvas.luo:99:",
["2822"]="/src/classes/Graphics/Canvas.luo:100:",
["2823"]="/src/classes/Graphics/Canvas.luo:101:",
["2824"]="/src/classes/Graphics/Canvas.luo:102:",
["2825"]="/src/classes/Graphics/Canvas.luo:103:",
["2826"]="/src/classes/Graphics/Canvas.luo:104:",
["2827"]="/src/classes/Graphics/Canvas.luo:105:",
["2828"]="/src/classes/Graphics/Canvas.luo:106:",
["2829"]="/src/classes/Graphics/Canvas.luo:107:",
["2830"]="/src/classes/Graphics/Canvas.luo:108:",
["2831"]="/src/classes/Graphics/Canvas.luo:109:",
["2832"]="/src/classes/Graphics/Canvas.luo:110:",
["2833"]="/src/classes/Graphics/Canvas.luo:111:",
["2834"]="/src/classes/Graphics/Canvas.luo:112:",
["2835"]="/src/classes/Graphics/Canvas.luo:113:",
["2836"]="/src/classes/Graphics/Canvas.luo:114:",
["2837"]="/src/classes/Graphics/Canvas.luo:115:",
["2838"]="/src/classes/Graphics/Canvas.luo:116:",
["2839"]="/src/classes/Graphics/Canvas.luo:117:",
["2840"]="/src/classes/Graphics/Canvas.luo:118:",
["2841"]="/src/classes/Graphics/Canvas.luo:119:",
["2842"]="/src/classes/Graphics/Canvas.luo:120:",
["2843"]="/src/classes/Graphics/Canvas.luo:121:",
["2844"]="/src/classes/Graphics/Canvas.luo:122:",
["2845"]="/src/classes/Graphics/Canvas.luo:123:",
["2846"]="/src/classes/Graphics/Canvas.luo:124:",
["2847"]="/src/classes/Graphics/Canvas.luo:125:",
["2848"]="/src/classes/Graphics/Canvas.luo:126:",
["2849"]="/src/classes/Graphics/Canvas.luo:127:",
["2850"]="/src/classes/Graphics/Canvas.luo:128:",
["2851"]="/src/classes/Graphics/Canvas.luo:129:",
["2852"]="/src/classes/Graphics/Canvas.luo:130:",
["2853"]="/src/classes/Graphics/Canvas.luo:131:",
["2854"]="/src/classes/Graphics/Canvas.luo:132:",
["2855"]="/src/classes/Graphics/Canvas.luo:208:",
["2856"]="/src/classes/Graphics/Canvas.luo:209:",
["2857"]="/src/classes/Graphics/Canvas.luo:210:",
["2858"]="/src/classes/Graphics/Canvas.luo:211:",
["2859"]="/src/classes/Graphics/Canvas.luo:212:",
["2860"]="/src/classes/Graphics/Canvas.luo:213:",
["2861"]="/src/classes/Graphics/Canvas.luo:214:",
["2862"]="/src/classes/Graphics/Canvas.luo:215:",
["2863"]="/src/classes/Graphics/Canvas.luo:216:",
["2864"]="/src/classes/Graphics/Canvas.luo:217:",
["2865"]="/src/classes/Graphics/Canvas.luo:218:",
["2866"]="/src/classes/Graphics/Canvas.luo:219:",
["2867"]="/src/classes/Graphics/Canvas.luo:220:",
["2868"]="/src/classes/Graphics/Canvas.luo:221:",
["2869"]="/src/classes/Graphics/Canvas.luo:222:",
["2870"]="/src/classes/Graphics/Canvas.luo:223:",
["2871"]="/src/classes/Graphics/Canvas.luo:137:",
["2872"]="/src/classes/Graphics/Canvas.luo:138:",
["2873"]="/src/classes/Graphics/Canvas.luo:139:",
["2874"]="/src/classes/Graphics/Canvas.luo:140:",
["2875"]="/src/classes/Graphics/Canvas.luo:141:",
["2876"]="/src/classes/Graphics/Canvas.luo:142:",
["2877"]="/src/classes/Graphics/Canvas.luo:143:",
["2878"]="/src/classes/Graphics/Canvas.luo:144:",
["2879"]="/src/classes/Graphics/Canvas.luo:145:",
["2880"]="/src/classes/Graphics/Canvas.luo:146:",
["2881"]="/src/classes/Graphics/Canvas.luo:147:",
["2882"]="/src/classes/Graphics/Canvas.luo:148:",
["2883"]="/src/classes/Graphics/Canvas.luo:149:",
["2884"]="/src/classes/Graphics/Canvas.luo:150:",
["2885"]="/src/classes/Graphics/Canvas.luo:151:",
["2886"]="/src/classes/Graphics/Canvas.luo:152:",
["2887"]="/src/classes/Graphics/Canvas.luo:153:",
["2888"]="/src/classes/Graphics/Canvas.luo:154:",
["2889"]="/src/classes/Graphics/Canvas.luo:155:",
["2890"]="/src/classes/Graphics/Canvas.luo:156:",
["2891"]="/src/classes/Graphics/Canvas.luo:157:",
["2892"]="/src/classes/Graphics/Canvas.luo:158:",
["2893"]="/src/classes/Graphics/Canvas.luo:159:",
["2894"]="/src/classes/Graphics/Canvas.luo:160:",
["2895"]="/src/classes/Graphics/Canvas.luo:161:",
["2896"]="/src/classes/Graphics/Canvas.luo:162:",
["2897"]="/src/classes/Graphics/Canvas.luo:163:",
["2898"]="/src/classes/Graphics/Canvas.luo:168:",
["2899"]="/src/classes/Graphics/Canvas.luo:169:",
["2900"]="/src/classes/Graphics/Canvas.luo:170:",
["2901"]="/src/classes/Graphics/Canvas.luo:171:",
["2902"]="/src/classes/Graphics/Canvas.luo:172:",
["2903"]="/src/classes/Graphics/Canvas.luo:173:",
["2904"]="/src/classes/Graphics/Canvas.luo:185:",
["2905"]="/src/classes/Graphics/Canvas.luo:186:",
["2906"]="/src/classes/Graphics/Canvas.luo:187:",
["2907"]="/src/classes/Graphics/Canvas.luo:188:",
["2908"]="/src/classes/Graphics/Canvas.luo:189:",
["2909"]="/src/classes/Graphics/Canvas.luo:190:",
["2910"]="/src/classes/Graphics/Canvas.luo:191:",
["2911"]="/src/classes/Graphics/Canvas.luo:192:",
["2912"]="/src/classes/Graphics/Canvas.luo:193:",
["2913"]="/src/classes/Graphics/Canvas.luo:194:",
["2914"]="/src/classes/Graphics/Canvas.luo:195:",
["2915"]="/src/classes/Graphics/Canvas.luo:196:",
["2916"]="/src/classes/Graphics/Canvas.luo:197:",
["2917"]="/src/classes/Graphics/Canvas.luo:198:",
["2918"]="/src/classes/Graphics/Canvas.luo:199:",
["2919"]="/src/classes/Graphics/Canvas.luo:200:",
["2920"]="/src/classes/Graphics/Canvas.luo:201:",
["2921"]="/src/classes/Graphics/Canvas.luo:202:",
["2922"]="/src/classes/Graphics/Canvas.luo:203:",
["2923"]="/src/classes/Graphics/Canvas.luo:178:",
["2924"]="/src/classes/Graphics/Canvas.luo:179:",
["2925"]="/src/classes/Graphics/Canvas.luo:180:",
["2926"]="/src/classes/Graphics/Canvas.luo:66:",
["2927"]="/src/classes/Graphics/Canvas.luo:67:",
["2928"]="/src/classes/Graphics/Canvas.luo:68:",
["2929"]="/src/classes/Graphics/Canvas.luo:69:",
["2930"]="/src/classes/Graphics/Canvas.luo:70:",
["2931"]="/src/classes/Graphics/Canvas.luo:71:",
["2932"]="/src/classes/Graphics/Canvas.luo:72:",
["2933"]="/src/classes/Graphics/Canvas.luo:73:",
["2934"]="/src/classes/Graphics/Canvas.luo:74:",
["2935"]="/src/classes/Graphics/Canvas.luo:75:",
["2936"]="/src/classes/Graphics/Canvas.luo:76:",
["2937"]="/src/classes/Graphics/Canvas.luo:77:",
["2938"]="/src/classes/Graphics/Canvas.luo:78:",
["2939"]="/src/classes/Graphics/Canvas.luo:79:",
["2940"]="/src/classes/Graphics/Canvas.luo:50:",
["2941"]="/src/classes/Graphics/Canvas.luo:51:",
["2942"]="/src/classes/Graphics/Canvas.luo:52:",
["2943"]="/src/classes/Graphics/Canvas.luo:58:",
["2944"]="/src/classes/Graphics/Canvas.luo:59:",
["2945"]="/src/classes/Graphics/Canvas.luo:60:",
["2946"]="/src/classes/Graphics/Canvas.luo:61:",
["2966"]="/src/classes/Graphics/ScaleableCanvas.luo:9:",
["2967"]="/src/classes/Graphics/ScaleableCanvas.luo:10:",
["2968"]="/src/classes/Graphics/ScaleableCanvas.luo:11:",
["2969"]="/src/classes/Graphics/ScaleableCanvas.luo:12:",
["2970"]="/src/classes/Graphics/ScaleableCanvas.luo:13:",
["2971"]="/src/classes/Graphics/ScaleableCanvas.luo:69:",
["2972"]="/src/classes/Graphics/ScaleableCanvas.luo:70:",
["2973"]="/src/classes/Graphics/ScaleableCanvas.luo:71:",
["2974"]="/src/classes/Graphics/ScaleableCanvas.luo:72:",
["2975"]="/src/classes/Graphics/ScaleableCanvas.luo:73:",
["2976"]="/src/classes/Graphics/ScaleableCanvas.luo:74:",
["2977"]="/src/classes/Graphics/ScaleableCanvas.luo:75:",
["2978"]="/src/classes/Graphics/ScaleableCanvas.luo:76:",
["2979"]="/src/classes/Graphics/ScaleableCanvas.luo:77:",
["2980"]="/src/classes/Graphics/ScaleableCanvas.luo:78:",
["2981"]="/src/classes/Graphics/ScaleableCanvas.luo:79:",
["2982"]="/src/classes/Graphics/ScaleableCanvas.luo:80:",
["2983"]="/src/classes/Graphics/ScaleableCanvas.luo:81:",
["2984"]="/src/classes/Graphics/ScaleableCanvas.luo:82:",
["2985"]="/src/classes/Graphics/ScaleableCanvas.luo:83:",
["2986"]="/src/classes/Graphics/ScaleableCanvas.luo:84:",
["2987"]="/src/classes/Graphics/ScaleableCanvas.luo:85:",
["2988"]="/src/classes/Graphics/ScaleableCanvas.luo:86:",
["2989"]="/src/classes/Graphics/ScaleableCanvas.luo:87:",
["2990"]="/src/classes/Graphics/ScaleableCanvas.luo:88:",
["2991"]="/src/classes/Graphics/ScaleableCanvas.luo:89:",
["2992"]="/src/classes/Graphics/ScaleableCanvas.luo:90:",
["2993"]="/src/classes/Graphics/ScaleableCanvas.luo:91:",
["2994"]="/src/classes/Graphics/ScaleableCanvas.luo:92:",
["2995"]="/src/classes/Graphics/ScaleableCanvas.luo:93:",
["2996"]="/src/classes/Graphics/ScaleableCanvas.luo:94:",
["2997"]="/src/classes/Graphics/ScaleableCanvas.luo:95:",
["2998"]="/src/classes/Graphics/ScaleableCanvas.luo:96:",
["2999"]="/src/classes/Graphics/ScaleableCanvas.luo:97:",
["3000"]="/src/classes/Graphics/ScaleableCanvas.luo:98:",
["3001"]="/src/classes/Graphics/ScaleableCanvas.luo:99:",
["3002"]="/src/classes/Graphics/ScaleableCanvas.luo:100:",
["3003"]="/src/classes/Graphics/ScaleableCanvas.luo:101:",
["3004"]="/src/classes/Graphics/ScaleableCanvas.luo:102:",
["3005"]="/src/classes/Graphics/ScaleableCanvas.luo:103:",
["3006"]="/src/classes/Graphics/ScaleableCanvas.luo:104:",
["3007"]="/src/classes/Graphics/ScaleableCanvas.luo:105:",
["3008"]="/src/classes/Graphics/ScaleableCanvas.luo:106:",
["3009"]="/src/classes/Graphics/ScaleableCanvas.luo:107:",
["3010"]="/src/classes/Graphics/ScaleableCanvas.luo:108:",
["3011"]="/src/classes/Graphics/ScaleableCanvas.luo:43:",
["3012"]="/src/classes/Graphics/ScaleableCanvas.luo:44:",
["3013"]="/src/classes/Graphics/ScaleableCanvas.luo:45:",
["3014"]="/src/classes/Graphics/ScaleableCanvas.luo:51:",
["3015"]="/src/classes/Graphics/ScaleableCanvas.luo:52:",
["3016"]="/src/classes/Graphics/ScaleableCanvas.luo:53:",
["3017"]="/src/classes/Graphics/ScaleableCanvas.luo:54:",
["3018"]="/src/classes/Graphics/ScaleableCanvas.luo:55:",
["3019"]="/src/classes/Graphics/ScaleableCanvas.luo:56:",
["3020"]="/src/classes/Graphics/ScaleableCanvas.luo:57:",
["3021"]="/src/classes/Graphics/ScaleableCanvas.luo:58:",
["3022"]="/src/classes/Graphics/ScaleableCanvas.luo:59:",
["3023"]="/src/classes/Graphics/ScaleableCanvas.luo:60:",
["3024"]="/src/classes/Graphics/ScaleableCanvas.luo:61:",
["3025"]="/src/classes/Graphics/ScaleableCanvas.luo:62:",
["3026"]="/src/classes/Graphics/ScaleableCanvas.luo:63:",
["3027"]="/src/classes/Graphics/ScaleableCanvas.luo:64:",
["3051"]="/src/classes/Cursors/BridgedCursor.luo:33:",
["3052"]="/src/classes/Cursors/BridgedCursor.luo:34:",
["3053"]="/src/classes/Cursors/BridgedCursor.luo:35:",
["3054"]="/src/classes/Cursors/BridgedCursor.luo:36:",
["3055"]="/src/classes/Cursors/BridgedCursor.luo:37:",
["3056"]="/src/classes/Cursors/BridgedCursor.luo:38:",
["3057"]="/src/classes/Cursors/BridgedCursor.luo:39:",
["3058"]="/src/classes/Cursors/BridgedCursor.luo:40:",
["3059"]="/src/classes/Cursors/BridgedCursor.luo:15:",
["3060"]="/src/classes/Cursors/BridgedCursor.luo:16:",
["3061"]="/src/classes/Cursors/BridgedCursor.luo:18:",
["3062"]="/src/classes/Cursors/BridgedCursor.luo:19:",
["3063"]="/src/classes/Cursors/BridgedCursor.luo:20:",
["3064"]="/src/classes/Cursors/BridgedCursor.luo:21:",
["3065"]="/src/classes/Cursors/BridgedCursor.luo:22:",
["3066"]="/src/classes/Cursors/BridgedCursor.luo:23:",
["3067"]="/src/classes/Cursors/BridgedCursor.luo:24:",
["3068"]="/src/classes/Cursors/BridgedCursor.luo:25:",
["3069"]="/src/classes/Cursors/BridgedCursor.luo:26:",
["3070"]="/src/classes/Cursors/BridgedCursor.luo:27:",
["3071"]="/src/classes/Cursors/BridgedCursor.luo:28:",
["3072"]="/src/classes/Cursors/BridgedCursor.luo:29:",
["3073"]="/src/classes/Cursors/BridgedCursor.luo:30:",
["3074"]="/src/classes/Cursors/BridgedCursor.luo:31:",
["3089"]="/src/classes/Events/Keyboard Events/CharacterEvent.luo:12:",
["3090"]="/src/classes/Events/Keyboard Events/CharacterEvent.luo:13:",
["3091"]="/src/classes/Events/Keyboard Events/CharacterEvent.luo:14:",
["3092"]="/src/classes/Utilities/Document.luo:53:",
["3093"]="/src/classes/Utilities/Document.luo:54:",
["3094"]="/src/classes/Utilities/Document.luo:55:",
["3095"]="/src/classes/Utilities/Document.luo:56:",
["3096"]="/src/classes/Utilities/Document.luo:57:",
["3097"]="/src/classes/Utilities/Document.luo:58:",
["3098"]="/src/classes/Utilities/Document.luo:59:",
["3099"]="/src/classes/Utilities/Document.luo:60:",
["3100"]="/src/classes/Utilities/Document.luo:61:",
["3101"]="/src/classes/Utilities/Document.luo:62:",
["3102"]="/src/classes/Utilities/Document.luo:63:",
["3103"]="/src/classes/Utilities/Document.luo:64:",
["3104"]="/src/classes/Utilities/Document.luo:65:",
["3105"]="/src/classes/Utilities/Document.luo:66:",
["3106"]="/src/classes/Utilities/Document.luo:67:",
["3107"]="/src/classes/Utilities/Document.luo:68:",
["3108"]="/src/classes/Utilities/Document.luo:69:",
["3109"]="/src/classes/Utilities/Document.luo:70:",
["3110"]="/src/classes/Utilities/Document.luo:71:",
["3111"]="/src/classes/Utilities/Document.luo:72:",
["3112"]="/src/classes/Utilities/Document.luo:73:",
["3113"]="/src/classes/Utilities/Document.luo:74:",
["3124"]="/src/classes/Utilities/Document.luo:13:",
["3125"]="/src/classes/Utilities/Document.luo:14:",
["3126"]="/src/classes/Utilities/Document.luo:15:",
["3127"]="/src/classes/Utilities/Document.luo:16:",
["3128"]="/src/classes/Utilities/Document.luo:17:",
["3129"]="/src/classes/Utilities/Document.luo:18:",
["3130"]="/src/classes/Utilities/Document.luo:19:",
["3131"]="/src/classes/Utilities/Document.luo:20:",
["3132"]="/src/classes/Utilities/Document.luo:21:",
["3133"]="/src/classes/Utilities/Document.luo:22:",
["3134"]="/src/classes/Utilities/Document.luo:23:",
["3135"]="/src/classes/Utilities/Document.luo:24:",
["3136"]="/src/classes/Utilities/Document.luo:25:",
["3137"]="/src/classes/Utilities/Document.luo:26:",
["3138"]="/src/classes/Utilities/Document.luo:27:",
["3139"]="/src/classes/Utilities/Document.luo:28:",
["3140"]="/src/classes/Utilities/Document.luo:29:",
["3141"]="/src/classes/Utilities/Document.luo:30:",
["3142"]="/src/classes/Utilities/Document.luo:31:",
["3143"]="/src/classes/Utilities/Document.luo:32:",
["3144"]="/src/classes/Utilities/Document.luo:33:",
["3145"]="/src/classes/Utilities/Document.luo:34:",
["3146"]="/src/classes/Utilities/Document.luo:35:",
["3147"]="/src/classes/Utilities/Document.luo:36:",
["3148"]="/src/classes/Utilities/Document.luo:37:",
["3149"]="/src/classes/Utilities/Document.luo:38:",
["3150"]="/src/classes/Utilities/Document.luo:39:",
["3151"]="/src/classes/Utilities/Document.luo:40:",
["3152"]="/src/classes/Utilities/Document.luo:41:",
["3153"]="/src/classes/Utilities/Document.luo:42:",
["3154"]="/src/classes/Utilities/Document.luo:43:",
["3155"]="/src/classes/Utilities/Document.luo:44:",
["3156"]="/src/classes/Utilities/Document.luo:45:",
["3157"]="/src/classes/Utilities/Document.luo:46:",
["3158"]="/src/classes/Utilities/Document.luo:206:",
["3159"]="/src/classes/Utilities/Document.luo:207:",
["3160"]="/src/classes/Utilities/Document.luo:208:",
["3161"]="/src/classes/Utilities/Document.luo:209:",
["3162"]="/src/classes/Utilities/Document.luo:106:",
["3163"]="/src/classes/Utilities/Document.luo:107:",
["3164"]="/src/classes/Utilities/Document.luo:108:",
["3165"]="/src/classes/Utilities/Document.luo:109:",
["3166"]="/src/classes/Utilities/Document.luo:79:",
["3167"]="/src/classes/Utilities/Document.luo:80:",
["3168"]="/src/classes/Utilities/Document.luo:81:",
["3169"]="/src/classes/Utilities/Document.luo:123:",
["3170"]="/src/classes/Utilities/Document.luo:124:",
["3171"]="/src/classes/Utilities/Document.luo:125:",
["3172"]="/src/classes/Utilities/Document.luo:126:",
["3173"]="/src/classes/Utilities/Document.luo:127:",
["3174"]="/src/classes/Utilities/Document.luo:128:",
["3175"]="/src/classes/Utilities/Document.luo:129:",
["3176"]="/src/classes/Utilities/Document.luo:130:",
["3177"]="/src/classes/Utilities/Document.luo:131:",
["3178"]="/src/classes/Utilities/Document.luo:132:",
["3179"]="/src/classes/Utilities/Document.luo:133:",
["3180"]="/src/classes/Utilities/Document.luo:159:",
["3181"]="/src/classes/Utilities/Document.luo:160:",
["3182"]="/src/classes/Utilities/Document.luo:190:",
["3183"]="/src/classes/Utilities/Document.luo:191:",
["3184"]="/src/classes/Utilities/Document.luo:192:",
["3185"]="/src/classes/Utilities/Document.luo:193:",
["3186"]="/src/classes/Utilities/Document.luo:194:",
["3187"]="/src/classes/Utilities/Document.luo:195:",
["3188"]="/src/classes/Utilities/Document.luo:196:",
["3189"]="/src/classes/Utilities/Document.luo:197:",
["3190"]="/src/classes/Utilities/Document.luo:198:",
["3191"]="/src/classes/Utilities/Document.luo:199:",
["3192"]="/src/classes/Utilities/Document.luo:200:",
["3193"]="/src/classes/Utilities/Document.luo:171:",
["3194"]="/src/classes/Utilities/Document.luo:172:",
["3195"]="/src/classes/Utilities/Document.luo:173:",
["3196"]="/src/classes/Utilities/Document.luo:98:",
["3197"]="/src/classes/Utilities/Document.luo:99:",
["3198"]="/src/classes/Utilities/Document.luo:100:",
["3199"]="/src/classes/Utilities/Document.luo:140:",
["3200"]="/src/classes/Utilities/Document.luo:141:",
["3201"]="/src/classes/Utilities/Document.luo:142:",
["3202"]="/src/classes/Utilities/Document.luo:143:",
["3203"]="/src/classes/Utilities/Document.luo:144:",
["3204"]="/src/classes/Utilities/Document.luo:145:",
["3205"]="/src/classes/Utilities/Document.luo:146:",
["3206"]="/src/classes/Utilities/Document.luo:147:",
["3207"]="/src/classes/Utilities/Document.luo:148:",
["3208"]="/src/classes/Utilities/Document.luo:149:",
["3209"]="/src/classes/Utilities/Document.luo:150:",
["3210"]="/src/classes/Utilities/Document.luo:151:",
["3211"]="/src/classes/Utilities/Document.luo:89:",
["3212"]="/src/classes/Utilities/Document.luo:90:",
["3213"]="/src/classes/Utilities/Document.luo:181:",
["3214"]="/src/classes/Utilities/Document.luo:182:",
["3215"]="/src/classes/Utilities/Document.luo:183:",
["3216"]="/src/classes/Utilities/Document.luo:184:",
["3272"]="/src/classes/Views/Button.luo:21:",
["3273"]="/src/classes/Views/Button.luo:22:",
["3274"]="/src/classes/Views/Button.luo:23:",
["3275"]="/src/classes/Views/Button.luo:24:",
["3276"]="/src/classes/Views/Button.luo:25:",
["3277"]="/src/classes/Views/Button.luo:26:",
["3278"]="/src/classes/Views/Button.luo:27:",
["3279"]="/src/classes/Views/Button.luo:28:",
["3280"]="/src/classes/Views/Button.luo:124:",
["3281"]="/src/classes/Views/Button.luo:125:",
["3282"]="/src/classes/Views/Button.luo:126:",
["3283"]="/src/classes/Views/Button.luo:127:",
["3284"]="/src/classes/Views/Button.luo:128:",
["3285"]="/src/classes/Views/Button.luo:129:",
["3286"]="/src/classes/Views/Button.luo:108:",
["3287"]="/src/classes/Views/Button.luo:109:",
["3288"]="/src/classes/Views/Button.luo:110:",
["3289"]="/src/classes/Views/Button.luo:111:",
["3290"]="/src/classes/Views/Button.luo:112:",
["3291"]="/src/classes/Views/Button.luo:113:",
["3292"]="/src/classes/Views/Button.luo:114:",
["3293"]="/src/classes/Views/Button.luo:115:",
["3294"]="/src/classes/Views/Button.luo:116:",
["3295"]="/src/classes/Views/Button.luo:117:",
["3296"]="/src/classes/Views/Button.luo:136:",
["3297"]="/src/classes/Views/Button.luo:137:",
["3298"]="/src/classes/Views/Button.luo:138:",
["3299"]="/src/classes/Views/Button.luo:139:",
["3300"]="/src/classes/Views/Button.luo:140:",
["3301"]="/src/classes/Views/Button.luo:141:",
["3302"]="/src/classes/Views/Button.luo:30:",
["3303"]="/src/classes/Views/Button.luo:31:",
["3304"]="/src/classes/Views/Button.luo:32:",
["3305"]="/src/classes/Views/Button.luo:33:",
["3306"]="/src/classes/Views/Button.luo:34:",
["3307"]="/src/classes/Views/Button.luo:35:",
["3308"]="/src/classes/Views/Button.luo:36:",
["3309"]="/src/classes/Views/Button.luo:37:",
["3310"]="/src/classes/Views/Button.luo:38:",
["3311"]="/src/classes/Views/Button.luo:39:",
["3312"]="/src/classes/Views/Button.luo:40:",
["3313"]="/src/classes/Views/Button.luo:41:",
["3314"]="/src/classes/Views/Button.luo:42:",
["3315"]="/src/classes/Views/Button.luo:43:",
["3316"]="/src/classes/Views/Button.luo:44:",
["3317"]="/src/classes/Views/Button.luo:45:",
["3318"]="/src/classes/Views/Button.luo:46:",
["3319"]="/src/classes/Views/Button.luo:47:",
["3320"]="/src/classes/Views/Button.luo:48:",
["3321"]="/src/classes/Views/Button.luo:49:",
["3322"]="/src/classes/Views/Button.luo:50:",
["3323"]="/src/classes/Views/Button.luo:51:",
["3324"]="/src/classes/Views/Button.luo:83:",
["3325"]="/src/classes/Views/Button.luo:84:",
["3326"]="/src/classes/Views/Button.luo:85:",
["3327"]="/src/classes/Views/Button.luo:69:",
["3328"]="/src/classes/Views/Button.luo:70:",
["3329"]="/src/classes/Views/Button.luo:71:",
["3330"]="/src/classes/Views/Button.luo:72:",
["3331"]="/src/classes/Views/Button.luo:73:",
["3332"]="/src/classes/Views/Button.luo:74:",
["3333"]="/src/classes/Views/Button.luo:75:",
["3334"]="/src/classes/Views/Button.luo:76:",
["3335"]="/src/classes/Views/Button.luo:77:",
["3336"]="/src/classes/Views/Button.luo:78:",
["3337"]="/src/classes/Views/Button.luo:79:",
["3338"]="/src/classes/Views/Button.luo:80:",
["3339"]="/src/classes/Views/Button.luo:81:",
["3340"]="/src/classes/Views/Button.luo:59:",
["3341"]="/src/classes/Views/Button.luo:60:",
["3342"]="/src/classes/Views/Button.luo:61:",
["3343"]="/src/classes/Views/Button.luo:62:",
["3344"]="/src/classes/Views/Button.luo:63:",
["3345"]="/src/classes/Views/Button.luo:64:",
["3346"]="/src/classes/Views/Button.luo:148:",
["3347"]="/src/classes/Views/Button.luo:149:",
["3348"]="/src/classes/Views/Button.luo:150:",
["3349"]="/src/classes/Views/Button.luo:151:",
["3350"]="/src/classes/Views/Button.luo:152:",
["3351"]="/src/classes/Views/Button.luo:153:",
["3352"]="/src/classes/Views/Button.luo:154:",
["3417"]="/src/classes/Views/SegmentButton.luo:5:",
["3418"]="/src/classes/Views/SegmentButton.luo:6:",
["3419"]="/src/classes/Views/SegmentButton.luo:7:",
["3420"]="/src/classes/Views/SegmentButton.luo:8:",
["3421"]="/src/classes/Views/SegmentButton.luo:9:",
["3422"]="/src/classes/Views/SegmentButton.luo:53:",
["3423"]="/src/classes/Views/SegmentButton.luo:54:",
["3424"]="/src/classes/Views/SegmentButton.luo:55:",
["3425"]="/src/classes/Views/SegmentButton.luo:11:",
["3426"]="/src/classes/Views/SegmentButton.luo:12:",
["3427"]="/src/classes/Views/SegmentButton.luo:13:",
["3428"]="/src/classes/Views/SegmentButton.luo:14:",
["3429"]="/src/classes/Views/SegmentButton.luo:15:",
["3430"]="/src/classes/Views/SegmentButton.luo:16:",
["3431"]="/src/classes/Views/SegmentButton.luo:17:",
["3432"]="/src/classes/Views/SegmentButton.luo:18:",
["3433"]="/src/classes/Views/SegmentButton.luo:19:",
["3434"]="/src/classes/Views/SegmentButton.luo:20:",
["3435"]="/src/classes/Views/SegmentButton.luo:21:",
["3436"]="/src/classes/Views/SegmentButton.luo:22:",
["3437"]="/src/classes/Views/SegmentButton.luo:23:",
["3438"]="/src/classes/Views/SegmentButton.luo:24:",
["3439"]="/src/classes/Views/SegmentButton.luo:25:",
["3440"]="/src/classes/Views/SegmentButton.luo:26:",
["3441"]="/src/classes/Views/SegmentButton.luo:27:",
["3442"]="/src/classes/Views/SegmentButton.luo:28:",
["3443"]="/src/classes/Views/SegmentButton.luo:29:",
["3444"]="/src/classes/Views/SegmentButton.luo:30:",
["3445"]="/src/classes/Views/SegmentButton.luo:31:",
["3446"]="/src/classes/Views/SegmentButton.luo:32:",
["3447"]="/src/classes/Views/SegmentButton.luo:33:",
["3448"]="/src/classes/Views/SegmentButton.luo:34:",
["3449"]="/src/classes/Views/SegmentButton.luo:35:",
["3450"]="/src/classes/Views/SegmentButton.luo:36:",
["3451"]="/src/classes/Views/SegmentButton.luo:37:",
["3452"]="/src/classes/Views/SegmentButton.luo:38:",
["3453"]="/src/classes/Views/SegmentButton.luo:39:",
["3454"]="/src/classes/Views/SegmentButton.luo:40:",
["3455"]="/src/classes/Views/SegmentButton.luo:41:",
["3456"]="/src/classes/Views/SegmentButton.luo:42:",
["3457"]="/src/classes/Views/SegmentButton.luo:43:",
["3460"]="/src/classes/Views/Containers/Container.luo:44:",
["3461"]="/src/classes/Views/Containers/Container.luo:45:",
["3462"]="/src/classes/Views/Containers/Container.luo:46:",
["3463"]="/src/classes/Views/Containers/Container.luo:47:",
["3464"]="/src/classes/Views/Containers/Container.luo:48:",
["3465"]="/src/classes/Views/Containers/Container.luo:49:",
["3466"]="/src/classes/Views/Containers/Container.luo:50:",
["3521"]="/src/classes/Views/Containers/Container.luo:52:",
["3522"]="/src/classes/Views/Containers/Container.luo:53:",
["3523"]="/src/classes/Views/Containers/Container.luo:54:",
["3524"]="/src/classes/Views/Containers/Container.luo:508:",
["3525"]="/src/classes/Views/Containers/Container.luo:509:",
["3526"]="/src/classes/Views/Containers/Container.luo:510:",
["3527"]="/src/classes/Views/Containers/Container.luo:511:",
["3528"]="/src/classes/Views/Containers/Container.luo:512:",
["3529"]="/src/classes/Views/Containers/Container.luo:513:",
["3530"]="/src/classes/Views/Containers/Container.luo:514:",
["3531"]="/src/classes/Views/Containers/Container.luo:515:",
["3532"]="/src/classes/Views/Containers/Container.luo:516:",
["3533"]="/src/classes/Views/Containers/Container.luo:517:",
["3534"]="/src/classes/Views/Containers/Container.luo:518:",
["3535"]="/src/classes/Views/Containers/Container.luo:519:",
["3536"]="/src/classes/Views/Containers/Container.luo:520:",
["3537"]="/src/classes/Views/Containers/Container.luo:521:",
["3538"]="/src/classes/Views/Containers/Container.luo:522:",
["3539"]="/src/classes/Views/Containers/Container.luo:94:",
["3540"]="/src/classes/Views/Containers/Container.luo:95:",
["3541"]="/src/classes/Views/Containers/Container.luo:96:",
["3542"]="/src/classes/Views/Containers/Container.luo:97:",
["3543"]="/src/classes/Views/Containers/Container.luo:98:",
["3544"]="/src/classes/Views/Containers/Container.luo:99:",
["3545"]="/src/classes/Views/Containers/Container.luo:100:",
["3546"]="/src/classes/Views/Containers/Container.luo:101:",
["3547"]="/src/classes/Views/Containers/Container.luo:102:",
["3548"]="/src/classes/Views/Containers/Container.luo:103:",
["3549"]="/src/classes/Views/Containers/Container.luo:104:",
["3550"]="/src/classes/Views/Containers/Container.luo:105:",
["3551"]="/src/classes/Views/Containers/Container.luo:106:",
["3552"]="/src/classes/Views/Containers/Container.luo:107:",
["3553"]="/src/classes/Views/Containers/Container.luo:108:",
["3554"]="/src/classes/Views/Containers/Container.luo:109:",
["3555"]="/src/classes/Views/Containers/Container.luo:110:",
["3556"]="/src/classes/Views/Containers/Container.luo:111:",
["3557"]="/src/classes/Views/Containers/Container.luo:112:",
["3558"]="/src/classes/Views/Containers/Container.luo:113:",
["3559"]="/src/classes/Views/Containers/Container.luo:114:",
["3560"]="/src/classes/Views/Containers/Container.luo:115:",
["3561"]="/src/classes/Views/Containers/Container.luo:116:",
["3562"]="/src/classes/Views/Containers/Container.luo:117:",
["3563"]="/src/classes/Views/Containers/Container.luo:118:",
["3564"]="/src/classes/Views/Containers/Container.luo:119:",
["3565"]="/src/classes/Views/Containers/Container.luo:120:",
["3566"]="/src/classes/Views/Containers/Container.luo:121:",
["3567"]="/src/classes/Views/Containers/Container.luo:122:",
["3568"]="/src/classes/Views/Containers/Container.luo:123:",
["3569"]="/src/classes/Views/Containers/Container.luo:124:",
["3570"]="/src/classes/Views/Containers/Container.luo:125:",
["3571"]="/src/classes/Views/Containers/Container.luo:126:",
["3572"]="/src/classes/Views/Containers/Container.luo:127:",
["3573"]="/src/classes/Views/Containers/Container.luo:128:",
["3574"]="/src/classes/Views/Containers/Container.luo:129:",
["3575"]="/src/classes/Views/Containers/Container.luo:130:",
["3576"]="/src/classes/Views/Containers/Container.luo:131:",
["3577"]="/src/classes/Views/Containers/Container.luo:132:",
["3578"]="/src/classes/Views/Containers/Container.luo:133:",
["3579"]="/src/classes/Views/Containers/Container.luo:134:",
["3580"]="/src/classes/Views/Containers/Container.luo:135:",
["3581"]="/src/classes/Views/Containers/Container.luo:136:",
["3582"]="/src/classes/Views/Containers/Container.luo:137:",
["3583"]="/src/classes/Views/Containers/Container.luo:138:",
["3584"]="/src/classes/Views/Containers/Container.luo:139:",
["3585"]="/src/classes/Views/Containers/Container.luo:140:",
["3586"]="/src/classes/Views/Containers/Container.luo:141:",
["3587"]="/src/classes/Views/Containers/Container.luo:142:",
["3588"]="/src/classes/Views/Containers/Container.luo:143:",
["3589"]="/src/classes/Views/Containers/Container.luo:144:",
["3590"]="/src/classes/Views/Containers/Container.luo:145:",
["3591"]="/src/classes/Views/Containers/Container.luo:146:",
["3592"]="/src/classes/Views/Containers/Container.luo:147:",
["3593"]="/src/classes/Views/Containers/Container.luo:148:",
["3594"]="/src/classes/Views/Containers/Container.luo:149:",
["3595"]="/src/classes/Views/Containers/Container.luo:150:",
["3596"]="/src/classes/Views/Containers/Container.luo:151:",
["3597"]="/src/classes/Views/Containers/Container.luo:152:",
["3598"]="/src/classes/Views/Containers/Container.luo:153:",
["3599"]="/src/classes/Views/Containers/Container.luo:154:",
["3600"]="/src/classes/Views/Containers/Container.luo:155:",
["3601"]="/src/classes/Views/Containers/Container.luo:156:",
["3602"]="/src/classes/Views/Containers/Container.luo:157:",
["3603"]="/src/classes/Views/Containers/Container.luo:158:",
["3604"]="/src/classes/Views/Containers/Container.luo:159:",
["3605"]="/src/classes/Views/Containers/Container.luo:160:",
["3606"]="/src/classes/Views/Containers/Container.luo:161:",
["3607"]="/src/classes/Views/Containers/Container.luo:162:",
["3608"]="/src/classes/Views/Containers/Container.luo:163:",
["3609"]="/src/classes/Views/Containers/Container.luo:164:",
["3610"]="/src/classes/Views/Containers/Container.luo:165:",
["3611"]="/src/classes/Views/Containers/Container.luo:166:",
["3612"]="/src/classes/Views/Containers/Container.luo:167:",
["3613"]="/src/classes/Views/Containers/Container.luo:168:",
["3614"]="/src/classes/Views/Containers/Container.luo:169:",
["3615"]="/src/classes/Views/Containers/Container.luo:170:",
["3616"]="/src/classes/Views/Containers/Container.luo:171:",
["3617"]="/src/classes/Views/Containers/Container.luo:172:",
["3618"]="/src/classes/Views/Containers/Container.luo:173:",
["3619"]="/src/classes/Views/Containers/Container.luo:174:",
["3620"]="/src/classes/Views/Containers/Container.luo:175:",
["3621"]="/src/classes/Views/Containers/Container.luo:176:",
["3622"]="/src/classes/Views/Containers/Container.luo:177:",
["3623"]="/src/classes/Views/Containers/Container.luo:178:",
["3624"]="/src/classes/Views/Containers/Container.luo:179:",
["3625"]="/src/classes/Views/Containers/Container.luo:180:",
["3626"]="/src/classes/Views/Containers/Container.luo:181:",
["3627"]="/src/classes/Views/Containers/Container.luo:182:",
["3628"]="/src/classes/Views/Containers/Container.luo:183:",
["3629"]="/src/classes/Views/Containers/Container.luo:184:",
["3630"]="/src/classes/Views/Containers/Container.luo:185:",
["3631"]="/src/classes/Views/Containers/Container.luo:186:",
["3632"]="/src/classes/Views/Containers/Container.luo:187:",
["3633"]="/src/classes/Views/Containers/Container.luo:188:",
["3634"]="/src/classes/Views/Containers/Container.luo:189:",
["3635"]="/src/classes/Views/Containers/Container.luo:190:",
["3636"]="/src/classes/Views/Containers/Container.luo:191:",
["3637"]="/src/classes/Views/Containers/Container.luo:192:",
["3638"]="/src/classes/Views/Containers/Container.luo:193:",
["3639"]="/src/classes/Views/Containers/Container.luo:194:",
["3640"]="/src/classes/Views/Containers/Container.luo:195:",
["3641"]="/src/classes/Views/Containers/Container.luo:196:",
["3642"]="/src/classes/Views/Containers/Container.luo:197:",
["3643"]="/src/classes/Views/Containers/Container.luo:198:",
["3644"]="/src/classes/Views/Containers/Container.luo:199:",
["3645"]="/src/classes/Views/Containers/Container.luo:200:",
["3646"]="/src/classes/Views/Containers/Container.luo:201:",
["3647"]="/src/classes/Views/Containers/Container.luo:202:",
["3648"]="/src/classes/Views/Containers/Container.luo:203:",
["3649"]="/src/classes/Views/Containers/Container.luo:204:",
["3650"]="/src/classes/Views/Containers/Container.luo:205:",
["3651"]="/src/classes/Views/Containers/Container.luo:416:",
["3652"]="/src/classes/Views/Containers/Container.luo:417:",
["3653"]="/src/classes/Views/Containers/Container.luo:418:",
["3654"]="/src/classes/Views/Containers/Container.luo:419:",
["3655"]="/src/classes/Views/Containers/Container.luo:420:",
["3656"]="/src/classes/Views/Containers/Container.luo:421:",
["3657"]="/src/classes/Views/Containers/Container.luo:422:",
["3658"]="/src/classes/Views/Containers/Container.luo:423:",
["3659"]="/src/classes/Views/Containers/Container.luo:424:",
["3660"]="/src/classes/Views/Containers/Container.luo:425:",
["3661"]="/src/classes/Views/Containers/Container.luo:426:",
["3662"]="/src/classes/Views/Containers/Container.luo:427:",
["3663"]="/src/classes/Views/Containers/Container.luo:428:",
["3664"]="/src/classes/Views/Containers/Container.luo:429:",
["3665"]="/src/classes/Views/Containers/Container.luo:430:",
["3666"]="/src/classes/Views/Containers/Container.luo:431:",
["3667"]="/src/classes/Views/Containers/Container.luo:432:",
["3668"]="/src/classes/Views/Containers/Container.luo:433:",
["3669"]="/src/classes/Views/Containers/Container.luo:434:",
["3670"]="/src/classes/Views/Containers/Container.luo:435:",
["3671"]="/src/classes/Views/Containers/Container.luo:436:",
["3672"]="/src/classes/Views/Containers/Container.luo:437:",
["3673"]="/src/classes/Views/Containers/Container.luo:438:",
["3674"]="/src/classes/Views/Containers/Container.luo:439:",
["3675"]="/src/classes/Views/Containers/Container.luo:440:",
["3676"]="/src/classes/Views/Containers/Container.luo:441:",
["3677"]="/src/classes/Views/Containers/Container.luo:442:",
["3678"]="/src/classes/Views/Containers/Container.luo:332:",
["3679"]="/src/classes/Views/Containers/Container.luo:333:",
["3680"]="/src/classes/Views/Containers/Container.luo:334:",
["3681"]="/src/classes/Views/Containers/Container.luo:335:",
["3682"]="/src/classes/Views/Containers/Container.luo:336:",
["3683"]="/src/classes/Views/Containers/Container.luo:337:",
["3684"]="/src/classes/Views/Containers/Container.luo:338:",
["3685"]="/src/classes/Views/Containers/Container.luo:339:",
["3686"]="/src/classes/Views/Containers/Container.luo:340:",
["3687"]="/src/classes/Views/Containers/Container.luo:341:",
["3688"]="/src/classes/Views/Containers/Container.luo:342:",
["3689"]="/src/classes/Views/Containers/Container.luo:343:",
["3690"]="/src/classes/Views/Containers/Container.luo:344:",
["3691"]="/src/classes/Views/Containers/Container.luo:65:",
["3692"]="/src/classes/Views/Containers/Container.luo:66:",
["3693"]="/src/classes/Views/Containers/Container.luo:67:",
["3694"]="/src/classes/Views/Containers/Container.luo:68:",
["3695"]="/src/classes/Views/Containers/Container.luo:69:",
["3696"]="/src/classes/Views/Containers/Container.luo:70:",
["3697"]="/src/classes/Views/Containers/Container.luo:71:",
["3698"]="/src/classes/Views/Containers/Container.luo:530:",
["3699"]="/src/classes/Views/Containers/Container.luo:531:",
["3700"]="/src/classes/Views/Containers/Container.luo:532:",
["3701"]="/src/classes/Views/Containers/Container.luo:533:",
["3702"]="/src/classes/Views/Containers/Container.luo:534:",
["3703"]="/src/classes/Views/Containers/Container.luo:535:",
["3704"]="/src/classes/Views/Containers/Container.luo:536:",
["3705"]="/src/classes/Views/Containers/Container.luo:537:",
["3706"]="/src/classes/Views/Containers/Container.luo:538:",
["3707"]="/src/classes/Views/Containers/Container.luo:539:",
["3708"]="/src/classes/Views/Containers/Container.luo:540:",
["3709"]="/src/classes/Views/Containers/Container.luo:541:",
["3710"]="/src/classes/Views/Containers/Container.luo:542:",
["3711"]="/src/classes/Views/Containers/Container.luo:543:",
["3712"]="/src/classes/Views/Containers/Container.luo:544:",
["3713"]="/src/classes/Views/Containers/Container.luo:545:",
["3714"]="/src/classes/Views/Containers/Container.luo:546:",
["3715"]="/src/classes/Views/Containers/Container.luo:547:",
["3716"]="/src/classes/Views/Containers/Container.luo:548:",
["3717"]="/src/classes/Views/Containers/Container.luo:56:",
["3718"]="/src/classes/Views/Containers/Container.luo:57:",
["3719"]="/src/classes/Views/Containers/Container.luo:58:",
["3720"]="/src/classes/Views/Containers/Container.luo:59:",
["3721"]="/src/classes/Views/Containers/Container.luo:60:",
["3722"]="/src/classes/Views/Containers/Container.luo:84:",
["3723"]="/src/classes/Views/Containers/Container.luo:85:",
["3724"]="/src/classes/Views/Containers/Container.luo:86:",
["3725"]="/src/classes/Views/Containers/Container.luo:87:",
["3726"]="/src/classes/Views/Containers/Container.luo:88:",
["3727"]="/src/classes/Views/Containers/Container.luo:89:",
["3728"]="/src/classes/Views/Containers/Container.luo:90:",
["3729"]="/src/classes/Views/Containers/Container.luo:91:",
["3730"]="/src/classes/Views/Containers/Container.luo:92:",
["3731"]="/src/classes/Views/Containers/Container.luo:366:",
["3732"]="/src/classes/Views/Containers/Container.luo:367:",
["3733"]="/src/classes/Views/Containers/Container.luo:368:",
["3734"]="/src/classes/Views/Containers/Container.luo:369:",
["3735"]="/src/classes/Views/Containers/Container.luo:370:",
["3736"]="/src/classes/Views/Containers/Container.luo:371:",
["3737"]="/src/classes/Views/Containers/Container.luo:372:",
["3738"]="/src/classes/Views/Containers/Container.luo:373:",
["3739"]="/src/classes/Views/Containers/Container.luo:374:",
["3740"]="/src/classes/Views/Containers/Container.luo:375:",
["3741"]="/src/classes/Views/Containers/Container.luo:376:",
["3742"]="/src/classes/Views/Containers/Container.luo:377:",
["3743"]="/src/classes/Views/Containers/Container.luo:378:",
["3744"]="/src/classes/Views/Containers/Container.luo:379:",
["3745"]="/src/classes/Views/Containers/Container.luo:380:",
["3746"]="/src/classes/Views/Containers/Container.luo:381:",
["3747"]="/src/classes/Views/Containers/Container.luo:382:",
["3748"]="/src/classes/Views/Containers/Container.luo:383:",
["3749"]="/src/classes/Views/Containers/Container.luo:384:",
["3750"]="/src/classes/Views/Containers/Container.luo:385:",
["3751"]="/src/classes/Views/Containers/Container.luo:386:",
["3752"]="/src/classes/Views/Containers/Container.luo:387:",
["3753"]="/src/classes/Views/Containers/Container.luo:388:",
["3754"]="/src/classes/Views/Containers/Container.luo:389:",
["3755"]="/src/classes/Views/Containers/Container.luo:390:",
["3756"]="/src/classes/Views/Containers/Container.luo:391:",
["3757"]="/src/classes/Views/Containers/Container.luo:392:",
["3758"]="/src/classes/Views/Containers/Container.luo:393:",
["3759"]="/src/classes/Views/Containers/Container.luo:394:",
["3760"]="/src/classes/Views/Containers/Container.luo:395:",
["3761"]="/src/classes/Views/Containers/Container.luo:396:",
["3762"]="/src/classes/Views/Containers/Container.luo:397:",
["3763"]="/src/classes/Views/Containers/Container.luo:398:",
["3764"]="/src/classes/Views/Containers/Container.luo:399:",
["3765"]="/src/classes/Views/Containers/Container.luo:400:",
["3766"]="/src/classes/Views/Containers/Container.luo:401:",
["3767"]="/src/classes/Views/Containers/Container.luo:402:",
["3768"]="/src/classes/Views/Containers/Container.luo:403:",
["3769"]="/src/classes/Views/Containers/Container.luo:404:",
["3770"]="/src/classes/Views/Containers/Container.luo:405:",
["3771"]="/src/classes/Views/Containers/Container.luo:406:",
["3772"]="/src/classes/Views/Containers/Container.luo:407:",
["3773"]="/src/classes/Views/Containers/Container.luo:408:",
["3774"]="/src/classes/Views/Containers/Container.luo:409:",
["3775"]="/src/classes/Views/Containers/Container.luo:410:",
["3776"]="/src/classes/Views/Containers/Container.luo:411:",
["3777"]="/src/classes/Views/Containers/Container.luo:25:",
["3778"]="/src/classes/Views/Containers/Container.luo:26:",
["3779"]="/src/classes/Views/Containers/Container.luo:27:",
["3780"]="/src/classes/Views/Containers/Container.luo:28:",
["3781"]="/src/classes/Views/Containers/Container.luo:29:",
["3782"]="/src/classes/Views/Containers/Container.luo:30:",
["3783"]="/src/classes/Views/Containers/Container.luo:31:",
["3784"]="/src/classes/Views/Containers/Container.luo:32:",
["3785"]="/src/classes/Views/Containers/Container.luo:33:",
["3786"]="/src/classes/Views/Containers/Container.luo:34:",
["3787"]="/src/classes/Views/Containers/Container.luo:35:",
["3788"]="/src/classes/Views/Containers/Container.luo:36:",
["3789"]="/src/classes/Views/Containers/Container.luo:305:",
["3790"]="/src/classes/Views/Containers/Container.luo:306:",
["3791"]="/src/classes/Views/Containers/Container.luo:307:",
["3792"]="/src/classes/Views/Containers/Container.luo:308:",
["3793"]="/src/classes/Views/Containers/Container.luo:309:",
["3794"]="/src/classes/Views/Containers/Container.luo:310:",
["3795"]="/src/classes/Views/Containers/Container.luo:311:",
["3796"]="/src/classes/Views/Containers/Container.luo:312:",
["3797"]="/src/classes/Views/Containers/Container.luo:313:",
["3798"]="/src/classes/Views/Containers/Container.luo:314:",
["3799"]="/src/classes/Views/Containers/Container.luo:315:",
["3800"]="/src/classes/Views/Containers/Container.luo:316:",
["3801"]="/src/classes/Views/Containers/Container.luo:317:",
["3802"]="/src/classes/Views/Containers/Container.luo:318:",
["3803"]="/src/classes/Views/Containers/Container.luo:319:",
["3804"]="/src/classes/Views/Containers/Container.luo:320:",
["3805"]="/src/classes/Views/Containers/Container.luo:321:",
["3806"]="/src/classes/Views/Containers/Container.luo:322:",
["3807"]="/src/classes/Views/Containers/Container.luo:447:",
["3808"]="/src/classes/Views/Containers/Container.luo:448:",
["3809"]="/src/classes/Views/Containers/Container.luo:449:",
["3810"]="/src/classes/Views/Containers/Container.luo:450:",
["3811"]="/src/classes/Views/Containers/Container.luo:451:",
["3812"]="/src/classes/Views/Containers/Container.luo:452:",
["3813"]="/src/classes/Views/Containers/Container.luo:221:",
["3814"]="/src/classes/Views/Containers/Container.luo:222:",
["3815"]="/src/classes/Views/Containers/Container.luo:223:",
["3816"]="/src/classes/Views/Containers/Container.luo:224:",
["3817"]="/src/classes/Views/Containers/Container.luo:225:",
["3818"]="/src/classes/Views/Containers/Container.luo:226:",
["3819"]="/src/classes/Views/Containers/Container.luo:227:",
["3820"]="/src/classes/Views/Containers/Container.luo:228:",
["3821"]="/src/classes/Views/Containers/Container.luo:229:",
["3822"]="/src/classes/Views/Containers/Container.luo:230:",
["3823"]="/src/classes/Views/Containers/Container.luo:584:",
["3824"]="/src/classes/Views/Containers/Container.luo:585:",
["3825"]="/src/classes/Views/Containers/Container.luo:586:",
["3826"]="/src/classes/Views/Containers/Container.luo:587:",
["3827"]="/src/classes/Views/Containers/Container.luo:588:",
["3828"]="/src/classes/Views/Containers/Container.luo:589:",
["3829"]="/src/classes/Views/Containers/Container.luo:76:",
["3830"]="/src/classes/Views/Containers/Container.luo:77:",
["3831"]="/src/classes/Views/Containers/Container.luo:78:",
["3832"]="/src/classes/Views/Containers/Container.luo:457:",
["3833"]="/src/classes/Views/Containers/Container.luo:458:",
["3834"]="/src/classes/Views/Containers/Container.luo:459:",
["3835"]="/src/classes/Views/Containers/Container.luo:460:",
["3836"]="/src/classes/Views/Containers/Container.luo:461:",
["3837"]="/src/classes/Views/Containers/Container.luo:462:",
["3838"]="/src/classes/Views/Containers/Container.luo:463:",
["3839"]="/src/classes/Views/Containers/Container.luo:470:",
["3840"]="/src/classes/Views/Containers/Container.luo:471:",
["3841"]="/src/classes/Views/Containers/Container.luo:472:",
["3842"]="/src/classes/Views/Containers/Container.luo:473:",
["3843"]="/src/classes/Views/Containers/Container.luo:474:",
["3844"]="/src/classes/Views/Containers/Container.luo:475:",
["3845"]="/src/classes/Views/Containers/Container.luo:476:",
["3846"]="/src/classes/Views/Containers/Container.luo:477:",
["3847"]="/src/classes/Views/Containers/Container.luo:478:",
["3848"]="/src/classes/Views/Containers/Container.luo:479:",
["3849"]="/src/classes/Views/Containers/Container.luo:480:",
["3850"]="/src/classes/Views/Containers/Container.luo:481:",
["3851"]="/src/classes/Views/Containers/Container.luo:482:",
["3852"]="/src/classes/Views/Containers/Container.luo:483:",
["3853"]="/src/classes/Views/Containers/Container.luo:484:",
["3854"]="/src/classes/Views/Containers/Container.luo:485:",
["3855"]="/src/classes/Views/Containers/Container.luo:486:",
["3856"]="/src/classes/Views/Containers/Container.luo:487:",
["3857"]="/src/classes/Views/Containers/Container.luo:488:",
["3858"]="/src/classes/Views/Containers/Container.luo:489:",
["3859"]="/src/classes/Views/Containers/Container.luo:490:",
["3860"]="/src/classes/Views/Containers/Container.luo:491:",
["3861"]="/src/classes/Views/Containers/Container.luo:492:",
["3862"]="/src/classes/Views/Containers/Container.luo:493:",
["3863"]="/src/classes/Views/Containers/Container.luo:494:",
["3864"]="/src/classes/Views/Containers/Container.luo:495:",
["3865"]="/src/classes/Views/Containers/Container.luo:496:",
["3866"]="/src/classes/Views/Containers/Container.luo:497:",
["3867"]="/src/classes/Views/Containers/Container.luo:498:",
["3868"]="/src/classes/Views/Containers/Container.luo:499:",
["3869"]="/src/classes/Views/Containers/Container.luo:500:",
["3870"]="/src/classes/Views/Containers/Container.luo:550:",
["3871"]="/src/classes/Views/Containers/Container.luo:551:",
["3872"]="/src/classes/Views/Containers/Container.luo:552:",
["3873"]="/src/classes/Views/Containers/Container.luo:553:",
["3874"]="/src/classes/Views/Containers/Container.luo:554:",
["3875"]="/src/classes/Views/Containers/Container.luo:559:",
["3876"]="/src/classes/Views/Containers/Container.luo:560:",
["3877"]="/src/classes/Views/Containers/Container.luo:561:",
["3878"]="/src/classes/Views/Containers/Container.luo:562:",
["3879"]="/src/classes/Views/Containers/Container.luo:563:",
["3880"]="/src/classes/Views/Containers/Container.luo:564:",
["3881"]="/src/classes/Views/Containers/Container.luo:565:",
["3882"]="/src/classes/Views/Containers/Container.luo:566:",
["3883"]="/src/classes/Views/Containers/Container.luo:567:",
["3884"]="/src/classes/Views/Containers/Container.luo:568:",
["3885"]="/src/classes/Views/Containers/Container.luo:569:",
["3886"]="/src/classes/Views/Containers/Container.luo:570:",
["3887"]="/src/classes/Views/Containers/Container.luo:571:",
["3888"]="/src/classes/Views/Containers/Container.luo:572:",
["3889"]="/src/classes/Views/Containers/Container.luo:573:",
["3890"]="/src/classes/Views/Containers/Container.luo:574:",
["3891"]="/src/classes/Views/Containers/Container.luo:575:",
["3892"]="/src/classes/Views/Containers/Container.luo:576:",
["3893"]="/src/classes/Views/Containers/Container.luo:577:",
["3894"]="/src/classes/Views/Containers/Container.luo:578:",
["3895"]="/src/classes/Views/Containers/Container.luo:579:",
["3896"]="/src/classes/Views/Containers/Container.luo:580:",
["3897"]="/src/classes/Views/Containers/Container.luo:581:",
["3898"]="/src/classes/Views/Containers/Container.luo:582:",
["3899"]="/src/classes/Views/Containers/Container.luo:346:",
["3900"]="/src/classes/Views/Containers/Container.luo:347:",
["3901"]="/src/classes/Views/Containers/Container.luo:348:",
["3902"]="/src/classes/Views/Containers/Container.luo:349:",
["3903"]="/src/classes/Views/Containers/Container.luo:350:",
["3904"]="/src/classes/Views/Containers/Container.luo:351:",
["3905"]="/src/classes/Views/Containers/Container.luo:352:",
["3906"]="/src/classes/Views/Containers/Container.luo:353:",
["3907"]="/src/classes/Views/Containers/Container.luo:354:",
["3908"]="/src/classes/Views/Containers/Container.luo:355:",
["3909"]="/src/classes/Views/Containers/Container.luo:356:",
["3910"]="/src/classes/Views/Containers/Container.luo:357:",
["3911"]="/src/classes/Views/Containers/Container.luo:358:",
["3912"]="/src/classes/Views/Containers/Container.luo:235:",
["3913"]="/src/classes/Views/Containers/Container.luo:236:",
["3914"]="/src/classes/Views/Containers/Container.luo:237:",
["3915"]="/src/classes/Views/Containers/Container.luo:238:",
["3916"]="/src/classes/Views/Containers/Container.luo:239:",
["3917"]="/src/classes/Views/Containers/Container.luo:240:",
["3918"]="/src/classes/Views/Containers/Container.luo:241:",
["3919"]="/src/classes/Views/Containers/Container.luo:242:",
["3920"]="/src/classes/Views/Containers/Container.luo:243:",
["3921"]="/src/classes/Views/Containers/Container.luo:244:",
["3922"]="/src/classes/Views/Containers/Container.luo:245:",
["3923"]="/src/classes/Views/Containers/Container.luo:246:",
["3924"]="/src/classes/Views/Containers/Container.luo:247:",
["3925"]="/src/classes/Views/Containers/Container.luo:248:",
["3926"]="/src/classes/Views/Containers/Container.luo:249:",
["3927"]="/src/classes/Views/Containers/Container.luo:250:",
["3928"]="/src/classes/Views/Containers/Container.luo:251:",
["3929"]="/src/classes/Views/Containers/Container.luo:252:",
["3930"]="/src/classes/Views/Containers/Container.luo:253:",
["3931"]="/src/classes/Views/Containers/Container.luo:254:",
["3932"]="/src/classes/Views/Containers/Container.luo:255:",
["3933"]="/src/classes/Views/Containers/Container.luo:256:",
["3934"]="/src/classes/Views/Containers/Container.luo:257:",
["3935"]="/src/classes/Views/Containers/Container.luo:258:",
["3936"]="/src/classes/Views/Containers/Container.luo:259:",
["3937"]="/src/classes/Views/Containers/Container.luo:260:",
["3938"]="/src/classes/Views/Containers/Container.luo:261:",
["3939"]="/src/classes/Views/Containers/Container.luo:262:",
["3940"]="/src/classes/Views/Containers/Container.luo:263:",
["3941"]="/src/classes/Views/Containers/Container.luo:264:",
["3942"]="/src/classes/Views/Containers/Container.luo:265:",
["3943"]="/src/classes/Views/Containers/Container.luo:266:",
["3944"]="/src/classes/Views/Containers/Container.luo:267:",
["3945"]="/src/classes/Views/Containers/Container.luo:268:",
["3946"]="/src/classes/Views/Containers/Container.luo:269:",
["3947"]="/src/classes/Views/Containers/Container.luo:328:",
["3948"]="/src/classes/Views/Containers/Container.luo:329:",
["3949"]="/src/classes/Views/Containers/Container.luo:330:",
["4046"]="/src/classes/Views/Containers/LayoutContainer.luo:8:",
["4047"]="/src/classes/Views/Containers/LayoutContainer.luo:9:",
["4048"]="/src/classes/Views/Containers/LayoutContainer.luo:10:",
["4049"]="/src/classes/Views/Containers/LayoutContainer.luo:11:",
["4050"]="/src/classes/Views/Containers/LayoutContainer.luo:12:",
["4051"]="/src/classes/Views/Containers/LayoutContainer.luo:13:",
["4052"]="/src/classes/Views/Containers/LayoutContainer.luo:15:",
["4053"]="/src/classes/Views/Containers/LayoutContainer.luo:16:",
["4054"]="/src/classes/Views/Containers/LayoutContainer.luo:17:",
["4055"]="/src/classes/Views/Containers/LayoutContainer.luo:45:",
["4056"]="/src/classes/Views/Containers/LayoutContainer.luo:46:",
["4057"]="/src/classes/Views/Containers/LayoutContainer.luo:47:",
["4058"]="/src/classes/Views/Containers/LayoutContainer.luo:40:",
["4059"]="/src/classes/Views/Containers/LayoutContainer.luo:41:",
["4060"]="/src/classes/Views/Containers/LayoutContainer.luo:42:",
["4061"]="/src/classes/Views/Containers/LayoutContainer.luo:43:",
["4062"]="/src/classes/Views/Containers/LayoutContainer.luo:19:",
["4063"]="/src/classes/Views/Containers/LayoutContainer.luo:20:",
["4064"]="/src/classes/Views/Containers/LayoutContainer.luo:21:",
["4065"]="/src/classes/Views/Containers/LayoutContainer.luo:22:",
["4066"]="/src/classes/Views/Containers/LayoutContainer.luo:23:",
["4067"]="/src/classes/Views/Containers/LayoutContainer.luo:24:",
["4068"]="/src/classes/Views/Containers/LayoutContainer.luo:49:",
["4069"]="/src/classes/Views/Containers/LayoutContainer.luo:50:",
["4095"]="/src/classes/Events/Interface Events/MouseExitedInterfaceEvent.luo:9:",
["4096"]="/src/classes/Events/Interface Events/MouseExitedInterfaceEvent.luo:10:",
["4097"]="/src/classes/Events/Interface Events/MouseExitedInterfaceEvent.luo:11:",
["4098"]="/src/classes/Events/Interface Events/MouseExitedInterfaceEvent.luo:12:",
["4113"]="/src/classes/Events/Interface Events/ThemeChangedInterfaceEvent.luo:14:",
["4114"]="/src/classes/Events/Interface Events/ThemeChangedInterfaceEvent.luo:15:",
["4115"]="/src/classes/Events/Interface Events/ThemeChangedInterfaceEvent.luo:16:",
["4116"]="/src/classes/Events/Interface Events/ThemeChangedInterfaceEvent.luo:17:",
["4117"]="/src/classes/File System/FileSystemItem.luo:99:",
["4118"]="/src/classes/File System/FileSystemItem.luo:100:",
["4119"]="/src/classes/File System/FileSystemItem.luo:101:",
["4120"]="/src/classes/File System/FileSystemItem.luo:73:",
["4121"]="/src/classes/File System/FileSystemItem.luo:74:",
["4122"]="/src/classes/File System/FileSystemItem.luo:75:",
["4123"]="/src/classes/File System/FileSystemItem.luo:76:",
["4124"]="/src/classes/File System/FileSystemItem.luo:77:",
["4125"]="/src/classes/File System/FileSystemItem.luo:78:",
["4126"]="/src/classes/File System/FileSystemItem.luo:79:",
["4127"]="/src/classes/File System/FileSystemItem.luo:80:",
["4128"]="/src/classes/File System/FileSystemItem.luo:67:",
["4129"]="/src/classes/File System/FileSystemItem.luo:68:",
["4130"]="/src/classes/File System/FileSystemItem.luo:69:",
["4131"]="/src/classes/File System/FileSystemItem.luo:70:",
["4132"]="/src/classes/File System/FileSystemItem.luo:71:",
["4133"]="/src/classes/File System/FileSystemItem.luo:85:",
["4134"]="/src/classes/File System/FileSystemItem.luo:86:",
["4135"]="/src/classes/File System/FileSystemItem.luo:87:",
["4136"]="/src/classes/File System/FileSystemItem.luo:92:",
["4137"]="/src/classes/File System/FileSystemItem.luo:93:",
["4138"]="/src/classes/File System/FileSystemItem.luo:94:",
["4139"]="/src/classes/File System/FileSystemItem.luo:103:",
["4140"]="/src/classes/File System/FileSystemItem.luo:104:",
["4141"]="/src/classes/File System/FileSystemItem.luo:105:",
["4142"]="/src/classes/File System/FileSystemItem.luo:106:",
["4143"]="/src/classes/File System/FileSystemItem.luo:107:",
["4144"]="/src/classes/File System/FileSystemItem.luo:108:",
["4145"]="/src/classes/File System/FileSystemItem.luo:245:",
["4146"]="/src/classes/File System/FileSystemItem.luo:246:",
["4147"]="/src/classes/File System/FileSystemItem.luo:247:",
["4148"]="/src/classes/File System/FileSystemItem.luo:248:",
["4149"]="/src/classes/File System/FileSystemItem.luo:249:",
["4150"]="/src/classes/File System/FileSystemItem.luo:218:",
["4151"]="/src/classes/File System/FileSystemItem.luo:219:",
["4152"]="/src/classes/File System/FileSystemItem.luo:220:",
["4153"]="/src/classes/File System/FileSystemItem.luo:221:",
["4154"]="/src/classes/File System/FileSystemItem.luo:222:",
["4155"]="/src/classes/File System/FileSystemItem.luo:235:",
["4156"]="/src/classes/File System/FileSystemItem.luo:236:",
["4157"]="/src/classes/File System/FileSystemItem.luo:237:",
["4158"]="/src/classes/File System/FileSystemItem.luo:238:",
["4159"]="/src/classes/File System/FileSystemItem.luo:239:",
["4160"]="/src/classes/File System/FileSystemItem.luo:240:",
["4161"]="/src/classes/File System/FileSystemItem.luo:241:",
["4162"]="/src/classes/File System/FileSystemItem.luo:242:",
["4163"]="/src/classes/File System/FileSystemItem.luo:243:",
["4164"]="/src/classes/File System/FileSystemItem.luo:224:",
["4165"]="/src/classes/File System/FileSystemItem.luo:225:",
["4166"]="/src/classes/File System/FileSystemItem.luo:226:",
["4167"]="/src/classes/File System/FileSystemItem.luo:227:",
["4168"]="/src/classes/File System/FileSystemItem.luo:228:",
["4169"]="/src/classes/File System/FileSystemItem.luo:229:",
["4170"]="/src/classes/File System/FileSystemItem.luo:230:",
["4171"]="/src/classes/File System/FileSystemItem.luo:231:",
["4172"]="/src/classes/File System/FileSystemItem.luo:232:",
["4173"]="/src/classes/File System/FileSystemItem.luo:233:",
["4174"]="/src/classes/File System/FileSystemItem.luo:142:",
["4175"]="/src/classes/File System/FileSystemItem.luo:143:",
["4176"]="/src/classes/File System/FileSystemItem.luo:144:",
["4268"]="/src/classes/File System/File.luo:42:",
["4269"]="/src/classes/File System/File.luo:43:",
["4270"]="/src/classes/File System/File.luo:44:",
["4271"]="/src/classes/File System/File.luo:45:",
["4272"]="/src/classes/File System/File.luo:46:",
["4273"]="/src/classes/File System/File.luo:47:",
["4274"]="/src/classes/File System/File.luo:48:",
["4275"]="/src/classes/File System/File.luo:49:",
["4276"]="/src/classes/File System/File.luo:50:",
["4277"]="/src/classes/File System/File.luo:51:",
["4278"]="/src/classes/File System/File.luo:52:",
["4279"]="/src/classes/File System/File.luo:53:",
["4280"]="/src/classes/File System/File.luo:54:",
["4281"]="/src/classes/File System/File.luo:55:",
["4282"]="/src/classes/File System/File.luo:56:",
["4283"]="/src/classes/File System/File.luo:57:",
["4284"]="/src/classes/File System/File.luo:58:",
["4285"]="/src/classes/File System/File.luo:59:",
["4286"]="/src/classes/File System/File.luo:60:",
["4287"]="/src/classes/File System/File.luo:61:",
["4288"]="/src/classes/File System/File.luo:62:",
["4289"]="/src/classes/File System/File.luo:63:",
["4393"]="/src/classes/Views/Containers/SegmentContainer.luo:10:",
["4394"]="/src/classes/Views/Containers/SegmentContainer.luo:11:",
["4395"]="/src/classes/Views/Containers/SegmentContainer.luo:12:",
["4396"]="/src/classes/Views/Containers/SegmentContainer.luo:13:",
["4397"]="/src/classes/Views/Containers/SegmentContainer.luo:14:",
["4398"]="/src/classes/Views/Containers/SegmentContainer.luo:15:",
["4399"]="/src/classes/Views/Containers/SegmentContainer.luo:16:",
["4400"]="/src/classes/Views/Containers/SegmentContainer.luo:17:",
["4401"]="/src/classes/Views/Containers/SegmentContainer.luo:18:",
["4402"]="/src/classes/Views/Containers/SegmentContainer.luo:19:",
["4403"]="/src/classes/Views/Containers/SegmentContainer.luo:20:",
["4404"]="/src/classes/Views/Containers/SegmentContainer.luo:21:",
["4405"]="/src/classes/Views/Containers/SegmentContainer.luo:22:",
["4406"]="/src/classes/Views/Containers/SegmentContainer.luo:23:",
["4407"]="/src/classes/Views/Containers/SegmentContainer.luo:24:",
["4408"]="/src/classes/Views/Containers/SegmentContainer.luo:25:",
["4409"]="/src/classes/Views/Containers/SegmentContainer.luo:26:",
["4410"]="/src/classes/Views/Containers/SegmentContainer.luo:27:",
["4411"]="/src/classes/Views/Containers/SegmentContainer.luo:28:",
["4412"]="/src/classes/Views/Containers/SegmentContainer.luo:29:",
["4413"]="/src/classes/Views/Containers/SegmentContainer.luo:43:",
["4414"]="/src/classes/Views/Containers/SegmentContainer.luo:44:",
["4415"]="/src/classes/Views/Containers/SegmentContainer.luo:45:",
["4416"]="/src/classes/Views/Containers/SegmentContainer.luo:46:",
["4417"]="/src/classes/Views/Containers/SegmentContainer.luo:31:",
["4418"]="/src/classes/Views/Containers/SegmentContainer.luo:32:",
["4419"]="/src/classes/Views/Containers/SegmentContainer.luo:33:",
["4420"]="/src/classes/Views/Containers/SegmentContainer.luo:34:",
["4421"]="/src/classes/Views/Containers/SegmentContainer.luo:35:",
["4422"]="/src/classes/Views/Containers/SegmentContainer.luo:36:",
["4423"]="/src/classes/Views/Containers/SegmentContainer.luo:38:",
["4424"]="/src/classes/Views/Containers/SegmentContainer.luo:39:",
["4425"]="/src/classes/Views/Containers/SegmentContainer.luo:40:",
["4426"]="/src/classes/Views/Containers/SegmentContainer.luo:41:",
["4433"]="/src/classes/Exceptions/Class System/ArgumentCountClassException.luo:4:",
["4434"]="/src/classes/Exceptions/Class System/ArgumentCountClassException.luo:5:",
["4435"]="/src/classes/Exceptions/Class System/ArgumentCountClassException.luo:6:",
["4436"]="/src/classes/Exceptions/Class System/ArgumentCountClassException.luo:7:",
["4452"]="/src/classes/Symbols/RightSymbol.luo:7:",
["4453"]="/src/classes/Symbols/RightSymbol.luo:8:",
["4454"]="/src/classes/Symbols/RightSymbol.luo:9:",
["4455"]="/src/classes/Symbols/RightSymbol.luo:10:",
["4456"]="/src/classes/Symbols/RightSymbol.luo:11:",
["4457"]="/src/classes/Symbols/RightSymbol.luo:12:",
["4458"]="/src/classes/Symbols/RightSymbol.luo:13:",
["4459"]="/src/classes/Symbols/RightSymbol.luo:14:",
["4460"]="/src/classes/Symbols/RightSymbol.luo:15:",
["4461"]="/src/classes/Symbols/RightSymbol.luo:16:",
["4462"]="/src/classes/Symbols/RightSymbol.luo:17:",
["4463"]="/src/classes/Symbols/RightSymbol.luo:18:",
["4464"]="/src/classes/Symbols/RightSymbol.luo:19:",
["4515"]="/src/classes/Views/SymbolButton.luo:9:",
["4516"]="/src/classes/Views/SymbolButton.luo:10:",
["4517"]="/src/classes/Views/SymbolButton.luo:11:",
["4518"]="/src/classes/Views/SymbolButton.luo:12:",
["4519"]="/src/classes/Views/SymbolButton.luo:13:",
["4520"]="/src/classes/Views/SymbolButton.luo:14:",
["4521"]="/src/classes/Views/SymbolButton.luo:15:",
["4522"]="/src/classes/Views/SymbolButton.luo:16:",
["4523"]="/src/classes/Views/SymbolButton.luo:17:",
["4524"]="/src/classes/Views/SymbolButton.luo:18:",
["4525"]="/src/classes/Views/SymbolButton.luo:19:",
["4526"]="/src/classes/Views/SymbolButton.luo:20:",
["4527"]="/src/classes/Views/SymbolButton.luo:21:",
["4528"]="/src/classes/Views/SymbolButton.luo:22:",
["4529"]="/src/classes/Views/SymbolButton.luo:34:",
["4530"]="/src/classes/Views/SymbolButton.luo:35:",
["4531"]="/src/classes/Views/SymbolButton.luo:36:",
["4532"]="/src/classes/Views/SymbolButton.luo:37:",
["4533"]="/src/classes/Views/SymbolButton.luo:38:",
["4534"]="/src/classes/Views/SymbolButton.luo:39:",
["4535"]="/src/classes/Views/SymbolButton.luo:40:",
["4536"]="/src/classes/Views/SymbolButton.luo:41:",
["4537"]="/src/classes/Views/SymbolButton.luo:42:",
["4538"]="/src/classes/Views/SymbolButton.luo:43:",
["4539"]="/src/classes/Views/SymbolButton.luo:44:",
["4540"]="/src/classes/Views/SymbolButton.luo:45:",
["4541"]="/src/classes/Views/SymbolButton.luo:46:",
["4604"]="/System/classes/Program Managing/QuartzProxy.luo:14:",
["4605"]="/System/classes/Program Managing/QuartzProxy.luo:15:",
["4606"]="/System/classes/Program Managing/QuartzProxy.luo:16:",
["4607"]="/System/classes/Program Managing/QuartzProxy.luo:17:",
["4608"]="/System/classes/Program Managing/QuartzProxy.luo:18:",
["4609"]="/System/classes/Program Managing/QuartzProxy.luo:19:",
["4610"]="/System/classes/Program Managing/QuartzProxy.luo:20:",
["4611"]="/System/classes/Program Managing/QuartzProxy.luo:21:",
["4612"]="/System/classes/Program Managing/QuartzProxy.luo:22:",
["4613"]="/System/classes/Program Managing/QuartzProxy.luo:23:",
["4614"]="/System/classes/Program Managing/QuartzProxy.luo:24:",
["4615"]="/System/classes/Program Managing/QuartzProxy.luo:26:",
["4616"]="/System/classes/Program Managing/QuartzProxy.luo:27:",
["4617"]="/System/classes/Program Managing/QuartzProxy.luo:28:",
["4618"]="/System/classes/Program Managing/QuartzProxy.luo:29:",
["4619"]="/System/classes/Program Managing/QuartzProxy.luo:30:",
["4620"]="/System/classes/Program Managing/QuartzProxy.luo:31:",
["4621"]="/System/classes/Program Managing/QuartzProxy.luo:32:",
["4629"]="/src/classes/File Associations/BridgedFileAssociation.luo:4:",
["4630"]="/src/classes/File Associations/BridgedFileAssociation.luo:5:",
["4631"]="/src/classes/File Associations/BridgedFileAssociation.luo:6:",
["4632"]="/src/classes/File Associations/BridgedFileAssociation.luo:7:",
["4633"]="/src/classes/File Associations/BridgedFileAssociation.luo:8:",
["4634"]="/src/classes/File Associations/BridgedFileAssociation.luo:9:",
["4635"]="/src/classes/File Associations/BridgedFileAssociation.luo:10:",
["4636"]="/src/classes/File Associations/BridgedFileAssociation.luo:11:",
["4637"]="/src/classes/File Associations/BridgedFileAssociation.luo:12:",
["4640"]="/src/classes/Application.luo:34:",
["4641"]="/src/classes/Application.luo:35:",
["4642"]="/src/classes/Application.luo:36:",
["4643"]="/src/classes/Application.luo:37:",
["4644"]="/src/classes/Application.luo:38:",
["4645"]="/src/classes/Application.luo:44:",
["4646"]="/src/classes/Application.luo:45:",
["4647"]="/src/classes/Application.luo:46:",
["4648"]="/src/classes/Application.luo:47:",
["4649"]="/src/classes/Application.luo:48:",
["4650"]="/src/classes/Application.luo:49:",
["4651"]="/src/classes/Application.luo:50:",
["4652"]="/src/classes/Application.luo:51:",
["4653"]="/src/classes/Application.luo:52:",
["4654"]="/src/classes/Application.luo:53:",
["4655"]="/src/classes/Application.luo:54:",
["4656"]="/src/classes/Application.luo:55:",
["4657"]="/src/classes/Application.luo:56:",
["4658"]="/src/classes/Application.luo:57:",
["4659"]="/src/classes/Application.luo:58:",
["4660"]="/src/classes/Application.luo:59:",
["4661"]="/src/classes/Application.luo:60:",
["4662"]="/src/classes/Application.luo:61:",
["4663"]="/src/classes/Application.luo:62:",
["4664"]="/src/classes/Application.luo:63:",
["4665"]="/src/classes/Application.luo:64:",
["4674"]="/src/classes/Application.luo:66:",
["4675"]="/src/classes/Application.luo:67:",
["4676"]="/src/classes/Application.luo:68:",
["4677"]="/src/classes/Application.luo:69:",
["4678"]="/src/classes/Application.luo:70:",
["4679"]="/src/classes/Application.luo:71:",
["4680"]="/src/classes/Application.luo:72:",
["4681"]="/src/classes/Application.luo:73:",
["4682"]="/src/classes/Application.luo:74:",
["4683"]="/src/classes/Application.luo:75:",
["4684"]="/src/classes/Application.luo:76:",
["4685"]="/src/classes/Application.luo:77:",
["4686"]="/src/classes/Application.luo:78:",
["4687"]="/src/classes/Application.luo:79:",
["4688"]="/src/classes/Application.luo:80:",
["4689"]="/src/classes/Application.luo:81:",
["4690"]="/src/classes/Application.luo:82:",
["4691"]="/src/classes/Application.luo:83:",
["4692"]="/src/classes/Application.luo:84:",
["4693"]="/src/classes/Application.luo:85:",
["4694"]="/src/classes/Application.luo:86:",
["4695"]="/src/classes/Application.luo:87:",
["4696"]="/src/classes/Application.luo:88:",
["4697"]="/src/classes/Application.luo:89:",
["4698"]="/src/classes/Application.luo:90:",
["4699"]="/src/classes/Application.luo:91:",
["4700"]="/src/classes/Application.luo:92:",
["4701"]="/src/classes/Application.luo:93:",
["4702"]="/src/classes/Application.luo:94:",
["4703"]="/src/classes/Application.luo:95:",
["4704"]="/src/classes/Application.luo:96:",
["4705"]="/src/classes/Application.luo:97:",
["4706"]="/src/classes/Application.luo:98:",
["4707"]="/src/classes/Application.luo:99:",
["4708"]="/src/classes/Application.luo:100:",
["4709"]="/src/classes/Application.luo:218:",
["4710"]="/src/classes/Application.luo:219:",
["4711"]="/src/classes/Application.luo:220:",
["4712"]="/src/classes/Application.luo:221:",
["4713"]="/src/classes/Application.luo:222:",
["4714"]="/src/classes/Application.luo:223:",
["4715"]="/src/classes/Application.luo:224:",
["4716"]="/src/classes/Application.luo:225:",
["4717"]="/src/classes/Application.luo:226:",
["4718"]="/src/classes/Application.luo:227:",
["4719"]="/src/classes/Application.luo:228:",
["4720"]="/src/classes/Application.luo:229:",
["4721"]="/src/classes/Application.luo:230:",
["4722"]="/src/classes/Application.luo:231:",
["4723"]="/src/classes/Application.luo:232:",
["4724"]="/src/classes/Application.luo:233:",
["4725"]="/src/classes/Application.luo:234:",
["4726"]="/src/classes/Application.luo:235:",
["4727"]="/src/classes/Application.luo:236:",
["4728"]="/src/classes/Application.luo:237:",
["4729"]="/src/classes/Application.luo:238:",
["4730"]="/src/classes/Application.luo:239:",
["4731"]="/src/classes/Application.luo:105:",
["4732"]="/src/classes/Application.luo:106:",
["4733"]="/src/classes/Application.luo:107:",
["4734"]="/src/classes/Application.luo:108:",
["4735"]="/src/classes/Application.luo:109:",
["4736"]="/src/classes/Application.luo:110:",
["4737"]="/src/classes/Application.luo:111:",
["4738"]="/src/classes/Application.luo:112:",
["4739"]="/src/classes/Application.luo:113:",
["4740"]="/src/classes/Application.luo:265:",
["4741"]="/src/classes/Application.luo:266:",
["4742"]="/src/classes/Application.luo:267:",
["4743"]="/src/classes/Application.luo:268:",
["4744"]="/src/classes/Application.luo:269:",
["4745"]="/src/classes/Application.luo:270:",
["4746"]="/src/classes/Application.luo:271:",
["4747"]="/src/classes/Application.luo:272:",
["4748"]="/src/classes/Application.luo:273:",
["4749"]="/src/classes/Application.luo:274:",
["4750"]="/src/classes/Application.luo:275:",
["4751"]="/src/classes/Application.luo:276:",
["4752"]="/src/classes/Application.luo:195:",
["4753"]="/src/classes/Application.luo:196:",
["4754"]="/src/classes/Application.luo:197:",
["4755"]="/src/classes/Application.luo:198:",
["4756"]="/src/classes/Application.luo:199:",
["4757"]="/src/classes/Application.luo:200:",
["4758"]="/src/classes/Application.luo:201:",
["4759"]="/src/classes/Application.luo:202:",
["4760"]="/src/classes/Application.luo:203:",
["4761"]="/src/classes/Application.luo:282:",
["4762"]="/src/classes/Application.luo:283:",
["4763"]="/src/classes/Application.luo:284:",
["4764"]="/src/classes/Application.luo:285:",
["4765"]="/src/classes/Application.luo:286:",
["4766"]="/src/classes/Application.luo:287:",
["4767"]="/src/classes/Application.luo:288:",
["4768"]="/src/classes/Application.luo:289:",
["4769"]="/src/classes/Application.luo:290:",
["4770"]="/src/classes/Application.luo:291:",
["4771"]="/src/classes/Application.luo:292:",
["4772"]="/src/classes/Application.luo:293:",
["4773"]="/src/classes/Application.luo:303:",
["4774"]="/src/classes/Application.luo:304:",
["4775"]="/src/classes/Application.luo:305:",
["4776"]="/src/classes/Application.luo:306:",
["4777"]="/src/classes/Application.luo:307:",
["4778"]="/src/classes/Application.luo:308:",
["4779"]="/src/classes/Application.luo:120:",
["4780"]="/src/classes/Application.luo:121:",
["4781"]="/src/classes/Application.luo:122:",
["4782"]="/src/classes/Application.luo:123:",
["4783"]="/src/classes/Application.luo:124:",
["4784"]="/src/classes/Application.luo:125:",
["4785"]="/src/classes/Application.luo:126:",
["4786"]="/src/classes/Application.luo:127:",
["4787"]="/src/classes/Application.luo:128:",
["4788"]="/src/classes/Application.luo:129:",
["4789"]="/src/classes/Application.luo:130:",
["4790"]="/src/classes/Application.luo:131:",
["4791"]="/src/classes/Application.luo:132:",
["4792"]="/src/classes/Application.luo:133:",
["4793"]="/src/classes/Application.luo:134:",
["4794"]="/src/classes/Application.luo:135:",
["4795"]="/src/classes/Application.luo:136:",
["4796"]="/src/classes/Application.luo:137:",
["4797"]="/src/classes/Application.luo:245:",
["4798"]="/src/classes/Application.luo:246:",
["4799"]="/src/classes/Application.luo:247:",
["4800"]="/src/classes/Application.luo:248:",
["4801"]="/src/classes/Application.luo:249:",
["4802"]="/src/classes/Application.luo:250:",
["4803"]="/src/classes/Application.luo:251:",
["4804"]="/src/classes/Application.luo:252:",
["4805"]="/src/classes/Application.luo:253:",
["4806"]="/src/classes/Application.luo:254:",
["4807"]="/src/classes/Application.luo:255:",
["4808"]="/src/classes/Application.luo:256:",
["4809"]="/src/classes/Application.luo:257:",
["4810"]="/src/classes/Application.luo:258:",
["4811"]="/src/classes/Application.luo:259:",
["4812"]="/src/classes/Application.luo:153:",
["4813"]="/src/classes/Application.luo:154:",
["4814"]="/src/classes/Application.luo:155:",
["4815"]="/src/classes/Application.luo:156:",
["4816"]="/src/classes/Application.luo:157:",
["4817"]="/src/classes/Application.luo:158:",
["4818"]="/src/classes/Application.luo:159:",
["4819"]="/src/classes/Application.luo:160:",
["4820"]="/src/classes/Application.luo:161:",
["4821"]="/src/classes/Application.luo:162:",
["4822"]="/src/classes/Application.luo:163:",
["4823"]="/src/classes/Application.luo:164:",
["4824"]="/src/classes/Application.luo:165:",
["4825"]="/src/classes/Application.luo:166:",
["4826"]="/src/classes/Application.luo:167:",
["4827"]="/src/classes/Application.luo:168:",
["4828"]="/src/classes/Application.luo:169:",
["4829"]="/src/classes/Application.luo:170:",
["4830"]="/src/classes/Application.luo:315:",
["4831"]="/src/classes/Application.luo:316:",
["4832"]="/src/classes/Application.luo:317:",
["4833"]="/src/classes/Application.luo:318:",
["4834"]="/src/classes/Application.luo:319:",
["4835"]="/src/classes/Application.luo:320:",
["4836"]="/src/classes/Application.luo:321:",
["4837"]="/src/classes/Application.luo:102:",
["4838"]="/src/classes/Application.luo:103:",
["4839"]="/src/classes/Application.luo:327:",
["4840"]="/src/classes/Application.luo:328:",
["4841"]="/src/classes/Application.luo:329:",
["4842"]="/src/classes/Application.luo:330:",
["4843"]="/src/classes/Application.luo:331:",
["4844"]="/src/classes/Application.luo:332:",
["4845"]="/src/classes/Application.luo:333:",
["4846"]="/src/classes/Application.luo:334:",
["4847"]="/src/classes/Application.luo:335:",
["4848"]="/src/classes/Application.luo:336:",
["4849"]="/src/classes/Application.luo:337:",
["4850"]="/src/classes/Application.luo:338:",
["4851"]="/src/classes/Application.luo:339:",
["4852"]="/src/classes/Application.luo:175:",
["4853"]="/src/classes/Application.luo:176:",
["4854"]="/src/classes/Application.luo:177:",
["4855"]="/src/classes/Application.luo:178:",
["4856"]="/src/classes/Application.luo:179:",
["4857"]="/src/classes/Application.luo:180:",
["4858"]="/src/classes/Application.luo:181:",
["4859"]="/src/classes/Application.luo:182:",
["4860"]="/src/classes/Application.luo:183:",
["4861"]="/src/classes/Application.luo:184:",
["4862"]="/src/classes/Application.luo:185:",
["4863"]="/src/classes/Application.luo:186:",
["4864"]="/src/classes/Application.luo:187:",
["4865"]="/src/classes/Application.luo:209:",
["4866"]="/src/classes/Application.luo:210:",
["4867"]="/src/classes/Application.luo:211:",
["4868"]="/src/classes/Application.luo:346:",
["4869"]="/src/classes/Application.luo:347:",
["4870"]="/src/classes/Application.luo:348:",
["4871"]="/src/classes/Application.luo:349:",
["4872"]="/src/classes/Application.luo:350:",
["4873"]="/src/classes/Application.luo:351:",
["4893"]="/System/classes/QuartzApplication.luo:13:",
["4894"]="/System/classes/QuartzApplication.luo:14:",
["4895"]="/System/classes/QuartzApplication.luo:15:",
["4896"]="/System/classes/QuartzApplication.luo:16:",
["4897"]="/System/classes/QuartzApplication.luo:17:",
["4898"]="/System/classes/QuartzApplication.luo:18:",
["4899"]="/System/classes/QuartzApplication.luo:35:",
["4900"]="/System/classes/QuartzApplication.luo:36:",
["4901"]="/System/classes/QuartzApplication.luo:37:",
["4902"]="/System/classes/QuartzApplication.luo:38:",
["4903"]="/System/classes/QuartzApplication.luo:39:",
["4904"]="/System/classes/QuartzApplication.luo:40:",
["4905"]="/System/classes/QuartzApplication.luo:41:",
["4906"]="/System/classes/QuartzApplication.luo:42:",
["4907"]="/System/classes/QuartzApplication.luo:43:",
["4908"]="/System/classes/QuartzApplication.luo:44:",
["4909"]="/System/classes/QuartzApplication.luo:45:",
["4910"]="/System/classes/QuartzApplication.luo:46:",
["4911"]="/System/classes/QuartzApplication.luo:24:",
["4912"]="/System/classes/QuartzApplication.luo:25:",
["4913"]="/System/classes/QuartzApplication.luo:26:",
["4914"]="/System/classes/QuartzApplication.luo:27:",
["4915"]="/System/classes/QuartzApplication.luo:20:",
["4916"]="/System/classes/QuartzApplication.luo:21:",
["4917"]="/System/classes/QuartzApplication.luo:22:",
["4931"]="/src/classes/Events/Keyboard Events/KeyEvent.luo:12:",
["4932"]="/src/classes/Events/Keyboard Events/KeyEvent.luo:13:",
["4933"]="/src/classes/Events/Keyboard Events/KeyEvent.luo:14:",
["4934"]="/src/classes/Events/Keyboard Events/KeyEvent.luo:15:",
["4935"]="/src/classes/Events/Keyboard Events/KeyEvent.luo:16:",
["4936"]="/src/classes/Events/Keyboard Events/KeyEvent.luo:17:",
["4957"]="/src/classes/Graphics/OutlineMask.luo:4:",
["4958"]="/src/classes/Graphics/OutlineMask.luo:5:",
["4959"]="/src/classes/Graphics/OutlineMask.luo:6:",
["4960"]="/src/classes/Graphics/OutlineMask.luo:7:",
["4961"]="/src/classes/Graphics/OutlineMask.luo:8:",
["4962"]="/src/classes/Graphics/OutlineMask.luo:9:",
["4963"]="/src/classes/Graphics/OutlineMask.luo:10:",
["4964"]="/src/classes/Graphics/OutlineMask.luo:11:",
["4965"]="/src/classes/Graphics/OutlineMask.luo:12:",
["4966"]="/src/classes/Graphics/OutlineMask.luo:13:",
["4967"]="/src/classes/Graphics/OutlineMask.luo:14:",
["4968"]="/src/classes/Graphics/OutlineMask.luo:15:",
["4969"]="/src/classes/Settings.luo:13:",
["4970"]="/src/classes/Settings.luo:14:",
["4971"]="/src/classes/Settings.luo:15:",
["4972"]="/src/classes/Settings.luo:16:",
["4973"]="/src/classes/Settings.luo:17:",
["4974"]="/src/classes/Settings.luo:18:",
["4975"]="/src/classes/Settings.luo:19:",
["4976"]="/src/classes/Settings.luo:20:",
["4977"]="/src/classes/Settings.luo:21:",
["4978"]="/src/classes/Settings.luo:22:",
["4979"]="/src/classes/Settings.luo:23:",
["4980"]="/src/classes/Settings.luo:24:",
["4981"]="/src/classes/Settings.luo:25:",
["4982"]="/src/classes/Settings.luo:26:",
["4983"]="/src/classes/Settings.luo:27:",
["4984"]="/src/classes/Settings.luo:28:",
["4985"]="/src/classes/Settings.luo:29:",
["4986"]="/src/classes/Settings.luo:30:",
["4987"]="/src/classes/Settings.luo:35:",
["4988"]="/src/classes/Settings.luo:36:",
["4989"]="/src/classes/Settings.luo:37:",
["4990"]="/src/classes/Settings.luo:38:",
["4991"]="/src/classes/Settings.luo:39:",
["4992"]="/src/classes/Settings.luo:40:",
["4993"]="/src/classes/Settings.luo:41:",
["4994"]="/src/classes/Settings.luo:42:",
["4995"]="/src/classes/Settings.luo:43:",
["4996"]="/src/classes/Settings.luo:44:",
["4997"]="/src/classes/Settings.luo:45:",
["4998"]="/src/classes/Settings.luo:46:",
["4999"]="/src/classes/Settings.luo:47:",
["5000"]="/src/classes/Settings.luo:48:",
["5001"]="/src/classes/Settings.luo:49:",
["5002"]="/src/classes/Settings.luo:50:",
["5003"]="/src/classes/Settings.luo:51:",
["5004"]="/src/classes/Settings.luo:52:",
["5005"]="/src/classes/Settings.luo:53:",
["5006"]="/src/classes/Settings.luo:54:",
["5007"]="/src/classes/Settings.luo:55:",
["5008"]="/src/classes/Settings.luo:56:",
["5009"]="/src/classes/Settings.luo:57:",
["5010"]="/src/classes/Settings.luo:58:",
["5011"]="/src/classes/Settings.luo:59:",
["5012"]="/src/classes/Settings.luo:60:",
["5013"]="/src/classes/Settings.luo:62:",
["5014"]="/src/classes/Settings.luo:63:",
["5015"]="/src/classes/Settings.luo:64:",
["5016"]="/src/classes/Settings.luo:65:",
["5017"]="/src/classes/Settings.luo:66:",
["5018"]="/src/classes/Settings.luo:67:",
["5019"]="/src/classes/Settings.luo:68:",
["5020"]="/src/classes/Settings.luo:69:",
["5021"]="/src/classes/Settings.luo:70:",
["5022"]="/src/classes/Settings.luo:71:",
["5023"]="/src/classes/Settings.luo:72:",
["5024"]="/src/classes/Settings.luo:73:",
["5025"]="/src/classes/Settings.luo:74:",
["5026"]="/src/classes/Settings.luo:75:",
["5027"]="/src/classes/Settings.luo:76:",
["5028"]="/src/classes/Settings.luo:77:",
["5029"]="/src/classes/Settings.luo:78:",
["5030"]="/src/classes/Settings.luo:79:",
["5031"]="/src/classes/Settings.luo:80:",
["5035"]="/src/classes/Graphics/CircleMask.luo:4:",
["5036"]="/src/classes/Graphics/CircleMask.luo:5:",
["5037"]="/src/classes/Graphics/CircleMask.luo:6:",
["5038"]="/src/classes/Graphics/CircleMask.luo:7:",
["5039"]="/src/classes/Graphics/CircleMask.luo:8:",
["5040"]="/src/classes/Graphics/CircleMask.luo:9:",
["5041"]="/src/classes/Graphics/CircleMask.luo:10:",
["5042"]="/src/classes/Graphics/CircleMask.luo:11:",
["5043"]="/src/classes/Graphics/CircleMask.luo:12:",
["5044"]="/src/classes/Graphics/CircleMask.luo:13:",
["5045"]="/src/classes/Graphics/CircleMask.luo:14:",
["5046"]="/src/classes/Graphics/CircleMask.luo:15:",
["5047"]="/src/classes/Graphics/CircleMask.luo:16:",
["5048"]="/src/classes/Graphics/CircleMask.luo:17:",
["5049"]="/src/classes/Graphics/CircleMask.luo:18:",
["5050"]="/src/classes/Graphics/CircleMask.luo:19:",
["5051"]="/src/classes/Graphics/CircleMask.luo:20:",
["5052"]="/src/classes/Graphics/CircleMask.luo:21:",
["5053"]="/src/classes/Graphics/CircleMask.luo:22:",
["5054"]="/src/classes/Graphics/CircleMask.luo:23:",
["5055"]="/src/classes/Graphics/CircleMask.luo:24:",
["5132"]="/src/classes/Views/Containers/Window/Window.luo:26:",
["5133"]="/src/classes/Views/Containers/Window/Window.luo:27:",
["5134"]="/src/classes/Views/Containers/Window/Window.luo:28:",
["5135"]="/src/classes/Views/Containers/Window/Window.luo:29:",
["5136"]="/src/classes/Views/Containers/Window/Window.luo:30:",
["5137"]="/src/classes/Views/Containers/Window/Window.luo:31:",
["5138"]="/src/classes/Views/Containers/Window/Window.luo:32:",
["5139"]="/src/classes/Views/Containers/Window/Window.luo:33:",
["5140"]="/src/classes/Views/Containers/Window/Window.luo:34:",
["5141"]="/src/classes/Views/Containers/Window/Window.luo:35:",
["5142"]="/src/classes/Views/Containers/Window/Window.luo:36:",
["5143"]="/src/classes/Views/Containers/Window/Window.luo:37:",
["5144"]="/src/classes/Views/Containers/Window/Window.luo:38:",
["5145"]="/src/classes/Views/Containers/Window/Window.luo:118:",
["5146"]="/src/classes/Views/Containers/Window/Window.luo:119:",
["5147"]="/src/classes/Views/Containers/Window/Window.luo:120:",
["5148"]="/src/classes/Views/Containers/Window/Window.luo:121:",
["5149"]="/src/classes/Views/Containers/Window/Window.luo:122:",
["5150"]="/src/classes/Views/Containers/Window/Window.luo:123:",
["5151"]="/src/classes/Views/Containers/Window/Window.luo:124:",
["5152"]="/src/classes/Views/Containers/Window/Window.luo:125:",
["5153"]="/src/classes/Views/Containers/Window/Window.luo:126:",
["5154"]="/src/classes/Views/Containers/Window/Window.luo:127:",
["5155"]="/src/classes/Views/Containers/Window/Window.luo:199:",
["5156"]="/src/classes/Views/Containers/Window/Window.luo:200:",
["5157"]="/src/classes/Views/Containers/Window/Window.luo:201:",
["5158"]="/src/classes/Views/Containers/Window/Window.luo:202:",
["5159"]="/src/classes/Views/Containers/Window/Window.luo:203:",
["5160"]="/src/classes/Views/Containers/Window/Window.luo:204:",
["5161"]="/src/classes/Views/Containers/Window/Window.luo:205:",
["5162"]="/src/classes/Views/Containers/Window/Window.luo:206:",
["5163"]="/src/classes/Views/Containers/Window/Window.luo:207:",
["5164"]="/src/classes/Views/Containers/Window/Window.luo:208:",
["5165"]="/src/classes/Views/Containers/Window/Window.luo:150:",
["5166"]="/src/classes/Views/Containers/Window/Window.luo:151:",
["5167"]="/src/classes/Views/Containers/Window/Window.luo:152:",
["5168"]="/src/classes/Views/Containers/Window/Window.luo:153:",
["5169"]="/src/classes/Views/Containers/Window/Window.luo:154:",
["5170"]="/src/classes/Views/Containers/Window/Window.luo:155:",
["5171"]="/src/classes/Views/Containers/Window/Window.luo:156:",
["5172"]="/src/classes/Views/Containers/Window/Window.luo:157:",
["5173"]="/src/classes/Views/Containers/Window/Window.luo:158:",
["5174"]="/src/classes/Views/Containers/Window/Window.luo:159:",
["5175"]="/src/classes/Views/Containers/Window/Window.luo:160:",
["5176"]="/src/classes/Views/Containers/Window/Window.luo:161:",
["5177"]="/src/classes/Views/Containers/Window/Window.luo:162:",
["5178"]="/src/classes/Views/Containers/Window/Window.luo:163:",
["5179"]="/src/classes/Views/Containers/Window/Window.luo:164:",
["5180"]="/src/classes/Views/Containers/Window/Window.luo:165:",
["5181"]="/src/classes/Views/Containers/Window/Window.luo:166:",
["5182"]="/src/classes/Views/Containers/Window/Window.luo:132:",
["5183"]="/src/classes/Views/Containers/Window/Window.luo:133:",
["5184"]="/src/classes/Views/Containers/Window/Window.luo:134:",
["5185"]="/src/classes/Views/Containers/Window/Window.luo:40:",
["5186"]="/src/classes/Views/Containers/Window/Window.luo:41:",
["5187"]="/src/classes/Views/Containers/Window/Window.luo:42:",
["5188"]="/src/classes/Views/Containers/Window/Window.luo:43:",
["5189"]="/src/classes/Views/Containers/Window/Window.luo:44:",
["5190"]="/src/classes/Views/Containers/Window/Window.luo:45:",
["5191"]="/src/classes/Views/Containers/Window/Window.luo:46:",
["5192"]="/src/classes/Views/Containers/Window/Window.luo:47:",
["5193"]="/src/classes/Views/Containers/Window/Window.luo:48:",
["5194"]="/src/classes/Views/Containers/Window/Window.luo:49:",
["5195"]="/src/classes/Views/Containers/Window/Window.luo:50:",
["5196"]="/src/classes/Views/Containers/Window/Window.luo:51:",
["5197"]="/src/classes/Views/Containers/Window/Window.luo:52:",
["5198"]="/src/classes/Views/Containers/Window/Window.luo:53:",
["5199"]="/src/classes/Views/Containers/Window/Window.luo:54:",
["5200"]="/src/classes/Views/Containers/Window/Window.luo:55:",
["5201"]="/src/classes/Views/Containers/Window/Window.luo:56:",
["5202"]="/src/classes/Views/Containers/Window/Window.luo:173:",
["5203"]="/src/classes/Views/Containers/Window/Window.luo:174:",
["5204"]="/src/classes/Views/Containers/Window/Window.luo:175:",
["5205"]="/src/classes/Views/Containers/Window/Window.luo:176:",
["5206"]="/src/classes/Views/Containers/Window/Window.luo:177:",
["5207"]="/src/classes/Views/Containers/Window/Window.luo:178:",
["5208"]="/src/classes/Views/Containers/Window/Window.luo:179:",
["5209"]="/src/classes/Views/Containers/Window/Window.luo:180:",
["5210"]="/src/classes/Views/Containers/Window/Window.luo:181:",
["5211"]="/src/classes/Views/Containers/Window/Window.luo:182:",
["5212"]="/src/classes/Views/Containers/Window/Window.luo:183:",
["5213"]="/src/classes/Views/Containers/Window/Window.luo:184:",
["5214"]="/src/classes/Views/Containers/Window/Window.luo:185:",
["5215"]="/src/classes/Views/Containers/Window/Window.luo:186:",
["5216"]="/src/classes/Views/Containers/Window/Window.luo:187:",
["5217"]="/src/classes/Views/Containers/Window/Window.luo:188:",
["5218"]="/src/classes/Views/Containers/Window/Window.luo:189:",
["5219"]="/src/classes/Views/Containers/Window/Window.luo:190:",
["5220"]="/src/classes/Views/Containers/Window/Window.luo:191:",
["5221"]="/src/classes/Views/Containers/Window/Window.luo:192:",
["5222"]="/src/classes/Views/Containers/Window/Window.luo:61:",
["5223"]="/src/classes/Views/Containers/Window/Window.luo:62:",
["5224"]="/src/classes/Views/Containers/Window/Window.luo:63:",
["5225"]="/src/classes/Views/Containers/Window/Window.luo:64:",
["5226"]="/src/classes/Views/Containers/Window/Window.luo:65:",
["5227"]="/src/classes/Views/Containers/Window/Window.luo:66:",
["5228"]="/src/classes/Views/Containers/Window/Window.luo:67:",
["5229"]="/src/classes/Views/Containers/Window/Window.luo:68:",
["5230"]="/src/classes/Views/Containers/Window/Window.luo:69:",
["5231"]="/src/classes/Views/Containers/Window/Window.luo:79:",
["5232"]="/src/classes/Views/Containers/Window/Window.luo:80:",
["5233"]="/src/classes/Views/Containers/Window/Window.luo:81:",
["5234"]="/src/classes/Views/Containers/Window/Window.luo:82:",
["5235"]="/src/classes/Views/Containers/Window/Window.luo:83:",
["5236"]="/src/classes/Views/Containers/Window/Window.luo:84:",
["5237"]="/src/classes/Views/Containers/Window/Window.luo:85:",
["5238"]="/src/classes/Views/Containers/Window/Window.luo:86:",
["5239"]="/src/classes/Views/Containers/Window/Window.luo:87:",
["5240"]="/src/classes/Views/Containers/Window/Window.luo:88:",
["5241"]="/src/classes/Views/Containers/Window/Window.luo:89:",
["5242"]="/src/classes/Views/Containers/Window/Window.luo:90:",
["5243"]="/src/classes/Views/Containers/Window/Window.luo:213:",
["5244"]="/src/classes/Views/Containers/Window/Window.luo:214:",
["5245"]="/src/classes/Views/Containers/Window/Window.luo:215:",
["5246"]="/src/classes/Views/Containers/Window/Window.luo:216:",
["5247"]="/src/classes/Views/Containers/Window/Window.luo:104:",
["5248"]="/src/classes/Views/Containers/Window/Window.luo:105:",
["5249"]="/src/classes/Views/Containers/Window/Window.luo:106:",
["5250"]="/src/classes/Views/Containers/Window/Window.luo:107:",
["5251"]="/src/classes/Views/Containers/Window/Window.luo:108:",
["5252"]="/src/classes/Views/Containers/Window/Window.luo:109:",
["5253"]="/src/classes/Views/Containers/Window/Window.luo:110:",
["5254"]="/src/classes/Views/Containers/Window/Window.luo:92:",
["5255"]="/src/classes/Views/Containers/Window/Window.luo:93:",
["5256"]="/src/classes/Views/Containers/Window/Window.luo:94:",
["5257"]="/src/classes/Views/Containers/Window/Window.luo:141:",
["5258"]="/src/classes/Views/Containers/Window/Window.luo:142:",
["5259"]="/src/classes/Views/Containers/Window/Window.luo:143:",
["5267"]="/src/classes/Views/Windows/AlertWindow.luo:20:",
["5268"]="/src/classes/Views/Windows/AlertWindow.luo:21:",
["5269"]="/src/classes/Views/Windows/AlertWindow.luo:22:",
["5348"]="/src/classes/Views/Windows/AlertWindow.luo:7:",
["5349"]="/src/classes/Views/Windows/AlertWindow.luo:8:",
["5350"]="/src/classes/Views/Windows/AlertWindow.luo:9:",
["5351"]="/src/classes/Views/Windows/AlertWindow.luo:10:",
["5352"]="/src/classes/Views/Windows/AlertWindow.luo:11:",
["5353"]="/src/classes/Views/Windows/AlertWindow.luo:12:",
["5354"]="/src/classes/Views/Windows/AlertWindow.luo:14:",
["5355"]="/src/classes/Views/Windows/AlertWindow.luo:15:",
["5356"]="/src/classes/Views/Windows/AlertWindow.luo:16:",
["5357"]="/src/classes/Views/Windows/AlertWindow.luo:17:",
["5358"]="/src/classes/Views/Windows/AlertWindow.luo:18:",
["5373"]="/src/classes/Events/Interface Events/FileAssociationRegisteredInterfaceEvent.luo:7:",
["5374"]="/src/classes/Events/Interface Events/FileAssociationRegisteredInterfaceEvent.luo:8:",
["5375"]="/src/classes/Events/Interface Events/FileAssociationRegisteredInterfaceEvent.luo:9:",
["5413"]="/src/classes/Views/Window Buttons/WindowButton.luo:14:",
["5414"]="/src/classes/Views/Window Buttons/WindowButton.luo:15:",
["5415"]="/src/classes/Views/Window Buttons/WindowButton.luo:16:",
["5416"]="/src/classes/Views/Window Buttons/WindowButton.luo:17:",
["5417"]="/src/classes/Views/Window Buttons/WindowButton.luo:18:",
["5418"]="/src/classes/Views/Window Buttons/WindowButton.luo:19:",
["5419"]="/src/classes/Views/Window Buttons/WindowButton.luo:20:",
["5420"]="/src/classes/Views/Window Buttons/WindowButton.luo:31:",
["5421"]="/src/classes/Views/Window Buttons/WindowButton.luo:32:",
["5422"]="/src/classes/Views/Window Buttons/WindowButton.luo:33:",
["5423"]="/src/classes/Views/Window Buttons/WindowButton.luo:50:",
["5424"]="/src/classes/Views/Window Buttons/WindowButton.luo:51:",
["5425"]="/src/classes/Views/Window Buttons/WindowButton.luo:52:",
["5426"]="/src/classes/Views/Window Buttons/WindowButton.luo:53:",
["5427"]="/src/classes/Views/Window Buttons/WindowButton.luo:54:",
["5428"]="/src/classes/Views/Window Buttons/WindowButton.luo:55:",
["5429"]="/src/classes/Views/Window Buttons/WindowButton.luo:56:",
["5430"]="/src/classes/Views/Window Buttons/WindowButton.luo:57:",
["5431"]="/src/classes/Views/Window Buttons/WindowButton.luo:22:",
["5432"]="/src/classes/Views/Window Buttons/WindowButton.luo:23:",
["5433"]="/src/classes/Views/Window Buttons/WindowButton.luo:24:",
["5434"]="/src/classes/Views/Window Buttons/WindowButton.luo:25:",
["5435"]="/src/classes/Views/Window Buttons/WindowButton.luo:26:",
["5436"]="/src/classes/Views/Window Buttons/WindowButton.luo:27:",
["5437"]="/src/classes/Views/Window Buttons/WindowButton.luo:28:",
["5438"]="/src/classes/Views/Window Buttons/WindowButton.luo:29:",
["5439"]="/src/classes/Views/Window Buttons/WindowButton.luo:64:",
["5440"]="/src/classes/Views/Window Buttons/WindowButton.luo:65:",
["5441"]="/src/classes/Views/Window Buttons/WindowButton.luo:66:",
["5442"]="/src/classes/Views/Window Buttons/WindowButton.luo:67:",
["5443"]="/src/classes/Views/Window Buttons/WindowButton.luo:68:",
["5444"]="/src/classes/Views/Window Buttons/WindowButton.luo:69:",
["5488"]="/src/classes/Views/Window Buttons/MaximiseWindowButton.luo:3:",
["5489"]="/src/classes/Views/Window Buttons/MaximiseWindowButton.luo:4:",
["5490"]="/src/classes/Views/Window Buttons/MaximiseWindowButton.luo:5:",
["5491"]="/src/classes/Views/Window Buttons/MaximiseWindowButton.luo:6:",
["5492"]="/src/classes/Views/Window Buttons/MaximiseWindowButton.luo:7:",
["5493"]="/src/classes/Views/Window Buttons/MaximiseWindowButton.luo:8:",
["5531"]="/src/classes/Views/Window Buttons/CloseWindowButton.luo:3:",
["5532"]="/src/classes/Views/Window Buttons/CloseWindowButton.luo:4:",
["5533"]="/src/classes/Views/Window Buttons/CloseWindowButton.luo:5:",
["5534"]="/src/classes/Views/Window Buttons/CloseWindowButton.luo:6:",
["5535"]="/src/classes/Views/Window Buttons/CloseWindowButton.luo:7:",
["5536"]="/src/classes/Views/Window Buttons/CloseWindowButton.luo:8:",
["5544"]="/System/classes/Program Managing/Program.luo:50:",
["5545"]="/System/classes/Program Managing/Program.luo:51:",
["5546"]="/System/classes/Program Managing/Program.luo:52:",
["5547"]="/System/classes/Program Managing/Program.luo:53:",
["5548"]="/System/classes/Program Managing/Program.luo:54:",
["5549"]="/System/classes/Program Managing/Program.luo:55:",
["5550"]="/System/classes/Program Managing/Program.luo:56:",
["5551"]="/System/classes/Program Managing/Program.luo:169:",
["5552"]="/System/classes/Program Managing/Program.luo:170:",
["5553"]="/System/classes/Program Managing/Program.luo:171:",
["5554"]="/System/classes/Program Managing/Program.luo:89:",
["5555"]="/System/classes/Program Managing/Program.luo:90:",
["5556"]="/System/classes/Program Managing/Program.luo:91:",
["5557"]="/System/classes/Program Managing/Program.luo:109:",
["5558"]="/System/classes/Program Managing/Program.luo:110:",
["5559"]="/System/classes/Program Managing/Program.luo:111:",
["5560"]="/System/classes/Program Managing/Program.luo:80:",
["5561"]="/System/classes/Program Managing/Program.luo:81:",
["5562"]="/System/classes/Program Managing/Program.luo:82:",
["5563"]="/System/classes/Program Managing/Program.luo:83:",
["5564"]="/System/classes/Program Managing/Program.luo:84:",
["5565"]="/System/classes/Program Managing/Program.luo:85:",
["5566"]="/System/classes/Program Managing/Program.luo:86:",
["5567"]="/System/classes/Program Managing/Program.luo:87:",
["5568"]="/System/classes/Program Managing/Program.luo:122:",
["5569"]="/System/classes/Program Managing/Program.luo:123:",
["5570"]="/System/classes/Program Managing/Program.luo:124:",
["5571"]="/System/classes/Program Managing/Program.luo:125:",
["5572"]="/System/classes/Program Managing/Program.luo:126:",
["5573"]="/System/classes/Program Managing/Program.luo:127:",
["5574"]="/System/classes/Program Managing/Program.luo:128:",
["5575"]="/System/classes/Program Managing/Program.luo:129:",
["5576"]="/System/classes/Program Managing/Program.luo:130:",
["5577"]="/System/classes/Program Managing/Program.luo:131:",
["5578"]="/System/classes/Program Managing/Program.luo:132:",
["5579"]="/System/classes/Program Managing/Program.luo:133:",
["5580"]="/System/classes/Program Managing/Program.luo:134:",
["5581"]="/System/classes/Program Managing/Program.luo:135:",
["5582"]="/System/classes/Program Managing/Program.luo:136:",
["5583"]="/System/classes/Program Managing/Program.luo:137:",
["5584"]="/System/classes/Program Managing/Program.luo:138:",
["5585"]="/System/classes/Program Managing/Program.luo:139:",
["5586"]="/System/classes/Program Managing/Program.luo:140:",
["5587"]="/System/classes/Program Managing/Program.luo:141:",
["5588"]="/System/classes/Program Managing/Program.luo:142:",
["5589"]="/System/classes/Program Managing/Program.luo:143:",
["5590"]="/System/classes/Program Managing/Program.luo:144:",
["5591"]="/System/classes/Program Managing/Program.luo:145:",
["5592"]="/System/classes/Program Managing/Program.luo:146:",
["5593"]="/System/classes/Program Managing/Program.luo:147:",
["5594"]="/System/classes/Program Managing/Program.luo:148:",
["5595"]="/System/classes/Program Managing/Program.luo:149:",
["5596"]="/System/classes/Program Managing/Program.luo:150:",
["5597"]="/System/classes/Program Managing/Program.luo:151:",
["5598"]="/System/classes/Program Managing/Program.luo:152:",
["5599"]="/System/classes/Program Managing/Program.luo:153:",
["5600"]="/System/classes/Program Managing/Program.luo:154:",
["5601"]="/System/classes/Program Managing/Program.luo:155:",
["5602"]="/System/classes/Program Managing/Program.luo:156:",
["5603"]="/System/classes/Program Managing/Program.luo:157:",
["5604"]="/System/classes/Program Managing/Program.luo:158:",
["5605"]="/System/classes/Program Managing/Program.luo:159:",
["5606"]="/System/classes/Program Managing/Program.luo:160:",
["5607"]="/System/classes/Program Managing/Program.luo:161:",
["5608"]="/System/classes/Program Managing/Program.luo:162:",
["5609"]="/System/classes/Program Managing/Program.luo:163:",
["5610"]="/System/classes/Program Managing/Program.luo:164:",
["5611"]="/System/classes/Program Managing/Program.luo:165:",
["5612"]="/System/classes/Program Managing/Program.luo:166:",
["5613"]="/System/classes/Program Managing/Program.luo:167:",
["5614"]="/System/classes/Program Managing/Program.luo:93:",
["5615"]="/System/classes/Program Managing/Program.luo:94:",
["5616"]="/System/classes/Program Managing/Program.luo:95:",
["5617"]="/System/classes/Program Managing/Program.luo:96:",
["5618"]="/System/classes/Program Managing/Program.luo:97:",
["5619"]="/System/classes/Program Managing/Program.luo:98:",
["5620"]="/System/classes/Program Managing/Program.luo:99:",
["5621"]="/System/classes/Program Managing/Program.luo:100:",
["5622"]="/System/classes/Program Managing/Program.luo:101:",
["5623"]="/System/classes/Program Managing/Program.luo:102:",
["5624"]="/System/classes/Program Managing/Program.luo:103:",
["5625"]="/System/classes/Program Managing/Program.luo:104:",
["5626"]="/System/classes/Program Managing/Program.luo:105:",
["5627"]="/System/classes/Program Managing/Program.luo:106:",
["5628"]="/System/classes/Program Managing/Program.luo:107:",
["5666"]="/System/classes/Program Managing/SilicaProgram.luo:5:",
["5667"]="/System/classes/Program Managing/SilicaProgram.luo:6:",
["5668"]="/System/classes/Program Managing/SilicaProgram.luo:7:",
["5669"]="/System/classes/Program Managing/SilicaProgram.luo:9:",
["5670"]="/System/classes/Program Managing/SilicaProgram.luo:10:",
["5671"]="/System/classes/Program Managing/SilicaProgram.luo:11:",
["5672"]="/System/classes/Program Managing/SilicaProgram.luo:12:",
["5673"]="/System/classes/Program Managing/SilicaProgram.luo:13:",
["5674"]="/System/classes/Program Managing/SilicaProgram.luo:14:",
["5675"]="/System/classes/Program Managing/SilicaProgram.luo:15:",
["5676"]="/System/classes/Program Managing/SilicaProgram.luo:17:",
["5677"]="/System/classes/Program Managing/SilicaProgram.luo:18:",
["5678"]="/System/classes/Program Managing/SilicaProgram.luo:19:",
["5679"]="/System/classes/Program Managing/SilicaProgram.luo:20:",
["5680"]="/System/classes/Program Managing/SilicaProgram.luo:21:",
["5681"]="/System/classes/Program Managing/SilicaProgram.luo:22:",
["5682"]="/System/classes/Program Managing/SilicaProgram.luo:23:",
["5703"]="/src/classes/Events/Interface Events/ActionInterfaceEvent.luo:14:",
["5704"]="/src/classes/Events/Interface Events/ActionInterfaceEvent.luo:15:",
["5705"]="/src/classes/Events/Interface Events/ActionInterfaceEvent.luo:16:",
["5706"]="/src/classes/Events/Interface Events/ActionInterfaceEvent.luo:17:",
["5757"]="/src/classes/Views/SymbolSegmentButton.luo:9:",
["5758"]="/src/classes/Views/SymbolSegmentButton.luo:10:",
["5759"]="/src/classes/Views/SymbolSegmentButton.luo:11:",
["5760"]="/src/classes/Views/SymbolSegmentButton.luo:12:",
["5761"]="/src/classes/Views/SymbolSegmentButton.luo:13:",
["5762"]="/src/classes/Views/SymbolSegmentButton.luo:14:",
["5763"]="/src/classes/Views/SymbolSegmentButton.luo:15:",
["5764"]="/src/classes/Views/SymbolSegmentButton.luo:16:",
["5765"]="/src/classes/Views/SymbolSegmentButton.luo:17:",
["5766"]="/src/classes/Views/SymbolSegmentButton.luo:18:",
["5767"]="/src/classes/Views/SymbolSegmentButton.luo:19:",
["5768"]="/src/classes/Views/SymbolSegmentButton.luo:20:",
["5769"]="/src/classes/Views/SymbolSegmentButton.luo:21:",
["5770"]="/src/classes/Views/SymbolSegmentButton.luo:22:",
["5771"]="/src/classes/Views/SymbolSegmentButton.luo:34:",
["5772"]="/src/classes/Views/SymbolSegmentButton.luo:35:",
["5773"]="/src/classes/Views/SymbolSegmentButton.luo:36:",
["5774"]="/src/classes/Views/SymbolSegmentButton.luo:37:",
["5775"]="/src/classes/Views/SymbolSegmentButton.luo:38:",
["5776"]="/src/classes/Views/SymbolSegmentButton.luo:39:",
["5777"]="/src/classes/Views/SymbolSegmentButton.luo:40:",
["5778"]="/src/classes/Views/SymbolSegmentButton.luo:41:",
["5779"]="/src/classes/Views/SymbolSegmentButton.luo:42:",
["5780"]="/src/classes/Views/SymbolSegmentButton.luo:43:",
["5781"]="/src/classes/Views/SymbolSegmentButton.luo:44:",
["5782"]="/src/classes/Views/SymbolSegmentButton.luo:45:",
["5783"]="/src/classes/Views/SymbolSegmentButton.luo:46:",
["5790"]="/src/classes/FolderIcon.luo:15:",
["5791"]="/src/classes/FolderIcon.luo:16:",
["5792"]="/src/classes/FolderIcon.luo:17:",
["5793"]="/src/classes/FolderIcon.luo:18:",
["5794"]="/src/classes/FolderIcon.luo:19:",
["5795"]="/src/classes/FolderIcon.luo:20:",
["5796"]="/src/classes/FolderIcon.luo:21:",
["5797"]="/src/classes/FolderIcon.luo:22:",
["5798"]="/src/classes/FolderIcon.luo:23:",
["5799"]="/src/classes/FolderIcon.luo:24:",
["5800"]="/src/classes/FolderIcon.luo:25:",
["5801"]="/src/classes/FolderIcon.luo:26:",
["5802"]="/src/classes/FolderIcon.luo:27:",
["5803"]="/src/classes/FolderIcon.luo:28:",
["5804"]="/src/classes/FolderIcon.luo:29:",
["5805"]="/src/classes/FolderIcon.luo:30:",
["5806"]="/src/classes/FolderIcon.luo:31:",
["5807"]="/src/classes/FolderIcon.luo:32:",
["5808"]="/src/classes/FolderIcon.luo:33:",
["5809"]="/src/classes/FolderIcon.luo:34:",
["5810"]="/src/classes/FolderIcon.luo:35:",
["5811"]="/src/classes/FolderIcon.luo:36:",
["5812"]="/src/classes/FolderIcon.luo:37:",
["5813"]="/src/classes/FolderIcon.luo:38:",
["5814"]="/src/classes/FolderIcon.luo:39:",
["5815"]="/src/classes/FolderIcon.luo:40:",
["5816"]="/src/classes/FolderIcon.luo:41:",
["5817"]="/src/classes/FolderIcon.luo:42:",
["5818"]="/src/classes/FolderIcon.luo:43:",
["5819"]="/src/classes/FolderIcon.luo:44:",
["5820"]="/src/classes/FolderIcon.luo:45:",
["5821"]="/src/classes/FolderIcon.luo:46:",
["5822"]="/src/classes/FolderIcon.luo:47:",
["5823"]="/src/classes/FolderIcon.luo:48:",
["5824"]="/src/classes/FolderIcon.luo:49:",
["5825"]="/src/classes/FolderIcon.luo:50:",
["5826"]="/src/classes/FolderIcon.luo:51:",
["5827"]="/src/classes/FolderIcon.luo:52:",
["5828"]="/src/classes/FolderIcon.luo:53:",
["5829"]="/src/classes/FolderIcon.luo:54:",
["5830"]="/src/classes/FolderIcon.luo:55:",
["5831"]="/src/classes/FolderIcon.luo:56:",
["5832"]="/src/classes/FolderIcon.luo:57:",
["5833"]="/src/classes/FolderIcon.luo:58:",
["5834"]="/src/classes/FolderIcon.luo:59:",
["5835"]="/src/classes/FolderIcon.luo:60:",
["5836"]="/src/classes/FolderIcon.luo:61:",
["5837"]="/src/classes/FolderIcon.luo:62:",
["5838"]="/src/classes/FolderIcon.luo:63:",
["5839"]="/src/classes/FolderIcon.luo:64:",
["5840"]="/src/classes/FolderIcon.luo:65:",
["5841"]="/src/classes/FolderIcon.luo:66:",
["5842"]="/src/classes/FolderIcon.luo:67:",
["5843"]="/src/classes/FolderIcon.luo:68:",
["5844"]="/src/classes/FolderIcon.luo:69:",
["5845"]="/src/classes/FolderIcon.luo:70:",
["5846"]="/src/classes/FolderIcon.luo:71:",
["5847"]="/src/classes/FolderIcon.luo:72:",
["5848"]="/src/classes/FolderIcon.luo:73:",
["5849"]="/src/classes/FolderIcon.luo:74:",
["5852"]="/src/classes/FolderIcon.luo:10:",
["5853"]="/src/classes/FolderIcon.luo:11:",
["5854"]="/src/classes/FolderIcon.luo:12:",
["5855"]="/src/classes/FolderIcon.luo:13:",
["5862"]="/src/classes/Exceptions/Class System/LoadingClassException.luo:4:",
["5863"]="/src/classes/Exceptions/Class System/LoadingClassException.luo:5:",
["5864"]="/src/classes/Exceptions/Class System/LoadingClassException.luo:6:",
["5865"]="/src/classes/Exceptions/Class System/LoadingClassException.luo:7:",
["5902"]="/src/classes/Views/SeparatorView.luo:7:",
["5903"]="/src/classes/Views/SeparatorView.luo:8:",
["5904"]="/src/classes/Views/SeparatorView.luo:9:",
["5905"]="/src/classes/Views/SeparatorView.luo:10:",
["5944"]="/src/classes/Views/MenuItem.luo:17:",
["5945"]="/src/classes/Views/MenuItem.luo:18:",
["5946"]="/src/classes/Views/MenuItem.luo:19:",
["5947"]="/src/classes/Views/MenuItem.luo:20:",
["5948"]="/src/classes/Views/MenuItem.luo:21:",
["5949"]="/src/classes/Views/MenuItem.luo:22:",
["5950"]="/src/classes/Views/MenuItem.luo:23:",
["5951"]="/src/classes/Views/MenuItem.luo:24:",
["5952"]="/src/classes/Views/MenuItem.luo:25:",
["5953"]="/src/classes/Views/MenuItem.luo:74:",
["5954"]="/src/classes/Views/MenuItem.luo:75:",
["5955"]="/src/classes/Views/MenuItem.luo:76:",
["5956"]="/src/classes/Views/MenuItem.luo:93:",
["5957"]="/src/classes/Views/MenuItem.luo:94:",
["5958"]="/src/classes/Views/MenuItem.luo:95:",
["5959"]="/src/classes/Views/MenuItem.luo:96:",
["5960"]="/src/classes/Views/MenuItem.luo:97:",
["5961"]="/src/classes/Views/MenuItem.luo:98:",
["5962"]="/src/classes/Views/MenuItem.luo:99:",
["5963"]="/src/classes/Views/MenuItem.luo:100:",
["5964"]="/src/classes/Views/MenuItem.luo:101:",
["5965"]="/src/classes/Views/MenuItem.luo:102:",
["5966"]="/src/classes/Views/MenuItem.luo:103:",
["5967"]="/src/classes/Views/MenuItem.luo:104:",
["5968"]="/src/classes/Views/MenuItem.luo:123:",
["5969"]="/src/classes/Views/MenuItem.luo:124:",
["5970"]="/src/classes/Views/MenuItem.luo:125:",
["5971"]="/src/classes/Views/MenuItem.luo:126:",
["5972"]="/src/classes/Views/MenuItem.luo:127:",
["5973"]="/src/classes/Views/MenuItem.luo:128:",
["5974"]="/src/classes/Views/MenuItem.luo:129:",
["5975"]="/src/classes/Views/MenuItem.luo:130:",
["5976"]="/src/classes/Views/MenuItem.luo:131:",
["5977"]="/src/classes/Views/MenuItem.luo:132:",
["5978"]="/src/classes/Views/MenuItem.luo:133:",
["5979"]="/src/classes/Views/MenuItem.luo:134:",
["5980"]="/src/classes/Views/MenuItem.luo:135:",
["5981"]="/src/classes/Views/MenuItem.luo:111:",
["5982"]="/src/classes/Views/MenuItem.luo:112:",
["5983"]="/src/classes/Views/MenuItem.luo:113:",
["5984"]="/src/classes/Views/MenuItem.luo:114:",
["5985"]="/src/classes/Views/MenuItem.luo:115:",
["5986"]="/src/classes/Views/MenuItem.luo:116:",
["5987"]="/src/classes/Views/MenuItem.luo:40:",
["5988"]="/src/classes/Views/MenuItem.luo:41:",
["5989"]="/src/classes/Views/MenuItem.luo:42:",
["5990"]="/src/classes/Views/MenuItem.luo:43:",
["5991"]="/src/classes/Views/MenuItem.luo:27:",
["5992"]="/src/classes/Views/MenuItem.luo:28:",
["5993"]="/src/classes/Views/MenuItem.luo:29:",
["5994"]="/src/classes/Views/MenuItem.luo:30:",
["5995"]="/src/classes/Views/MenuItem.luo:31:",
["5996"]="/src/classes/Views/MenuItem.luo:32:",
["5997"]="/src/classes/Views/MenuItem.luo:33:",
["5998"]="/src/classes/Views/MenuItem.luo:34:",
["5999"]="/src/classes/Views/MenuItem.luo:35:",
["6000"]="/src/classes/Views/MenuItem.luo:36:",
["6001"]="/src/classes/Views/MenuItem.luo:37:",
["6002"]="/src/classes/Views/MenuItem.luo:38:",
["6003"]="/src/classes/Views/MenuItem.luo:45:",
["6004"]="/src/classes/Views/MenuItem.luo:46:",
["6005"]="/src/classes/Views/MenuItem.luo:47:",
["6006"]="/src/classes/Views/MenuItem.luo:48:",
["6007"]="/src/classes/Views/MenuItem.luo:49:",
["6008"]="/src/classes/Views/MenuItem.luo:50:",
["6009"]="/src/classes/Views/MenuItem.luo:51:",
["6010"]="/src/classes/Views/MenuItem.luo:52:",
["6011"]="/src/classes/Views/MenuItem.luo:53:",
["6012"]="/src/classes/Views/MenuItem.luo:54:",
["6013"]="/src/classes/Views/MenuItem.luo:55:",
["6014"]="/src/classes/Views/MenuItem.luo:56:",
["6015"]="/src/classes/Views/MenuItem.luo:57:",
["6016"]="/src/classes/Views/MenuItem.luo:58:",
["6074"]="/src/classes/Views/SeparatorMenuItem.luo:8:",
["6075"]="/src/classes/Views/SeparatorMenuItem.luo:9:",
["6076"]="/src/classes/Views/SeparatorMenuItem.luo:10:",
["6077"]="/src/classes/Views/SeparatorMenuItem.luo:11:",
["6078"]="/src/classes/Views/SeparatorMenuItem.luo:12:",
["6079"]="/src/classes/Views/SeparatorMenuItem.luo:22:",
["6080"]="/src/classes/Views/SeparatorMenuItem.luo:23:",
["6081"]="/src/classes/Views/SeparatorMenuItem.luo:24:",
["6082"]="/src/classes/Views/SeparatorMenuItem.luo:25:",
["6083"]="/src/classes/Views/SeparatorMenuItem.luo:14:",
["6084"]="/src/classes/Views/SeparatorMenuItem.luo:15:",
["6085"]="/src/classes/Views/SeparatorMenuItem.luo:16:",
["6086"]="/src/classes/Views/SeparatorMenuItem.luo:17:",
["6087"]="/src/classes/Views/SeparatorMenuItem.luo:18:",
["6088"]="/src/classes/Views/SeparatorMenuItem.luo:19:",
["6089"]="/src/classes/Views/SeparatorMenuItem.luo:20:",
["6156"]="/src/classes/Views/SearchBox.luo:6:",
["6157"]="/src/classes/Views/SearchBox.luo:7:",
["6158"]="/src/classes/Views/SearchBox.luo:8:",
["6159"]="/src/classes/Views/SearchBox.luo:9:",
["6160"]="/src/classes/Views/SearchBox.luo:10:",
["6161"]="/src/classes/Views/SearchBox.luo:11:",
["6165"]="/src/classes/File Associations/UnknownFileAssociation.luo:4:",
["6166"]="/src/classes/File Associations/UnknownFileAssociation.luo:5:",
["6167"]="/src/classes/File Associations/UnknownFileAssociation.luo:6:",
["6168"]="/src/classes/File Associations/UnknownFileAssociation.luo:7:",
["6169"]="/src/classes/File Associations/UnknownFileAssociation.luo:8:",
["6170"]="/src/classes/File Associations/UnknownFileAssociation.luo:9:",
["6171"]="/src/classes/File Associations/UnknownFileAssociation.luo:10:",
["6172"]="/src/classes/File Associations/UnknownFileAssociation.luo:11:",
["6173"]="/src/classes/File Associations/UnknownFileAssociation.luo:12:",
["6269"]="/src/classes/Views/Radio.luo:11:",
["6270"]="/src/classes/Views/Radio.luo:12:",
["6271"]="/src/classes/Views/Radio.luo:13:",
["6272"]="/src/classes/Views/Radio.luo:14:",
["6273"]="/src/classes/Views/Radio.luo:15:",
["6274"]="/src/classes/Views/Radio.luo:16:",
["6275"]="/src/classes/Views/Radio.luo:17:",
["6276"]="/src/classes/Views/Radio.luo:43:",
["6277"]="/src/classes/Views/Radio.luo:44:",
["6278"]="/src/classes/Views/Radio.luo:45:",
["6279"]="/src/classes/Views/Radio.luo:69:",
["6280"]="/src/classes/Views/Radio.luo:70:",
["6281"]="/src/classes/Views/Radio.luo:71:",
["6282"]="/src/classes/Views/Radio.luo:72:",
["6283"]="/src/classes/Views/Radio.luo:73:",
["6284"]="/src/classes/Views/Radio.luo:74:",
["6285"]="/src/classes/Views/Radio.luo:75:",
["6286"]="/src/classes/Views/Radio.luo:76:",
["6287"]="/src/classes/Views/Radio.luo:77:",
["6288"]="/src/classes/Views/Radio.luo:57:",
["6289"]="/src/classes/Views/Radio.luo:58:",
["6290"]="/src/classes/Views/Radio.luo:59:",
["6291"]="/src/classes/Views/Radio.luo:60:",
["6292"]="/src/classes/Views/Radio.luo:61:",
["6293"]="/src/classes/Views/Radio.luo:62:",
["6294"]="/src/classes/Views/Radio.luo:19:",
["6295"]="/src/classes/Views/Radio.luo:20:",
["6296"]="/src/classes/Views/Radio.luo:21:",
["6297"]="/src/classes/Views/Radio.luo:22:",
["6298"]="/src/classes/Views/Radio.luo:23:",
["6299"]="/src/classes/Views/Radio.luo:24:",
["6300"]="/src/classes/Views/Radio.luo:25:",
["6301"]="/src/classes/Views/Radio.luo:84:",
["6302"]="/src/classes/Views/Radio.luo:85:",
["6303"]="/src/classes/Views/Radio.luo:86:",
["6304"]="/src/classes/Views/Radio.luo:87:",
["6305"]="/src/classes/Views/Radio.luo:88:",
["6306"]="/src/classes/Views/Radio.luo:89:",
["6369"]="/src/classes/Views/ProgressBar.luo:15:",
["6370"]="/src/classes/Views/ProgressBar.luo:16:",
["6371"]="/src/classes/Views/ProgressBar.luo:17:",
["6372"]="/src/classes/Views/ProgressBar.luo:18:",
["6373"]="/src/classes/Views/ProgressBar.luo:19:",
["6374"]="/src/classes/Views/ProgressBar.luo:20:",
["6375"]="/src/classes/Views/ProgressBar.luo:21:",
["6376"]="/src/classes/Views/ProgressBar.luo:22:",
["6377"]="/src/classes/Views/ProgressBar.luo:23:",
["6378"]="/src/classes/Views/ProgressBar.luo:24:",
["6379"]="/src/classes/Views/ProgressBar.luo:25:",
["6380"]="/src/classes/Views/ProgressBar.luo:26:",
["6381"]="/src/classes/Views/ProgressBar.luo:27:",
["6382"]="/src/classes/Views/ProgressBar.luo:28:",
["6383"]="/src/classes/Views/ProgressBar.luo:29:",
["6384"]="/src/classes/Views/ProgressBar.luo:30:",
["6385"]="/src/classes/Views/ProgressBar.luo:31:",
["6386"]="/src/classes/Views/ProgressBar.luo:32:",
["6387"]="/src/classes/Views/ProgressBar.luo:33:",
["6388"]="/src/classes/Views/ProgressBar.luo:34:",
["6389"]="/src/classes/Views/ProgressBar.luo:35:",
["6390"]="/src/classes/Views/ProgressBar.luo:36:",
["6391"]="/src/classes/Views/ProgressBar.luo:37:",
["6392"]="/src/classes/Views/ProgressBar.luo:38:",
["6393"]="/src/classes/Views/ProgressBar.luo:39:",
["6394"]="/src/classes/Views/ProgressBar.luo:40:",
["6395"]="/src/classes/Views/ProgressBar.luo:41:",
["6396"]="/src/classes/Views/ProgressBar.luo:42:",
["6397"]="/src/classes/Views/ProgressBar.luo:43:",
["6398"]="/src/classes/Views/ProgressBar.luo:79:",
["6399"]="/src/classes/Views/ProgressBar.luo:80:",
["6400"]="/src/classes/Views/ProgressBar.luo:81:",
["6401"]="/src/classes/Views/ProgressBar.luo:82:",
["6402"]="/src/classes/Views/ProgressBar.luo:83:",
["6468"]="/src/classes/Views/MenuButton.luo:15:",
["6469"]="/src/classes/Views/MenuButton.luo:16:",
["6470"]="/src/classes/Views/MenuButton.luo:17:",
["6471"]="/src/classes/Views/MenuButton.luo:18:",
["6472"]="/src/classes/Views/MenuButton.luo:19:",
["6473"]="/src/classes/Views/MenuButton.luo:20:",
["6474"]="/src/classes/Views/MenuButton.luo:21:",
["6475"]="/src/classes/Views/MenuButton.luo:103:",
["6476"]="/src/classes/Views/MenuButton.luo:104:",
["6477"]="/src/classes/Views/MenuButton.luo:105:",
["6478"]="/src/classes/Views/MenuButton.luo:111:",
["6479"]="/src/classes/Views/MenuButton.luo:112:",
["6480"]="/src/classes/Views/MenuButton.luo:113:",
["6481"]="/src/classes/Views/MenuButton.luo:114:",
["6482"]="/src/classes/Views/MenuButton.luo:115:",
["6483"]="/src/classes/Views/MenuButton.luo:116:",
["6484"]="/src/classes/Views/MenuButton.luo:117:",
["6485"]="/src/classes/Views/MenuButton.luo:118:",
["6486"]="/src/classes/Views/MenuButton.luo:119:",
["6487"]="/src/classes/Views/MenuButton.luo:55:",
["6488"]="/src/classes/Views/MenuButton.luo:56:",
["6489"]="/src/classes/Views/MenuButton.luo:57:",
["6490"]="/src/classes/Views/MenuButton.luo:58:",
["6491"]="/src/classes/Views/MenuButton.luo:59:",
["6492"]="/src/classes/Views/MenuButton.luo:60:",
["6493"]="/src/classes/Views/MenuButton.luo:61:",
["6494"]="/src/classes/Views/MenuButton.luo:62:",
["6495"]="/src/classes/Views/MenuButton.luo:63:",
["6496"]="/src/classes/Views/MenuButton.luo:64:",
["6497"]="/src/classes/Views/MenuButton.luo:65:",
["6498"]="/src/classes/Views/MenuButton.luo:38:",
["6499"]="/src/classes/Views/MenuButton.luo:39:",
["6500"]="/src/classes/Views/MenuButton.luo:40:",
["6501"]="/src/classes/Views/MenuButton.luo:41:",
["6502"]="/src/classes/Views/MenuButton.luo:42:",
["6503"]="/src/classes/Views/MenuButton.luo:43:",
["6504"]="/src/classes/Views/MenuButton.luo:44:",
["6505"]="/src/classes/Views/MenuButton.luo:45:",
["6506"]="/src/classes/Views/MenuButton.luo:46:",
["6507"]="/src/classes/Views/MenuButton.luo:47:",
["6508"]="/src/classes/Views/MenuButton.luo:48:",
["6509"]="/src/classes/Views/MenuButton.luo:49:",
["6510"]="/src/classes/Views/MenuButton.luo:50:",
["6511"]="/src/classes/Views/MenuButton.luo:51:",
["6512"]="/src/classes/Views/MenuButton.luo:52:",
["6513"]="/src/classes/Views/MenuButton.luo:53:",
["6514"]="/src/classes/Views/MenuButton.luo:23:",
["6515"]="/src/classes/Views/MenuButton.luo:24:",
["6516"]="/src/classes/Views/MenuButton.luo:25:",
["6517"]="/src/classes/Views/MenuButton.luo:26:",
["6518"]="/src/classes/Views/MenuButton.luo:27:",
["6519"]="/src/classes/Views/MenuButton.luo:28:",
["6520"]="/src/classes/Views/MenuButton.luo:29:",
["6521"]="/src/classes/Views/MenuButton.luo:30:",
["6522"]="/src/classes/Views/MenuButton.luo:31:",
["6523"]="/src/classes/Views/MenuButton.luo:32:",
["6524"]="/src/classes/Views/MenuButton.luo:33:",
["6525"]="/src/classes/Views/MenuButton.luo:34:",
["6526"]="/src/classes/Views/MenuButton.luo:35:",
["6527"]="/src/classes/Views/MenuButton.luo:36:",
["6528"]="/src/classes/Views/MenuButton.luo:126:",
["6529"]="/src/classes/Views/MenuButton.luo:127:",
["6530"]="/src/classes/Views/MenuButton.luo:128:",
["6531"]="/src/classes/Views/MenuButton.luo:129:",
["6532"]="/src/classes/Views/MenuButton.luo:130:",
["6533"]="/src/classes/Views/MenuButton.luo:131:",
["6534"]="/src/classes/Views/MenuButton.luo:132:",
["6535"]="/src/classes/Views/MenuButton.luo:133:",
["6536"]="/src/classes/Views/MenuButton.luo:134:",
["6537"]="/src/classes/Views/MenuButton.luo:135:",
["6600"]="/src/classes/Views/MenuBarItem.luo:20:",
["6601"]="/src/classes/Views/MenuBarItem.luo:21:",
["6602"]="/src/classes/Views/MenuBarItem.luo:22:",
["6603"]="/src/classes/Views/MenuBarItem.luo:23:",
["6604"]="/src/classes/Views/MenuBarItem.luo:24:",
["6605"]="/src/classes/Views/MenuBarItem.luo:25:",
["6606"]="/src/classes/Views/MenuBarItem.luo:26:",
["6607"]="/src/classes/Views/MenuBarItem.luo:27:",
["6608"]="/src/classes/Views/MenuBarItem.luo:28:",
["6609"]="/src/classes/Views/MenuBarItem.luo:29:",
["6610"]="/src/classes/Views/MenuBarItem.luo:30:",
["6611"]="/src/classes/Views/MenuBarItem.luo:31:",
["6612"]="/src/classes/Views/MenuBarItem.luo:32:",
["6613"]="/src/classes/Views/MenuBarItem.luo:33:",
["6614"]="/src/classes/Views/MenuBarItem.luo:34:",
["6615"]="/src/classes/Views/MenuBarItem.luo:35:",
["6616"]="/src/classes/Views/MenuBarItem.luo:36:",
["6617"]="/src/classes/Views/MenuBarItem.luo:37:",
["6618"]="/src/classes/Views/MenuBarItem.luo:164:",
["6619"]="/src/classes/Views/MenuBarItem.luo:165:",
["6620"]="/src/classes/Views/MenuBarItem.luo:166:",
["6621"]="/src/classes/Views/MenuBarItem.luo:167:",
["6622"]="/src/classes/Views/MenuBarItem.luo:168:",
["6623"]="/src/classes/Views/MenuBarItem.luo:169:",
["6624"]="/src/classes/Views/MenuBarItem.luo:110:",
["6625"]="/src/classes/Views/MenuBarItem.luo:111:",
["6626"]="/src/classes/Views/MenuBarItem.luo:112:",
["6627"]="/src/classes/Views/MenuBarItem.luo:176:",
["6628"]="/src/classes/Views/MenuBarItem.luo:177:",
["6629"]="/src/classes/Views/MenuBarItem.luo:178:",
["6630"]="/src/classes/Views/MenuBarItem.luo:179:",
["6631"]="/src/classes/Views/MenuBarItem.luo:180:",
["6632"]="/src/classes/Views/MenuBarItem.luo:181:",
["6633"]="/src/classes/Views/MenuBarItem.luo:182:",
["6634"]="/src/classes/Views/MenuBarItem.luo:183:",
["6635"]="/src/classes/Views/MenuBarItem.luo:184:",
["6636"]="/src/classes/Views/MenuBarItem.luo:185:",
["6637"]="/src/classes/Views/MenuBarItem.luo:57:",
["6638"]="/src/classes/Views/MenuBarItem.luo:58:",
["6639"]="/src/classes/Views/MenuBarItem.luo:59:",
["6640"]="/src/classes/Views/MenuBarItem.luo:60:",
["6641"]="/src/classes/Views/MenuBarItem.luo:61:",
["6642"]="/src/classes/Views/MenuBarItem.luo:62:",
["6643"]="/src/classes/Views/MenuBarItem.luo:63:",
["6644"]="/src/classes/Views/MenuBarItem.luo:70:",
["6645"]="/src/classes/Views/MenuBarItem.luo:71:",
["6646"]="/src/classes/Views/MenuBarItem.luo:72:",
["6647"]="/src/classes/Views/MenuBarItem.luo:73:",
["6648"]="/src/classes/Views/MenuBarItem.luo:74:",
["6649"]="/src/classes/Views/MenuBarItem.luo:75:",
["6650"]="/src/classes/Views/MenuBarItem.luo:76:",
["6651"]="/src/classes/Views/MenuBarItem.luo:77:",
["6652"]="/src/classes/Views/MenuBarItem.luo:78:",
["6653"]="/src/classes/Views/MenuBarItem.luo:79:",
["6654"]="/src/classes/Views/MenuBarItem.luo:39:",
["6655"]="/src/classes/Views/MenuBarItem.luo:40:",
["6656"]="/src/classes/Views/MenuBarItem.luo:41:",
["6657"]="/src/classes/Views/MenuBarItem.luo:42:",
["6658"]="/src/classes/Views/MenuBarItem.luo:43:",
["6659"]="/src/classes/Views/MenuBarItem.luo:44:",
["6660"]="/src/classes/Views/MenuBarItem.luo:45:",
["6661"]="/src/classes/Views/MenuBarItem.luo:46:",
["6662"]="/src/classes/Views/MenuBarItem.luo:47:",
["6663"]="/src/classes/Views/MenuBarItem.luo:48:",
["6664"]="/src/classes/Views/MenuBarItem.luo:49:",
["6665"]="/src/classes/Views/MenuBarItem.luo:50:",
["6666"]="/src/classes/Views/MenuBarItem.luo:51:",
["6667"]="/src/classes/Views/MenuBarItem.luo:52:",
["6668"]="/src/classes/Views/MenuBarItem.luo:53:",
["6669"]="/src/classes/Views/MenuBarItem.luo:54:",
["6670"]="/src/classes/Views/MenuBarItem.luo:55:",
["6671"]="/src/classes/Views/MenuBarItem.luo:150:",
["6672"]="/src/classes/Views/MenuBarItem.luo:151:",
["6673"]="/src/classes/Views/MenuBarItem.luo:152:",
["6674"]="/src/classes/Views/MenuBarItem.luo:153:",
["6675"]="/src/classes/Views/MenuBarItem.luo:154:",
["6676"]="/src/classes/Views/MenuBarItem.luo:155:",
["6677"]="/src/classes/Views/MenuBarItem.luo:156:",
["6678"]="/src/classes/Views/MenuBarItem.luo:157:",
["6679"]="/src/classes/Views/MenuBarItem.luo:158:",
["6680"]="/src/classes/Views/MenuBarItem.luo:65:",
["6681"]="/src/classes/Views/MenuBarItem.luo:66:",
["6682"]="/src/classes/Views/MenuBarItem.luo:67:",
["6683"]="/src/classes/Views/MenuBarItem.luo:68:",
["6684"]="/src/classes/Views/MenuBarItem.luo:94:",
["6685"]="/src/classes/Views/MenuBarItem.luo:95:",
["6686"]="/src/classes/Views/MenuBarItem.luo:96:",
["6687"]="/src/classes/Views/MenuBarItem.luo:97:",
["6688"]="/src/classes/Views/MenuBarItem.luo:98:",
["6689"]="/src/classes/Views/MenuBarItem.luo:99:",
["6690"]="/src/classes/Views/MenuBarItem.luo:100:",
["6691"]="/src/classes/Views/MenuBarItem.luo:101:",
["6692"]="/src/classes/Views/MenuBarItem.luo:102:",
["6693"]="/src/classes/Views/MenuBarItem.luo:103:",
["6694"]="/src/classes/Views/MenuBarItem.luo:104:",
["6695"]="/src/classes/Views/MenuBarItem.luo:105:",
["6696"]="/src/classes/Views/MenuBarItem.luo:131:",
["6697"]="/src/classes/Views/MenuBarItem.luo:132:",
["6698"]="/src/classes/Views/MenuBarItem.luo:133:",
["6765"]="/System/classes/TopBar/TopBarSeparatorView.luo:7:",
["6766"]="/System/classes/TopBar/TopBarSeparatorView.luo:8:",
["6767"]="/System/classes/TopBar/TopBarSeparatorView.luo:9:",
["6768"]="/System/classes/TopBar/TopBarSeparatorView.luo:10:",
["6769"]="/System/classes/TopBar/TopBarSeparatorView.luo:11:",
["6860"]="/src/classes/Events/Mouse Events/MouseEvent.luo:23:",
["6861"]="/src/classes/Events/Mouse Events/MouseEvent.luo:24:",
["6862"]="/src/classes/Events/Mouse Events/MouseEvent.luo:25:",
["6863"]="/src/classes/Events/Mouse Events/MouseEvent.luo:26:",
["6864"]="/src/classes/Events/Mouse Events/MouseEvent.luo:27:",
["6865"]="/src/classes/Events/Mouse Events/MouseEvent.luo:28:",
["6866"]="/src/classes/Events/Mouse Events/MouseEvent.luo:29:",
["6867"]="/src/classes/Events/Mouse Events/MouseEvent.luo:30:",
["6868"]="/src/classes/Events/Mouse Events/MouseEvent.luo:31:",
["6869"]="/src/classes/Events/Mouse Events/MouseEvent.luo:32:",
["6870"]="/src/classes/Events/Mouse Events/MouseEvent.luo:33:",
["6871"]="/src/classes/Events/Mouse Events/MouseEvent.luo:34:",
["6872"]="/src/classes/Events/Mouse Events/MouseEvent.luo:35:",
["6873"]="/src/classes/Events/Mouse Events/MouseEvent.luo:36:",
["6874"]="/src/classes/Events/Mouse Events/MouseEvent.luo:37:",
["6875"]="/src/classes/Events/Mouse Events/MouseEvent.luo:38:",
["6876"]="/src/classes/Events/Mouse Events/MouseEvent.luo:39:",
["6877"]="/src/classes/Events/Mouse Events/MouseEvent.luo:40:",
["6878"]="/src/classes/Events/Mouse Events/MouseEvent.luo:41:",
["6879"]="/src/classes/Events/Mouse Events/MouseEvent.luo:42:",
["6880"]="/src/classes/Events/Mouse Events/MouseEvent.luo:43:",
["6881"]="/src/classes/Events/Mouse Events/MouseEvent.luo:44:",
["6882"]="/src/classes/Events/Mouse Events/MouseEvent.luo:45:",
["6883"]="/src/classes/Events/Mouse Events/MouseEvent.luo:46:",
["6884"]="/src/classes/Events/Mouse Events/MouseEvent.luo:47:",
["6908"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:14:",
["6909"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:15:",
["6910"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:16:",
["6911"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:17:",
["6912"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:18:",
["6913"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:19:",
["6914"]="/src/classes/Events/Mouse Events/ScrollMouseEvent.luo:20:",
["6961"]="/src/classes/Views/Label.luo:41:",
["6962"]="/src/classes/Views/Label.luo:42:",
["6963"]="/src/classes/Views/Label.luo:43:",
["6964"]="/src/classes/Views/Label.luo:44:",
["6965"]="/src/classes/Views/Label.luo:45:",
["6966"]="/src/classes/Views/Label.luo:46:",
["6967"]="/src/classes/Views/Label.luo:47:",
["6968"]="/src/classes/Views/Label.luo:48:",
["6969"]="/src/classes/Views/Label.luo:49:",
["6970"]="/src/classes/Views/Label.luo:15:",
["6971"]="/src/classes/Views/Label.luo:16:",
["6972"]="/src/classes/Views/Label.luo:17:",
["6973"]="/src/classes/Views/Label.luo:11:",
["6974"]="/src/classes/Views/Label.luo:12:",
["6975"]="/src/classes/Views/Label.luo:13:",
["6976"]="/src/classes/Views/Label.luo:34:",
["6977"]="/src/classes/Views/Label.luo:35:",
["6978"]="/src/classes/Views/Label.luo:36:",
["6979"]="/src/classes/Views/Label.luo:37:",
["6980"]="/src/classes/Views/Label.luo:38:",
["6981"]="/src/classes/Views/Label.luo:39:",
["7006"]="/src/classes/Events/Interface Events/ParentChangedInterfaceEvent.luo:9:",
["7007"]="/src/classes/Events/Interface Events/ParentChangedInterfaceEvent.luo:10:",
["7008"]="/src/classes/Events/Interface Events/ParentChangedInterfaceEvent.luo:11:",
["7009"]="/src/classes/Events/Interface Events/ParentChangedInterfaceEvent.luo:12:",
["7010"]="/src/classes/Graphics/RectangleMask.luo:6:",
["7011"]="/src/classes/Graphics/RectangleMask.luo:7:",
["7012"]="/src/classes/Graphics/RectangleMask.luo:8:",
["7013"]="/src/classes/Graphics/RectangleMask.luo:9:",
["7014"]="/src/classes/Graphics/RectangleMask.luo:10:",
["7015"]="/src/classes/Graphics/RectangleMask.luo:11:",
["7016"]="/src/classes/Graphics/RectangleMask.luo:12:",
["7017"]="/src/classes/Graphics/RectangleMask.luo:13:",
["7052"]="/src/classes/Clipboard/Drag and Drop/DragView.luo:5:",
["7053"]="/src/classes/Clipboard/Drag and Drop/DragView.luo:6:",
["7054"]="/src/classes/Clipboard/Drag and Drop/DragView.luo:7:",
["7133"]="/src/classes/File System/Metadata.luo:111:",
["7134"]="/src/classes/File System/Metadata.luo:112:",
["7135"]="/src/classes/File System/Metadata.luo:113:",
["7136"]="/src/classes/File System/Metadata.luo:114:",
["7137"]="/src/classes/File System/Metadata.luo:115:",
["7138"]="/src/classes/File System/Metadata.luo:245:",
["7139"]="/src/classes/File System/Metadata.luo:246:",
["7140"]="/src/classes/File System/Metadata.luo:247:",
["7141"]="/src/classes/File System/Metadata.luo:248:",
["7142"]="/src/classes/File System/Metadata.luo:249:",
["7143"]="/src/classes/File System/Metadata.luo:250:",
["7144"]="/src/classes/File System/Metadata.luo:260:",
["7145"]="/src/classes/File System/Metadata.luo:261:",
["7146"]="/src/classes/File System/Metadata.luo:262:",
["7147"]="/src/classes/File System/Metadata.luo:149:",
["7148"]="/src/classes/File System/Metadata.luo:150:",
["7149"]="/src/classes/File System/Metadata.luo:151:",
["7150"]="/src/classes/File System/Metadata.luo:152:",
["7151"]="/src/classes/File System/Metadata.luo:153:",
["7152"]="/src/classes/File System/Metadata.luo:154:",
["7153"]="/src/classes/File System/Metadata.luo:155:",
["7154"]="/src/classes/File System/Metadata.luo:156:",
["7155"]="/src/classes/File System/Metadata.luo:157:",
["7156"]="/src/classes/File System/Metadata.luo:158:",
["7157"]="/src/classes/File System/Metadata.luo:159:",
["7158"]="/src/classes/File System/Metadata.luo:160:",
["7159"]="/src/classes/File System/Metadata.luo:161:",
["7160"]="/src/classes/File System/Metadata.luo:162:",
["7161"]="/src/classes/File System/Metadata.luo:252:",
["7162"]="/src/classes/File System/Metadata.luo:253:",
["7163"]="/src/classes/File System/Metadata.luo:254:",
["7164"]="/src/classes/File System/Metadata.luo:214:",
["7165"]="/src/classes/File System/Metadata.luo:215:",
["7166"]="/src/classes/File System/Metadata.luo:216:",
["7167"]="/src/classes/File System/Metadata.luo:217:",
["7168"]="/src/classes/File System/Metadata.luo:218:",
["7169"]="/src/classes/File System/Metadata.luo:219:",
["7170"]="/src/classes/File System/Metadata.luo:220:",
["7171"]="/src/classes/File System/Metadata.luo:117:",
["7172"]="/src/classes/File System/Metadata.luo:118:",
["7173"]="/src/classes/File System/Metadata.luo:119:",
["7174"]="/src/classes/File System/Metadata.luo:120:",
["7175"]="/src/classes/File System/Metadata.luo:121:",
["7176"]="/src/classes/File System/Metadata.luo:122:",
["7177"]="/src/classes/File System/Metadata.luo:123:",
["7178"]="/src/classes/File System/Metadata.luo:124:",
["7179"]="/src/classes/File System/Metadata.luo:125:",
["7180"]="/src/classes/File System/Metadata.luo:126:",
["7181"]="/src/classes/File System/Metadata.luo:127:",
["7182"]="/src/classes/File System/Metadata.luo:128:",
["7183"]="/src/classes/File System/Metadata.luo:129:",
["7184"]="/src/classes/File System/Metadata.luo:130:",
["7185"]="/src/classes/File System/Metadata.luo:131:",
["7186"]="/src/classes/File System/Metadata.luo:132:",
["7187"]="/src/classes/File System/Metadata.luo:133:",
["7188"]="/src/classes/File System/Metadata.luo:134:",
["7189"]="/src/classes/File System/Metadata.luo:135:",
["7190"]="/src/classes/File System/Metadata.luo:136:",
["7191"]="/src/classes/File System/Metadata.luo:137:",
["7192"]="/src/classes/File System/Metadata.luo:138:",
["7193"]="/src/classes/File System/Metadata.luo:139:",
["7194"]="/src/classes/File System/Metadata.luo:140:",
["7195"]="/src/classes/File System/Metadata.luo:141:",
["7196"]="/src/classes/File System/Metadata.luo:142:",
["7197"]="/src/classes/File System/Metadata.luo:143:",
["7198"]="/src/classes/File System/Metadata.luo:144:",
["7199"]="/src/classes/File System/Metadata.luo:145:",
["7200"]="/src/classes/File System/Metadata.luo:146:",
["7201"]="/src/classes/File System/Metadata.luo:147:",
["7202"]="/src/classes/File System/Metadata.luo:256:",
["7203"]="/src/classes/File System/Metadata.luo:257:",
["7204"]="/src/classes/File System/Metadata.luo:258:",
["7205"]="/src/classes/File System/Metadata.luo:164:",
["7206"]="/src/classes/File System/Metadata.luo:165:",
["7207"]="/src/classes/File System/Metadata.luo:166:",
["7208"]="/src/classes/File System/Metadata.luo:167:",
["7209"]="/src/classes/File System/Metadata.luo:168:",
["7210"]="/src/classes/File System/Metadata.luo:169:",
["7211"]="/src/classes/File System/Metadata.luo:170:",
["7212"]="/src/classes/File System/Metadata.luo:171:",
["7213"]="/src/classes/File System/Metadata.luo:172:",
["7214"]="/src/classes/File System/Metadata.luo:173:",
["7215"]="/src/classes/File System/Metadata.luo:179:",
["7216"]="/src/classes/File System/Metadata.luo:180:",
["7217"]="/src/classes/File System/Metadata.luo:181:",
["7218"]="/src/classes/File System/Metadata.luo:182:",
["7219"]="/src/classes/File System/Metadata.luo:183:",
["7220"]="/src/classes/File System/Metadata.luo:184:",
["7221"]="/src/classes/File System/Metadata.luo:185:",
["7222"]="/src/classes/File System/Metadata.luo:239:",
["7223"]="/src/classes/File System/Metadata.luo:240:",
["7224"]="/src/classes/File System/Metadata.luo:241:",
["7225"]="/src/classes/File System/Metadata.luo:242:",
["7226"]="/src/classes/File System/Metadata.luo:243:",
["7227"]="/src/classes/File System/Metadata.luo:222:",
["7228"]="/src/classes/File System/Metadata.luo:223:",
["7229"]="/src/classes/File System/Metadata.luo:224:",
["7230"]="/src/classes/File System/Metadata.luo:225:",
["7231"]="/src/classes/File System/Metadata.luo:226:",
["7232"]="/src/classes/File System/Metadata.luo:227:",
["7233"]="/src/classes/File System/Metadata.luo:228:",
["7234"]="/src/classes/File System/Metadata.luo:229:",
["7235"]="/src/classes/File System/Metadata.luo:230:",
["7236"]="/src/classes/File System/Metadata.luo:231:",
["7237"]="/src/classes/File System/Metadata.luo:232:",
["7238"]="/src/classes/File System/Metadata.luo:233:",
["7239"]="/src/classes/File System/Metadata.luo:234:",
["7240"]="/src/classes/File System/Metadata.luo:235:",
["7241"]="/src/classes/File System/Metadata.luo:236:",
["7242"]="/src/classes/File System/Metadata.luo:237:",
["7243"]="/src/classes/File System/Metadata.luo:191:",
["7244"]="/src/classes/File System/Metadata.luo:192:",
["7245"]="/src/classes/File System/Metadata.luo:193:",
["7246"]="/src/classes/File System/Metadata.luo:194:",
["7247"]="/src/classes/File System/Metadata.luo:195:",
["7248"]="/src/classes/File System/Metadata.luo:196:",
["7249"]="/src/classes/File System/Metadata.luo:197:",
["7250"]="/src/classes/File System/Metadata.luo:198:",
["7251"]="/src/classes/File System/Metadata.luo:199:",
["7252"]="/src/classes/File System/Metadata.luo:200:",
["7253"]="/src/classes/File System/Metadata.luo:201:",
["7254"]="/src/classes/File System/Metadata.luo:202:",
["7255"]="/src/classes/File System/Metadata.luo:203:",
["7256"]="/src/classes/File System/Metadata.luo:204:",
["7257"]="/src/classes/File System/Metadata.luo:205:",
["7258"]="/src/classes/File System/Metadata.luo:206:",
["7259"]="/src/classes/File System/Metadata.luo:207:",
["7260"]="/src/classes/File System/Metadata.luo:208:",
["7261"]="/src/classes/File System/Metadata.luo:209:",
["7262"]="/src/classes/File System/Metadata.luo:210:",
["7263"]="/src/classes/File System/Metadata.luo:211:",
["7264"]="/src/classes/File System/Metadata.luo:212:",
["7335"]="/System/classes/Home/HomeContainer.luo:19:",
["7336"]="/System/classes/Home/HomeContainer.luo:20:",
["7337"]="/System/classes/Home/HomeContainer.luo:21:",
["7338"]="/System/classes/Home/HomeContainer.luo:22:",
["7339"]="/System/classes/Home/HomeContainer.luo:68:",
["7340"]="/System/classes/Home/HomeContainer.luo:69:",
["7341"]="/System/classes/Home/HomeContainer.luo:70:",
["7342"]="/System/classes/Home/HomeContainer.luo:71:",
["7343"]="/System/classes/Home/HomeContainer.luo:61:",
["7344"]="/System/classes/Home/HomeContainer.luo:62:",
["7345"]="/System/classes/Home/HomeContainer.luo:63:",
["7346"]="/System/classes/Home/HomeContainer.luo:64:",
["7347"]="/System/classes/Home/HomeContainer.luo:65:",
["7348"]="/System/classes/Home/HomeContainer.luo:66:",
["7349"]="/System/classes/Home/HomeContainer.luo:24:",
["7350"]="/System/classes/Home/HomeContainer.luo:25:",
["7351"]="/System/classes/Home/HomeContainer.luo:26:",
["7352"]="/System/classes/Home/HomeContainer.luo:33:",
["7353"]="/System/classes/Home/HomeContainer.luo:34:",
["7354"]="/System/classes/Home/HomeContainer.luo:35:",
["7384"]="/src/classes/File Associations/FileAssociationManager.luo:75:",
["7385"]="/src/classes/File Associations/FileAssociationManager.luo:76:",
["7386"]="/src/classes/File Associations/FileAssociationManager.luo:77:",
["7387"]="/src/classes/File Associations/FileAssociationManager.luo:78:",
["7388"]="/src/classes/File Associations/FileAssociationManager.luo:79:",
["7389"]="/src/classes/File Associations/FileAssociationManager.luo:80:",
["7390"]="/src/classes/File Associations/FileAssociationManager.luo:81:",
["7391"]="/src/classes/File Associations/FileAssociationManager.luo:82:",
["7392"]="/src/classes/File Associations/FileAssociationManager.luo:83:",
["7393"]="/src/classes/File Associations/FileAssociationManager.luo:84:",
["7394"]="/src/classes/File Associations/FileAssociationManager.luo:85:",
["7395"]="/src/classes/File Associations/FileAssociationManager.luo:86:",
["7396"]="/src/classes/File Associations/FileAssociationManager.luo:87:",
["7397"]="/src/classes/File Associations/FileAssociationManager.luo:88:",
["7398"]="/src/classes/File Associations/FileAssociationManager.luo:89:",
["7399"]="/src/classes/File Associations/FileAssociationManager.luo:90:",
["7400"]="/src/classes/File Associations/FileAssociationManager.luo:91:",
["7401"]="/src/classes/File Associations/FileAssociationManager.luo:92:",
["7402"]="/src/classes/File Associations/FileAssociationManager.luo:93:",
["7403"]="/src/classes/File Associations/FileAssociationManager.luo:94:",
["7404"]="/src/classes/File Associations/FileAssociationManager.luo:95:",
["7405"]="/src/classes/File Associations/FileAssociationManager.luo:96:",
["7406"]="/src/classes/File Associations/FileAssociationManager.luo:97:",
["7407"]="/src/classes/File Associations/FileAssociationManager.luo:102:",
["7408"]="/src/classes/File Associations/FileAssociationManager.luo:103:",
["7409"]="/src/classes/File Associations/FileAssociationManager.luo:104:",
["7410"]="/src/classes/File Associations/FileAssociationManager.luo:15:",
["7411"]="/src/classes/File Associations/FileAssociationManager.luo:16:",
["7412"]="/src/classes/File Associations/FileAssociationManager.luo:17:",
["7413"]="/src/classes/File Associations/FileAssociationManager.luo:18:",
["7414"]="/src/classes/File Associations/FileAssociationManager.luo:19:",
["7415"]="/src/classes/File Associations/FileAssociationManager.luo:20:",
["7416"]="/src/classes/File Associations/FileAssociationManager.luo:21:",
["7417"]="/src/classes/File Associations/FileAssociationManager.luo:22:",
["7418"]="/src/classes/File Associations/FileAssociationManager.luo:23:",
["7419"]="/src/classes/File Associations/FileAssociationManager.luo:24:",
["7420"]="/src/classes/File Associations/FileAssociationManager.luo:25:",
["7421"]="/src/classes/File Associations/FileAssociationManager.luo:26:",
["7422"]="/src/classes/File Associations/FileAssociationManager.luo:27:",
["7423"]="/src/classes/File Associations/FileAssociationManager.luo:28:",
["7424"]="/src/classes/File Associations/FileAssociationManager.luo:29:",
["7425"]="/src/classes/File Associations/FileAssociationManager.luo:30:",
["7426"]="/src/classes/File Associations/FileAssociationManager.luo:31:",
["7427"]="/src/classes/File Associations/FileAssociationManager.luo:32:",
["7428"]="/src/classes/File Associations/FileAssociationManager.luo:33:",
["7429"]="/src/classes/File Associations/FileAssociationManager.luo:34:",
["7430"]="/src/classes/File Associations/FileAssociationManager.luo:35:",
["7431"]="/src/classes/File Associations/FileAssociationManager.luo:36:",
["7432"]="/src/classes/File Associations/FileAssociationManager.luo:37:",
["7433"]="/src/classes/File Associations/FileAssociationManager.luo:38:",
["7434"]="/src/classes/File Associations/FileAssociationManager.luo:39:",
["7435"]="/src/classes/File Associations/FileAssociationManager.luo:40:",
["7436"]="/src/classes/File Associations/FileAssociationManager.luo:41:",
["7437"]="/src/classes/File Associations/FileAssociationManager.luo:42:",
["7438"]="/src/classes/File Associations/FileAssociationManager.luo:43:",
["7439"]="/src/classes/File Associations/FileAssociationManager.luo:44:",
["7440"]="/src/classes/File Associations/FileAssociationManager.luo:46:",
["7441"]="/src/classes/File Associations/FileAssociationManager.luo:47:",
["7442"]="/src/classes/File Associations/FileAssociationManager.luo:48:",
["7443"]="/src/classes/File Associations/FileAssociationManager.luo:49:",
["7444"]="/src/classes/File Associations/FileAssociationManager.luo:50:",
["7445"]="/src/classes/File Associations/FileAssociationManager.luo:51:",
["7446"]="/src/classes/File Associations/FileAssociationManager.luo:52:",
["7447"]="/src/classes/File Associations/FileAssociationManager.luo:53:",
["7448"]="/src/classes/File Associations/FileAssociationManager.luo:54:",
["7449"]="/src/classes/File Associations/FileAssociationManager.luo:55:",
["7450"]="/src/classes/File Associations/FileAssociationManager.luo:56:",
["7451"]="/src/classes/File Associations/FileAssociationManager.luo:57:",
["7452"]="/src/classes/File Associations/FileAssociationManager.luo:58:",
["7453"]="/src/classes/File Associations/FileAssociationManager.luo:59:",
["7454"]="/src/classes/File Associations/FileAssociationManager.luo:60:",
["7455"]="/src/classes/File Associations/FileAssociationManager.luo:61:",
["7456"]="/src/classes/File Associations/FileAssociationManager.luo:62:",
["7457"]="/src/classes/File Associations/FileAssociationManager.luo:63:",
["7458"]="/src/classes/File Associations/FileAssociationManager.luo:64:",
["7459"]="/src/classes/File Associations/FileAssociationManager.luo:65:",
["7460"]="/src/classes/File Associations/FileAssociationManager.luo:66:",
["7461"]="/src/classes/File Associations/FileAssociationManager.luo:67:",
["7462"]="/src/classes/File Associations/FileAssociationManager.luo:68:",
["7463"]="/src/classes/File Associations/FileAssociationManager.luo:69:",
["7464"]="/src/classes/File Associations/FileAssociationManager.luo:70:",
["7480"]="/src/classes/Utilities/KeyboardShortcutManager.luo:95:",
["7481"]="/src/classes/Utilities/KeyboardShortcutManager.luo:96:",
["7482"]="/src/classes/Utilities/KeyboardShortcutManager.luo:97:",
["7483"]="/src/classes/Utilities/KeyboardShortcutManager.luo:104:",
["7484"]="/src/classes/Utilities/KeyboardShortcutManager.luo:105:",
["7485"]="/src/classes/Utilities/KeyboardShortcutManager.luo:106:",
["7486"]="/src/classes/Utilities/KeyboardShortcutManager.luo:107:",
["7487"]="/src/classes/Utilities/KeyboardShortcutManager.luo:108:",
["7488"]="/src/classes/Utilities/KeyboardShortcutManager.luo:109:",
["7489"]="/src/classes/Utilities/KeyboardShortcutManager.luo:110:",
["7490"]="/src/classes/Utilities/KeyboardShortcutManager.luo:111:",
["7491"]="/src/classes/Utilities/KeyboardShortcutManager.luo:112:",
["7492"]="/src/classes/Utilities/KeyboardShortcutManager.luo:86:",
["7493"]="/src/classes/Utilities/KeyboardShortcutManager.luo:87:",
["7494"]="/src/classes/Utilities/KeyboardShortcutManager.luo:88:",
["7499"]="/src/classes/Utilities/KeyboardShortcutManager.luo:40:",
["7500"]="/src/classes/Utilities/KeyboardShortcutManager.luo:41:",
["7501"]="/src/classes/Utilities/KeyboardShortcutManager.luo:42:",
["7502"]="/src/classes/Utilities/KeyboardShortcutManager.luo:43:",
["7503"]="/src/classes/Utilities/KeyboardShortcutManager.luo:44:",
["7504"]="/src/classes/Utilities/KeyboardShortcutManager.luo:45:",
["7505"]="/src/classes/Utilities/KeyboardShortcutManager.luo:63:",
["7506"]="/src/classes/Utilities/KeyboardShortcutManager.luo:64:",
["7507"]="/src/classes/Utilities/KeyboardShortcutManager.luo:65:",
["7508"]="/src/classes/Utilities/KeyboardShortcutManager.luo:125:",
["7509"]="/src/classes/Utilities/KeyboardShortcutManager.luo:126:",
["7510"]="/src/classes/Utilities/KeyboardShortcutManager.luo:127:",
["7511"]="/src/classes/Utilities/KeyboardShortcutManager.luo:128:",
["7512"]="/src/classes/Utilities/KeyboardShortcutManager.luo:129:",
["7513"]="/src/classes/Utilities/KeyboardShortcutManager.luo:130:",
["7514"]="/src/classes/Utilities/KeyboardShortcutManager.luo:57:",
["7515"]="/src/classes/Utilities/KeyboardShortcutManager.luo:58:",
["7516"]="/src/classes/Utilities/KeyboardShortcutManager.luo:59:",
["7517"]="/src/classes/Utilities/KeyboardShortcutManager.luo:60:",
["7518"]="/src/classes/Utilities/KeyboardShortcutManager.luo:61:",
["7519"]="/src/classes/Utilities/KeyboardShortcutManager.luo:117:",
["7520"]="/src/classes/Utilities/KeyboardShortcutManager.luo:118:",
["7521"]="/src/classes/Utilities/KeyboardShortcutManager.luo:119:",
["7522"]="/src/classes/Utilities/KeyboardShortcutManager.luo:67:",
["7523"]="/src/classes/Utilities/KeyboardShortcutManager.luo:68:",
["7524"]="/src/classes/Utilities/KeyboardShortcutManager.luo:69:",
["7525"]="/src/classes/Utilities/KeyboardShortcutManager.luo:70:",
["7526"]="/src/classes/Utilities/KeyboardShortcutManager.luo:71:",
["7527"]="/src/classes/Utilities/KeyboardShortcutManager.luo:72:",
["7528"]="/src/classes/Utilities/KeyboardShortcutManager.luo:73:",
["7529"]="/src/classes/Utilities/KeyboardShortcutManager.luo:74:",
["7530"]="/src/classes/Utilities/KeyboardShortcutManager.luo:75:",
["7531"]="/src/classes/Utilities/KeyboardShortcutManager.luo:76:",
["7532"]="/src/classes/Utilities/KeyboardShortcutManager.luo:77:",
["7533"]="/src/classes/Utilities/KeyboardShortcutManager.luo:78:",
["7534"]="/src/classes/Utilities/KeyboardShortcutManager.luo:79:",
["7535"]="/src/classes/Utilities/KeyboardShortcutManager.luo:47:",
["7536"]="/src/classes/Utilities/KeyboardShortcutManager.luo:48:",
["7537"]="/src/classes/Utilities/KeyboardShortcutManager.luo:49:",
["7538"]="/src/classes/Utilities/KeyboardShortcutManager.luo:50:",
["7539"]="/src/classes/Utilities/KeyboardShortcutManager.luo:51:",
["7540"]="/src/classes/Utilities/KeyboardShortcutManager.luo:52:",
["7541"]="/src/classes/Utilities/KeyboardShortcutManager.luo:53:",
["7542"]="/src/classes/Utilities/KeyboardShortcutManager.luo:54:",
["7543"]="/src/classes/Utilities/KeyboardShortcutManager.luo:55:",
["7591"]="/System/classes/TopBar/TopBarItem.luo:23:",
["7592"]="/System/classes/TopBar/TopBarItem.luo:24:",
["7593"]="/System/classes/TopBar/TopBarItem.luo:25:",
["7594"]="/System/classes/TopBar/TopBarItem.luo:26:",
["7595"]="/System/classes/TopBar/TopBarItem.luo:27:",
["7596"]="/System/classes/TopBar/TopBarItem.luo:47:",
["7597"]="/System/classes/TopBar/TopBarItem.luo:48:",
["7598"]="/System/classes/TopBar/TopBarItem.luo:49:",
["7599"]="/System/classes/TopBar/TopBarItem.luo:64:",
["7600"]="/System/classes/TopBar/TopBarItem.luo:65:",
["7601"]="/System/classes/TopBar/TopBarItem.luo:66:",
["7602"]="/System/classes/TopBar/TopBarItem.luo:67:",
["7603"]="/System/classes/TopBar/TopBarItem.luo:68:",
["7604"]="/System/classes/TopBar/TopBarItem.luo:69:",
["7605"]="/System/classes/TopBar/TopBarItem.luo:70:",
["7606"]="/System/classes/TopBar/TopBarItem.luo:71:",
["7607"]="/System/classes/TopBar/TopBarItem.luo:72:",
["7608"]="/System/classes/TopBar/TopBarItem.luo:73:",
["7609"]="/System/classes/TopBar/TopBarItem.luo:74:",
["7610"]="/System/classes/TopBar/TopBarItem.luo:75:",
["7611"]="/System/classes/TopBar/TopBarItem.luo:76:",
["7612"]="/System/classes/TopBar/TopBarItem.luo:77:",
["7613"]="/System/classes/TopBar/TopBarItem.luo:29:",
["7614"]="/System/classes/TopBar/TopBarItem.luo:30:",
["7615"]="/System/classes/TopBar/TopBarItem.luo:31:",
["7616"]="/System/classes/TopBar/TopBarItem.luo:32:",
["7617"]="/System/classes/TopBar/TopBarItem.luo:33:",
["7618"]="/System/classes/TopBar/TopBarItem.luo:34:",
["7619"]="/System/classes/TopBar/TopBarItem.luo:35:",
["7620"]="/System/classes/TopBar/TopBarItem.luo:36:",
["7621"]="/System/classes/TopBar/TopBarItem.luo:37:",
["7622"]="/System/classes/TopBar/TopBarItem.luo:38:",
["7623"]="/System/classes/TopBar/TopBarItem.luo:39:",
["7624"]="/System/classes/TopBar/TopBarItem.luo:40:",
["7625"]="/System/classes/TopBar/TopBarItem.luo:56:",
["7626"]="/System/classes/TopBar/TopBarItem.luo:57:",
["7627"]="/System/classes/TopBar/TopBarItem.luo:58:",
["7628"]="/System/classes/TopBar/TopBarItem.luo:59:",
["7629"]="/System/classes/TopBar/TopBarItem.luo:60:",
["7630"]="/System/classes/TopBar/TopBarItem.luo:61:",
["7631"]="/System/classes/TopBar/TopBarItem.luo:62:",
["7693"]="/System/classes/TopBar/ClockItem.luo:9:",
["7694"]="/System/classes/TopBar/ClockItem.luo:10:",
["7695"]="/System/classes/TopBar/ClockItem.luo:11:",
["7696"]="/System/classes/TopBar/ClockItem.luo:12:",
["7697"]="/System/classes/TopBar/ClockItem.luo:13:",
["7698"]="/System/classes/TopBar/ClockItem.luo:103:",
["7699"]="/System/classes/TopBar/ClockItem.luo:104:",
["7700"]="/System/classes/TopBar/ClockItem.luo:105:",
["7701"]="/System/classes/TopBar/ClockItem.luo:106:",
["7702"]="/System/classes/TopBar/ClockItem.luo:107:",
["7703"]="/System/classes/TopBar/ClockItem.luo:108:",
["7704"]="/System/classes/TopBar/ClockItem.luo:109:",
["7705"]="/System/classes/TopBar/ClockItem.luo:110:",
["7706"]="/System/classes/TopBar/ClockItem.luo:111:",
["7707"]="/System/classes/TopBar/ClockItem.luo:112:",
["7708"]="/System/classes/TopBar/ClockItem.luo:113:",
["7709"]="/System/classes/TopBar/ClockItem.luo:114:",
["7710"]="/System/classes/TopBar/ClockItem.luo:115:",
["7711"]="/System/classes/TopBar/ClockItem.luo:116:",
["7712"]="/System/classes/TopBar/ClockItem.luo:117:",
["7713"]="/System/classes/TopBar/ClockItem.luo:118:",
["7714"]="/System/classes/TopBar/ClockItem.luo:119:",
["7715"]="/System/classes/TopBar/ClockItem.luo:120:",
["7716"]="/System/classes/TopBar/ClockItem.luo:121:",
["7717"]="/System/classes/TopBar/ClockItem.luo:122:",
["7718"]="/System/classes/TopBar/ClockItem.luo:123:",
["7719"]="/System/classes/TopBar/ClockItem.luo:124:",
["7720"]="/System/classes/TopBar/ClockItem.luo:125:",
["7721"]="/System/classes/TopBar/ClockItem.luo:126:",
["7722"]="/System/classes/TopBar/ClockItem.luo:127:",
["7723"]="/System/classes/TopBar/ClockItem.luo:128:",
["7724"]="/System/classes/TopBar/ClockItem.luo:129:",
["7725"]="/System/classes/TopBar/ClockItem.luo:130:",
["7726"]="/System/classes/TopBar/ClockItem.luo:131:",
["7727"]="/System/classes/TopBar/ClockItem.luo:132:",
["7728"]="/System/classes/TopBar/ClockItem.luo:133:",
["7729"]="/System/classes/TopBar/ClockItem.luo:134:",
["7730"]="/System/classes/TopBar/ClockItem.luo:135:",
["7731"]="/System/classes/TopBar/ClockItem.luo:75:",
["7732"]="/System/classes/TopBar/ClockItem.luo:76:",
["7733"]="/System/classes/TopBar/ClockItem.luo:77:",
["7734"]="/System/classes/TopBar/ClockItem.luo:15:",
["7735"]="/System/classes/TopBar/ClockItem.luo:16:",
["7736"]="/System/classes/TopBar/ClockItem.luo:17:",
["7737"]="/System/classes/TopBar/ClockItem.luo:18:",
["7738"]="/System/classes/TopBar/ClockItem.luo:19:",
["7739"]="/System/classes/TopBar/ClockItem.luo:20:",
["7740"]="/System/classes/TopBar/ClockItem.luo:21:",
["7741"]="/System/classes/TopBar/ClockItem.luo:22:",
["7742"]="/System/classes/TopBar/ClockItem.luo:23:",
["7743"]="/System/classes/TopBar/ClockItem.luo:24:",
["7744"]="/System/classes/TopBar/ClockItem.luo:25:",
["7745"]="/System/classes/TopBar/ClockItem.luo:26:",
["7746"]="/System/classes/TopBar/ClockItem.luo:27:",
["7747"]="/System/classes/TopBar/ClockItem.luo:28:",
["7748"]="/System/classes/TopBar/ClockItem.luo:29:",
["7749"]="/System/classes/TopBar/ClockItem.luo:30:",
["7750"]="/System/classes/TopBar/ClockItem.luo:31:",
["7751"]="/System/classes/TopBar/ClockItem.luo:32:",
["7752"]="/System/classes/TopBar/ClockItem.luo:33:",
["7753"]="/System/classes/TopBar/ClockItem.luo:34:",
["7754"]="/System/classes/TopBar/ClockItem.luo:35:",
["7755"]="/System/classes/TopBar/ClockItem.luo:36:",
["7756"]="/System/classes/TopBar/ClockItem.luo:37:",
["7757"]="/System/classes/TopBar/ClockItem.luo:38:",
["7758"]="/System/classes/TopBar/ClockItem.luo:39:",
["7759"]="/System/classes/TopBar/ClockItem.luo:40:",
["7760"]="/System/classes/TopBar/ClockItem.luo:41:",
["7761"]="/System/classes/TopBar/ClockItem.luo:42:",
["7762"]="/System/classes/TopBar/ClockItem.luo:43:",
["7763"]="/System/classes/TopBar/ClockItem.luo:44:",
["7764"]="/System/classes/TopBar/ClockItem.luo:45:",
["7765"]="/System/classes/TopBar/ClockItem.luo:46:",
["7766"]="/System/classes/TopBar/ClockItem.luo:47:",
["7767"]="/System/classes/TopBar/ClockItem.luo:48:",
["7768"]="/System/classes/TopBar/ClockItem.luo:49:",
["7769"]="/System/classes/TopBar/ClockItem.luo:50:",
["7770"]="/System/classes/TopBar/ClockItem.luo:51:",
["7771"]="/System/classes/TopBar/ClockItem.luo:52:",
["7772"]="/System/classes/TopBar/ClockItem.luo:53:",
["7773"]="/System/classes/TopBar/ClockItem.luo:54:",
["7774"]="/System/classes/TopBar/ClockItem.luo:55:",
["7775"]="/System/classes/TopBar/ClockItem.luo:56:",
["7776"]="/System/classes/TopBar/ClockItem.luo:57:",
["7777"]="/System/classes/TopBar/ClockItem.luo:58:",
["7778"]="/System/classes/TopBar/ClockItem.luo:59:",
["7779"]="/System/classes/TopBar/ClockItem.luo:60:",
["7780"]="/System/classes/TopBar/ClockItem.luo:62:",
["7781"]="/System/classes/TopBar/ClockItem.luo:63:",
["7782"]="/System/classes/TopBar/ClockItem.luo:64:",
["7783"]="/System/classes/TopBar/ClockItem.luo:65:",
["7784"]="/System/classes/TopBar/ClockItem.luo:66:",
["7785"]="/System/classes/TopBar/ClockItem.luo:67:",
["7786"]="/System/classes/TopBar/ClockItem.luo:68:",
["7787"]="/System/classes/TopBar/ClockItem.luo:69:",
["7788"]="/System/classes/TopBar/ClockItem.luo:70:",
["7789"]="/System/classes/TopBar/ClockItem.luo:71:",
["7790"]="/System/classes/TopBar/ClockItem.luo:72:",
["7791"]="/System/classes/TopBar/ClockItem.luo:73:",
["7831"]="/src/classes/Graphics/RoundedRectangleMask.luo:33:",
["7832"]="/src/classes/Graphics/RoundedRectangleMask.luo:34:",
["7833"]="/src/classes/Graphics/RoundedRectangleMask.luo:35:",
["7834"]="/src/classes/Graphics/RoundedRectangleMask.luo:36:",
["7835"]="/src/classes/Graphics/RoundedRectangleMask.luo:37:",
["7836"]="/src/classes/Graphics/RoundedRectangleMask.luo:38:",
["7837"]="/src/classes/Graphics/RoundedRectangleMask.luo:39:",
["7838"]="/src/classes/Graphics/RoundedRectangleMask.luo:40:",
["7839"]="/src/classes/Graphics/RoundedRectangleMask.luo:41:",
["7840"]="/src/classes/Graphics/RoundedRectangleMask.luo:42:",
["7841"]="/src/classes/Graphics/RoundedRectangleMask.luo:43:",
["7842"]="/src/classes/Graphics/RoundedRectangleMask.luo:44:",
["7843"]="/src/classes/Graphics/RoundedRectangleMask.luo:45:",
["7844"]="/src/classes/Graphics/RoundedRectangleMask.luo:46:",
["7845"]="/src/classes/Graphics/RoundedRectangleMask.luo:47:",
["7846"]="/src/classes/Graphics/RoundedRectangleMask.luo:48:",
["7847"]="/src/classes/Graphics/RoundedRectangleMask.luo:49:",
["7848"]="/src/classes/Graphics/RoundedRectangleMask.luo:50:",
["7849"]="/src/classes/Graphics/RoundedRectangleMask.luo:51:",
["7850"]="/src/classes/Graphics/RoundedRectangleMask.luo:52:",
["7851"]="/src/classes/Graphics/RoundedRectangleMask.luo:53:",
["7852"]="/src/classes/Graphics/RoundedRectangleMask.luo:54:",
["7853"]="/src/classes/Graphics/RoundedRectangleMask.luo:55:",
["7854"]="/src/classes/Graphics/RoundedRectangleMask.luo:56:",
["7855"]="/src/classes/Graphics/RoundedRectangleMask.luo:57:",
["7856"]="/src/classes/Graphics/RoundedRectangleMask.luo:58:",
["7857"]="/src/classes/Graphics/RoundedRectangleMask.luo:59:",
["7858"]="/src/classes/Graphics/RoundedRectangleMask.luo:60:",
["7859"]="/src/classes/Graphics/RoundedRectangleMask.luo:61:",
["7860"]="/src/classes/Graphics/RoundedRectangleMask.luo:62:",
["7879"]="/src/classes/Cursors/ClickableCursor.luo:14:",
["7880"]="/src/classes/Cursors/ClickableCursor.luo:15:",
["7881"]="/src/classes/Cursors/ClickableCursor.luo:16:",
["7882"]="/src/classes/Cursors/ClickableCursor.luo:10:",
["7883"]="/src/classes/Cursors/ClickableCursor.luo:11:",
["7884"]="/src/classes/Cursors/ClickableCursor.luo:12:",
["7885"]="/src/classes/Cursors/ClickableCursor.luo:4:",
["7886"]="/src/classes/Cursors/ClickableCursor.luo:5:",
["7887"]="/src/classes/Cursors/ClickableCursor.luo:6:",
["7888"]="/src/classes/Cursors/ClickableCursor.luo:7:",
["7889"]="/src/classes/Cursors/ClickableCursor.luo:8:",
["7961"]="/src/classes/Views/Containers/ScrollContainer.luo:4:",
["7962"]="/src/classes/Views/Containers/ScrollContainer.luo:5:",
["7963"]="/src/classes/Views/Containers/ScrollContainer.luo:6:",
["7964"]="/src/classes/Views/Containers/ScrollContainer.luo:8:",
["7965"]="/src/classes/Views/Containers/ScrollContainer.luo:9:",
["7966"]="/src/classes/Views/Containers/ScrollContainer.luo:10:",
["8030"]="/src/classes/Views/Containers/List/ListContainer.luo:8:",
["8031"]="/src/classes/Views/Containers/List/ListContainer.luo:9:",
["8032"]="/src/classes/Views/Containers/List/ListContainer.luo:10:",
["8033"]="/src/classes/Views/Containers/List/ListContainer.luo:11:",
["8034"]="/src/classes/Views/Containers/List/ListContainer.luo:12:",
["8035"]="/src/classes/Views/Containers/List/ListContainer.luo:13:",
["8036"]="/src/classes/Views/Containers/List/ListContainer.luo:83:",
["8037"]="/src/classes/Views/Containers/List/ListContainer.luo:84:",
["8038"]="/src/classes/Views/Containers/List/ListContainer.luo:85:",
["8039"]="/src/classes/Views/Containers/List/ListContainer.luo:86:",
["8040"]="/src/classes/Views/Containers/List/ListContainer.luo:87:",
["8041"]="/src/classes/Views/Containers/List/ListContainer.luo:88:",
["8042"]="/src/classes/Views/Containers/List/ListContainer.luo:89:",
["8043"]="/src/classes/Views/Containers/List/ListContainer.luo:90:",
["8044"]="/src/classes/Views/Containers/List/ListContainer.luo:91:",
["8045"]="/src/classes/Views/Containers/List/ListContainer.luo:92:",
["8046"]="/src/classes/Views/Containers/List/ListContainer.luo:40:",
["8047"]="/src/classes/Views/Containers/List/ListContainer.luo:41:",
["8048"]="/src/classes/Views/Containers/List/ListContainer.luo:42:",
["8049"]="/src/classes/Views/Containers/List/ListContainer.luo:100:",
["8050"]="/src/classes/Views/Containers/List/ListContainer.luo:101:",
["8051"]="/src/classes/Views/Containers/List/ListContainer.luo:94:",
["8052"]="/src/classes/Views/Containers/List/ListContainer.luo:95:",
["8053"]="/src/classes/Views/Containers/List/ListContainer.luo:15:",
["8054"]="/src/classes/Views/Containers/List/ListContainer.luo:16:",
["8055"]="/src/classes/Views/Containers/List/ListContainer.luo:17:",
["8056"]="/src/classes/Views/Containers/List/ListContainer.luo:79:",
["8057"]="/src/classes/Views/Containers/List/ListContainer.luo:80:",
["8058"]="/src/classes/Views/Containers/List/ListContainer.luo:81:",
["8059"]="/src/classes/Views/Containers/List/ListContainer.luo:97:",
["8060"]="/src/classes/Views/Containers/List/ListContainer.luo:98:",
["8061"]="/src/classes/Views/Containers/List/ListContainer.luo:33:",
["8062"]="/src/classes/Views/Containers/List/ListContainer.luo:34:",
["8063"]="/src/classes/Views/Containers/List/ListContainer.luo:35:",
["8064"]="/src/classes/Views/Containers/List/ListContainer.luo:36:",
["8065"]="/src/classes/Views/Containers/List/ListContainer.luo:37:",
["8066"]="/src/classes/Views/Containers/List/ListContainer.luo:38:",
["8067"]="/src/classes/Views/Containers/List/ListContainer.luo:19:",
["8068"]="/src/classes/Views/Containers/List/ListContainer.luo:20:",
["8069"]="/src/classes/Views/Containers/List/ListContainer.luo:21:",
["8070"]="/src/classes/Views/Containers/List/ListContainer.luo:22:",
["8071"]="/src/classes/Views/Containers/List/ListContainer.luo:23:",
["8072"]="/src/classes/Views/Containers/List/ListContainer.luo:24:",
["8073"]="/src/classes/Views/Containers/List/ListContainer.luo:44:",
["8074"]="/src/classes/Views/Containers/List/ListContainer.luo:45:",
["8075"]="/src/classes/Views/Containers/List/ListContainer.luo:46:",
["8076"]="/src/classes/Views/Containers/List/ListContainer.luo:47:",
["8077"]="/src/classes/Views/Containers/List/ListContainer.luo:48:",
["8078"]="/src/classes/Views/Containers/List/ListContainer.luo:49:",
["8079"]="/src/classes/Views/Containers/List/ListContainer.luo:50:",
["8080"]="/src/classes/Views/Containers/List/ListContainer.luo:51:",
["8081"]="/src/classes/Views/Containers/List/ListContainer.luo:52:",
["8082"]="/src/classes/Views/Containers/List/ListContainer.luo:53:",
["8083"]="/src/classes/Views/Containers/List/ListContainer.luo:54:",
["8084"]="/src/classes/Views/Containers/List/ListContainer.luo:55:",
["8085"]="/src/classes/Views/Containers/List/ListContainer.luo:56:",
["8086"]="/src/classes/Views/Containers/List/ListContainer.luo:57:",
["8087"]="/src/classes/Views/Containers/List/ListContainer.luo:58:",
["8088"]="/src/classes/Views/Containers/List/ListContainer.luo:59:",
["8089"]="/src/classes/Views/Containers/List/ListContainer.luo:60:",
["8090"]="/src/classes/Views/Containers/List/ListContainer.luo:61:",
["8091"]="/src/classes/Views/Containers/List/ListContainer.luo:62:",
["8092"]="/src/classes/Views/Containers/List/ListContainer.luo:63:",
["8093"]="/src/classes/Views/Containers/List/ListContainer.luo:64:",
["8094"]="/src/classes/Views/Containers/List/ListContainer.luo:65:",
["8095"]="/src/classes/Views/Containers/List/ListContainer.luo:66:",
["8096"]="/src/classes/Views/Containers/List/ListContainer.luo:67:",
["8097"]="/src/classes/Views/Containers/List/ListContainer.luo:68:",
["8098"]="/src/classes/Views/Containers/List/ListContainer.luo:69:",
["8099"]="/src/classes/Views/Containers/List/ListContainer.luo:70:",
["8100"]="/src/classes/Views/Containers/List/ListContainer.luo:71:",
["8101"]="/src/classes/Views/Containers/List/ListContainer.luo:72:",
["8102"]="/src/classes/Views/Containers/List/ListContainer.luo:73:",
["8173"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:11:",
["8174"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:12:",
["8175"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:13:",
["8176"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:14:",
["8177"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:15:",
["8178"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:16:",
["8179"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:17:",
["8180"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:18:",
["8181"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:19:",
["8182"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:20:",
["8183"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:21:",
["8184"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:22:",
["8185"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:23:",
["8186"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:24:",
["8187"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:25:",
["8188"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:26:",
["8189"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:27:",
["8190"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:28:",
["8191"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:29:",
["8192"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:30:",
["8193"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:31:",
["8194"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:32:",
["8195"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:33:",
["8196"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:34:",
["8197"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:35:",
["8198"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:36:",
["8199"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:37:",
["8200"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:38:",
["8201"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:39:",
["8202"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:40:",
["8203"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:4:",
["8204"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:5:",
["8205"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:6:",
["8206"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:7:",
["8207"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:8:",
["8208"]="/src/classes/Views/Containers/Tree/TreeContainer.luo:9:",
["8211"]="/src/classes/Views/Containers/Tree/TreeClipboardData.luo:7:",
["8212"]="/src/classes/Views/Containers/Tree/TreeClipboardData.luo:8:",
["8213"]="/src/classes/Views/Containers/Tree/TreeClipboardData.luo:9:",
["8214"]="/src/classes/Views/Containers/Tree/TreeClipboardData.luo:10:",
["8221"]="/src/classes/Exceptions/Class System/ArgumentTypeClassException.luo:4:",
["8222"]="/src/classes/Exceptions/Class System/ArgumentTypeClassException.luo:5:",
["8223"]="/src/classes/Exceptions/Class System/ArgumentTypeClassException.luo:6:",
["8224"]="/src/classes/Exceptions/Class System/ArgumentTypeClassException.luo:7:",
["8232"]="/src/classes/Symbols/TreeFoldedSymbol.luo:7:",
["8233"]="/src/classes/Symbols/TreeFoldedSymbol.luo:8:",
["8234"]="/src/classes/Symbols/TreeFoldedSymbol.luo:9:",
["8235"]="/src/classes/Symbols/TreeFoldedSymbol.luo:10:",
["8236"]="/src/classes/Symbols/TreeFoldedSymbol.luo:11:",
["8237"]="/src/classes/Symbols/TreeFoldedSymbol.luo:12:",
["8238"]="/src/classes/Symbols/TreeFoldedSymbol.luo:13:",
["8239"]="/src/classes/Symbols/TreeFoldedSymbol.luo:14:",
["8302"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:8:",
["8303"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:9:",
["8304"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:10:",
["8305"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:11:",
["8306"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:12:",
["8307"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:13:",
["8308"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:43:",
["8309"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:44:",
["8310"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:45:",
["8311"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:46:",
["8312"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:47:",
["8313"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:48:",
["8314"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:49:",
["8315"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:50:",
["8316"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:51:",
["8317"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:52:",
["8318"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:53:",
["8319"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:54:",
["8320"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:55:",
["8321"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:56:",
["8322"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:57:",
["8323"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:58:",
["8324"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:59:",
["8325"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:60:",
["8326"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:61:",
["8327"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:62:",
["8328"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:63:",
["8329"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:64:",
["8330"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:65:",
["8331"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:66:",
["8332"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:67:",
["8333"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:68:",
["8334"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:69:",
["8335"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:70:",
["8336"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:71:",
["8337"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:72:",
["8338"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:73:",
["8339"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:74:",
["8340"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:75:",
["8341"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:76:",
["8342"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:77:",
["8343"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:78:",
["8344"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:79:",
["8345"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:80:",
["8346"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:81:",
["8347"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:82:",
["8348"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:83:",
["8349"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:84:",
["8350"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:85:",
["8351"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:86:",
["8352"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:87:",
["8353"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:88:",
["8354"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:89:",
["8355"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:90:",
["8356"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:91:",
["8357"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:92:",
["8358"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:93:",
["8359"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:94:",
["8360"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:95:",
["8361"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:37:",
["8362"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:38:",
["8363"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:39:",
["8364"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:40:",
["8365"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:41:",
["8366"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:28:",
["8367"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:29:",
["8368"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:30:",
["8369"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:31:",
["8370"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:32:",
["8371"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:33:",
["8372"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:34:",
["8373"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:35:",
["8374"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:15:",
["8375"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:16:",
["8376"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:17:",
["8377"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:18:",
["8378"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:19:",
["8379"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:21:",
["8380"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:22:",
["8381"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:23:",
["8382"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:24:",
["8383"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:25:",
["8384"]="/src/classes/Views/Containers/Toolbar/ToolbarContainer.luo:26:",
["8439"]="/System/classes/Home/HomeItemContainer.luo:6:",
["8440"]="/System/classes/Home/HomeItemContainer.luo:7:",
["8441"]="/System/classes/Home/HomeItemContainer.luo:8:",
["8442"]="/System/classes/Home/HomeItemContainer.luo:9:",
["8443"]="/System/classes/Home/HomeItemContainer.luo:10:",
["8444"]="/System/classes/Home/HomeItemContainer.luo:11:",
["8445"]="/System/classes/Home/HomeItemContainer.luo:12:",
["8446"]="/System/classes/Home/HomeItemContainer.luo:13:",
["8447"]="/System/classes/Home/HomeItemContainer.luo:15:",
["8448"]="/System/classes/Home/HomeItemContainer.luo:16:",
["8449"]="/System/classes/Home/HomeItemContainer.luo:17:",
["8450"]="/System/classes/Home/HomeItemContainer.luo:18:",
["8451"]="/System/classes/Home/HomeItemContainer.luo:19:",
["8452"]="/System/classes/Home/HomeItemContainer.luo:20:",
["8453"]="/System/classes/Home/HomeItemContainer.luo:21:",
["8454"]="/System/classes/Home/HomeItemContainer.luo:22:",
["8455"]="/System/classes/Home/HomeItemContainer.luo:23:",
["8456"]="/System/classes/Home/HomeItemContainer.luo:24:",
["8457"]="/System/classes/Home/HomeItemContainer.luo:25:",
["8458"]="/System/classes/Home/HomeItemContainer.luo:27:",
["8459"]="/System/classes/Home/HomeItemContainer.luo:28:",
["8460"]="/System/classes/Home/HomeItemContainer.luo:29:",
["8461"]="/System/classes/Home/HomeItemContainer.luo:30:",
["8462"]="/System/classes/Home/HomeItemContainer.luo:67:",
["8463"]="/System/classes/Home/HomeItemContainer.luo:68:",
["8464"]="/System/classes/Home/HomeItemContainer.luo:69:",
["8465"]="/System/classes/Home/HomeItemContainer.luo:63:",
["8466"]="/System/classes/Home/HomeItemContainer.luo:64:",
["8467"]="/System/classes/Home/HomeItemContainer.luo:65:",
["8468"]="/System/classes/Home/HomeItemContainer.luo:56:",
["8469"]="/System/classes/Home/HomeItemContainer.luo:57:",
["8470"]="/System/classes/Home/HomeItemContainer.luo:58:",
["8471"]="/System/classes/Home/HomeItemContainer.luo:59:",
["8472"]="/System/classes/Home/HomeItemContainer.luo:60:",
["8473"]="/System/classes/Home/HomeItemContainer.luo:61:",
["8474"]="/System/classes/Home/HomeItemContainer.luo:32:",
["8475"]="/System/classes/Home/HomeItemContainer.luo:33:",
["8476"]="/System/classes/Home/HomeItemContainer.luo:34:",
["8477"]="/System/classes/Home/HomeItemContainer.luo:35:",
["8478"]="/System/classes/Home/HomeItemContainer.luo:36:",
["8479"]="/System/classes/Home/HomeItemContainer.luo:37:",
["8480"]="/System/classes/Home/HomeItemContainer.luo:38:",
["8481"]="/System/classes/Home/HomeItemContainer.luo:39:",
["8482"]="/System/classes/Home/HomeItemContainer.luo:40:",
["8483"]="/System/classes/Home/HomeItemContainer.luo:41:",
["8484"]="/System/classes/Home/HomeItemContainer.luo:42:",
["8485"]="/System/classes/Home/HomeItemContainer.luo:43:",
["8486"]="/System/classes/Home/HomeItemContainer.luo:44:",
["8487"]="/System/classes/Home/HomeItemContainer.luo:45:",
["8488"]="/System/classes/Home/HomeItemContainer.luo:46:",
["8489"]="/System/classes/Home/HomeItemContainer.luo:47:",
["8490"]="/System/classes/Home/HomeItemContainer.luo:48:",
["8491"]="/System/classes/Home/HomeItemContainer.luo:49:",
["8492"]="/System/classes/Home/HomeItemContainer.luo:50:",
["8493"]="/System/classes/Home/HomeItemContainer.luo:51:",
["8494"]="/System/classes/Home/HomeItemContainer.luo:52:",
["8495"]="/System/classes/Home/HomeItemContainer.luo:53:",
["8496"]="/System/classes/Home/HomeItemContainer.luo:54:",
["8628"]="/src/classes/Views/Containers/Menu.luo:35:",
["8629"]="/src/classes/Views/Containers/Menu.luo:36:",
["8630"]="/src/classes/Views/Containers/Menu.luo:37:",
["8631"]="/src/classes/Views/Containers/Menu.luo:38:",
["8632"]="/src/classes/Views/Containers/Menu.luo:39:",
["8633"]="/src/classes/Views/Containers/Menu.luo:154:",
["8634"]="/src/classes/Views/Containers/Menu.luo:155:",
["8635"]="/src/classes/Views/Containers/Menu.luo:156:",
["8636"]="/src/classes/Views/Containers/Menu.luo:41:",
["8637"]="/src/classes/Views/Containers/Menu.luo:42:",
["8638"]="/src/classes/Views/Containers/Menu.luo:43:",
["8639"]="/src/classes/Views/Containers/Menu.luo:44:",
["8640"]="/src/classes/Views/Containers/Menu.luo:45:",
["8641"]="/src/classes/Views/Containers/Menu.luo:46:",
["8642"]="/src/classes/Views/Containers/Menu.luo:47:",
["8643"]="/src/classes/Views/Containers/Menu.luo:48:",
["8644"]="/src/classes/Views/Containers/Menu.luo:49:",
["8645"]="/src/classes/Views/Containers/Menu.luo:50:",
["8646"]="/src/classes/Views/Containers/Menu.luo:108:",
["8647"]="/src/classes/Views/Containers/Menu.luo:109:",
["8648"]="/src/classes/Views/Containers/Menu.luo:110:",
["8649"]="/src/classes/Views/Containers/Menu.luo:111:",
["8650"]="/src/classes/Views/Containers/Menu.luo:172:",
["8651"]="/src/classes/Views/Containers/Menu.luo:173:",
["8652"]="/src/classes/Views/Containers/Menu.luo:174:",
["8653"]="/src/classes/Views/Containers/Menu.luo:175:",
["8654"]="/src/classes/Views/Containers/Menu.luo:176:",
["8655"]="/src/classes/Views/Containers/Menu.luo:177:",
["8656"]="/src/classes/Views/Containers/Menu.luo:178:",
["8657"]="/src/classes/Views/Containers/Menu.luo:179:",
["8658"]="/src/classes/Views/Containers/Menu.luo:180:",
["8659"]="/src/classes/Views/Containers/Menu.luo:181:",
["8660"]="/src/classes/Views/Containers/Menu.luo:161:",
["8661"]="/src/classes/Views/Containers/Menu.luo:162:",
["8662"]="/src/classes/Views/Containers/Menu.luo:163:",
["8663"]="/src/classes/Views/Containers/Menu.luo:164:",
["8664"]="/src/classes/Views/Containers/Menu.luo:165:",
["8665"]="/src/classes/Views/Containers/Menu.luo:166:",
["8666"]="/src/classes/Views/Containers/Menu.luo:167:",
["8667"]="/src/classes/Views/Containers/Menu.luo:58:",
["8668"]="/src/classes/Views/Containers/Menu.luo:59:",
["8669"]="/src/classes/Views/Containers/Menu.luo:60:",
["8670"]="/src/classes/Views/Containers/Menu.luo:61:",
["8671"]="/src/classes/Views/Containers/Menu.luo:62:",
["8672"]="/src/classes/Views/Containers/Menu.luo:63:",
["8673"]="/src/classes/Views/Containers/Menu.luo:64:",
["8674"]="/src/classes/Views/Containers/Menu.luo:65:",
["8675"]="/src/classes/Views/Containers/Menu.luo:66:",
["8676"]="/src/classes/Views/Containers/Menu.luo:67:",
["8677"]="/src/classes/Views/Containers/Menu.luo:68:",
["8678"]="/src/classes/Views/Containers/Menu.luo:69:",
["8679"]="/src/classes/Views/Containers/Menu.luo:74:",
["8680"]="/src/classes/Views/Containers/Menu.luo:75:",
["8681"]="/src/classes/Views/Containers/Menu.luo:76:",
["8682"]="/src/classes/Views/Containers/Menu.luo:77:",
["8683"]="/src/classes/Views/Containers/Menu.luo:78:",
["8684"]="/src/classes/Views/Containers/Menu.luo:79:",
["8685"]="/src/classes/Views/Containers/Menu.luo:80:",
["8686"]="/src/classes/Views/Containers/Menu.luo:81:",
["8687"]="/src/classes/Views/Containers/Menu.luo:82:",
["8688"]="/src/classes/Views/Containers/Menu.luo:83:",
["8689"]="/src/classes/Views/Containers/Menu.luo:84:",
["8690"]="/src/classes/Views/Containers/Menu.luo:85:",
["8691"]="/src/classes/Views/Containers/Menu.luo:86:",
["8692"]="/src/classes/Views/Containers/Menu.luo:87:",
["8693"]="/src/classes/Views/Containers/Menu.luo:88:",
["8694"]="/src/classes/Views/Containers/Menu.luo:97:",
["8695"]="/src/classes/Views/Containers/Menu.luo:98:",
["8696"]="/src/classes/Views/Containers/Menu.luo:99:",
["8697"]="/src/classes/Views/Containers/Menu.luo:100:",
["8698"]="/src/classes/Views/Containers/Menu.luo:101:",
["8699"]="/src/classes/Views/Containers/Menu.luo:102:",
["8700"]="/src/classes/Views/Containers/Menu.luo:117:",
["8701"]="/src/classes/Views/Containers/Menu.luo:118:",
["8702"]="/src/classes/Views/Containers/Menu.luo:119:",
["8703"]="/src/classes/Views/Containers/Menu.luo:120:",
["8704"]="/src/classes/Views/Containers/Menu.luo:121:",
["8705"]="/src/classes/Views/Containers/Menu.luo:122:",
["8706"]="/src/classes/Views/Containers/Menu.luo:123:",
["8707"]="/src/classes/Views/Containers/Menu.luo:124:",
["8708"]="/src/classes/Views/Containers/Menu.luo:125:",
["8709"]="/src/classes/Views/Containers/Menu.luo:126:",
["8710"]="/src/classes/Views/Containers/Menu.luo:127:",
["8711"]="/src/classes/Views/Containers/Menu.luo:128:",
["8712"]="/src/classes/Views/Containers/Menu.luo:129:",
["8713"]="/src/classes/Views/Containers/Menu.luo:130:",
["8714"]="/src/classes/Views/Containers/Menu.luo:103:",
["8715"]="/src/classes/Views/Containers/Menu.luo:104:",
["8716"]="/src/classes/Views/Containers/Menu.luo:105:",
["8717"]="/src/classes/Views/Containers/Menu.luo:106:",
["8768"]="/System/classes/Program Managing/ProgramManager.luo:7:",
["8769"]="/System/classes/Program Managing/ProgramManager.luo:8:",
["8770"]="/System/classes/Program Managing/ProgramManager.luo:9:",
["8771"]="/System/classes/Program Managing/ProgramManager.luo:11:",
["8772"]="/System/classes/Program Managing/ProgramManager.luo:12:",
["8773"]="/System/classes/Program Managing/ProgramManager.luo:13:",
["8774"]="/System/classes/Program Managing/ProgramManager.luo:14:",
["8775"]="/System/classes/Program Managing/ProgramManager.luo:15:",
["8776"]="/System/classes/Program Managing/ProgramManager.luo:16:",
["8777"]="/System/classes/Program Managing/ProgramManager.luo:17:",
["8778"]="/System/classes/Program Managing/ProgramManager.luo:18:",
["8779"]="/System/classes/Program Managing/ProgramManager.luo:19:",
["8780"]="/System/classes/Program Managing/ProgramManager.luo:20:",
["8781"]="/System/classes/Program Managing/ProgramManager.luo:21:",
["8782"]="/System/classes/Program Managing/ProgramManager.luo:55:",
["8783"]="/System/classes/Program Managing/ProgramManager.luo:56:",
["8784"]="/System/classes/Program Managing/ProgramManager.luo:57:",
["8785"]="/System/classes/Program Managing/ProgramManager.luo:58:",
["8786"]="/System/classes/Program Managing/ProgramManager.luo:59:",
["8787"]="/System/classes/Program Managing/ProgramManager.luo:60:",
["8788"]="/System/classes/Program Managing/ProgramManager.luo:23:",
["8789"]="/System/classes/Program Managing/ProgramManager.luo:24:",
["8790"]="/System/classes/Program Managing/ProgramManager.luo:25:",
["8791"]="/System/classes/Program Managing/ProgramManager.luo:26:",
["8792"]="/System/classes/Program Managing/ProgramManager.luo:27:",
["8793"]="/System/classes/Program Managing/ProgramManager.luo:28:",
["8794"]="/System/classes/Program Managing/ProgramManager.luo:29:",
["8795"]="/System/classes/Program Managing/ProgramManager.luo:30:",
["8796"]="/System/classes/Program Managing/ProgramManager.luo:31:",
["8797"]="/System/classes/Program Managing/ProgramManager.luo:32:",
["8798"]="/System/classes/Program Managing/ProgramManager.luo:33:",
["8799"]="/System/classes/Program Managing/ProgramManager.luo:34:",
["8800"]="/System/classes/Program Managing/ProgramManager.luo:35:",
["8801"]="/System/classes/Program Managing/ProgramManager.luo:36:",
["8802"]="/System/classes/Program Managing/ProgramManager.luo:37:",
["8803"]="/System/classes/Program Managing/ProgramManager.luo:38:",
["8804"]="/System/classes/Program Managing/ProgramManager.luo:39:",
["8805"]="/System/classes/Program Managing/ProgramManager.luo:40:",
["8806"]="/System/classes/Program Managing/ProgramManager.luo:41:",
["8807"]="/System/classes/Program Managing/ProgramManager.luo:42:",
["8808"]="/System/classes/Program Managing/ProgramManager.luo:43:",
["8809"]="/System/classes/Program Managing/ProgramManager.luo:44:",
["8810"]="/System/classes/Program Managing/ProgramManager.luo:45:",
["8811"]="/System/classes/Program Managing/ProgramManager.luo:46:",
["8812"]="/System/classes/Program Managing/ProgramManager.luo:47:",
["8813"]="/System/classes/Program Managing/ProgramManager.luo:48:",
["8814"]="/System/classes/Program Managing/ProgramManager.luo:49:",
["8815"]="/System/classes/Program Managing/ProgramManager.luo:50:",
["8816"]="/System/classes/Program Managing/ProgramManager.luo:51:",
["8817"]="/System/classes/Program Managing/ProgramManager.luo:52:",
["8818"]="/System/classes/Program Managing/ProgramManager.luo:53:",
["8859"]="/src/classes/Views/Scrollbar.luo:12:",
["8860"]="/src/classes/Views/Scrollbar.luo:13:",
["8861"]="/src/classes/Views/Scrollbar.luo:14:",
["8862"]="/src/classes/Views/Scrollbar.luo:15:",
["8863"]="/src/classes/Views/Scrollbar.luo:16:",
["8864"]="/src/classes/Views/Scrollbar.luo:17:",
["8865"]="/src/classes/Views/Scrollbar.luo:18:",
["8866"]="/src/classes/Views/Scrollbar.luo:46:",
["8867"]="/src/classes/Views/Scrollbar.luo:47:",
["8868"]="/src/classes/Views/Scrollbar.luo:48:",
["8869"]="/src/classes/Views/Scrollbar.luo:102:",
["8870"]="/src/classes/Views/Scrollbar.luo:103:",
["8871"]="/src/classes/Views/Scrollbar.luo:104:",
["8872"]="/src/classes/Views/Scrollbar.luo:105:",
["8873"]="/src/classes/Views/Scrollbar.luo:106:",
["8874"]="/src/classes/Views/Scrollbar.luo:23:",
["8875"]="/src/classes/Views/Scrollbar.luo:24:",
["8876"]="/src/classes/Views/Scrollbar.luo:25:",
["8877"]="/src/classes/Views/Scrollbar.luo:26:",
["8878"]="/src/classes/Views/Scrollbar.luo:27:",
["8879"]="/src/classes/Views/Scrollbar.luo:28:",
["8880"]="/src/classes/Views/Scrollbar.luo:29:",
["8881"]="/src/classes/Views/Scrollbar.luo:30:",
["8882"]="/src/classes/Views/Scrollbar.luo:31:",
["8883"]="/src/classes/Views/Scrollbar.luo:32:",
["8884"]="/src/classes/Views/Scrollbar.luo:33:",
["8885"]="/src/classes/Views/Scrollbar.luo:34:",
["8886"]="/src/classes/Views/Scrollbar.luo:35:",
["8887"]="/src/classes/Views/Scrollbar.luo:36:",
["8888"]="/src/classes/Views/Scrollbar.luo:37:",
["8889"]="/src/classes/Views/Scrollbar.luo:38:",
["8890"]="/src/classes/Views/Scrollbar.luo:39:",
["8891"]="/src/classes/Views/Scrollbar.luo:40:",
["8892"]="/src/classes/Views/Scrollbar.luo:127:",
["8893"]="/src/classes/Views/Scrollbar.luo:128:",
["8894"]="/src/classes/Views/Scrollbar.luo:129:",
["8895"]="/src/classes/Views/Scrollbar.luo:130:",
["8896"]="/src/classes/Views/Scrollbar.luo:131:",
["8897"]="/src/classes/Views/Scrollbar.luo:132:",
["8898"]="/src/classes/Views/Scrollbar.luo:133:",
["8899"]="/src/classes/Views/Scrollbar.luo:134:",
["8900"]="/src/classes/Views/Scrollbar.luo:135:",
["8901"]="/src/classes/Views/Scrollbar.luo:136:",
["8902"]="/src/classes/Views/Scrollbar.luo:137:",
["8903"]="/src/classes/Views/Scrollbar.luo:138:",
["8904"]="/src/classes/Views/Scrollbar.luo:139:",
["8905"]="/src/classes/Views/Scrollbar.luo:140:",
["8906"]="/src/classes/Views/Scrollbar.luo:141:",
["8907"]="/src/classes/Views/Scrollbar.luo:142:",
["8908"]="/src/classes/Views/Scrollbar.luo:143:",
["8909"]="/src/classes/Views/Scrollbar.luo:144:",
["8910"]="/src/classes/Views/Scrollbar.luo:145:",
["8911"]="/src/classes/Views/Scrollbar.luo:113:",
["8912"]="/src/classes/Views/Scrollbar.luo:114:",
["8913"]="/src/classes/Views/Scrollbar.luo:115:",
["8914"]="/src/classes/Views/Scrollbar.luo:116:",
["8915"]="/src/classes/Views/Scrollbar.luo:117:",
["8916"]="/src/classes/Views/Scrollbar.luo:118:",
["8917"]="/src/classes/Views/Scrollbar.luo:119:",
["8918"]="/src/classes/Views/Scrollbar.luo:120:",
["8919"]="/src/classes/Views/Scrollbar.luo:65:",
["8920"]="/src/classes/Views/Scrollbar.luo:66:",
["8921"]="/src/classes/Views/Scrollbar.luo:67:",
["8922"]="/src/classes/Views/Scrollbar.luo:68:",
["8923"]="/src/classes/Views/Scrollbar.luo:69:",
["8924"]="/src/classes/Views/Scrollbar.luo:70:",
["8925"]="/src/classes/Views/Scrollbar.luo:71:",
["8926"]="/src/classes/Views/Scrollbar.luo:72:",
["8927"]="/src/classes/Views/Scrollbar.luo:73:",
["8928"]="/src/classes/Views/Scrollbar.luo:74:",
["8929"]="/src/classes/Views/Scrollbar.luo:75:",
["8930"]="/src/classes/Views/Scrollbar.luo:76:",
["8931"]="/src/classes/Views/Scrollbar.luo:77:",
["8932"]="/src/classes/Views/Scrollbar.luo:78:",
["8933"]="/src/classes/Views/Scrollbar.luo:79:",
["8934"]="/src/classes/Views/Scrollbar.luo:80:",
["8935"]="/src/classes/Views/Scrollbar.luo:81:",
["8936"]="/src/classes/Views/Scrollbar.luo:82:",
["8937"]="/src/classes/Views/Scrollbar.luo:83:",
["8938"]="/src/classes/Views/Scrollbar.luo:84:",
["8939"]="/src/classes/Views/Scrollbar.luo:85:",
["8940"]="/src/classes/Views/Scrollbar.luo:86:",
["8941"]="/src/classes/Views/Scrollbar.luo:87:",
["8942"]="/src/classes/Views/Scrollbar.luo:88:",
["8943"]="/src/classes/Views/Scrollbar.luo:89:",
["8944"]="/src/classes/Views/Scrollbar.luo:90:",
["8945"]="/src/classes/Views/Scrollbar.luo:91:",
["8946"]="/src/classes/Views/Scrollbar.luo:92:",
["8947"]="/src/classes/Views/Scrollbar.luo:93:",
["8948"]="/src/classes/Views/Scrollbar.luo:94:",
["8949"]="/src/classes/Views/Scrollbar.luo:95:",
["8950"]="/src/classes/Views/Scrollbar.luo:42:",
["8951"]="/src/classes/Views/Scrollbar.luo:43:",
["8952"]="/src/classes/Views/Scrollbar.luo:44:",
["9015"]="/System/classes/Exceptions/ProgramException.luo:6:",
["9016"]="/System/classes/Exceptions/ProgramException.luo:7:",
["9017"]="/System/classes/Exceptions/ProgramException.luo:8:",
["9018"]="/System/classes/Exceptions/ProgramException.luo:9:",
["9031"]="/src/classes/Exceptions/Class System/EnumValueTypeClassException.luo:4:",
["9032"]="/src/classes/Exceptions/Class System/EnumValueTypeClassException.luo:5:",
["9033"]="/src/classes/Exceptions/Class System/EnumValueTypeClassException.luo:6:",
["9034"]="/src/classes/Exceptions/Class System/EnumValueTypeClassException.luo:7:",
["9142"]="/src/classes/Symbols/HomeSymbol.luo:10:",
["9143"]="/src/classes/Symbols/HomeSymbol.luo:11:",
["9144"]="/src/classes/Symbols/HomeSymbol.luo:12:",
["9145"]="/src/classes/Symbols/HomeSymbol.luo:13:",
["9146"]="/src/classes/Symbols/HomeSymbol.luo:14:",
["9147"]="/src/classes/Symbols/HomeSymbol.luo:15:",
["9148"]="/src/classes/Symbols/HomeSymbol.luo:16:",
["9149"]="/src/classes/Symbols/HomeSymbol.luo:17:",
["9150"]="/src/classes/Symbols/HomeSymbol.luo:18:",
["9151"]="/src/classes/Symbols/HomeSymbol.luo:19:",
["9152"]="/src/classes/Symbols/HomeSymbol.luo:20:",
["9153"]="/src/classes/Symbols/HomeSymbol.luo:21:",
["9154"]="/src/classes/Symbols/HomeSymbol.luo:22:",
["9155"]="/src/classes/Symbols/HomeSymbol.luo:23:",
["9156"]="/src/classes/Symbols/HomeSymbol.luo:24:",
["9157"]="/src/classes/Symbols/HomeSymbol.luo:25:",
["9203"]="/System/classes/Program Managing/ProgramView.luo:22:",
["9204"]="/System/classes/Program Managing/ProgramView.luo:23:",
["9205"]="/System/classes/Program Managing/ProgramView.luo:24:",
["9206"]="/System/classes/Program Managing/ProgramView.luo:25:",
["9207"]="/System/classes/Program Managing/ProgramView.luo:26:",
["9208"]="/System/classes/Program Managing/ProgramView.luo:27:",
["9209"]="/System/classes/Program Managing/ProgramView.luo:28:",
["9210"]="/System/classes/Program Managing/ProgramView.luo:29:",
["9211"]="/System/classes/Program Managing/ProgramView.luo:30:",
["9212"]="/System/classes/Program Managing/ProgramView.luo:31:",
["9213"]="/System/classes/Program Managing/ProgramView.luo:32:",
["9214"]="/System/classes/Program Managing/ProgramView.luo:33:",
["9215"]="/System/classes/Program Managing/ProgramView.luo:34:",
["9216"]="/System/classes/Program Managing/ProgramView.luo:35:",
["9217"]="/System/classes/Program Managing/ProgramView.luo:36:",
["9218"]="/System/classes/Program Managing/ProgramView.luo:37:",
["9219"]="/System/classes/Program Managing/ProgramView.luo:38:",
["9220"]="/System/classes/Program Managing/ProgramView.luo:39:",
["9221"]="/System/classes/Program Managing/ProgramView.luo:94:",
["9222"]="/System/classes/Program Managing/ProgramView.luo:95:",
["9223"]="/System/classes/Program Managing/ProgramView.luo:96:",
["9224"]="/System/classes/Program Managing/ProgramView.luo:97:",
["9225"]="/System/classes/Program Managing/ProgramView.luo:98:",
["9226"]="/System/classes/Program Managing/ProgramView.luo:99:",
["9227"]="/System/classes/Program Managing/ProgramView.luo:100:",
["9228"]="/System/classes/Program Managing/ProgramView.luo:101:",
["9229"]="/System/classes/Program Managing/ProgramView.luo:102:",
["9230"]="/System/classes/Program Managing/ProgramView.luo:103:",
["9231"]="/System/classes/Program Managing/ProgramView.luo:104:",
["9232"]="/System/classes/Program Managing/ProgramView.luo:105:",
["9233"]="/System/classes/Program Managing/ProgramView.luo:106:",
["9234"]="/System/classes/Program Managing/ProgramView.luo:107:",
["9235"]="/System/classes/Program Managing/ProgramView.luo:108:",
["9236"]="/System/classes/Program Managing/ProgramView.luo:109:",
["9237"]="/System/classes/Program Managing/ProgramView.luo:110:",
["9238"]="/System/classes/Program Managing/ProgramView.luo:111:",
["9239"]="/System/classes/Program Managing/ProgramView.luo:112:",
["9240"]="/System/classes/Program Managing/ProgramView.luo:113:",
["9241"]="/System/classes/Program Managing/ProgramView.luo:114:",
["9242"]="/System/classes/Program Managing/ProgramView.luo:115:",
["9243"]="/System/classes/Program Managing/ProgramView.luo:116:",
["9244"]="/System/classes/Program Managing/ProgramView.luo:117:",
["9245"]="/System/classes/Program Managing/ProgramView.luo:118:",
["9246"]="/System/classes/Program Managing/ProgramView.luo:119:",
["9247"]="/System/classes/Program Managing/ProgramView.luo:120:",
["9248"]="/System/classes/Program Managing/ProgramView.luo:84:",
["9249"]="/System/classes/Program Managing/ProgramView.luo:85:",
["9250"]="/System/classes/Program Managing/ProgramView.luo:86:",
["9251"]="/System/classes/Program Managing/ProgramView.luo:87:",
["9252"]="/System/classes/Program Managing/ProgramView.luo:88:",
["9253"]="/System/classes/Program Managing/ProgramView.luo:89:",
["9254"]="/System/classes/Program Managing/ProgramView.luo:90:",
["9255"]="/System/classes/Program Managing/ProgramView.luo:91:",
["9256"]="/System/classes/Program Managing/ProgramView.luo:92:",
["9257"]="/System/classes/Program Managing/ProgramView.luo:122:",
["9258"]="/System/classes/Program Managing/ProgramView.luo:123:",
["9259"]="/System/classes/Program Managing/ProgramView.luo:124:",
["9260"]="/System/classes/Program Managing/ProgramView.luo:125:",
["9261"]="/System/classes/Program Managing/ProgramView.luo:126:",
["9262"]="/System/classes/Program Managing/ProgramView.luo:127:",
["9263"]="/System/classes/Program Managing/ProgramView.luo:128:",
["9264"]="/System/classes/Program Managing/ProgramView.luo:129:",
["9265"]="/System/classes/Program Managing/ProgramView.luo:130:",
["9266"]="/System/classes/Program Managing/ProgramView.luo:131:",
["9267"]="/System/classes/Program Managing/ProgramView.luo:132:",
["9268"]="/System/classes/Program Managing/ProgramView.luo:133:",
["9269"]="/System/classes/Program Managing/ProgramView.luo:134:",
["9270"]="/System/classes/Program Managing/ProgramView.luo:135:",
["9271"]="/System/classes/Program Managing/ProgramView.luo:136:",
["9272"]="/System/classes/Program Managing/ProgramView.luo:137:",
["9273"]="/System/classes/Program Managing/ProgramView.luo:138:",
["9274"]="/System/classes/Program Managing/ProgramView.luo:139:",
["9275"]="/System/classes/Program Managing/ProgramView.luo:170:",
["9276"]="/System/classes/Program Managing/ProgramView.luo:171:",
["9277"]="/System/classes/Program Managing/ProgramView.luo:172:",
["9278"]="/System/classes/Program Managing/ProgramView.luo:174:",
["9279"]="/System/classes/Program Managing/ProgramView.luo:175:",
["9280"]="/System/classes/Program Managing/ProgramView.luo:176:",
["9281"]="/System/classes/Program Managing/ProgramView.luo:178:",
["9282"]="/System/classes/Program Managing/ProgramView.luo:179:",
["9283"]="/System/classes/Program Managing/ProgramView.luo:180:",
["9284"]="/System/classes/Program Managing/ProgramView.luo:181:",
["9285"]="/System/classes/Program Managing/ProgramView.luo:182:",
["9286"]="/System/classes/Program Managing/ProgramView.luo:183:",
["9287"]="/System/classes/Program Managing/ProgramView.luo:184:",
["9288"]="/System/classes/Program Managing/ProgramView.luo:185:",
["9289"]="/System/classes/Program Managing/ProgramView.luo:186:",
["9290"]="/System/classes/Program Managing/ProgramView.luo:187:",
["9291"]="/System/classes/Program Managing/ProgramView.luo:188:",
["9292"]="/System/classes/Program Managing/ProgramView.luo:189:",
["9293"]="/System/classes/Program Managing/ProgramView.luo:190:",
["9294"]="/System/classes/Program Managing/ProgramView.luo:191:",
["9295"]="/System/classes/Program Managing/ProgramView.luo:192:",
["9296"]="/System/classes/Program Managing/ProgramView.luo:193:",
["9297"]="/System/classes/Program Managing/ProgramView.luo:194:",
["9298"]="/System/classes/Program Managing/ProgramView.luo:195:",
["9299"]="/System/classes/Program Managing/ProgramView.luo:196:",
["9300"]="/System/classes/Program Managing/ProgramView.luo:197:",
["9301"]="/System/classes/Program Managing/ProgramView.luo:198:",
["9302"]="/System/classes/Program Managing/ProgramView.luo:199:",
["9303"]="/System/classes/Program Managing/ProgramView.luo:200:",
["9304"]="/System/classes/Program Managing/ProgramView.luo:201:",
["9305"]="/System/classes/Program Managing/ProgramView.luo:202:",
["9306"]="/System/classes/Program Managing/ProgramView.luo:203:",
["9307"]="/System/classes/Program Managing/ProgramView.luo:204:",
["9308"]="/System/classes/Program Managing/ProgramView.luo:205:",
["9309"]="/System/classes/Program Managing/ProgramView.luo:206:",
["9310"]="/System/classes/Program Managing/ProgramView.luo:207:",
["9311"]="/System/classes/Program Managing/ProgramView.luo:208:",
["9312"]="/System/classes/Program Managing/ProgramView.luo:209:",
["9313"]="/System/classes/Program Managing/ProgramView.luo:210:",
["9314"]="/System/classes/Program Managing/ProgramView.luo:211:",
["9315"]="/System/classes/Program Managing/ProgramView.luo:212:",
["9316"]="/System/classes/Program Managing/ProgramView.luo:213:",
["9317"]="/System/classes/Program Managing/ProgramView.luo:214:",
["9318"]="/System/classes/Program Managing/ProgramView.luo:215:",
["9319"]="/System/classes/Program Managing/ProgramView.luo:216:",
["9320"]="/System/classes/Program Managing/ProgramView.luo:217:",
["9321"]="/System/classes/Program Managing/ProgramView.luo:218:",
["9322"]="/System/classes/Program Managing/ProgramView.luo:219:",
["9323"]="/System/classes/Program Managing/ProgramView.luo:220:",
["9324"]="/System/classes/Program Managing/ProgramView.luo:221:",
["9325"]="/System/classes/Program Managing/ProgramView.luo:222:",
["9326"]="/System/classes/Program Managing/ProgramView.luo:223:",
["9327"]="/System/classes/Program Managing/ProgramView.luo:224:",
["9328"]="/System/classes/Program Managing/ProgramView.luo:225:",
["9329"]="/System/classes/Program Managing/ProgramView.luo:226:",
["9330"]="/System/classes/Program Managing/ProgramView.luo:227:",
["9331"]="/System/classes/Program Managing/ProgramView.luo:228:",
["9332"]="/System/classes/Program Managing/ProgramView.luo:229:",
["9333"]="/System/classes/Program Managing/ProgramView.luo:230:",
["9334"]="/System/classes/Program Managing/ProgramView.luo:231:",
["9335"]="/System/classes/Program Managing/ProgramView.luo:232:",
["9336"]="/System/classes/Program Managing/ProgramView.luo:233:",
["9337"]="/System/classes/Program Managing/ProgramView.luo:234:",
["9338"]="/System/classes/Program Managing/ProgramView.luo:235:",
["9339"]="/System/classes/Program Managing/ProgramView.luo:236:",
["9340"]="/System/classes/Program Managing/ProgramView.luo:237:",
["9341"]="/System/classes/Program Managing/ProgramView.luo:238:",
["9342"]="/System/classes/Program Managing/ProgramView.luo:239:",
["9343"]="/System/classes/Program Managing/ProgramView.luo:240:",
["9344"]="/System/classes/Program Managing/ProgramView.luo:241:",
["9345"]="/System/classes/Program Managing/ProgramView.luo:242:",
["9346"]="/System/classes/Program Managing/ProgramView.luo:243:",
["9347"]="/System/classes/Program Managing/ProgramView.luo:244:",
["9348"]="/System/classes/Program Managing/ProgramView.luo:245:",
["9349"]="/System/classes/Program Managing/ProgramView.luo:246:",
["9350"]="/System/classes/Program Managing/ProgramView.luo:247:",
["9351"]="/System/classes/Program Managing/ProgramView.luo:248:",
["9352"]="/System/classes/Program Managing/ProgramView.luo:249:",
["9353"]="/System/classes/Program Managing/ProgramView.luo:250:",
["9354"]="/System/classes/Program Managing/ProgramView.luo:251:",
["9355"]="/System/classes/Program Managing/ProgramView.luo:252:",
["9356"]="/System/classes/Program Managing/ProgramView.luo:253:",
["9357"]="/System/classes/Program Managing/ProgramView.luo:254:",
["9358"]="/System/classes/Program Managing/ProgramView.luo:255:",
["9359"]="/System/classes/Program Managing/ProgramView.luo:256:",
["9360"]="/System/classes/Program Managing/ProgramView.luo:257:",
["9361"]="/System/classes/Program Managing/ProgramView.luo:258:",
["9362"]="/System/classes/Program Managing/ProgramView.luo:259:",
["9363"]="/System/classes/Program Managing/ProgramView.luo:260:",
["9364"]="/System/classes/Program Managing/ProgramView.luo:261:",
["9365"]="/System/classes/Program Managing/ProgramView.luo:262:",
["9366"]="/System/classes/Program Managing/ProgramView.luo:263:",
["9367"]="/System/classes/Program Managing/ProgramView.luo:264:",
["9368"]="/System/classes/Program Managing/ProgramView.luo:265:",
["9369"]="/System/classes/Program Managing/ProgramView.luo:266:",
["9370"]="/System/classes/Program Managing/ProgramView.luo:267:",
["9371"]="/System/classes/Program Managing/ProgramView.luo:268:",
["9372"]="/System/classes/Program Managing/ProgramView.luo:269:",
["9373"]="/System/classes/Program Managing/ProgramView.luo:270:",
["9374"]="/System/classes/Program Managing/ProgramView.luo:271:",
["9375"]="/System/classes/Program Managing/ProgramView.luo:272:",
["9376"]="/System/classes/Program Managing/ProgramView.luo:273:",
["9377"]="/System/classes/Program Managing/ProgramView.luo:274:",
["9378"]="/System/classes/Program Managing/ProgramView.luo:275:",
["9379"]="/System/classes/Program Managing/ProgramView.luo:276:",
["9380"]="/System/classes/Program Managing/ProgramView.luo:277:",
["9381"]="/System/classes/Program Managing/ProgramView.luo:278:",
["9382"]="/System/classes/Program Managing/ProgramView.luo:279:",
["9383"]="/System/classes/Program Managing/ProgramView.luo:280:",
["9384"]="/System/classes/Program Managing/ProgramView.luo:281:",
["9385"]="/System/classes/Program Managing/ProgramView.luo:282:",
["9386"]="/System/classes/Program Managing/ProgramView.luo:283:",
["9387"]="/System/classes/Program Managing/ProgramView.luo:284:",
["9388"]="/System/classes/Program Managing/ProgramView.luo:285:",
["9389"]="/System/classes/Program Managing/ProgramView.luo:141:",
["9390"]="/System/classes/Program Managing/ProgramView.luo:142:",
["9391"]="/System/classes/Program Managing/ProgramView.luo:143:",
["9392"]="/System/classes/Program Managing/ProgramView.luo:144:",
["9393"]="/System/classes/Program Managing/ProgramView.luo:145:",
["9394"]="/System/classes/Program Managing/ProgramView.luo:146:",
["9395"]="/System/classes/Program Managing/ProgramView.luo:147:",
["9396"]="/System/classes/Program Managing/ProgramView.luo:166:",
["9397"]="/System/classes/Program Managing/ProgramView.luo:167:",
["9398"]="/System/classes/Program Managing/ProgramView.luo:168:",
["9399"]="/System/classes/Program Managing/ProgramView.luo:149:",
["9400"]="/System/classes/Program Managing/ProgramView.luo:150:",
["9401"]="/System/classes/Program Managing/ProgramView.luo:151:",
["9402"]="/System/classes/Program Managing/ProgramView.luo:152:",
["9403"]="/System/classes/Program Managing/ProgramView.luo:153:",
["9404"]="/System/classes/Program Managing/ProgramView.luo:154:",
["9405"]="/System/classes/Program Managing/ProgramView.luo:155:",
["9406"]="/System/classes/Program Managing/ProgramView.luo:41:",
["9407"]="/System/classes/Program Managing/ProgramView.luo:42:",
["9408"]="/System/classes/Program Managing/ProgramView.luo:43:",
["9409"]="/System/classes/Program Managing/ProgramView.luo:45:",
["9410"]="/System/classes/Program Managing/ProgramView.luo:46:",
["9411"]="/System/classes/Program Managing/ProgramView.luo:47:",
["9412"]="/System/classes/Program Managing/ProgramView.luo:48:",
["9413"]="/System/classes/Program Managing/ProgramView.luo:49:",
["9414"]="/System/classes/Program Managing/ProgramView.luo:50:",
["9415"]="/System/classes/Program Managing/ProgramView.luo:51:",
["9416"]="/System/classes/Program Managing/ProgramView.luo:52:",
["9417"]="/System/classes/Program Managing/ProgramView.luo:53:",
["9418"]="/System/classes/Program Managing/ProgramView.luo:54:",
["9419"]="/System/classes/Program Managing/ProgramView.luo:55:",
["9420"]="/System/classes/Program Managing/ProgramView.luo:56:",
["9421"]="/System/classes/Program Managing/ProgramView.luo:57:",
["9422"]="/System/classes/Program Managing/ProgramView.luo:58:",
["9423"]="/System/classes/Program Managing/ProgramView.luo:59:",
["9424"]="/System/classes/Program Managing/ProgramView.luo:60:",
["9425"]="/System/classes/Program Managing/ProgramView.luo:61:",
["9426"]="/System/classes/Program Managing/ProgramView.luo:157:",
["9427"]="/System/classes/Program Managing/ProgramView.luo:158:",
["9428"]="/System/classes/Program Managing/ProgramView.luo:159:",
["9429"]="/System/classes/Program Managing/ProgramView.luo:160:",
["9430"]="/System/classes/Program Managing/ProgramView.luo:161:",
["9431"]="/System/classes/Program Managing/ProgramView.luo:162:",
["9432"]="/System/classes/Program Managing/ProgramView.luo:163:",
["9433"]="/System/classes/Program Managing/ProgramView.luo:164:",
["9449"]="/src/classes/Graphics/StripeMask.luo:4:",
["9450"]="/src/classes/Graphics/StripeMask.luo:5:",
["9451"]="/src/classes/Graphics/StripeMask.luo:6:",
["9452"]="/src/classes/Graphics/StripeMask.luo:7:",
["9453"]="/src/classes/Graphics/StripeMask.luo:8:",
["9454"]="/src/classes/Graphics/StripeMask.luo:9:",
["9455"]="/src/classes/Graphics/StripeMask.luo:10:",
["9456"]="/src/classes/Graphics/StripeMask.luo:11:",
["9457"]="/src/classes/Graphics/StripeMask.luo:12:",
["9458"]="/src/classes/Graphics/StripeMask.luo:13:",
["9459"]="/src/classes/Graphics/StripeMask.luo:14:",
["9460"]="/src/classes/Graphics/StripeMask.luo:15:",
["9461"]="/src/classes/Graphics/StripeMask.luo:16:",
["9462"]="/src/classes/Graphics/StripeMask.luo:17:",
["9508"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:14:",
["9509"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:15:",
["9510"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:16:",
["9511"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:17:",
["9512"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:18:",
["9513"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:19:",
["9514"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:20:",
["9515"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:21:",
["9516"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:34:",
["9517"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:35:",
["9518"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:36:",
["9519"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:37:",
["9520"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:38:",
["9521"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:39:",
["9522"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:40:",
["9523"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:41:",
["9524"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:42:",
["9525"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:70:",
["9526"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:71:",
["9527"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:72:",
["9528"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:73:",
["9529"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:74:",
["9530"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:75:",
["9531"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:76:",
["9532"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:77:",
["9533"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:78:",
["9534"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:27:",
["9535"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:28:",
["9536"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:29:",
["9537"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:30:",
["9538"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:31:",
["9539"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:32:",
["9540"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:23:",
["9541"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:24:",
["9542"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:25:",
["9543"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:61:",
["9544"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:62:",
["9545"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:63:",
["9546"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:64:",
["9547"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:65:",
["9548"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:66:",
["9549"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:67:",
["9550"]="/src/classes/Views/Containers/Split/SplitHandleView.luo:68:",
["9574"]="/src/classes/Events/Event Managers/EventManager.luo:12:",
["9575"]="/src/classes/Events/Event Managers/EventManager.luo:13:",
["9576"]="/src/classes/Events/Event Managers/EventManager.luo:14:",
["9577"]="/src/classes/Events/Event Managers/EventManager.luo:15:",
["9578"]="/src/classes/Events/Event Managers/EventManager.luo:16:",
["9579"]="/src/classes/Events/Event Managers/EventManager.luo:17:",
["9580"]="/src/classes/Events/Event Managers/EventManager.luo:18:",
["9581"]="/src/classes/Events/Event Managers/EventManager.luo:19:",
["9582"]="/src/classes/Events/Event Managers/EventManager.luo:91:",
["9583"]="/src/classes/Events/Event Managers/EventManager.luo:92:",
["9584"]="/src/classes/Events/Event Managers/EventManager.luo:93:",
["9585"]="/src/classes/Events/Event Managers/EventManager.luo:94:",
["9586"]="/src/classes/Events/Event Managers/EventManager.luo:95:",
["9587"]="/src/classes/Events/Event Managers/EventManager.luo:96:",
["9588"]="/src/classes/Events/Event Managers/EventManager.luo:97:",
["9589"]="/src/classes/Events/Event Managers/EventManager.luo:98:",
["9590"]="/src/classes/Events/Event Managers/EventManager.luo:118:",
["9591"]="/src/classes/Events/Event Managers/EventManager.luo:119:",
["9592"]="/src/classes/Events/Event Managers/EventManager.luo:120:",
["9593"]="/src/classes/Events/Event Managers/EventManager.luo:121:",
["9594"]="/src/classes/Events/Event Managers/EventManager.luo:122:",
["9595"]="/src/classes/Events/Event Managers/EventManager.luo:123:",
["9596"]="/src/classes/Events/Event Managers/EventManager.luo:124:",
["9597"]="/src/classes/Events/Event Managers/EventManager.luo:76:",
["9598"]="/src/classes/Events/Event Managers/EventManager.luo:77:",
["9599"]="/src/classes/Events/Event Managers/EventManager.luo:78:",
["9600"]="/src/classes/Events/Event Managers/EventManager.luo:79:",
["9601"]="/src/classes/Events/Event Managers/EventManager.luo:80:",
["9602"]="/src/classes/Events/Event Managers/EventManager.luo:81:",
["9603"]="/src/classes/Events/Event Managers/EventManager.luo:82:",
["9604"]="/src/classes/Events/Event Managers/EventManager.luo:83:",
["9605"]="/src/classes/Events/Event Managers/EventManager.luo:84:",
["9606"]="/src/classes/Events/Event Managers/EventManager.luo:85:",
["9607"]="/src/classes/Events/Event Managers/EventManager.luo:86:",
["9608"]="/src/classes/Events/Event Managers/EventManager.luo:105:",
["9609"]="/src/classes/Events/Event Managers/EventManager.luo:106:",
["9610"]="/src/classes/Events/Event Managers/EventManager.luo:107:",
["9611"]="/src/classes/Events/Event Managers/EventManager.luo:108:",
["9612"]="/src/classes/Events/Event Managers/EventManager.luo:109:",
["9613"]="/src/classes/Events/Event Managers/EventManager.luo:110:",
["9614"]="/src/classes/Events/Event Managers/EventManager.luo:111:",
["9615"]="/src/classes/Events/Event Managers/EventManager.luo:131:",
["9616"]="/src/classes/Events/Event Managers/EventManager.luo:132:",
["9617"]="/src/classes/Events/Event Managers/EventManager.luo:133:",
["9618"]="/src/classes/Events/Event Managers/EventManager.luo:134:",
["9619"]="/src/classes/Events/Event Managers/EventManager.luo:135:",
["9620"]="/src/classes/Events/Event Managers/EventManager.luo:136:",
["9621"]="/src/classes/Events/Event Managers/EventManager.luo:137:",
["9622"]="/src/classes/Events/Event Managers/EventManager.luo:138:",
["9623"]="/src/classes/Events/Event Managers/EventManager.luo:139:",
["9624"]="/src/classes/Events/Event Managers/EventManager.luo:172:",
["9625"]="/src/classes/Events/Event Managers/EventManager.luo:173:",
["9626"]="/src/classes/Events/Event Managers/EventManager.luo:174:",
["9627"]="/src/classes/Events/Event Managers/EventManager.luo:147:",
["9628"]="/src/classes/Events/Event Managers/EventManager.luo:148:",
["9629"]="/src/classes/Events/Event Managers/EventManager.luo:149:",
["9630"]="/src/classes/Events/Event Managers/EventManager.luo:150:",
["9631"]="/src/classes/Events/Event Managers/EventManager.luo:151:",
["9632"]="/src/classes/Events/Event Managers/EventManager.luo:152:",
["9633"]="/src/classes/Events/Event Managers/EventManager.luo:153:",
["9634"]="/src/classes/Events/Event Managers/EventManager.luo:154:",
["9635"]="/src/classes/Events/Event Managers/EventManager.luo:155:",
["9636"]="/src/classes/Events/Event Managers/EventManager.luo:156:",
["9637"]="/src/classes/Events/Event Managers/EventManager.luo:157:",
["9638"]="/src/classes/Events/Event Managers/EventManager.luo:158:",
["9639"]="/src/classes/Events/Event Managers/EventManager.luo:159:",
["9640"]="/src/classes/Events/Event Managers/EventManager.luo:160:",
["9641"]="/src/classes/Events/Event Managers/EventManager.luo:161:",
["9642"]="/src/classes/Events/Event Managers/EventManager.luo:162:",
["9643"]="/src/classes/Events/Event Managers/EventManager.luo:163:",
["9644"]="/src/classes/Events/Event Managers/EventManager.luo:164:",
["9645"]="/src/classes/Events/Event Managers/EventManager.luo:165:",
["9646"]="/src/classes/Events/Event Managers/EventManager.luo:166:",
["9647"]="/src/classes/Events/Event Managers/EventManager.luo:167:",
["9648"]="/src/classes/Events/Event Managers/EventManager.luo:168:",
["9649"]="/src/classes/Events/Event Managers/EventManager.luo:169:",
["9650"]="/src/classes/Events/Event Managers/EventManager.luo:170:",
["9651"]="/src/classes/Events/Event Managers/EventManager.luo:28:",
["9652"]="/src/classes/Events/Event Managers/EventManager.luo:29:",
["9653"]="/src/classes/Events/Event Managers/EventManager.luo:30:",
["9654"]="/src/classes/Events/Event Managers/EventManager.luo:31:",
["9655"]="/src/classes/Events/Event Managers/EventManager.luo:32:",
["9656"]="/src/classes/Events/Event Managers/EventManager.luo:33:",
["9657"]="/src/classes/Events/Event Managers/EventManager.luo:34:",
["9658"]="/src/classes/Events/Event Managers/EventManager.luo:35:",
["9659"]="/src/classes/Events/Event Managers/EventManager.luo:36:",
["9660"]="/src/classes/Events/Event Managers/EventManager.luo:60:",
["9661"]="/src/classes/Events/Event Managers/EventManager.luo:61:",
["9662"]="/src/classes/Events/Event Managers/EventManager.luo:62:",
["9663"]="/src/classes/Events/Event Managers/EventManager.luo:63:",
["9664"]="/src/classes/Events/Event Managers/EventManager.luo:64:",
["9665"]="/src/classes/Events/Event Managers/EventManager.luo:65:",
["9666"]="/src/classes/Events/Event Managers/EventManager.luo:66:",
["9667"]="/src/classes/Events/Event Managers/EventManager.luo:67:",
["9668"]="/src/classes/Events/Event Managers/EventManager.luo:68:",
["9669"]="/src/classes/Events/Event Managers/EventManager.luo:69:",
["9670"]="/src/classes/Events/Event Managers/EventManager.luo:44:",
["9671"]="/src/classes/Events/Event Managers/EventManager.luo:45:",
["9672"]="/src/classes/Events/Event Managers/EventManager.luo:46:",
["9673"]="/src/classes/Events/Event Managers/EventManager.luo:47:",
["9674"]="/src/classes/Events/Event Managers/EventManager.luo:48:",
["9675"]="/src/classes/Events/Event Managers/EventManager.luo:49:",
["9676"]="/src/classes/Events/Event Managers/EventManager.luo:50:",
["9677"]="/src/classes/Events/Event Managers/EventManager.luo:51:",
["9678"]="/src/classes/Events/Event Managers/EventManager.luo:52:",
["9745"]="/src/classes/Views/Containers/Split/SplitContainer.luo:28:",
["9746"]="/src/classes/Views/Containers/Split/SplitContainer.luo:29:",
["9747"]="/src/classes/Views/Containers/Split/SplitContainer.luo:30:",
["9748"]="/src/classes/Views/Containers/Split/SplitContainer.luo:31:",
["9749"]="/src/classes/Views/Containers/Split/SplitContainer.luo:32:",
["9750"]="/src/classes/Views/Containers/Split/SplitContainer.luo:33:",
["9751"]="/src/classes/Views/Containers/Split/SplitContainer.luo:34:",
["9752"]="/src/classes/Views/Containers/Split/SplitContainer.luo:35:",
["9753"]="/src/classes/Views/Containers/Split/SplitContainer.luo:36:",
["9754"]="/src/classes/Views/Containers/Split/SplitContainer.luo:37:",
["9755"]="/src/classes/Views/Containers/Split/SplitContainer.luo:38:",
["9756"]="/src/classes/Views/Containers/Split/SplitContainer.luo:39:",
["9757"]="/src/classes/Views/Containers/Split/SplitContainer.luo:40:",
["9758"]="/src/classes/Views/Containers/Split/SplitContainer.luo:41:",
["9759"]="/src/classes/Views/Containers/Split/SplitContainer.luo:42:",
["9760"]="/src/classes/Views/Containers/Split/SplitContainer.luo:43:",
["9761"]="/src/classes/Views/Containers/Split/SplitContainer.luo:44:",
["9762"]="/src/classes/Views/Containers/Split/SplitContainer.luo:45:",
["9763"]="/src/classes/Views/Containers/Split/SplitContainer.luo:46:",
["9764"]="/src/classes/Views/Containers/Split/SplitContainer.luo:47:",
["9765"]="/src/classes/Views/Containers/Split/SplitContainer.luo:48:",
["9766"]="/src/classes/Views/Containers/Split/SplitContainer.luo:49:",
["9767"]="/src/classes/Views/Containers/Split/SplitContainer.luo:50:",
["9768"]="/src/classes/Views/Containers/Split/SplitContainer.luo:51:",
["9769"]="/src/classes/Views/Containers/Split/SplitContainer.luo:52:",
["9770"]="/src/classes/Views/Containers/Split/SplitContainer.luo:53:",
["9771"]="/src/classes/Views/Containers/Split/SplitContainer.luo:54:",
["9772"]="/src/classes/Views/Containers/Split/SplitContainer.luo:55:",
["9773"]="/src/classes/Views/Containers/Split/SplitContainer.luo:56:",
["9774"]="/src/classes/Views/Containers/Split/SplitContainer.luo:57:",
["9775"]="/src/classes/Views/Containers/Split/SplitContainer.luo:58:",
["9776"]="/src/classes/Views/Containers/Split/SplitContainer.luo:59:",
["9777"]="/src/classes/Views/Containers/Split/SplitContainer.luo:60:",
["9778"]="/src/classes/Views/Containers/Split/SplitContainer.luo:61:",
["9779"]="/src/classes/Views/Containers/Split/SplitContainer.luo:62:",
["9780"]="/src/classes/Views/Containers/Split/SplitContainer.luo:63:",
["9781"]="/src/classes/Views/Containers/Split/SplitContainer.luo:64:",
["9782"]="/src/classes/Views/Containers/Split/SplitContainer.luo:65:",
["9783"]="/src/classes/Views/Containers/Split/SplitContainer.luo:66:",
["9784"]="/src/classes/Views/Containers/Split/SplitContainer.luo:67:",
["9785"]="/src/classes/Views/Containers/Split/SplitContainer.luo:68:",
["9786"]="/src/classes/Views/Containers/Split/SplitContainer.luo:69:",
["9787"]="/src/classes/Views/Containers/Split/SplitContainer.luo:70:",
["9788"]="/src/classes/Views/Containers/Split/SplitContainer.luo:71:",
["9789"]="/src/classes/Views/Containers/Split/SplitContainer.luo:72:",
["9790"]="/src/classes/Views/Containers/Split/SplitContainer.luo:73:",
["9791"]="/src/classes/Views/Containers/Split/SplitContainer.luo:74:",
["9792"]="/src/classes/Views/Containers/Split/SplitContainer.luo:132:",
["9793"]="/src/classes/Views/Containers/Split/SplitContainer.luo:133:",
["9794"]="/src/classes/Views/Containers/Split/SplitContainer.luo:134:",
["9795"]="/src/classes/Views/Containers/Split/SplitContainer.luo:135:",
["9796"]="/src/classes/Views/Containers/Split/SplitContainer.luo:136:",
["9797"]="/src/classes/Views/Containers/Split/SplitContainer.luo:137:",
["9798"]="/src/classes/Views/Containers/Split/SplitContainer.luo:138:",
["9799"]="/src/classes/Views/Containers/Split/SplitContainer.luo:139:",
["9800"]="/src/classes/Views/Containers/Split/SplitContainer.luo:140:",
["9801"]="/src/classes/Views/Containers/Split/SplitContainer.luo:141:",
["9802"]="/src/classes/Views/Containers/Split/SplitContainer.luo:142:",
["9803"]="/src/classes/Views/Containers/Split/SplitContainer.luo:143:",
["9804"]="/src/classes/Views/Containers/Split/SplitContainer.luo:144:",
["9805"]="/src/classes/Views/Containers/Split/SplitContainer.luo:145:",
["9806"]="/src/classes/Views/Containers/Split/SplitContainer.luo:146:",
["9807"]="/src/classes/Views/Containers/Split/SplitContainer.luo:147:",
["9808"]="/src/classes/Views/Containers/Split/SplitContainer.luo:148:",
["9809"]="/src/classes/Views/Containers/Split/SplitContainer.luo:111:",
["9810"]="/src/classes/Views/Containers/Split/SplitContainer.luo:112:",
["9811"]="/src/classes/Views/Containers/Split/SplitContainer.luo:113:",
["9812"]="/src/classes/Views/Containers/Split/SplitContainer.luo:114:",
["9813"]="/src/classes/Views/Containers/Split/SplitContainer.luo:115:",
["9814"]="/src/classes/Views/Containers/Split/SplitContainer.luo:116:",
["9815"]="/src/classes/Views/Containers/Split/SplitContainer.luo:117:",
["9816"]="/src/classes/Views/Containers/Split/SplitContainer.luo:118:",
["9817"]="/src/classes/Views/Containers/Split/SplitContainer.luo:119:",
["9818"]="/src/classes/Views/Containers/Split/SplitContainer.luo:120:",
["9819"]="/src/classes/Views/Containers/Split/SplitContainer.luo:121:",
["9820"]="/src/classes/Views/Containers/Split/SplitContainer.luo:122:",
["9821"]="/src/classes/Views/Containers/Split/SplitContainer.luo:123:",
["9822"]="/src/classes/Views/Containers/Split/SplitContainer.luo:124:",
["9823"]="/src/classes/Views/Containers/Split/SplitContainer.luo:125:",
["9824"]="/src/classes/Views/Containers/Split/SplitContainer.luo:126:",
["9825"]="/src/classes/Views/Containers/Split/SplitContainer.luo:127:",
["9826"]="/src/classes/Views/Containers/Split/SplitContainer.luo:128:",
["9827"]="/src/classes/Views/Containers/Split/SplitContainer.luo:129:",
["9828"]="/src/classes/Views/Containers/Split/SplitContainer.luo:130:",
["9829"]="/src/classes/Views/Containers/Split/SplitContainer.luo:79:",
["9830"]="/src/classes/Views/Containers/Split/SplitContainer.luo:80:",
["9831"]="/src/classes/Views/Containers/Split/SplitContainer.luo:81:",
["9832"]="/src/classes/Views/Containers/Split/SplitContainer.luo:82:",
["9833"]="/src/classes/Views/Containers/Split/SplitContainer.luo:83:",
["9834"]="/src/classes/Views/Containers/Split/SplitContainer.luo:84:",
["9835"]="/src/classes/Views/Containers/Split/SplitContainer.luo:85:",
["9836"]="/src/classes/Views/Containers/Split/SplitContainer.luo:90:",
["9837"]="/src/classes/Views/Containers/Split/SplitContainer.luo:91:",
["9838"]="/src/classes/Views/Containers/Split/SplitContainer.luo:92:",
["9839"]="/src/classes/Views/Containers/Split/SplitContainer.luo:93:",
["9840"]="/src/classes/Views/Containers/Split/SplitContainer.luo:94:",
["9841"]="/src/classes/Views/Containers/Split/SplitContainer.luo:95:",
["9842"]="/src/classes/Views/Containers/Split/SplitContainer.luo:96:",
["9933"]="/src/classes/Views/Containers/ApplicationContainer.luo:21:",
["9934"]="/src/classes/Views/Containers/ApplicationContainer.luo:22:",
["9935"]="/src/classes/Views/Containers/ApplicationContainer.luo:23:",
["9936"]="/src/classes/Views/Containers/ApplicationContainer.luo:24:",
["9937"]="/src/classes/Views/Containers/ApplicationContainer.luo:25:",
["9938"]="/src/classes/Views/Containers/ApplicationContainer.luo:27:",
["9939"]="/src/classes/Views/Containers/ApplicationContainer.luo:28:",
["9940"]="/src/classes/Views/Containers/ApplicationContainer.luo:29:",
["9941"]="/src/classes/Views/Containers/ApplicationContainer.luo:30:",
["9942"]="/src/classes/Views/Containers/ApplicationContainer.luo:31:",
["9943"]="/src/classes/Views/Containers/ApplicationContainer.luo:32:",
["9944"]="/src/classes/Views/Containers/ApplicationContainer.luo:33:",
["9945"]="/src/classes/Views/Containers/ApplicationContainer.luo:34:",
["9946"]="/src/classes/Views/Containers/ApplicationContainer.luo:191:",
["9947"]="/src/classes/Views/Containers/ApplicationContainer.luo:192:",
["9948"]="/src/classes/Views/Containers/ApplicationContainer.luo:193:",
["9949"]="/src/classes/Views/Containers/ApplicationContainer.luo:194:",
["9950"]="/src/classes/Views/Containers/ApplicationContainer.luo:134:",
["9951"]="/src/classes/Views/Containers/ApplicationContainer.luo:135:",
["9952"]="/src/classes/Views/Containers/ApplicationContainer.luo:136:",
["9953"]="/src/classes/Views/Containers/ApplicationContainer.luo:137:",
["9954"]="/src/classes/Views/Containers/ApplicationContainer.luo:138:",
["9955"]="/src/classes/Views/Containers/ApplicationContainer.luo:139:",
["9956"]="/src/classes/Views/Containers/ApplicationContainer.luo:140:",
["9957"]="/src/classes/Views/Containers/ApplicationContainer.luo:141:",
["9958"]="/src/classes/Views/Containers/ApplicationContainer.luo:142:",
["9959"]="/src/classes/Views/Containers/ApplicationContainer.luo:143:",
["9960"]="/src/classes/Views/Containers/ApplicationContainer.luo:144:",
["9961"]="/src/classes/Views/Containers/ApplicationContainer.luo:145:",
["9962"]="/src/classes/Views/Containers/ApplicationContainer.luo:146:",
["9963"]="/src/classes/Views/Containers/ApplicationContainer.luo:147:",
["9964"]="/src/classes/Views/Containers/ApplicationContainer.luo:148:",
["9965"]="/src/classes/Views/Containers/ApplicationContainer.luo:149:",
["9966"]="/src/classes/Views/Containers/ApplicationContainer.luo:150:",
["9967"]="/src/classes/Views/Containers/ApplicationContainer.luo:151:",
["9968"]="/src/classes/Views/Containers/ApplicationContainer.luo:152:",
["9969"]="/src/classes/Views/Containers/ApplicationContainer.luo:153:",
["9970"]="/src/classes/Views/Containers/ApplicationContainer.luo:154:",
["9971"]="/src/classes/Views/Containers/ApplicationContainer.luo:155:",
["9972"]="/src/classes/Views/Containers/ApplicationContainer.luo:156:",
["9973"]="/src/classes/Views/Containers/ApplicationContainer.luo:157:",
["9974"]="/src/classes/Views/Containers/ApplicationContainer.luo:158:",
["9975"]="/src/classes/Views/Containers/ApplicationContainer.luo:159:",
["9976"]="/src/classes/Views/Containers/ApplicationContainer.luo:160:",
["9977"]="/src/classes/Views/Containers/ApplicationContainer.luo:161:",
["9978"]="/src/classes/Views/Containers/ApplicationContainer.luo:162:",
["9979"]="/src/classes/Views/Containers/ApplicationContainer.luo:163:",
["9980"]="/src/classes/Views/Containers/ApplicationContainer.luo:164:",
["9981"]="/src/classes/Views/Containers/ApplicationContainer.luo:165:",
["9982"]="/src/classes/Views/Containers/ApplicationContainer.luo:166:",
["9983"]="/src/classes/Views/Containers/ApplicationContainer.luo:167:",
["9984"]="/src/classes/Views/Containers/ApplicationContainer.luo:168:",
["9985"]="/src/classes/Views/Containers/ApplicationContainer.luo:169:",
["9986"]="/src/classes/Views/Containers/ApplicationContainer.luo:170:",
["9987"]="/src/classes/Views/Containers/ApplicationContainer.luo:171:",
["9988"]="/src/classes/Views/Containers/ApplicationContainer.luo:172:",
["9989"]="/src/classes/Views/Containers/ApplicationContainer.luo:173:",
["9990"]="/src/classes/Views/Containers/ApplicationContainer.luo:174:",
["9991"]="/src/classes/Views/Containers/ApplicationContainer.luo:175:",
["9992"]="/src/classes/Views/Containers/ApplicationContainer.luo:176:",
["9993"]="/src/classes/Views/Containers/ApplicationContainer.luo:177:",
["9994"]="/src/classes/Views/Containers/ApplicationContainer.luo:178:",
["9995"]="/src/classes/Views/Containers/ApplicationContainer.luo:179:",
["9996"]="/src/classes/Views/Containers/ApplicationContainer.luo:180:",
["9997"]="/src/classes/Views/Containers/ApplicationContainer.luo:58:",
["9998"]="/src/classes/Views/Containers/ApplicationContainer.luo:59:",
["9999"]="/src/classes/Views/Containers/ApplicationContainer.luo:60:",
["10000"]="/src/classes/Views/Containers/ApplicationContainer.luo:61:",
["10001"]="/src/classes/Views/Containers/ApplicationContainer.luo:62:",
["10002"]="/src/classes/Views/Containers/ApplicationContainer.luo:63:",
["10003"]="/src/classes/Views/Containers/ApplicationContainer.luo:64:",
["10004"]="/src/classes/Views/Containers/ApplicationContainer.luo:65:",
["10005"]="/src/classes/Views/Containers/ApplicationContainer.luo:66:",
["10006"]="/src/classes/Views/Containers/ApplicationContainer.luo:67:",
["10007"]="/src/classes/Views/Containers/ApplicationContainer.luo:68:",
["10008"]="/src/classes/Views/Containers/ApplicationContainer.luo:69:",
["10009"]="/src/classes/Views/Containers/ApplicationContainer.luo:70:",
["10010"]="/src/classes/Views/Containers/ApplicationContainer.luo:71:",
["10011"]="/src/classes/Views/Containers/ApplicationContainer.luo:72:",
["10012"]="/src/classes/Views/Containers/ApplicationContainer.luo:73:",
["10013"]="/src/classes/Views/Containers/ApplicationContainer.luo:74:",
["10014"]="/src/classes/Views/Containers/ApplicationContainer.luo:75:",
["10015"]="/src/classes/Views/Containers/ApplicationContainer.luo:76:",
["10016"]="/src/classes/Views/Containers/ApplicationContainer.luo:77:",
["10017"]="/src/classes/Views/Containers/ApplicationContainer.luo:78:",
["10018"]="/src/classes/Views/Containers/ApplicationContainer.luo:79:",
["10019"]="/src/classes/Views/Containers/ApplicationContainer.luo:80:",
["10020"]="/src/classes/Views/Containers/ApplicationContainer.luo:81:",
["10021"]="/src/classes/Views/Containers/ApplicationContainer.luo:82:",
["10022"]="/src/classes/Views/Containers/ApplicationContainer.luo:83:",
["10023"]="/src/classes/Views/Containers/ApplicationContainer.luo:182:",
["10024"]="/src/classes/Views/Containers/ApplicationContainer.luo:183:",
["10025"]="/src/classes/Views/Containers/ApplicationContainer.luo:184:",
["10026"]="/src/classes/Views/Containers/ApplicationContainer.luo:185:",
["10027"]="/src/classes/Views/Containers/ApplicationContainer.luo:186:",
["10028"]="/src/classes/Views/Containers/ApplicationContainer.luo:187:",
["10029"]="/src/classes/Views/Containers/ApplicationContainer.luo:188:",
["10030"]="/src/classes/Views/Containers/ApplicationContainer.luo:189:",
["10031"]="/src/classes/Views/Containers/ApplicationContainer.luo:98:",
["10032"]="/src/classes/Views/Containers/ApplicationContainer.luo:99:",
["10033"]="/src/classes/Views/Containers/ApplicationContainer.luo:100:",
["10034"]="/src/classes/Views/Containers/ApplicationContainer.luo:101:",
["10035"]="/src/classes/Views/Containers/ApplicationContainer.luo:88:",
["10036"]="/src/classes/Views/Containers/ApplicationContainer.luo:89:",
["10037"]="/src/classes/Views/Containers/ApplicationContainer.luo:90:",
["10038"]="/src/classes/Views/Containers/ApplicationContainer.luo:91:",
["10039"]="/src/classes/Views/Containers/ApplicationContainer.luo:92:",
["10040"]="/src/classes/Views/Containers/ApplicationContainer.luo:93:",
["10041"]="/src/classes/Views/Containers/ApplicationContainer.luo:108:",
["10042"]="/src/classes/Views/Containers/ApplicationContainer.luo:109:",
["10043"]="/src/classes/Views/Containers/ApplicationContainer.luo:110:",
["10044"]="/src/classes/Views/Containers/ApplicationContainer.luo:111:",
["10045"]="/src/classes/Views/Containers/ApplicationContainer.luo:112:",
["10046"]="/src/classes/Views/Containers/ApplicationContainer.luo:113:",
["10047"]="/src/classes/Views/Containers/ApplicationContainer.luo:114:",
["10048"]="/src/classes/Views/Containers/ApplicationContainer.luo:115:",
["10049"]="/src/classes/Views/Containers/ApplicationContainer.luo:116:",
["10050"]="/src/classes/Views/Containers/ApplicationContainer.luo:117:",
["10051"]="/src/classes/Views/Containers/ApplicationContainer.luo:118:",
["10129"]="/System/classes/QuartzApplicationContainer.luo:7:",
["10130"]="/System/classes/QuartzApplicationContainer.luo:8:",
["10131"]="/System/classes/QuartzApplicationContainer.luo:9:",
["10132"]="/System/classes/QuartzApplicationContainer.luo:10:",
["10133"]="/System/classes/QuartzApplicationContainer.luo:12:",
["10134"]="/System/classes/QuartzApplicationContainer.luo:13:",
["10135"]="/System/classes/QuartzApplicationContainer.luo:14:",
["10150"]="/System/classes/Program Managing/ProgramClosedInterfaceEvent.luo:7:",
["10151"]="/System/classes/Program Managing/ProgramClosedInterfaceEvent.luo:8:",
["10152"]="/System/classes/Program Managing/ProgramClosedInterfaceEvent.luo:9:",
["10162"]="/src/classes/Symbols/MenuOpenSymbol.luo:9:",
["10163"]="/src/classes/Symbols/MenuOpenSymbol.luo:10:",
["10164"]="/src/classes/Symbols/MenuOpenSymbol.luo:11:",
["10165"]="/src/classes/Symbols/MenuOpenSymbol.luo:12:",
["10166"]="/src/classes/Symbols/MenuOpenSymbol.luo:13:",
["10167"]="/src/classes/Symbols/MenuOpenSymbol.luo:14:",
["10168"]="/src/classes/Symbols/MenuOpenSymbol.luo:15:",
["10169"]="/src/classes/Symbols/MenuOpenSymbol.luo:16:",
["10184"]="/System/classes/Program Managing/ProgramInformationChangedInterfaceEvent.luo:7:",
["10185"]="/System/classes/Program Managing/ProgramInformationChangedInterfaceEvent.luo:8:",
["10186"]="/System/classes/Program Managing/ProgramInformationChangedInterfaceEvent.luo:9:",
["10253"]="/src/classes/Views/Containers/ScrollView.luo:26:",
["10254"]="/src/classes/Views/Containers/ScrollView.luo:27:",
["10255"]="/src/classes/Views/Containers/ScrollView.luo:28:",
["10256"]="/src/classes/Views/Containers/ScrollView.luo:29:",
["10257"]="/src/classes/Views/Containers/ScrollView.luo:30:",
["10258"]="/src/classes/Views/Containers/ScrollView.luo:31:",
["10259"]="/src/classes/Views/Containers/ScrollView.luo:32:",
["10260"]="/src/classes/Views/Containers/ScrollView.luo:33:",
["10261"]="/src/classes/Views/Containers/ScrollView.luo:34:",
["10262"]="/src/classes/Views/Containers/ScrollView.luo:35:",
["10263"]="/src/classes/Views/Containers/ScrollView.luo:36:",
["10264"]="/src/classes/Views/Containers/ScrollView.luo:37:",
["10265"]="/src/classes/Views/Containers/ScrollView.luo:154:",
["10266"]="/src/classes/Views/Containers/ScrollView.luo:155:",
["10267"]="/src/classes/Views/Containers/ScrollView.luo:156:",
["10268"]="/src/classes/Views/Containers/ScrollView.luo:157:",
["10269"]="/src/classes/Views/Containers/ScrollView.luo:158:",
["10270"]="/src/classes/Views/Containers/ScrollView.luo:159:",
["10271"]="/src/classes/Views/Containers/ScrollView.luo:160:",
["10272"]="/src/classes/Views/Containers/ScrollView.luo:161:",
["10273"]="/src/classes/Views/Containers/ScrollView.luo:162:",
["10274"]="/src/classes/Views/Containers/ScrollView.luo:163:",
["10275"]="/src/classes/Views/Containers/ScrollView.luo:164:",
["10276"]="/src/classes/Views/Containers/ScrollView.luo:165:",
["10277"]="/src/classes/Views/Containers/ScrollView.luo:166:",
["10278"]="/src/classes/Views/Containers/ScrollView.luo:167:",
["10279"]="/src/classes/Views/Containers/ScrollView.luo:168:",
["10280"]="/src/classes/Views/Containers/ScrollView.luo:133:",
["10281"]="/src/classes/Views/Containers/ScrollView.luo:134:",
["10282"]="/src/classes/Views/Containers/ScrollView.luo:135:",
["10283"]="/src/classes/Views/Containers/ScrollView.luo:136:",
["10284"]="/src/classes/Views/Containers/ScrollView.luo:137:",
["10285"]="/src/classes/Views/Containers/ScrollView.luo:138:",
["10286"]="/src/classes/Views/Containers/ScrollView.luo:139:",
["10287"]="/src/classes/Views/Containers/ScrollView.luo:140:",
["10288"]="/src/classes/Views/Containers/ScrollView.luo:141:",
["10289"]="/src/classes/Views/Containers/ScrollView.luo:142:",
["10290"]="/src/classes/Views/Containers/ScrollView.luo:143:",
["10291"]="/src/classes/Views/Containers/ScrollView.luo:144:",
["10292"]="/src/classes/Views/Containers/ScrollView.luo:145:",
["10293"]="/src/classes/Views/Containers/ScrollView.luo:146:",
["10294"]="/src/classes/Views/Containers/ScrollView.luo:147:",
["10295"]="/src/classes/Views/Containers/ScrollView.luo:39:",
["10296"]="/src/classes/Views/Containers/ScrollView.luo:40:",
["10297"]="/src/classes/Views/Containers/ScrollView.luo:41:",
["10298"]="/src/classes/Views/Containers/ScrollView.luo:42:",
["10299"]="/src/classes/Views/Containers/ScrollView.luo:43:",
["10300"]="/src/classes/Views/Containers/ScrollView.luo:76:",
["10301"]="/src/classes/Views/Containers/ScrollView.luo:77:",
["10302"]="/src/classes/Views/Containers/ScrollView.luo:78:",
["10303"]="/src/classes/Views/Containers/ScrollView.luo:79:",
["10304"]="/src/classes/Views/Containers/ScrollView.luo:80:",
["10305"]="/src/classes/Views/Containers/ScrollView.luo:45:",
["10306"]="/src/classes/Views/Containers/ScrollView.luo:46:",
["10307"]="/src/classes/Views/Containers/ScrollView.luo:47:",
["10308"]="/src/classes/Views/Containers/ScrollView.luo:48:",
["10309"]="/src/classes/Views/Containers/ScrollView.luo:49:",
["10310"]="/src/classes/Views/Containers/ScrollView.luo:50:",
["10311"]="/src/classes/Views/Containers/ScrollView.luo:51:",
["10312"]="/src/classes/Views/Containers/ScrollView.luo:52:",
["10313"]="/src/classes/Views/Containers/ScrollView.luo:53:",
["10314"]="/src/classes/Views/Containers/ScrollView.luo:54:",
["10315"]="/src/classes/Views/Containers/ScrollView.luo:55:",
["10316"]="/src/classes/Views/Containers/ScrollView.luo:56:",
["10317"]="/src/classes/Views/Containers/ScrollView.luo:57:",
["10318"]="/src/classes/Views/Containers/ScrollView.luo:58:",
["10319"]="/src/classes/Views/Containers/ScrollView.luo:59:",
["10320"]="/src/classes/Views/Containers/ScrollView.luo:61:",
["10321"]="/src/classes/Views/Containers/ScrollView.luo:62:",
["10322"]="/src/classes/Views/Containers/ScrollView.luo:63:",
["10323"]="/src/classes/Views/Containers/ScrollView.luo:64:",
["10324"]="/src/classes/Views/Containers/ScrollView.luo:65:",
["10325"]="/src/classes/Views/Containers/ScrollView.luo:66:",
["10326"]="/src/classes/Views/Containers/ScrollView.luo:67:",
["10327"]="/src/classes/Views/Containers/ScrollView.luo:68:",
["10328"]="/src/classes/Views/Containers/ScrollView.luo:69:",
["10329"]="/src/classes/Views/Containers/ScrollView.luo:70:",
["10330"]="/src/classes/Views/Containers/ScrollView.luo:71:",
["10331"]="/src/classes/Views/Containers/ScrollView.luo:72:",
["10332"]="/src/classes/Views/Containers/ScrollView.luo:73:",
["10333"]="/src/classes/Views/Containers/ScrollView.luo:74:",
["10334"]="/src/classes/Views/Containers/ScrollView.luo:82:",
["10335"]="/src/classes/Views/Containers/ScrollView.luo:83:",
["10336"]="/src/classes/Views/Containers/ScrollView.luo:84:",
["10337"]="/src/classes/Views/Containers/ScrollView.luo:85:",
["10338"]="/src/classes/Views/Containers/ScrollView.luo:86:",
["10339"]="/src/classes/Views/Containers/ScrollView.luo:110:",
["10340"]="/src/classes/Views/Containers/ScrollView.luo:111:",
["10341"]="/src/classes/Views/Containers/ScrollView.luo:112:",
["10342"]="/src/classes/Views/Containers/ScrollView.luo:113:",
["10343"]="/src/classes/Views/Containers/ScrollView.luo:114:",
["10344"]="/src/classes/Views/Containers/ScrollView.luo:115:",
["10345"]="/src/classes/Views/Containers/ScrollView.luo:116:",
["10346"]="/src/classes/Views/Containers/ScrollView.luo:117:",
["10347"]="/src/classes/Views/Containers/ScrollView.luo:118:",
["10348"]="/src/classes/Views/Containers/ScrollView.luo:119:",
["10349"]="/src/classes/Views/Containers/ScrollView.luo:120:",
["10350"]="/src/classes/Views/Containers/ScrollView.luo:121:",
["10351"]="/src/classes/Views/Containers/ScrollView.luo:122:",
["10352"]="/src/classes/Views/Containers/ScrollView.luo:123:",
["10353"]="/src/classes/Views/Containers/ScrollView.luo:124:",
["10354"]="/src/classes/Views/Containers/ScrollView.luo:125:",
["10355"]="/src/classes/Views/Containers/ScrollView.luo:126:",
["10356"]="/src/classes/Views/Containers/ScrollView.luo:127:",
["10357"]="/src/classes/Views/Containers/ScrollView.luo:92:",
["10358"]="/src/classes/Views/Containers/ScrollView.luo:93:",
["10359"]="/src/classes/Views/Containers/ScrollView.luo:94:",
["10360"]="/src/classes/Views/Containers/ScrollView.luo:95:",
["10361"]="/src/classes/Views/Containers/ScrollView.luo:96:",
["10362"]="/src/classes/Views/Containers/ScrollView.luo:97:",
["10363"]="/src/classes/Views/Containers/ScrollView.luo:98:",
["10364"]="/src/classes/Views/Containers/ScrollView.luo:99:",
["10365"]="/src/classes/Views/Containers/ScrollView.luo:100:",
["10366"]="/src/classes/Views/Containers/ScrollView.luo:101:",
["10367"]="/src/classes/Views/Containers/ScrollView.luo:102:",
["10368"]="/src/classes/Views/Containers/ScrollView.luo:103:",
["10369"]="/src/classes/Views/Containers/ScrollView.luo:104:",
["10370"]="/src/classes/Views/Containers/ScrollView.luo:105:",
["10371"]="/src/classes/Views/Containers/ScrollView.luo:106:",
["10372"]="/src/classes/Views/Containers/ScrollView.luo:107:",
["10427"]="/src/classes/Views/Containers/MenuBar.luo:19:",
["10428"]="/src/classes/Views/Containers/MenuBar.luo:20:",
["10429"]="/src/classes/Views/Containers/MenuBar.luo:21:",
["10430"]="/src/classes/Views/Containers/MenuBar.luo:22:",
["10431"]="/src/classes/Views/Containers/MenuBar.luo:23:",
["10432"]="/src/classes/Views/Containers/MenuBar.luo:24:",
["10433"]="/src/classes/Views/Containers/MenuBar.luo:25:",
["10434"]="/src/classes/Views/Containers/MenuBar.luo:26:",
["10435"]="/src/classes/Views/Containers/MenuBar.luo:27:",
["10436"]="/src/classes/Views/Containers/MenuBar.luo:28:",
["10437"]="/src/classes/Views/Containers/MenuBar.luo:29:",
["10438"]="/src/classes/Views/Containers/MenuBar.luo:30:",
["10439"]="/src/classes/Views/Containers/MenuBar.luo:12:",
["10440"]="/src/classes/Views/Containers/MenuBar.luo:13:",
["10441"]="/src/classes/Views/Containers/MenuBar.luo:14:",
["10442"]="/src/classes/Views/Containers/MenuBar.luo:49:",
["10443"]="/src/classes/Views/Containers/MenuBar.luo:50:",
["10444"]="/src/classes/Views/Containers/MenuBar.luo:51:",
["10445"]="/src/classes/Views/Containers/MenuBar.luo:52:",
["10446"]="/src/classes/Views/Containers/MenuBar.luo:32:",
["10447"]="/src/classes/Views/Containers/MenuBar.luo:33:",
["10448"]="/src/classes/Views/Containers/MenuBar.luo:34:",
["10449"]="/src/classes/Views/Containers/MenuBar.luo:35:",
["10450"]="/src/classes/Views/Containers/MenuBar.luo:36:",
["10451"]="/src/classes/Views/Containers/MenuBar.luo:37:",
["10452"]="/src/classes/Views/Containers/MenuBar.luo:6:",
["10453"]="/src/classes/Views/Containers/MenuBar.luo:7:",
["10454"]="/src/classes/Views/Containers/MenuBar.luo:8:",
["10455"]="/src/classes/Views/Containers/MenuBar.luo:9:",
["10456"]="/src/classes/Views/Containers/MenuBar.luo:10:",
["10457"]="/src/classes/Views/Containers/MenuBar.luo:44:",
["10458"]="/src/classes/Views/Containers/MenuBar.luo:45:",
["10459"]="/src/classes/Views/Containers/MenuBar.luo:46:",
["10460"]="/src/classes/Views/Containers/MenuBar.luo:47:",
["10464"]="/src/classes/Graphics/LineMask.luo:4:",
["10465"]="/src/classes/Graphics/LineMask.luo:5:",
["10466"]="/src/classes/Graphics/LineMask.luo:6:",
["10467"]="/src/classes/Graphics/LineMask.luo:7:",
["10468"]="/src/classes/Graphics/LineMask.luo:8:",
["10469"]="/src/classes/Graphics/LineMask.luo:9:",
["10470"]="/src/classes/Graphics/LineMask.luo:10:",
["10471"]="/src/classes/Graphics/LineMask.luo:11:",
["10472"]="/src/classes/Graphics/LineMask.luo:12:",
["10473"]="/src/classes/Graphics/LineMask.luo:13:",
["10474"]="/src/classes/Graphics/LineMask.luo:14:",
["10475"]="/src/classes/Graphics/LineMask.luo:15:",
["10476"]="/src/classes/Graphics/LineMask.luo:16:",
["10477"]="/src/classes/Graphics/LineMask.luo:17:",
["10478"]="/src/classes/Graphics/LineMask.luo:18:",
["10479"]="/src/classes/Graphics/LineMask.luo:19:",
["10480"]="/src/classes/Graphics/LineMask.luo:20:",
["10481"]="/src/classes/Graphics/LineMask.luo:21:",
["10482"]="/src/classes/Graphics/LineMask.luo:22:",
["10483"]="/src/classes/Graphics/LineMask.luo:23:",
["10484"]="/src/classes/Graphics/LineMask.luo:24:",
["10485"]="/src/classes/Graphics/LineMask.luo:25:",
["10504"]="/src/classes/Events/Interface Events/ChildAddedInterfaceEvent.luo:15:",
["10505"]="/src/classes/Events/Interface Events/ChildAddedInterfaceEvent.luo:16:",
["10506"]="/src/classes/Events/Interface Events/ChildAddedInterfaceEvent.luo:17:",
["10507"]="/src/classes/Events/Interface Events/ChildAddedInterfaceEvent.luo:18:",
["10549"]="/src/classes/Views/Containers/List/ListItem.luo:10:",
["10550"]="/src/classes/Views/Containers/List/ListItem.luo:11:",
["10551"]="/src/classes/Views/Containers/List/ListItem.luo:12:",
["10552"]="/src/classes/Views/Containers/List/ListItem.luo:13:",
["10553"]="/src/classes/Views/Containers/List/ListItem.luo:14:",
["10554"]="/src/classes/Views/Containers/List/ListItem.luo:15:",
["10555"]="/src/classes/Views/Containers/List/ListItem.luo:16:",
["10556"]="/src/classes/Views/Containers/List/ListItem.luo:34:",
["10557"]="/src/classes/Views/Containers/List/ListItem.luo:35:",
["10558"]="/src/classes/Views/Containers/List/ListItem.luo:36:",
["10559"]="/src/classes/Views/Containers/List/ListItem.luo:56:",
["10560"]="/src/classes/Views/Containers/List/ListItem.luo:57:",
["10561"]="/src/classes/Views/Containers/List/ListItem.luo:58:",
["10562"]="/src/classes/Views/Containers/List/ListItem.luo:59:",
["10563"]="/src/classes/Views/Containers/List/ListItem.luo:60:",
["10564"]="/src/classes/Views/Containers/List/ListItem.luo:61:",
["10565"]="/src/classes/Views/Containers/List/ListItem.luo:62:",
["10566"]="/src/classes/Views/Containers/List/ListItem.luo:63:",
["10567"]="/src/classes/Views/Containers/List/ListItem.luo:64:",
["10568"]="/src/classes/Views/Containers/List/ListItem.luo:65:",
["10569"]="/src/classes/Views/Containers/List/ListItem.luo:66:",
["10570"]="/src/classes/Views/Containers/List/ListItem.luo:75:",
["10571"]="/src/classes/Views/Containers/List/ListItem.luo:76:",
["10572"]="/src/classes/Views/Containers/List/ListItem.luo:68:",
["10573"]="/src/classes/Views/Containers/List/ListItem.luo:69:",
["10574"]="/src/classes/Views/Containers/List/ListItem.luo:70:",
["10575"]="/src/classes/Views/Containers/List/ListItem.luo:71:",
["10576"]="/src/classes/Views/Containers/List/ListItem.luo:72:",
["10577"]="/src/classes/Views/Containers/List/ListItem.luo:73:",
["10578"]="/src/classes/Views/Containers/List/ListItem.luo:18:",
["10579"]="/src/classes/Views/Containers/List/ListItem.luo:19:",
["10580"]="/src/classes/Views/Containers/List/ListItem.luo:20:",
["10581"]="/src/classes/Views/Containers/List/ListItem.luo:21:",
["10582"]="/src/classes/Views/Containers/List/ListItem.luo:22:",
["10583"]="/src/classes/Views/Containers/List/ListItem.luo:23:",
["10584"]="/src/classes/Views/Containers/List/ListItem.luo:24:",
["10585"]="/src/classes/Views/Containers/List/ListItem.luo:25:",
["10586"]="/src/classes/Views/Containers/List/ListItem.luo:26:",
["10587"]="/src/classes/Views/Containers/List/ListItem.luo:27:",
["10588"]="/src/classes/Views/Containers/List/ListItem.luo:48:",
["10589"]="/src/classes/Views/Containers/List/ListItem.luo:49:",
["10590"]="/src/classes/Views/Containers/List/ListItem.luo:50:",
["10591"]="/src/classes/Views/Containers/List/ListItem.luo:51:",
["10592"]="/src/classes/Views/Containers/List/ListItem.luo:52:",
["10593"]="/src/classes/Views/Containers/List/ListItem.luo:53:",
["10594"]="/src/classes/Views/Containers/List/ListItem.luo:54:",
["10606"]="/src/classes/Views/Containers/List/ListClipboardData.luo:7:",
["10607"]="/src/classes/Views/Containers/List/ListClipboardData.luo:8:",
["10608"]="/src/classes/Views/Containers/List/ListClipboardData.luo:9:",
["10609"]="/src/classes/Views/Containers/List/ListClipboardData.luo:10:",
["10620"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:8:",
["10621"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:9:",
["10622"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:10:",
["10623"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:11:",
["10624"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:12:",
["10625"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:13:",
["10626"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:14:",
["10627"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:15:",
["10628"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:16:",
["10629"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:17:",
["10630"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:18:",
["10631"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:19:",
["10632"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:20:",
["10633"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:21:",
["10634"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:22:",
["10635"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:23:",
["10636"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:24:",
["10637"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:25:",
["10638"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:26:",
["10639"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:27:",
["10640"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:28:",
["10641"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:29:",
["10642"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:30:",
["10643"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:31:",
["10644"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:32:",
["10645"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:33:",
["10646"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:34:",
["10647"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:35:",
["10648"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:36:",
["10649"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:37:",
["10650"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:38:",
["10651"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:39:",
["10652"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:40:",
["10653"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:41:",
["10654"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:42:",
["10655"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:43:",
["10656"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:44:",
["10657"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:45:",
["10658"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:46:",
["10659"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:47:",
["10660"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:48:",
["10661"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:49:",
["10662"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:50:",
["10663"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:51:",
["10664"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:52:",
["10665"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:53:",
["10666"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:54:",
["10667"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:55:",
["10668"]="/src/classes/Events/Event Managers/ContainerEventManager.luo:56:",
["10682"]="/System/classes/Program Managing/ProgramOpenedInterfaceEvent.luo:6:",
["10683"]="/System/classes/Program Managing/ProgramOpenedInterfaceEvent.luo:7:",
["10684"]="/System/classes/Program Managing/ProgramOpenedInterfaceEvent.luo:8:",
["10695"]="/src/classes/Symbols/SettingsSymbol.luo:6:",
["10696"]="/src/classes/Symbols/SettingsSymbol.luo:7:",
["10697"]="/src/classes/Symbols/SettingsSymbol.luo:8:",
["10698"]="/src/classes/Symbols/SettingsSymbol.luo:9:",
["10699"]="/src/classes/Symbols/SettingsSymbol.luo:10:",
["10700"]="/src/classes/Symbols/SettingsSymbol.luo:11:",
["10701"]="/src/classes/Symbols/SettingsSymbol.luo:12:",
["10702"]="/src/classes/Symbols/SettingsSymbol.luo:13:",
["10703"]="/src/classes/Symbols/SettingsSymbol.luo:14:",
["10704"]="/src/classes/Symbols/SettingsSymbol.luo:15:",
["10705"]="/src/classes/Symbols/SettingsSymbol.luo:16:",
["10706"]="/src/classes/Symbols/SettingsSymbol.luo:17:",
["10707"]="/src/classes/Symbols/SettingsSymbol.luo:18:",
["10708"]="/src/classes/Symbols/SettingsSymbol.luo:19:",
["10709"]="/src/classes/Symbols/SettingsSymbol.luo:20:",
["10710"]="/src/classes/Symbols/SettingsSymbol.luo:21:",
["10711"]="/src/classes/Symbols/SettingsSymbol.luo:22:",
["10778"]="/src/classes/Views/Containers/Grid/GridContainer.luo:7:",
["10779"]="/src/classes/Views/Containers/Grid/GridContainer.luo:8:",
["10780"]="/src/classes/Views/Containers/Grid/GridContainer.luo:9:",
["10781"]="/src/classes/Views/Containers/Grid/GridContainer.luo:10:",
["10782"]="/src/classes/Views/Containers/Grid/GridContainer.luo:11:",
["10783"]="/src/classes/Views/Containers/Grid/GridContainer.luo:12:",
["10784"]="/src/classes/Views/Containers/Grid/GridContainer.luo:13:",
["10785"]="/src/classes/Views/Containers/Grid/GridContainer.luo:14:",
["10786"]="/src/classes/Views/Containers/Grid/GridContainer.luo:15:",
["10787"]="/src/classes/Views/Containers/Grid/GridContainer.luo:16:",
["10788"]="/src/classes/Views/Containers/Grid/GridContainer.luo:17:",
["10789"]="/src/classes/Views/Containers/Grid/GridContainer.luo:18:",
["10790"]="/src/classes/Views/Containers/Grid/GridContainer.luo:19:",
["10791"]="/src/classes/Views/Containers/Grid/GridContainer.luo:20:",
["10792"]="/src/classes/Views/Containers/Grid/GridContainer.luo:21:",
["10793"]="/src/classes/Views/Containers/Grid/GridContainer.luo:22:",
["10794"]="/src/classes/Views/Containers/Grid/GridContainer.luo:23:",
["10795"]="/src/classes/Views/Containers/Grid/GridContainer.luo:24:",
["10796"]="/src/classes/Views/Containers/Grid/GridContainer.luo:25:",
["10797"]="/src/classes/Views/Containers/Grid/GridContainer.luo:26:",
["10798"]="/src/classes/Views/Containers/Grid/GridContainer.luo:27:",
["10799"]="/src/classes/Views/Containers/Grid/GridContainer.luo:28:",
["10800"]="/src/classes/Views/Containers/Grid/GridContainer.luo:29:",
["10801"]="/src/classes/Views/Containers/Grid/GridContainer.luo:30:",
["10802"]="/src/classes/Views/Containers/Grid/GridContainer.luo:31:",
["10803"]="/src/classes/Views/Containers/Grid/GridContainer.luo:32:",
["10804"]="/src/classes/Views/Containers/Grid/GridContainer.luo:33:",
["10805"]="/src/classes/Views/Containers/Grid/GridContainer.luo:34:",
["10806"]="/src/classes/Views/Containers/Grid/GridContainer.luo:35:",
["10807"]="/src/classes/Views/Containers/Grid/GridContainer.luo:36:",
["10808"]="/src/classes/Views/Containers/Grid/GridContainer.luo:37:",
["10809"]="/src/classes/Views/Containers/Grid/GridContainer.luo:38:",
["10810"]="/src/classes/Views/Containers/Grid/GridContainer.luo:39:",
["10811"]="/src/classes/Views/Containers/Grid/GridContainer.luo:40:",
["10812"]="/src/classes/Views/Containers/Grid/GridContainer.luo:41:",
["10813"]="/src/classes/Views/Containers/Grid/GridContainer.luo:42:",
["10814"]="/src/classes/Views/Containers/Grid/GridContainer.luo:43:",
["10815"]="/src/classes/Views/Containers/Grid/GridContainer.luo:44:",
["10816"]="/src/classes/Views/Containers/Grid/GridContainer.luo:45:",
["10817"]="/src/classes/Views/Containers/Grid/GridContainer.luo:46:",
["10818"]="/src/classes/Views/Containers/Grid/GridContainer.luo:47:",
["10819"]="/src/classes/Views/Containers/Grid/GridContainer.luo:48:",
["10820"]="/src/classes/Views/Containers/Grid/GridContainer.luo:49:",
["10821"]="/src/classes/Views/Containers/Grid/GridContainer.luo:50:",
["10822"]="/src/classes/Views/Containers/Grid/GridContainer.luo:51:",
["10823"]="/src/classes/Views/Containers/Grid/GridContainer.luo:52:",
["10824"]="/src/classes/Views/Containers/Grid/GridContainer.luo:53:",
["10825"]="/src/classes/Views/Containers/Grid/GridContainer.luo:54:",
["10826"]="/src/classes/Views/Containers/Grid/GridContainer.luo:55:",
["10827"]="/src/classes/Views/Containers/Grid/GridContainer.luo:56:",
["10828"]="/src/classes/Views/Containers/Grid/GridContainer.luo:57:",
["10829"]="/src/classes/Views/Containers/Grid/GridContainer.luo:58:",
["10895"]="/src/classes/Views/Containers/FontWindowContainer.luo:6:",
["10896"]="/src/classes/Views/Containers/FontWindowContainer.luo:7:",
["10897"]="/src/classes/Views/Containers/FontWindowContainer.luo:8:",
["10898"]="/src/classes/Views/Containers/FontWindowContainer.luo:9:",
["10899"]="/src/classes/Graphics/PathMask.luo:4:",
["10900"]="/src/classes/Graphics/PathMask.luo:5:",
["10901"]="/src/classes/Graphics/PathMask.luo:6:",
["10902"]="/src/classes/Graphics/PathMask.luo:7:",
["10903"]="/src/classes/Graphics/PathMask.luo:8:",
["10904"]="/src/classes/Graphics/PathMask.luo:9:",
["10961"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:6:",
["10962"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:7:",
["10963"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:8:",
["10964"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:9:",
["10965"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:10:",
["10966"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:11:",
["10967"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:18:",
["10968"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:19:",
["10969"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:20:",
["10970"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:35:",
["10971"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:36:",
["10972"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:37:",
["10973"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:29:",
["10974"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:30:",
["10975"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:31:",
["10976"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:32:",
["10977"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:33:",
["10978"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:22:",
["10979"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:23:",
["10980"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:24:",
["10981"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:25:",
["10982"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:26:",
["10983"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:27:",
["10984"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:39:",
["10985"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:40:",
["10986"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:41:",
["10987"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:42:",
["10988"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:43:",
["10989"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:44:",
["10990"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:45:",
["10991"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:46:",
["10992"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:47:",
["10993"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:48:",
["10994"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:49:",
["10995"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:50:",
["10996"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:51:",
["10997"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:52:",
["10998"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:53:",
["10999"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:54:",
["11000"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:55:",
["11001"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:56:",
["11002"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:57:",
["11003"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:58:",
["11004"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:59:",
["11005"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:60:",
["11006"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:61:",
["11007"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:62:",
["11008"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:63:",
["11009"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:64:",
["11010"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:65:",
["11011"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:66:",
["11012"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:67:",
["11013"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:68:",
["11014"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:69:",
["11015"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:70:",
["11016"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:71:",
["11017"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:72:",
["11018"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:73:",
["11019"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:74:",
["11020"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:75:",
["11021"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:76:",
["11022"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:77:",
["11023"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:78:",
["11024"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:79:",
["11025"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:80:",
["11026"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:81:",
["11027"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:82:",
["11028"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:83:",
["11029"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:84:",
["11030"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:85:",
["11031"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:86:",
["11032"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:87:",
["11033"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:88:",
["11034"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:89:",
["11035"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:90:",
["11036"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:91:",
["11037"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:92:",
["11038"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:93:",
["11039"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:94:",
["11040"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:95:",
["11041"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:96:",
["11042"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:97:",
["11043"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:98:",
["11044"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:99:",
["11045"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:100:",
["11046"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:101:",
["11047"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:102:",
["11048"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:103:",
["11049"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:104:",
["11050"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:105:",
["11051"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:106:",
["11052"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:107:",
["11053"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:108:",
["11054"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:109:",
["11055"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:110:",
["11056"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:111:",
["11057"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:112:",
["11058"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:113:",
["11059"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:114:",
["11060"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:115:",
["11061"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:116:",
["11062"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:117:",
["11063"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:118:",
["11064"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:119:",
["11065"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:120:",
["11066"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:121:",
["11067"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:122:",
["11068"]="/src/classes/Views/Containers/Flow/FlowContainer.luo:123:",
["11113"]="/src/classes/Views/Checkbox.luo:11:",
["11114"]="/src/classes/Views/Checkbox.luo:12:",
["11115"]="/src/classes/Views/Checkbox.luo:13:",
["11116"]="/src/classes/Views/Checkbox.luo:14:",
["11117"]="/src/classes/Views/Checkbox.luo:15:",
["11118"]="/src/classes/Views/Checkbox.luo:31:",
["11119"]="/src/classes/Views/Checkbox.luo:32:",
["11120"]="/src/classes/Views/Checkbox.luo:33:",
["11121"]="/src/classes/Views/Checkbox.luo:59:",
["11122"]="/src/classes/Views/Checkbox.luo:60:",
["11123"]="/src/classes/Views/Checkbox.luo:61:",
["11124"]="/src/classes/Views/Checkbox.luo:62:",
["11125"]="/src/classes/Views/Checkbox.luo:63:",
["11126"]="/src/classes/Views/Checkbox.luo:64:",
["11127"]="/src/classes/Views/Checkbox.luo:65:",
["11128"]="/src/classes/Views/Checkbox.luo:66:",
["11129"]="/src/classes/Views/Checkbox.luo:67:",
["11130"]="/src/classes/Views/Checkbox.luo:68:",
["11131"]="/src/classes/Views/Checkbox.luo:69:",
["11132"]="/src/classes/Views/Checkbox.luo:17:",
["11133"]="/src/classes/Views/Checkbox.luo:18:",
["11134"]="/src/classes/Views/Checkbox.luo:19:",
["11135"]="/src/classes/Views/Checkbox.luo:20:",
["11136"]="/src/classes/Views/Checkbox.luo:21:",
["11137"]="/src/classes/Views/Checkbox.luo:22:",
["11138"]="/src/classes/Views/Checkbox.luo:23:",
["11139"]="/src/classes/Views/Checkbox.luo:24:",
["11140"]="/src/classes/Views/Checkbox.luo:25:",
["11141"]="/src/classes/Views/Checkbox.luo:26:",
["11142"]="/src/classes/Views/Checkbox.luo:27:",
["11143"]="/src/classes/Views/Checkbox.luo:28:",
["11144"]="/src/classes/Views/Checkbox.luo:29:",
["11145"]="/src/classes/Views/Checkbox.luo:71:",
["11146"]="/src/classes/Views/Checkbox.luo:72:",
["11147"]="/src/classes/Views/Checkbox.luo:73:",
["11148"]="/src/classes/Views/Checkbox.luo:74:",
["11149"]="/src/classes/Views/Checkbox.luo:75:",
["11150"]="/src/classes/Views/Checkbox.luo:76:",
["11183"]="/src/classes/Events/Interface Events/ParentResizedInterfaceEvent.luo:10:",
["11184"]="/src/classes/Events/Interface Events/ParentResizedInterfaceEvent.luo:11:",
["11185"]="/src/classes/Events/Interface Events/ParentResizedInterfaceEvent.luo:12:",
["11186"]="/src/classes/Events/Interface Events/ParentResizedInterfaceEvent.luo:13:",
["11187"]="/src/classes/Events/Interface Events/ParentResizedInterfaceEvent.luo:14:",
["11188"]="/src/classes/Utilities/XML.luo:256:",
["11189"]="/src/classes/Utilities/XML.luo:257:",
["11190"]="/src/classes/Utilities/XML.luo:258:",
["11191"]="/src/classes/Utilities/XML.luo:259:",
["11192"]="/src/classes/Utilities/XML.luo:260:",
["11193"]="/src/classes/Utilities/XML.luo:261:",
["11194"]="/src/classes/Utilities/XML.luo:262:",
["11195"]="/src/classes/Utilities/XML.luo:263:",
["11196"]="/src/classes/Utilities/XML.luo:264:",
["11197"]="/src/classes/Utilities/XML.luo:265:",
["11198"]="/src/classes/Utilities/XML.luo:266:",
["11199"]="/src/classes/Utilities/XML.luo:267:",
["11200"]="/src/classes/Utilities/XML.luo:268:",
["11201"]="/src/classes/Utilities/XML.luo:269:",
["11202"]="/src/classes/Utilities/XML.luo:270:",
["11203"]="/src/classes/Utilities/XML.luo:271:",
["11204"]="/src/classes/Utilities/XML.luo:272:",
["11205"]="/src/classes/Utilities/XML.luo:279:",
["11206"]="/src/classes/Utilities/XML.luo:280:",
["11207"]="/src/classes/Utilities/XML.luo:281:",
["11208"]="/src/classes/Utilities/XML.luo:282:",
["11209"]="/src/classes/Utilities/XML.luo:283:",
["11210"]="/src/classes/Utilities/XML.luo:284:",
["11211"]="/src/classes/Utilities/XML.luo:285:",
["11212"]="/src/classes/Utilities/XML.luo:286:",
["11213"]="/src/classes/Utilities/XML.luo:287:",
["11214"]="/src/classes/Utilities/XML.luo:288:",
["11215"]="/src/classes/Utilities/Validator.luo:10:",
["11216"]="/src/classes/Utilities/Validator.luo:11:",
["11217"]="/src/classes/Utilities/Validator.luo:12:",
["11218"]="/src/classes/Utilities/Validator.luo:13:",
["11219"]="/src/classes/Utilities/Validator.luo:14:",
["11220"]="/src/classes/Utilities/Validator.luo:15:",
["11221"]="/src/classes/Utilities/Validator.luo:16:",
["11222"]="/src/classes/Utilities/Validator.luo:17:",
["11223"]="/src/classes/Utilities/Validator.luo:18:",
["11224"]="/src/classes/Utilities/Validator.luo:19:",
["11225"]="/src/classes/Utilities/Validator.luo:20:",
["11226"]="/src/classes/Utilities/Validator.luo:21:",
["11227"]="/src/classes/Utilities/Validator.luo:22:",
["11228"]="/src/classes/Utilities/Validator.luo:23:",
["11229"]="/src/classes/Utilities/Validator.luo:24:",
["11230"]="/src/classes/Utilities/Validator.luo:25:",
["11231"]="/src/classes/Utilities/Validator.luo:26:",
["11232"]="/src/classes/Utilities/Validator.luo:27:",
["11233"]="/src/classes/Utilities/Validator.luo:28:",
["11234"]="/src/classes/Utilities/Validator.luo:29:",
["11235"]="/src/classes/Utilities/Validator.luo:30:",
["11236"]="/src/classes/Utilities/Validator.luo:31:",
["11237"]="/src/classes/Utilities/Validator.luo:32:",
["11238"]="/src/classes/Utilities/Validator.luo:33:",
["11239"]="/src/classes/Utilities/Validator.luo:34:",
["11240"]="/src/classes/Utilities/Validator.luo:35:",
["11241"]="/src/classes/Utilities/Validator.luo:36:",
["11242"]="/src/classes/Utilities/Validator.luo:37:",
["11243"]="/src/classes/Utilities/Validator.luo:38:",
["11244"]="/src/classes/Utilities/Validator.luo:39:",
["11245"]="/src/classes/Utilities/Validator.luo:40:",
["11246"]="/src/classes/Utilities/Validator.luo:41:",
["11247"]="/src/classes/Utilities/Validator.luo:42:",
["11248"]="/src/classes/Utilities/Validator.luo:43:",
["11249"]="/src/classes/Utilities/Resource.luo:17:",
["11250"]="/src/classes/Utilities/Resource.luo:18:",
["11251"]="/src/classes/Utilities/Resource.luo:19:",
["11252"]="/src/classes/Utilities/Resource.luo:20:",
["11253"]="/src/classes/Utilities/Resource.luo:21:",
["11254"]="/src/classes/Utilities/Resource.luo:22:",
["11255"]="/src/classes/Utilities/Resource.luo:23:",
["11256"]="/src/classes/Utilities/Resource.luo:24:",
["11257"]="/src/classes/Utilities/Resource.luo:25:",
["11258"]="/src/classes/Utilities/Resource.luo:26:",
["11259"]="/src/classes/Utilities/Resource.luo:27:",
["11260"]="/src/classes/Utilities/Resource.luo:28:",
["11261"]="/src/classes/Utilities/Resource.luo:29:",
["11262"]="/src/classes/Utilities/Resource.luo:30:",
["11263"]="/src/classes/Utilities/Resource.luo:31:",
["11264"]="/src/classes/Utilities/Resource.luo:32:",
["11265"]="/src/classes/Utilities/Resource.luo:33:",
["11266"]="/src/classes/Utilities/Resource.luo:34:",
["11267"]="/src/classes/Utilities/Resource.luo:35:",
["11268"]="/src/classes/Utilities/Resource.luo:36:",
["11269"]="/src/classes/Utilities/Resource.luo:37:",
["11270"]="/src/classes/Utilities/Resource.luo:38:",
["11271"]="/src/classes/Utilities/Resource.luo:39:",
["11272"]="/src/classes/Utilities/Resource.luo:40:",
["11273"]="/src/classes/Utilities/Resource.luo:41:",
["11274"]="/src/classes/Utilities/Resource.luo:42:",
["11275"]="/src/classes/Utilities/Resource.luo:43:",
["11276"]="/src/classes/Utilities/Resource.luo:44:",
["11277"]="/src/classes/Utilities/Resource.luo:45:",
["11278"]="/src/classes/Utilities/Resource.luo:46:",
["11279"]="/src/classes/Utilities/Resource.luo:47:",
["11280"]="/src/classes/Utilities/Resource.luo:48:",
["11281"]="/src/classes/Utilities/Resource.luo:49:",
["11282"]="/src/classes/Utilities/Resource.luo:50:",
["11283"]="/src/classes/Utilities/Resource.luo:51:",
["11284"]="/src/classes/Utilities/Resource.luo:52:",
["11285"]="/src/classes/Utilities/Resource.luo:53:",
["11286"]="/src/classes/Utilities/Resource.luo:54:",
["11287"]="/src/classes/Utilities/Resource.luo:55:",
["11288"]="/src/classes/Utilities/Resource.luo:56:",
["11289"]="/src/classes/Utilities/Resource.luo:57:",
["11290"]="/src/classes/Utilities/Resource.luo:58:",
["11291"]="/src/classes/Utilities/Resource.luo:59:",
["11292"]="/src/classes/Utilities/Resource.luo:60:",
["11293"]="/src/classes/Utilities/Resource.luo:61:",
["11294"]="/src/classes/Utilities/Resource.luo:62:",
["11295"]="/src/classes/Utilities/Resource.luo:63:",
["11296"]="/src/classes/Utilities/Resource.luo:64:",
["11297"]="/src/classes/Utilities/Resource.luo:65:",
["11308"]="/src/classes/ThumbnailIcon.luo:29:",
["11309"]="/src/classes/ThumbnailIcon.luo:30:",
["11310"]="/src/classes/ThumbnailIcon.luo:31:",
["11311"]="/src/classes/ThumbnailIcon.luo:32:",
["11312"]="/src/classes/ThumbnailIcon.luo:33:",
["11313"]="/src/classes/ThumbnailIcon.luo:34:",
["11314"]="/src/classes/ThumbnailIcon.luo:35:",
["11317"]="/src/classes/ThumbnailIcon.luo:13:",
["11318"]="/src/classes/ThumbnailIcon.luo:14:",
["11319"]="/src/classes/ThumbnailIcon.luo:15:",
["11320"]="/src/classes/ThumbnailIcon.luo:16:",
["11321"]="/src/classes/ThumbnailIcon.luo:17:",
["11322"]="/src/classes/ThumbnailIcon.luo:18:",
["11323"]="/src/classes/ThumbnailIcon.luo:19:",
["11324"]="/src/classes/ThumbnailIcon.luo:20:",
["11325"]="/src/classes/ThumbnailIcon.luo:21:",
["11326"]="/src/classes/ThumbnailIcon.luo:22:",
["11327"]="/src/classes/ThumbnailIcon.luo:37:",
["11328"]="/src/classes/ThumbnailIcon.luo:38:",
["11329"]="/src/classes/ThumbnailIcon.luo:39:",
["11330"]="/src/classes/ThumbnailIcon.luo:40:",
["11331"]="/src/classes/ThumbnailIcon.luo:41:",
["11332"]="/src/classes/ThumbnailIcon.luo:42:",
["11333"]="/src/classes/ThumbnailIcon.luo:43:",
["11334"]="/src/classes/ThumbnailIcon.luo:44:",
["11335"]="/src/classes/ThumbnailIcon.luo:45:",
["11336"]="/src/classes/ThumbnailIcon.luo:46:",
["11337"]="/src/classes/ThumbnailIcon.luo:47:",
["11338"]="/src/classes/ThumbnailIcon.luo:48:",
["11339"]="/src/classes/ThumbnailIcon.luo:49:",
["11340"]="/src/classes/ThumbnailIcon.luo:50:",
["11341"]="/src/classes/ThumbnailIcon.luo:51:",
["11342"]="/src/classes/ThumbnailIcon.luo:52:",
["11343"]="/src/classes/ThumbnailIcon.luo:53:",
["11344"]="/src/classes/ThumbnailIcon.luo:54:",
["11345"]="/src/classes/ThumbnailIcon.luo:55:",
["11346"]="/src/classes/ThumbnailIcon.luo:56:",
["11347"]="/src/classes/ThumbnailIcon.luo:57:",
["11348"]="/src/classes/ThumbnailIcon.luo:58:",
["11349"]="/src/classes/ThumbnailIcon.luo:59:",
["11350"]="/src/classes/ThumbnailIcon.luo:60:",
["11351"]="/src/classes/ThumbnailIcon.luo:61:",
["11352"]="/src/classes/ThumbnailIcon.luo:62:",
["11353"]="/src/classes/ThumbnailIcon.luo:63:",
["11354"]="/src/classes/ThumbnailIcon.luo:64:",
["11355"]="/src/classes/ThumbnailIcon.luo:65:",
["11356"]="/src/classes/ThumbnailIcon.luo:66:",
["11357"]="/src/classes/ThumbnailIcon.luo:67:",
["11358"]="/src/classes/ThumbnailIcon.luo:68:",
["11359"]="/src/classes/ThumbnailIcon.luo:69:",
["11360"]="/src/classes/ThumbnailIcon.luo:70:",
["11361"]="/src/classes/ThumbnailIcon.luo:71:",
["11362"]="/src/classes/ThumbnailIcon.luo:72:",
["11363"]="/src/classes/ThumbnailIcon.luo:73:",
["11364"]="/src/classes/ThumbnailIcon.luo:74:",
["11365"]="/src/classes/ThumbnailIcon.luo:75:",
["11366"]="/src/classes/ThumbnailIcon.luo:76:",
["11367"]="/src/classes/ThumbnailIcon.luo:77:",
["11368"]="/src/classes/ThumbnailIcon.luo:78:",
["11369"]="/src/classes/ThumbnailIcon.luo:79:",
["11370"]="/src/classes/ThumbnailIcon.luo:80:",
["11371"]="/src/classes/ThumbnailIcon.luo:81:",
["11372"]="/src/classes/ThumbnailIcon.luo:82:",
["11373"]="/src/classes/ThumbnailIcon.luo:83:",
["11374"]="/src/classes/ThumbnailIcon.luo:84:",
["11375"]="/src/classes/ThumbnailIcon.luo:85:",
["11376"]="/src/classes/ThumbnailIcon.luo:86:",
["11377"]="/src/classes/ThumbnailIcon.luo:87:",
["11378"]="/src/classes/ThumbnailIcon.luo:88:",
["11379"]="/src/classes/ThumbnailIcon.luo:89:",
["11380"]="/src/classes/ThumbnailIcon.luo:90:",
["11381"]="/src/classes/ThumbnailIcon.luo:91:",
["11382"]="/src/classes/ThumbnailIcon.luo:92:",
["11383"]="/src/classes/ThumbnailIcon.luo:93:",
["11384"]="/src/classes/ThumbnailIcon.luo:94:",
["11385"]="/src/classes/ThumbnailIcon.luo:95:",
["11386"]="/src/classes/ThumbnailIcon.luo:96:",
["11387"]="/src/classes/ThumbnailIcon.luo:97:",
["11388"]="/src/classes/ThumbnailIcon.luo:98:",
["11389"]="/src/classes/ThumbnailIcon.luo:99:",
["11390"]="/src/classes/ThumbnailIcon.luo:100:",
["11391"]="/src/classes/ThumbnailIcon.luo:101:",
["11392"]="/src/classes/ThumbnailIcon.luo:102:",
["11393"]="/src/classes/ThumbnailIcon.luo:103:",
["11394"]="/src/classes/ThumbnailIcon.luo:104:",
["11395"]="/src/classes/ThumbnailIcon.luo:105:",
["11405"]="/src/classes/Exceptions/Class System/InvalidValueTypeClassException.luo:4:",
["11406"]="/src/classes/Exceptions/Class System/InvalidValueTypeClassException.luo:5:",
["11407"]="/src/classes/Exceptions/Class System/InvalidValueTypeClassException.luo:6:",
["11408"]="/src/classes/Exceptions/Class System/InvalidValueTypeClassException.luo:7:",
["11463"]="/System/classes/Home/HomeTile.luo:6:",
["11464"]="/System/classes/Home/HomeTile.luo:7:",
["11465"]="/System/classes/Home/HomeTile.luo:8:",
["11466"]="/System/classes/Home/HomeTile.luo:9:",
["11467"]="/System/classes/Home/HomeTile.luo:10:",
["11468"]="/System/classes/Home/HomeTile.luo:11:",
["11469"]="/System/classes/Home/HomeTile.luo:12:",
["11470"]="/System/classes/Home/HomeTile.luo:13:",
["11471"]="/System/classes/Home/HomeTile.luo:14:",
["11472"]="/System/classes/Home/HomeTile.luo:15:",
["11525"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:16:",
["11526"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:17:",
["11527"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:18:",
["11528"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:19:",
["11529"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:20:",
["11530"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:21:",
["11531"]="/src/classes/Events/Mouse Events/DoubleClickMouseEvent.luo:22:",
["11542"]="/src/classes/ThemeOutlet.luo:13:",
["11543"]="/src/classes/ThemeOutlet.luo:14:",
["11544"]="/src/classes/ThemeOutlet.luo:15:",
["11545"]="/src/classes/ThemeOutlet.luo:16:",
["11546"]="/src/classes/ThemeOutlet.luo:17:",
["11547"]="/src/classes/ThemeOutlet.luo:102:",
["11548"]="/src/classes/ThemeOutlet.luo:103:",
["11549"]="/src/classes/ThemeOutlet.luo:104:",
["11575"]="/src/classes/Theme.luo:51:",
["11576"]="/src/classes/Theme.luo:52:",
["11577"]="/src/classes/Theme.luo:53:",
["11583"]="/src/classes/Theme.luo:17:",
["11584"]="/src/classes/Theme.luo:18:",
["11585"]="/src/classes/Theme.luo:19:",
["11586"]="/src/classes/Theme.luo:20:",
["11587"]="/src/classes/Theme.luo:21:",
["11588"]="/src/classes/Theme.luo:22:",
["11589"]="/src/classes/Theme.luo:23:",
["11590"]="/src/classes/Theme.luo:24:",
["11591"]="/src/classes/Theme.luo:25:",
["11592"]="/src/classes/Theme.luo:26:",
["11593"]="/src/classes/Theme.luo:27:",
["11594"]="/src/classes/Theme.luo:28:",
["11595"]="/src/classes/Theme.luo:29:",
["11596"]="/src/classes/Theme.luo:30:",
["11597"]="/src/classes/Theme.luo:31:",
["11598"]="/src/classes/Theme.luo:32:",
["11599"]="/src/classes/Theme.luo:33:",
["11600"]="/src/classes/Theme.luo:34:",
["11601"]="/src/classes/Theme.luo:35:",
["11602"]="/src/classes/Theme.luo:36:",
["11603"]="/src/classes/Theme.luo:37:",
["11604"]="/src/classes/Theme.luo:38:",
["11605"]="/src/classes/Theme.luo:39:",
["11606"]="/src/classes/Theme.luo:40:",
["11607"]="/src/classes/Theme.luo:41:",
["11608"]="/src/classes/Theme.luo:42:",
["11609"]="/src/classes/Theme.luo:43:",
["11610"]="/src/classes/Theme.luo:124:",
["11611"]="/src/classes/Theme.luo:125:",
["11612"]="/src/classes/Theme.luo:126:",
["11613"]="/src/classes/Theme.luo:127:",
["11614"]="/src/classes/Theme.luo:128:",
["11615"]="/src/classes/Theme.luo:129:",
["11616"]="/src/classes/Theme.luo:130:",
["11617"]="/src/classes/Theme.luo:131:",
["11618"]="/src/classes/Theme.luo:132:",
["11619"]="/src/classes/Theme.luo:133:",
["11620"]="/src/classes/Theme.luo:134:",
["11621"]="/src/classes/Theme.luo:135:",
["11622"]="/src/classes/Theme.luo:136:",
["11623"]="/src/classes/Theme.luo:137:",
["11624"]="/src/classes/Theme.luo:138:",
["11625"]="/src/classes/Theme.luo:139:",
["11626"]="/src/classes/Theme.luo:140:",
["11627"]="/src/classes/Theme.luo:141:",
["11628"]="/src/classes/Theme.luo:142:",
["11629"]="/src/classes/Theme.luo:143:",
["11630"]="/src/classes/Theme.luo:144:",
["11631"]="/src/classes/Theme.luo:145:",
["11632"]="/src/classes/Theme.luo:146:",
["11633"]="/src/classes/Theme.luo:147:",
["11634"]="/src/classes/Theme.luo:148:",
["11635"]="/src/classes/Theme.luo:149:",
["11636"]="/src/classes/Theme.luo:150:",
["11637"]="/src/classes/Theme.luo:151:",
["11638"]="/src/classes/Theme.luo:152:",
["11639"]="/src/classes/Theme.luo:153:",
["11640"]="/src/classes/Theme.luo:154:",
["11641"]="/src/classes/Theme.luo:155:",
["11642"]="/src/classes/Theme.luo:156:",
["11643"]="/src/classes/Theme.luo:157:",
["11644"]="/src/classes/Theme.luo:158:",
["11645"]="/src/classes/Theme.luo:159:",
["11646"]="/src/classes/Theme.luo:160:",
["11647"]="/src/classes/Theme.luo:161:",
["11648"]="/src/classes/Theme.luo:162:",
["11649"]="/src/classes/Theme.luo:163:",
["11650"]="/src/classes/Theme.luo:164:",
["11651"]="/src/classes/Theme.luo:165:",
["11652"]="/src/classes/Theme.luo:60:",
["11653"]="/src/classes/Theme.luo:61:",
["11654"]="/src/classes/Theme.luo:62:",
["11655"]="/src/classes/Theme.luo:63:",
["11656"]="/src/classes/Theme.luo:64:",
["11657"]="/src/classes/Theme.luo:65:",
["11658"]="/src/classes/Theme.luo:66:",
["11659"]="/src/classes/Theme.luo:67:",
["11660"]="/src/classes/Theme.luo:68:",
["11661"]="/src/classes/Theme.luo:69:",
["11662"]="/src/classes/Theme.luo:70:",
["11663"]="/src/classes/Theme.luo:71:",
["11664"]="/src/classes/Theme.luo:72:",
["11665"]="/src/classes/Theme.luo:73:",
["11666"]="/src/classes/Theme.luo:74:",
["11667"]="/src/classes/Theme.luo:75:",
["11668"]="/src/classes/Theme.luo:76:",
["11669"]="/src/classes/Theme.luo:77:",
["11670"]="/src/classes/Theme.luo:78:",
["11671"]="/src/classes/Theme.luo:79:",
["11672"]="/src/classes/Theme.luo:80:",
["11673"]="/src/classes/Theme.luo:81:",
["11674"]="/src/classes/Theme.luo:82:",
["11675"]="/src/classes/Theme.luo:83:",
["11676"]="/src/classes/Theme.luo:84:",
["11677"]="/src/classes/Theme.luo:85:",
["11678"]="/src/classes/Theme.luo:86:",
["11679"]="/src/classes/Theme.luo:87:",
["11680"]="/src/classes/Theme.luo:88:",
["11681"]="/src/classes/Theme.luo:89:",
["11682"]="/src/classes/Theme.luo:90:",
["11683"]="/src/classes/Theme.luo:91:",
["11684"]="/src/classes/Theme.luo:92:",
["11685"]="/src/classes/Theme.luo:93:",
["11686"]="/src/classes/Theme.luo:94:",
["11687"]="/src/classes/Theme.luo:95:",
["11688"]="/src/classes/Theme.luo:96:",
["11689"]="/src/classes/Theme.luo:97:",
["11690"]="/src/classes/Theme.luo:98:",
["11691"]="/src/classes/Theme.luo:99:",
["11692"]="/src/classes/Theme.luo:100:",
["11693"]="/src/classes/Theme.luo:101:",
["11694"]="/src/classes/Theme.luo:102:",
["11695"]="/src/classes/Theme.luo:103:",
["11696"]="/src/classes/Theme.luo:104:",
["11697"]="/src/classes/Theme.luo:105:",
["11698"]="/src/classes/Theme.luo:106:",
["11699"]="/src/classes/Theme.luo:107:",
["11700"]="/src/classes/Theme.luo:108:",
["11701"]="/src/classes/Theme.luo:109:",
["11702"]="/src/classes/Theme.luo:110:",
["11703"]="/src/classes/Theme.luo:111:",
["11704"]="/src/classes/Theme.luo:112:",
["11705"]="/src/classes/Theme.luo:113:",
["11706"]="/src/classes/Theme.luo:114:",
["11721"]="/src/classes/Events/System Events/TimerEvent.luo:12:",
["11722"]="/src/classes/Events/System Events/TimerEvent.luo:13:",
["11723"]="/src/classes/Events/System Events/TimerEvent.luo:14:",
["11731"]="/src/classes/Symbols/UpSymbol.luo:5:",
["11732"]="/src/classes/Symbols/UpSymbol.luo:6:",
["11733"]="/src/classes/Symbols/UpSymbol.luo:7:",
["11734"]="/src/classes/Symbols/UpSymbol.luo:8:",
["11735"]="/src/classes/Symbols/UpSymbol.luo:9:",
["11736"]="/src/classes/Symbols/UpSymbol.luo:10:",
["11737"]="/src/classes/Symbols/UpSymbol.luo:11:",
["11738"]="/src/classes/Symbols/UpSymbol.luo:12:",
["11739"]="/src/classes/Symbols/UpSymbol.luo:13:",
["11740"]="/src/classes/Symbols/UpSymbol.luo:14:",
["11741"]="/src/classes/Symbols/UpSymbol.luo:15:",
["11742"]="/src/classes/Symbols/UpSymbol.luo:16:",
["11750"]="/src/classes/Symbols/TreeExpandedSymbol.luo:7:",
["11751"]="/src/classes/Symbols/TreeExpandedSymbol.luo:8:",
["11752"]="/src/classes/Symbols/TreeExpandedSymbol.luo:9:",
["11753"]="/src/classes/Symbols/TreeExpandedSymbol.luo:10:",
["11754"]="/src/classes/Symbols/TreeExpandedSymbol.luo:11:",
["11755"]="/src/classes/Symbols/TreeExpandedSymbol.luo:12:",
["11756"]="/src/classes/Symbols/TreeExpandedSymbol.luo:13:",
["11757"]="/src/classes/Symbols/TreeExpandedSymbol.luo:14:",
["11758"]="/src/classes/Graphics/Path.luo:141:",
["11759"]="/src/classes/Graphics/Path.luo:142:",
["11760"]="/src/classes/Graphics/Path.luo:143:",
["11769"]="/src/classes/Graphics/Path.luo:124:",
["11770"]="/src/classes/Graphics/Path.luo:125:",
["11771"]="/src/classes/Graphics/Path.luo:126:",
["11772"]="/src/classes/Graphics/Path.luo:127:",
["11773"]="/src/classes/Graphics/Path.luo:128:",
["11774"]="/src/classes/Graphics/Path.luo:129:",
["11775"]="/src/classes/Graphics/Path.luo:130:",
["11776"]="/src/classes/Graphics/Path.luo:131:",
["11777"]="/src/classes/Graphics/Path.luo:132:",
["11778"]="/src/classes/Graphics/Path.luo:133:",
["11779"]="/src/classes/Graphics/Path.luo:247:",
["11780"]="/src/classes/Graphics/Path.luo:248:",
["11781"]="/src/classes/Graphics/Path.luo:249:",
["11782"]="/src/classes/Graphics/Path.luo:250:",
["11783"]="/src/classes/Graphics/Path.luo:251:",
["11784"]="/src/classes/Graphics/Path.luo:252:",
["11785"]="/src/classes/Graphics/Path.luo:253:",
["11786"]="/src/classes/Graphics/Path.luo:254:",
["11787"]="/src/classes/Graphics/Path.luo:255:",
["11788"]="/src/classes/Graphics/Path.luo:256:",
["11789"]="/src/classes/Graphics/Path.luo:257:",
["11790"]="/src/classes/Graphics/Path.luo:258:",
["11791"]="/src/classes/Graphics/Path.luo:259:",
["11792"]="/src/classes/Graphics/Path.luo:260:",
["11793"]="/src/classes/Graphics/Path.luo:261:",
["11794"]="/src/classes/Graphics/Path.luo:262:",
["11795"]="/src/classes/Graphics/Path.luo:263:",
["11796"]="/src/classes/Graphics/Path.luo:264:",
["11797"]="/src/classes/Graphics/Path.luo:265:",
["11798"]="/src/classes/Graphics/Path.luo:266:",
["11799"]="/src/classes/Graphics/Path.luo:267:",
["11800"]="/src/classes/Graphics/Path.luo:268:",
["11801"]="/src/classes/Graphics/Path.luo:269:",
["11802"]="/src/classes/Graphics/Path.luo:270:",
["11803"]="/src/classes/Graphics/Path.luo:271:",
["11804"]="/src/classes/Graphics/Path.luo:272:",
["11805"]="/src/classes/Graphics/Path.luo:273:",
["11806"]="/src/classes/Graphics/Path.luo:274:",
["11807"]="/src/classes/Graphics/Path.luo:275:",
["11808"]="/src/classes/Graphics/Path.luo:276:",
["11809"]="/src/classes/Graphics/Path.luo:172:",
["11810"]="/src/classes/Graphics/Path.luo:173:",
["11811"]="/src/classes/Graphics/Path.luo:174:",
["11812"]="/src/classes/Graphics/Path.luo:175:",
["11813"]="/src/classes/Graphics/Path.luo:176:",
["11814"]="/src/classes/Graphics/Path.luo:177:",
["11815"]="/src/classes/Graphics/Path.luo:178:",
["11816"]="/src/classes/Graphics/Path.luo:179:",
["11817"]="/src/classes/Graphics/Path.luo:180:",
["11818"]="/src/classes/Graphics/Path.luo:181:",
["11819"]="/src/classes/Graphics/Path.luo:182:",
["11820"]="/src/classes/Graphics/Path.luo:183:",
["11821"]="/src/classes/Graphics/Path.luo:184:",
["11822"]="/src/classes/Graphics/Path.luo:185:",
["11823"]="/src/classes/Graphics/Path.luo:186:",
["11824"]="/src/classes/Graphics/Path.luo:187:",
["11825"]="/src/classes/Graphics/Path.luo:188:",
["11826"]="/src/classes/Graphics/Path.luo:189:",
["11827"]="/src/classes/Graphics/Path.luo:190:",
["11828"]="/src/classes/Graphics/Path.luo:191:",
["11829"]="/src/classes/Graphics/Path.luo:204:",
["11830"]="/src/classes/Graphics/Path.luo:205:",
["11831"]="/src/classes/Graphics/Path.luo:206:",
["11832"]="/src/classes/Graphics/Path.luo:207:",
["11833"]="/src/classes/Graphics/Path.luo:208:",
["11834"]="/src/classes/Graphics/Path.luo:209:",
["11835"]="/src/classes/Graphics/Path.luo:210:",
["11836"]="/src/classes/Graphics/Path.luo:211:",
["11837"]="/src/classes/Graphics/Path.luo:212:",
["11838"]="/src/classes/Graphics/Path.luo:213:",
["11839"]="/src/classes/Graphics/Path.luo:214:",
["11840"]="/src/classes/Graphics/Path.luo:215:",
["11841"]="/src/classes/Graphics/Path.luo:216:",
["11842"]="/src/classes/Graphics/Path.luo:217:",
["11843"]="/src/classes/Graphics/Path.luo:218:",
["11844"]="/src/classes/Graphics/Path.luo:219:",
["11845"]="/src/classes/Graphics/Path.luo:220:",
["11846"]="/src/classes/Graphics/Path.luo:221:",
["11847"]="/src/classes/Graphics/Path.luo:222:",
["11848"]="/src/classes/Graphics/Path.luo:283:",
["11849"]="/src/classes/Graphics/Path.luo:284:",
["11850"]="/src/classes/Graphics/Path.luo:285:",
["11851"]="/src/classes/Graphics/Path.luo:286:",
["11852"]="/src/classes/Graphics/Path.luo:287:",
["11853"]="/src/classes/Graphics/Path.luo:288:",
["11854"]="/src/classes/Graphics/Path.luo:289:",
["11855"]="/src/classes/Graphics/Path.luo:290:",
["11856"]="/src/classes/Graphics/Path.luo:291:",
["11857"]="/src/classes/Graphics/Path.luo:292:",
["11858"]="/src/classes/Graphics/Path.luo:293:",
["11859"]="/src/classes/Graphics/Path.luo:294:",
["11860"]="/src/classes/Graphics/Path.luo:295:",
["11861"]="/src/classes/Graphics/Path.luo:296:",
["11862"]="/src/classes/Graphics/Path.luo:297:",
["11863"]="/src/classes/Graphics/Path.luo:227:",
["11864"]="/src/classes/Graphics/Path.luo:228:",
["11865"]="/src/classes/Graphics/Path.luo:229:",
["11866"]="/src/classes/Graphics/Path.luo:230:",
["11867"]="/src/classes/Graphics/Path.luo:231:",
["11868"]="/src/classes/Graphics/Path.luo:232:",
["11869"]="/src/classes/Graphics/Path.luo:233:",
["11870"]="/src/classes/Graphics/Path.luo:234:",
["11871"]="/src/classes/Graphics/Path.luo:235:",
["11872"]="/src/classes/Graphics/Path.luo:236:",
["11873"]="/src/classes/Graphics/Path.luo:299:",
["11874"]="/src/classes/Graphics/Path.luo:300:",
["11875"]="/src/classes/Graphics/Path.luo:301:",
["11876"]="/src/classes/Graphics/Path.luo:302:",
["11877"]="/src/classes/Graphics/Path.luo:303:",
["11878"]="/src/classes/Graphics/Path.luo:304:",
["11879"]="/src/classes/Graphics/Path.luo:305:",
["11880"]="/src/classes/Graphics/Path.luo:306:",
["11881"]="/src/classes/Graphics/Path.luo:307:",
["11882"]="/src/classes/Graphics/Path.luo:308:",
["11883"]="/src/classes/Graphics/Path.luo:309:",
["11884"]="/src/classes/Graphics/Path.luo:310:",
["11885"]="/src/classes/Graphics/Path.luo:311:",
["11886"]="/src/classes/Graphics/Path.luo:312:",
["11887"]="/src/classes/Graphics/Path.luo:313:",
["11888"]="/src/classes/Graphics/Path.luo:314:",
["11889"]="/src/classes/Graphics/Path.luo:315:",
["11890"]="/src/classes/Graphics/Path.luo:316:",
["11891"]="/src/classes/Graphics/Path.luo:317:",
["11892"]="/src/classes/Graphics/Path.luo:318:",
["11893"]="/src/classes/Graphics/Path.luo:319:",
["11894"]="/src/classes/Graphics/Path.luo:320:",
["11895"]="/src/classes/Graphics/Path.luo:321:",
["11896"]="/src/classes/Graphics/Path.luo:322:",
["11897"]="/src/classes/Graphics/Path.luo:323:",
["11898"]="/src/classes/Graphics/Path.luo:324:",
["11899"]="/src/classes/Graphics/Path.luo:325:",
["11900"]="/src/classes/Graphics/Path.luo:326:",
["11901"]="/src/classes/Graphics/Path.luo:327:",
["11902"]="/src/classes/Graphics/Path.luo:328:",
["11903"]="/src/classes/Graphics/Path.luo:329:",
["11904"]="/src/classes/Graphics/Path.luo:330:",
["11905"]="/src/classes/Graphics/Path.luo:331:",
["11906"]="/src/classes/Graphics/Path.luo:332:",
["11907"]="/src/classes/Graphics/Path.luo:333:",
["11908"]="/src/classes/Graphics/Path.luo:334:",
["11909"]="/src/classes/Graphics/Path.luo:335:",
["11910"]="/src/classes/Graphics/Path.luo:336:",
["11911"]="/src/classes/Graphics/Path.luo:337:",
["11912"]="/src/classes/Graphics/Path.luo:338:",
["11913"]="/src/classes/Graphics/Path.luo:339:",
["11914"]="/src/classes/Graphics/Path.luo:340:",
["11915"]="/src/classes/Graphics/Path.luo:341:",
["11916"]="/src/classes/Graphics/Path.luo:342:",
["11917"]="/src/classes/Graphics/Path.luo:343:",
["11918"]="/src/classes/Graphics/Path.luo:344:",
["11919"]="/src/classes/Graphics/Path.luo:345:",
["11920"]="/src/classes/Graphics/Path.luo:346:",
["11921"]="/src/classes/Graphics/Path.luo:347:",
["11922"]="/src/classes/Graphics/Path.luo:348:",
["11923"]="/src/classes/Graphics/Path.luo:349:",
["11924"]="/src/classes/Graphics/Path.luo:350:",
["11925"]="/src/classes/Graphics/Path.luo:351:",
["11926"]="/src/classes/Graphics/Path.luo:352:",
["11927"]="/src/classes/Graphics/Path.luo:353:",
["11928"]="/src/classes/Graphics/Path.luo:354:",
["11929"]="/src/classes/Graphics/Path.luo:355:",
["11930"]="/src/classes/Graphics/Path.luo:356:",
["11931"]="/src/classes/Graphics/Path.luo:357:",
["11932"]="/src/classes/Graphics/Path.luo:358:",
["11933"]="/src/classes/Graphics/Path.luo:359:",
["11934"]="/src/classes/Graphics/Path.luo:360:",
["11935"]="/src/classes/Graphics/Path.luo:361:",
["11936"]="/src/classes/Graphics/Path.luo:362:",
["11937"]="/src/classes/Graphics/Path.luo:363:",
["11938"]="/src/classes/Graphics/Path.luo:364:",
["11939"]="/src/classes/Graphics/Path.luo:365:",
["11940"]="/src/classes/Graphics/Path.luo:366:",
["11941"]="/src/classes/Graphics/Path.luo:367:",
["11942"]="/src/classes/Graphics/Path.luo:368:",
["11943"]="/src/classes/Graphics/Path.luo:369:",
["11944"]="/src/classes/Graphics/Path.luo:370:",
["11945"]="/src/classes/Graphics/Path.luo:371:",
["11946"]="/src/classes/Graphics/Path.luo:372:",
["11947"]="/src/classes/Graphics/Path.luo:373:",
["11948"]="/src/classes/Graphics/Path.luo:374:",
["11949"]="/src/classes/Graphics/Path.luo:375:",
["11950"]="/src/classes/Graphics/Path.luo:376:",
["11951"]="/src/classes/Graphics/Path.luo:377:",
["11952"]="/src/classes/Graphics/Path.luo:378:",
["11953"]="/src/classes/Graphics/Path.luo:379:",
["11954"]="/src/classes/Graphics/Path.luo:380:",
["11955"]="/src/classes/Graphics/Path.luo:381:",
["11956"]="/src/classes/Graphics/Path.luo:382:",
["11957"]="/src/classes/Graphics/Path.luo:383:",
["11958"]="/src/classes/Graphics/Path.luo:384:",
["11959"]="/src/classes/Graphics/Path.luo:385:",
["11960"]="/src/classes/Graphics/Path.luo:386:",
["11961"]="/src/classes/Graphics/Path.luo:387:",
["11962"]="/src/classes/Graphics/Path.luo:388:",
["11963"]="/src/classes/Graphics/Path.luo:389:",
["11964"]="/src/classes/Graphics/Path.luo:390:",
["11965"]="/src/classes/Graphics/Path.luo:391:",
["11966"]="/src/classes/Graphics/Path.luo:392:",
["11967"]="/src/classes/Graphics/Path.luo:393:",
["11968"]="/src/classes/Graphics/Path.luo:394:",
["11969"]="/src/classes/Graphics/Path.luo:395:",
["11970"]="/src/classes/Graphics/Path.luo:396:",
["11971"]="/src/classes/Graphics/Path.luo:397:",
["11972"]="/src/classes/Graphics/Path.luo:398:",
["11973"]="/src/classes/Graphics/Path.luo:399:",
["11974"]="/src/classes/Graphics/Path.luo:400:",
["11975"]="/src/classes/Graphics/Path.luo:401:",
["11976"]="/src/classes/Graphics/Path.luo:402:",
["11977"]="/src/classes/Graphics/Path.luo:403:",
["11978"]="/src/classes/Graphics/Path.luo:404:",
["11979"]="/src/classes/Graphics/Path.luo:405:",
["11980"]="/src/classes/Graphics/Path.luo:406:",
["12004"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:8:",
["12005"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:9:",
["12006"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:10:",
["12007"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:11:",
["12008"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:12:",
["12009"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:13:",
["12010"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:14:",
["12011"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:15:",
["12012"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:16:",
["12013"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:17:",
["12014"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:18:",
["12015"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:19:",
["12016"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:20:",
["12017"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:21:",
["12018"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:22:",
["12019"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:24:",
["12020"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:25:",
["12021"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:26:",
["12022"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:28:",
["12023"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:29:",
["12024"]="/src/classes/Events/Event Managers/ApplicationEventManager.luo:30:",
["12034"]="/src/classes/Symbols/ListSymbol.luo:8:",
["12035"]="/src/classes/Symbols/ListSymbol.luo:9:",
["12036"]="/src/classes/Symbols/ListSymbol.luo:10:",
["12037"]="/src/classes/Symbols/ListSymbol.luo:11:",
["12038"]="/src/classes/Symbols/ListSymbol.luo:12:",
["12039"]="/src/classes/Symbols/ListSymbol.luo:13:",
["12040"]="/src/classes/Symbols/ListSymbol.luo:14:",
["12041"]="/src/classes/Symbols/ListSymbol.luo:15:",
["12042"]="/src/classes/Symbols/ListSymbol.luo:16:",
["12043"]="/src/classes/Symbols/ListSymbol.luo:17:",
["12044"]="/src/classes/Symbols/ListSymbol.luo:18:",
["12045"]="/src/classes/Symbols/ListSymbol.luo:19:",
["12046"]="/src/classes/Symbols/ListSymbol.luo:20:",
["12047"]="/src/classes/Symbols/ListSymbol.luo:21:",
["12048"]="/src/classes/Symbols/ListSymbol.luo:22:",
["12049"]="/src/classes/Symbols/ListSymbol.luo:23:",
["12050"]="/src/classes/Symbols/ListSymbol.luo:24:",
["12051"]="/src/classes/Symbols/ListSymbol.luo:25:",
["12059"]="/src/classes/Symbols/SearchSymbol.luo:7:",
["12060"]="/src/classes/Symbols/SearchSymbol.luo:8:",
["12061"]="/src/classes/Symbols/SearchSymbol.luo:9:",
["12062"]="/src/classes/Symbols/SearchSymbol.luo:10:",
["12063"]="/src/classes/Symbols/SearchSymbol.luo:11:",
["12064"]="/src/classes/Symbols/SearchSymbol.luo:12:",
["12065"]="/src/classes/Symbols/SearchSymbol.luo:13:",
["12066"]="/src/classes/Symbols/SearchSymbol.luo:14:",
["12067"]="/src/classes/Symbols/SearchSymbol.luo:15:",
["12068"]="/src/classes/Symbols/SearchSymbol.luo:16:",
["12069"]="/src/classes/Symbols/SearchSymbol.luo:17:",
["12070"]="/src/classes/Symbols/SearchSymbol.luo:18:",
["12071"]="/src/classes/Symbols/SearchSymbol.luo:19:",
["12072"]="/src/classes/Symbols/SearchSymbol.luo:20:",
["12073"]="/src/classes/Symbols/SearchSymbol.luo:21:",
["12074"]="/src/classes/Symbols/SearchSymbol.luo:22:",
["12075"]="/src/classes/Symbols/SearchSymbol.luo:23:",
["12076"]="/src/classes/Symbols/SearchSymbol.luo:24:",
["12077"]="/src/classes/Symbols/SearchSymbol.luo:25:",
["12078"]="/src/classes/Symbols/SearchSymbol.luo:26:",
["12079"]="/src/classes/Symbols/SearchSymbol.luo:27:",
["12080"]="/src/classes/Symbols/SearchSymbol.luo:28:",
["12081"]="/src/classes/Symbols/SearchSymbol.luo:29:",
["12082"]="/src/classes/Symbols/SearchSymbol.luo:30:",
["12083"]="/src/classes/Symbols/SearchSymbol.luo:31:",
["12093"]="/src/classes/Symbols/MenuCloseSymbol.luo:9:",
["12094"]="/src/classes/Symbols/MenuCloseSymbol.luo:10:",
["12095"]="/src/classes/Symbols/MenuCloseSymbol.luo:11:",
["12096"]="/src/classes/Symbols/MenuCloseSymbol.luo:12:",
["12097"]="/src/classes/Symbols/MenuCloseSymbol.luo:13:",
["12098"]="/src/classes/Symbols/MenuCloseSymbol.luo:14:",
["12099"]="/src/classes/Symbols/MenuCloseSymbol.luo:15:",
["12100"]="/src/classes/Symbols/MenuCloseSymbol.luo:16:",
["12101"]="/src/classes/Interface/Interface.luo:15:",
["12102"]="/src/classes/Interface/Interface.luo:16:",
["12103"]="/src/classes/Interface/Interface.luo:17:",
["12104"]="/src/classes/Interface/Interface.luo:18:",
["12105"]="/src/classes/Interface/Interface.luo:19:",
["12106"]="/src/classes/Interface/Interface.luo:20:",
["12107"]="/src/classes/Interface/Interface.luo:21:",
["12108"]="/src/classes/Interface/Interface.luo:22:",
["12109"]="/src/classes/Interface/Interface.luo:23:",
["12110"]="/src/classes/Interface/Interface.luo:24:",
["12111"]="/src/classes/Interface/Interface.luo:25:",
["12112"]="/src/classes/Interface/Interface.luo:26:",
["12113"]="/src/classes/Interface/Interface.luo:27:",
["12114"]="/src/classes/Interface/Interface.luo:28:",
["12115"]="/src/classes/Interface/Interface.luo:29:",
["12116"]="/src/classes/Interface/Interface.luo:30:",
["12117"]="/src/classes/Interface/Interface.luo:31:",
["12118"]="/src/classes/Interface/Interface.luo:32:",
["12119"]="/src/classes/Interface/Interface.luo:33:",
["12120"]="/src/classes/Interface/Interface.luo:34:",
["12121"]="/src/classes/Interface/Interface.luo:35:",
["12122"]="/src/classes/Interface/Interface.luo:36:",
["12123"]="/src/classes/Interface/Interface.luo:37:",
["12124"]="/src/classes/Interface/Interface.luo:38:",
["12125"]="/src/classes/Interface/Interface.luo:39:",
["12126"]="/src/classes/Interface/Interface.luo:40:",
["12127"]="/src/classes/Interface/Interface.luo:41:",
["12128"]="/src/classes/Interface/Interface.luo:42:",
["12129"]="/src/classes/Interface/Interface.luo:43:",
["12130"]="/src/classes/Interface/Interface.luo:44:",
["12131"]="/src/classes/Interface/Interface.luo:45:",
["12132"]="/src/classes/Interface/Interface.luo:46:",
["12133"]="/src/classes/Interface/Interface.luo:47:",
["12134"]="/src/classes/Interface/Interface.luo:48:",
["12135"]="/src/classes/Interface/Interface.luo:128:",
["12136"]="/src/classes/Interface/Interface.luo:129:",
["12137"]="/src/classes/Interface/Interface.luo:130:",
["12138"]="/src/classes/Interface/Interface.luo:131:",
["12139"]="/src/classes/Interface/Interface.luo:132:",
["12140"]="/src/classes/Interface/Interface.luo:133:",
["12141"]="/src/classes/Interface/Interface.luo:134:",
["12142"]="/src/classes/Interface/Interface.luo:135:",
["12143"]="/src/classes/Interface/Interface.luo:54:",
["12144"]="/src/classes/Interface/Interface.luo:55:",
["12145"]="/src/classes/Interface/Interface.luo:56:",
["12146"]="/src/classes/Interface/Interface.luo:57:",
["12147"]="/src/classes/Interface/Interface.luo:58:",
["12148"]="/src/classes/Interface/Interface.luo:59:",
["12149"]="/src/classes/Interface/Interface.luo:60:",
["12150"]="/src/classes/Interface/Interface.luo:61:",
["12151"]="/src/classes/Interface/Interface.luo:62:",
["12152"]="/src/classes/Interface/Interface.luo:63:",
["12153"]="/src/classes/Interface/Interface.luo:64:",
["12154"]="/src/classes/Interface/Interface.luo:65:",
["12155"]="/src/classes/Interface/Interface.luo:66:",
["12156"]="/src/classes/Interface/Interface.luo:67:",
["12157"]="/src/classes/Interface/Interface.luo:68:",
["12158"]="/src/classes/Interface/Interface.luo:69:",
["12159"]="/src/classes/Interface/Interface.luo:70:",
["12160"]="/src/classes/Interface/Interface.luo:71:",
["12161"]="/src/classes/Interface/Interface.luo:72:",
["12162"]="/src/classes/Interface/Interface.luo:73:",
["12163"]="/src/classes/Interface/Interface.luo:74:",
["12164"]="/src/classes/Interface/Interface.luo:75:",
["12165"]="/src/classes/Interface/Interface.luo:76:",
["12166"]="/src/classes/Interface/Interface.luo:77:",
["12167"]="/src/classes/Interface/Interface.luo:78:",
["12168"]="/src/classes/Interface/Interface.luo:79:",
["12169"]="/src/classes/Interface/Interface.luo:80:",
["12170"]="/src/classes/Interface/Interface.luo:81:",
["12171"]="/src/classes/Interface/Interface.luo:82:",
["12172"]="/src/classes/Interface/Interface.luo:83:",
["12173"]="/src/classes/Interface/Interface.luo:84:",
["12174"]="/src/classes/Interface/Interface.luo:85:",
["12175"]="/src/classes/Interface/Interface.luo:86:",
["12176"]="/src/classes/Interface/Interface.luo:87:",
["12177"]="/src/classes/Interface/Interface.luo:88:",
["12178"]="/src/classes/Interface/Interface.luo:89:",
["12179"]="/src/classes/Interface/Interface.luo:90:",
["12180"]="/src/classes/Interface/Interface.luo:91:",
["12181"]="/src/classes/Interface/Interface.luo:92:",
["12182"]="/src/classes/Interface/Interface.luo:93:",
["12183"]="/src/classes/Interface/Interface.luo:94:",
["12184"]="/src/classes/Interface/Interface.luo:95:",
["12185"]="/src/classes/Interface/Interface.luo:96:",
["12186"]="/src/classes/Interface/Interface.luo:97:",
["12187"]="/src/classes/Interface/Interface.luo:98:",
["12188"]="/src/classes/Interface/Interface.luo:99:",
["12189"]="/src/classes/Interface/Interface.luo:100:",
["12190"]="/src/classes/Interface/Interface.luo:101:",
["12191"]="/src/classes/Interface/Interface.luo:102:",
["12192"]="/src/classes/Interface/Interface.luo:103:",
["12193"]="/src/classes/Interface/Interface.luo:104:",
["12194"]="/src/classes/Interface/Interface.luo:105:",
["12195"]="/src/classes/Interface/Interface.luo:106:",
["12196"]="/src/classes/Interface/Interface.luo:107:",
["12197"]="/src/classes/Interface/Interface.luo:108:",
["12198"]="/src/classes/Interface/Interface.luo:109:",
["12199"]="/src/classes/Interface/Interface.luo:110:",
["12200"]="/src/classes/Interface/Interface.luo:111:",
["12201"]="/src/classes/Interface/Interface.luo:112:",
["12202"]="/src/classes/Interface/Interface.luo:113:",
["12203"]="/src/classes/Interface/Interface.luo:114:",
["12204"]="/src/classes/Interface/Interface.luo:115:",
["12205"]="/src/classes/Interface/Interface.luo:116:",
["12206"]="/src/classes/Interface/Interface.luo:117:",
["12207"]="/src/classes/Interface/Interface.luo:118:",
["12208"]="/src/classes/Interface/Interface.luo:119:",
["12209"]="/src/classes/Interface/Interface.luo:120:",
["12210"]="/src/classes/Interface/Interface.luo:121:",
["12211"]="/src/classes/Interface/Interface.luo:122:",
["12221"]="/src/classes/Symbols/ForwardSymbol.luo:9:",
["12222"]="/src/classes/Symbols/ForwardSymbol.luo:10:",
["12223"]="/src/classes/Symbols/ForwardSymbol.luo:11:",
["12224"]="/src/classes/Symbols/ForwardSymbol.luo:12:",
["12225"]="/src/classes/Symbols/ForwardSymbol.luo:13:",
["12226"]="/src/classes/Symbols/ForwardSymbol.luo:14:",
["12227"]="/src/classes/Symbols/ForwardSymbol.luo:15:",
["12228"]="/src/classes/Symbols/ForwardSymbol.luo:16:",
["12281"]="/System/classes/Program Managing/ProgramItem.luo:10:",
["12282"]="/System/classes/Program Managing/ProgramItem.luo:11:",
["12283"]="/System/classes/Program Managing/ProgramItem.luo:12:",
["12284"]="/System/classes/Program Managing/ProgramItem.luo:13:",
["12285"]="/System/classes/Program Managing/ProgramItem.luo:14:",
["12286"]="/System/classes/Program Managing/ProgramItem.luo:15:",
["12287"]="/System/classes/Program Managing/ProgramItem.luo:128:",
["12288"]="/System/classes/Program Managing/ProgramItem.luo:129:",
["12289"]="/System/classes/Program Managing/ProgramItem.luo:130:",
["12290"]="/System/classes/Program Managing/ProgramItem.luo:131:",
["12291"]="/System/classes/Program Managing/ProgramItem.luo:132:",
["12292"]="/System/classes/Program Managing/ProgramItem.luo:133:",
["12293"]="/System/classes/Program Managing/ProgramItem.luo:134:",
["12294"]="/System/classes/Program Managing/ProgramItem.luo:135:",
["12295"]="/System/classes/Program Managing/ProgramItem.luo:136:",
["12296"]="/System/classes/Program Managing/ProgramItem.luo:137:",
["12297"]="/System/classes/Program Managing/ProgramItem.luo:138:",
["12298"]="/System/classes/Program Managing/ProgramItem.luo:139:",
["12299"]="/System/classes/Program Managing/ProgramItem.luo:140:",
["12300"]="/System/classes/Program Managing/ProgramItem.luo:91:",
["12301"]="/System/classes/Program Managing/ProgramItem.luo:92:",
["12302"]="/System/classes/Program Managing/ProgramItem.luo:93:",
["12303"]="/System/classes/Program Managing/ProgramItem.luo:94:",
["12304"]="/System/classes/Program Managing/ProgramItem.luo:95:",
["12305"]="/System/classes/Program Managing/ProgramItem.luo:17:",
["12306"]="/System/classes/Program Managing/ProgramItem.luo:18:",
["12307"]="/System/classes/Program Managing/ProgramItem.luo:19:",
["12308"]="/System/classes/Program Managing/ProgramItem.luo:20:",
["12309"]="/System/classes/Program Managing/ProgramItem.luo:21:",
["12310"]="/System/classes/Program Managing/ProgramItem.luo:22:",
["12311"]="/System/classes/Program Managing/ProgramItem.luo:23:",
["12312"]="/System/classes/Program Managing/ProgramItem.luo:24:",
["12313"]="/System/classes/Program Managing/ProgramItem.luo:25:",
["12314"]="/System/classes/Program Managing/ProgramItem.luo:26:",
["12315"]="/System/classes/Program Managing/ProgramItem.luo:27:",
["12316"]="/System/classes/Program Managing/ProgramItem.luo:28:",
["12317"]="/System/classes/Program Managing/ProgramItem.luo:29:",
["12318"]="/System/classes/Program Managing/ProgramItem.luo:30:",
["12319"]="/System/classes/Program Managing/ProgramItem.luo:31:",
["12320"]="/System/classes/Program Managing/ProgramItem.luo:32:",
["12321"]="/System/classes/Program Managing/ProgramItem.luo:33:",
["12322"]="/System/classes/Program Managing/ProgramItem.luo:34:",
["12323"]="/System/classes/Program Managing/ProgramItem.luo:35:",
["12324"]="/System/classes/Program Managing/ProgramItem.luo:36:",
["12325"]="/System/classes/Program Managing/ProgramItem.luo:37:",
["12326"]="/System/classes/Program Managing/ProgramItem.luo:38:",
["12327"]="/System/classes/Program Managing/ProgramItem.luo:39:",
["12328"]="/System/classes/Program Managing/ProgramItem.luo:40:",
["12329"]="/System/classes/Program Managing/ProgramItem.luo:41:",
["12330"]="/System/classes/Program Managing/ProgramItem.luo:42:",
["12331"]="/System/classes/Program Managing/ProgramItem.luo:43:",
["12332"]="/System/classes/Program Managing/ProgramItem.luo:44:",
["12333"]="/System/classes/Program Managing/ProgramItem.luo:45:",
["12334"]="/System/classes/Program Managing/ProgramItem.luo:46:",
["12335"]="/System/classes/Program Managing/ProgramItem.luo:47:",
["12336"]="/System/classes/Program Managing/ProgramItem.luo:48:",
["12337"]="/System/classes/Program Managing/ProgramItem.luo:49:",
["12338"]="/System/classes/Program Managing/ProgramItem.luo:50:",
["12339"]="/System/classes/Program Managing/ProgramItem.luo:51:",
["12340"]="/System/classes/Program Managing/ProgramItem.luo:52:",
["12341"]="/System/classes/Program Managing/ProgramItem.luo:53:",
["12342"]="/System/classes/Program Managing/ProgramItem.luo:54:",
["12343"]="/System/classes/Program Managing/ProgramItem.luo:55:",
["12344"]="/System/classes/Program Managing/ProgramItem.luo:56:",
["12345"]="/System/classes/Program Managing/ProgramItem.luo:57:",
["12346"]="/System/classes/Program Managing/ProgramItem.luo:58:",
["12347"]="/System/classes/Program Managing/ProgramItem.luo:59:",
["12348"]="/System/classes/Program Managing/ProgramItem.luo:60:",
["12349"]="/System/classes/Program Managing/ProgramItem.luo:61:",
["12350"]="/System/classes/Program Managing/ProgramItem.luo:62:",
["12351"]="/System/classes/Program Managing/ProgramItem.luo:63:",
["12352"]="/System/classes/Program Managing/ProgramItem.luo:64:",
["12353"]="/System/classes/Program Managing/ProgramItem.luo:65:",
["12354"]="/System/classes/Program Managing/ProgramItem.luo:66:",
["12355"]="/System/classes/Program Managing/ProgramItem.luo:67:",
["12356"]="/System/classes/Program Managing/ProgramItem.luo:68:",
["12357"]="/System/classes/Program Managing/ProgramItem.luo:69:",
["12358"]="/System/classes/Program Managing/ProgramItem.luo:70:",
["12359"]="/System/classes/Program Managing/ProgramItem.luo:71:",
["12360"]="/System/classes/Program Managing/ProgramItem.luo:72:",
["12361"]="/System/classes/Program Managing/ProgramItem.luo:73:",
["12362"]="/System/classes/Program Managing/ProgramItem.luo:74:",
["12363"]="/System/classes/Program Managing/ProgramItem.luo:75:",
["12364"]="/System/classes/Program Managing/ProgramItem.luo:76:",
["12365"]="/System/classes/Program Managing/ProgramItem.luo:77:",
["12366"]="/System/classes/Program Managing/ProgramItem.luo:78:",
["12367"]="/System/classes/Program Managing/ProgramItem.luo:122:",
["12368"]="/System/classes/Program Managing/ProgramItem.luo:123:",
["12369"]="/System/classes/Program Managing/ProgramItem.luo:124:",
["12370"]="/System/classes/Program Managing/ProgramItem.luo:125:",
["12371"]="/System/classes/Program Managing/ProgramItem.luo:126:",
["12372"]="/System/classes/Program Managing/ProgramItem.luo:97:",
["12373"]="/System/classes/Program Managing/ProgramItem.luo:98:",
["12374"]="/System/classes/Program Managing/ProgramItem.luo:99:",
["12375"]="/System/classes/Program Managing/ProgramItem.luo:100:",
["12376"]="/System/classes/Program Managing/ProgramItem.luo:101:",
["12377"]="/System/classes/Program Managing/ProgramItem.luo:80:",
["12378"]="/System/classes/Program Managing/ProgramItem.luo:81:",
["12379"]="/System/classes/Program Managing/ProgramItem.luo:82:",
["12380"]="/System/classes/Program Managing/ProgramItem.luo:103:",
["12381"]="/System/classes/Program Managing/ProgramItem.luo:104:",
["12382"]="/System/classes/Program Managing/ProgramItem.luo:105:",
["12383"]="/System/classes/Program Managing/ProgramItem.luo:107:",
["12384"]="/System/classes/Program Managing/ProgramItem.luo:108:",
["12385"]="/System/classes/Program Managing/ProgramItem.luo:109:",
["12386"]="/System/classes/Program Managing/ProgramItem.luo:110:",
["12387"]="/System/classes/Program Managing/ProgramItem.luo:111:",
["12388"]="/System/classes/Program Managing/ProgramItem.luo:112:",
["12389"]="/System/classes/Program Managing/ProgramItem.luo:113:",
["12390"]="/System/classes/Program Managing/ProgramItem.luo:114:",
["12391"]="/System/classes/Program Managing/ProgramItem.luo:115:",
["12392"]="/System/classes/Program Managing/ProgramItem.luo:116:",
["12393"]="/System/classes/Program Managing/ProgramItem.luo:117:",
["12408"]="/src/classes/Symbols/DownSymbol.luo:8:",
["12409"]="/src/classes/Symbols/DownSymbol.luo:9:",
["12410"]="/src/classes/Symbols/DownSymbol.luo:10:",
["12411"]="/src/classes/Symbols/DownSymbol.luo:11:",
["12412"]="/src/classes/Symbols/DownSymbol.luo:12:",
["12413"]="/src/classes/Symbols/DownSymbol.luo:13:",
["12414"]="/src/classes/Symbols/DownSymbol.luo:14:",
["12415"]="/src/classes/Symbols/DownSymbol.luo:15:",
["12416"]="/src/classes/Symbols/DownSymbol.luo:16:",
["12417"]="/src/classes/Symbols/DownSymbol.luo:17:",
["12418"]="/src/classes/Symbols/DownSymbol.luo:18:",
["12419"]="/src/classes/Symbols/DownSymbol.luo:19:",
["12420"]="/src/classes/Symbols/DownSymbol.luo:20:",
["12421"]="/src/classes/Graphics/SymbolMask.luo:4:",
["12422"]="/src/classes/Graphics/SymbolMask.luo:5:",
["12423"]="/src/classes/Graphics/SymbolMask.luo:6:",
["12447"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:14:",
["12448"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:15:",
["12449"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:16:",
["12450"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:17:",
["12451"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:18:",
["12452"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:19:",
["12453"]="/src/classes/Events/Mouse Events/DragMouseEvent.luo:20:",
["12463"]="/src/classes/Symbols/CloseSymbol.luo:10:",
["12464"]="/src/classes/Symbols/CloseSymbol.luo:11:",
["12465"]="/src/classes/Symbols/CloseSymbol.luo:12:",
["12466"]="/src/classes/Symbols/CloseSymbol.luo:13:",
["12467"]="/src/classes/Symbols/CloseSymbol.luo:14:",
["12468"]="/src/classes/Symbols/CloseSymbol.luo:15:",
["12469"]="/src/classes/Symbols/CloseSymbol.luo:16:",
["12470"]="/src/classes/Symbols/CloseSymbol.luo:17:",
["12471"]="/src/classes/Symbols/CloseSymbol.luo:18:",
["12472"]="/src/classes/Symbols/CloseSymbol.luo:19:",
["12473"]="/src/classes/Symbols/CloseSymbol.luo:20:",
["12474"]="/src/classes/Symbols/CloseSymbol.luo:21:",
["12484"]="/src/classes/Symbols/BackSymbol.luo:9:",
["12485"]="/src/classes/Symbols/BackSymbol.luo:10:",
["12486"]="/src/classes/Symbols/BackSymbol.luo:11:",
["12487"]="/src/classes/Symbols/BackSymbol.luo:12:",
["12488"]="/src/classes/Symbols/BackSymbol.luo:13:",
["12489"]="/src/classes/Symbols/BackSymbol.luo:14:",
["12490"]="/src/classes/Symbols/BackSymbol.luo:15:",
["12491"]="/src/classes/Symbols/BackSymbol.luo:16:",
["12506"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:12:",
["12507"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:13:",
["12508"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:14:",
["12509"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:23:",
["12510"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:24:",
["12511"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:25:",
["12512"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:26:",
["12513"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:27:",
["12514"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:28:",
["12515"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:29:",
["12516"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:30:",
["12517"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:31:",
["12518"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:32:",
["12519"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:33:",
["12520"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:34:",
["12521"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:35:",
["12522"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:36:",
["12523"]="/src/classes/Events/Interface Events/KeyboardShortcutEvent.luo:37:",
["12524"]="/src/classes/File System/Folder.luo:47:",
["12525"]="/src/classes/File System/Folder.luo:48:",
["12526"]="/src/classes/File System/Folder.luo:49:",
["12527"]="/src/classes/File System/Folder.luo:50:",
["12528"]="/src/classes/File System/Folder.luo:51:",
["12529"]="/src/classes/File System/Folder.luo:52:",
["12530"]="/src/classes/File System/Folder.luo:53:",
["12531"]="/src/classes/File System/Folder.luo:54:",
["12532"]="/src/classes/File System/Folder.luo:55:",
["12533"]="/src/classes/File System/Folder.luo:56:",
["12534"]="/src/classes/File System/Folder.luo:57:",
["12535"]="/src/classes/File System/Folder.luo:58:",
["12536"]="/src/classes/File System/Folder.luo:59:",
["12537"]="/src/classes/File System/Folder.luo:193:",
["12538"]="/src/classes/File System/Folder.luo:194:",
["12539"]="/src/classes/File System/Folder.luo:195:",
["12540"]="/src/classes/File System/Folder.luo:196:",
["12541"]="/src/classes/File System/Folder.luo:197:",
["12542"]="/src/classes/File System/Folder.luo:198:",
["12543"]="/src/classes/File System/Folder.luo:199:",
["12544"]="/src/classes/File System/Folder.luo:200:",
["12545"]="/src/classes/File System/Folder.luo:201:",
["12546"]="/src/classes/File System/Folder.luo:202:",
["12547"]="/src/classes/File System/Folder.luo:203:",
["12548"]="/src/classes/File System/Folder.luo:204:",
["12549"]="/src/classes/File System/Folder.luo:205:",
["12550"]="/src/classes/File System/Folder.luo:206:",
["12551"]="/src/classes/File System/Folder.luo:207:",
["12552"]="/src/classes/File System/Folder.luo:208:",
["12553"]="/src/classes/File System/Folder.luo:209:",
["12554"]="/src/classes/File System/Folder.luo:210:",
["12555"]="/src/classes/File System/Folder.luo:211:",
["12556"]="/src/classes/File System/Folder.luo:212:",
["12557"]="/src/classes/File System/Folder.luo:213:",
["12558"]="/src/classes/File System/Folder.luo:214:",
["12559"]="/src/classes/File System/Folder.luo:215:",
["12560"]="/src/classes/File System/Folder.luo:216:",
["12561"]="/src/classes/File System/Folder.luo:217:",
["12562"]="/src/classes/File System/Folder.luo:218:",
["12563"]="/src/classes/File System/Folder.luo:219:",
["12564"]="/src/classes/File System/Folder.luo:220:",
["12565"]="/src/classes/File System/Folder.luo:148:",
["12566"]="/src/classes/File System/Folder.luo:149:",
["12567"]="/src/classes/File System/Folder.luo:150:",
["12568"]="/src/classes/File System/Folder.luo:151:",
["12569"]="/src/classes/File System/Folder.luo:152:",
["12570"]="/src/classes/File System/Folder.luo:153:",
["12571"]="/src/classes/File System/Folder.luo:154:",
["12572"]="/src/classes/File System/Folder.luo:155:",
["12573"]="/src/classes/File System/Folder.luo:156:",
["12574"]="/src/classes/File System/Folder.luo:157:",
["12575"]="/src/classes/File System/Folder.luo:158:",
["12576"]="/src/classes/File System/Folder.luo:159:",
["12577"]="/src/classes/File System/Folder.luo:160:",
["12578"]="/src/classes/File System/Folder.luo:174:",
["12579"]="/src/classes/File System/Folder.luo:175:",
["12580"]="/src/classes/File System/Folder.luo:176:",
["12581"]="/src/classes/File System/Folder.luo:178:",
["12582"]="/src/classes/File System/Folder.luo:179:",
["12583"]="/src/classes/File System/Folder.luo:180:",
["12584"]="/src/classes/File System/Folder.luo:136:",
["12585"]="/src/classes/File System/Folder.luo:137:",
["12586"]="/src/classes/File System/Folder.luo:138:",
["12587"]="/src/classes/File System/Folder.luo:61:",
["12588"]="/src/classes/File System/Folder.luo:62:",
["12589"]="/src/classes/File System/Folder.luo:63:",
["12590"]="/src/classes/File System/Folder.luo:64:",
["12591"]="/src/classes/File System/Folder.luo:65:",
["12592"]="/src/classes/File System/Folder.luo:66:",
["12593"]="/src/classes/File System/Folder.luo:67:",
["12594"]="/src/classes/File System/Folder.luo:68:",
["12595"]="/src/classes/File System/Folder.luo:69:",
["12596"]="/src/classes/File System/Folder.luo:70:",
["12597"]="/src/classes/File System/Folder.luo:71:",
["12598"]="/src/classes/File System/Folder.luo:72:",
["12599"]="/src/classes/File System/Folder.luo:73:",
["12600"]="/src/classes/File System/Folder.luo:74:",
["12601"]="/src/classes/File System/Folder.luo:75:",
["12602"]="/src/classes/File System/Folder.luo:76:",
["12603"]="/src/classes/File System/Folder.luo:77:",
["12604"]="/src/classes/File System/Folder.luo:78:",
["12605"]="/src/classes/File System/Folder.luo:79:",
["12606"]="/src/classes/File System/Folder.luo:80:",
["12607"]="/src/classes/File System/Folder.luo:81:",
["12608"]="/src/classes/File System/Folder.luo:82:",
["12609"]="/src/classes/File System/Folder.luo:83:",
["12610"]="/src/classes/File System/Folder.luo:84:",
["12611"]="/src/classes/File System/Folder.luo:85:",
["12612"]="/src/classes/File System/Folder.luo:86:",
["12613"]="/src/classes/File System/Folder.luo:87:",
["12614"]="/src/classes/File System/Folder.luo:88:",
["12615"]="/src/classes/File System/Folder.luo:89:",
["12616"]="/src/classes/File System/Folder.luo:90:",
["12617"]="/src/classes/File System/Folder.luo:91:",
["12618"]="/src/classes/File System/Folder.luo:92:",
["12619"]="/src/classes/File System/Folder.luo:93:",
["12620"]="/src/classes/File System/Folder.luo:94:",
["12621"]="/src/classes/File System/Folder.luo:95:",
["12622"]="/src/classes/File System/Folder.luo:305:",
["12623"]="/src/classes/File System/Folder.luo:306:",
["12624"]="/src/classes/File System/Folder.luo:307:",
["12625"]="/src/classes/File System/Folder.luo:225:",
["12626"]="/src/classes/File System/Folder.luo:226:",
["12627"]="/src/classes/File System/Folder.luo:227:",
["12628"]="/src/classes/File System/Folder.luo:228:",
["12629"]="/src/classes/File System/Folder.luo:229:",
["12630"]="/src/classes/File System/Folder.luo:230:",
["12631"]="/src/classes/File System/Folder.luo:231:",
["12632"]="/src/classes/File System/Folder.luo:232:",
["12633"]="/src/classes/File System/Folder.luo:233:",
["12634"]="/src/classes/File System/Folder.luo:234:",
["12635"]="/src/classes/File System/Folder.luo:235:",
["12636"]="/src/classes/File System/Folder.luo:236:",
["12637"]="/src/classes/File System/Folder.luo:237:",
["12638"]="/src/classes/File System/Folder.luo:238:",
["12639"]="/src/classes/File System/Folder.luo:239:",
["12640"]="/src/classes/File System/Folder.luo:240:",
["12641"]="/src/classes/File System/Folder.luo:241:",
["12642"]="/src/classes/File System/Folder.luo:182:",
["12643"]="/src/classes/File System/Folder.luo:183:",
["12644"]="/src/classes/File System/Folder.luo:184:",
["12645"]="/src/classes/File System/Folder.luo:144:",
["12646"]="/src/classes/File System/Folder.luo:145:",
["12647"]="/src/classes/File System/Folder.luo:146:",
["12747"]="/src/classes/Exceptions/Class System/ConstructionClassException.luo:4:",
["12748"]="/src/classes/Exceptions/Class System/ConstructionClassException.luo:5:",
["12749"]="/src/classes/Exceptions/Class System/ConstructionClassException.luo:6:",
["12750"]="/src/classes/Exceptions/Class System/ConstructionClassException.luo:7:",
["12760"]="/src/classes/Symbols/LeftSymbol.luo:8:",
["12761"]="/src/classes/Symbols/LeftSymbol.luo:9:",
["12762"]="/src/classes/Symbols/LeftSymbol.luo:10:",
["12763"]="/src/classes/Symbols/LeftSymbol.luo:11:",
["12764"]="/src/classes/Symbols/LeftSymbol.luo:12:",
["12765"]="/src/classes/Symbols/LeftSymbol.luo:13:",
["12766"]="/src/classes/Symbols/LeftSymbol.luo:14:",
["12767"]="/src/classes/Symbols/LeftSymbol.luo:15:",
["12768"]="/src/classes/Symbols/LeftSymbol.luo:16:",
["12769"]="/src/classes/Symbols/LeftSymbol.luo:17:",
["12770"]="/src/classes/Symbols/LeftSymbol.luo:18:",
["12771"]="/src/classes/Symbols/LeftSymbol.luo:19:",
["12778"]="/src/classes/Exceptions/Validation/ValidationException.luo:6:",
["12779"]="/src/classes/Exceptions/Validation/ValidationException.luo:7:",
["12780"]="/src/classes/Exceptions/Validation/ValidationException.luo:8:",
["12781"]="/src/classes/Exceptions/Validation/ValidationException.luo:9:",
["12788"]="/src/classes/Graphics/TextMask.luo:17:",
["12789"]="/src/classes/Graphics/TextMask.luo:18:",
["12790"]="/src/classes/Graphics/TextMask.luo:19:",
["12791"]="/src/classes/Graphics/TextMask.luo:20:",
["12792"]="/src/classes/Graphics/TextMask.luo:21:",
["12793"]="/src/classes/Graphics/TextMask.luo:22:",
["12794"]="/src/classes/Graphics/TextMask.luo:23:",
["12795"]="/src/classes/Graphics/TextMask.luo:24:",
["12796"]="/src/classes/Graphics/TextMask.luo:25:",
["12797"]="/src/classes/Graphics/TextMask.luo:26:",
["12798"]="/src/classes/Graphics/TextMask.luo:27:",
["12799"]="/src/classes/Graphics/TextMask.luo:28:",
["12800"]="/src/classes/Graphics/TextMask.luo:29:",
["12801"]="/src/classes/Graphics/TextMask.luo:30:",
["12802"]="/src/classes/Graphics/TextMask.luo:31:",
["12803"]="/src/classes/Graphics/TextMask.luo:32:",
["12804"]="/src/classes/Graphics/TextMask.luo:33:",
["12805"]="/src/classes/Graphics/TextMask.luo:34:",
["12806"]="/src/classes/Graphics/TextMask.luo:35:",
["12807"]="/src/classes/Graphics/TextMask.luo:36:",
["12808"]="/src/classes/Graphics/TextMask.luo:37:",
["12809"]="/src/classes/Graphics/TextMask.luo:38:",
["12810"]="/src/classes/Graphics/TextMask.luo:39:",
["12811"]="/src/classes/Graphics/TextMask.luo:40:",
["12812"]="/src/classes/Graphics/TextMask.luo:41:",
["12813"]="/src/classes/Graphics/TextMask.luo:42:",
["12814"]="/src/classes/Graphics/TextMask.luo:43:",
["12815"]="/src/classes/Graphics/TextMask.luo:44:",
["12816"]="/src/classes/Graphics/TextMask.luo:45:",
["12817"]="/src/classes/Graphics/TextMask.luo:46:",
["12818"]="/src/classes/Graphics/TextMask.luo:47:",
["12819"]="/src/classes/Graphics/TextMask.luo:48:",
["12820"]="/src/classes/Graphics/TextMask.luo:49:",
["12821"]="/src/classes/Graphics/TextMask.luo:50:",
["12822"]="/src/classes/Graphics/TextMask.luo:51:",
["12823"]="/src/classes/Graphics/TextMask.luo:52:",
["12824"]="/src/classes/Graphics/TextMask.luo:53:",
["12825"]="/src/classes/Graphics/TextMask.luo:54:",
["12826"]="/src/classes/Graphics/TextMask.luo:55:",
["12827"]="/src/classes/Graphics/TextMask.luo:56:",
["12828"]="/src/classes/Graphics/TextMask.luo:57:",
["12829"]="/src/classes/Graphics/TextMask.luo:58:",
["12830"]="/src/classes/Graphics/TextMask.luo:59:",
["12831"]="/src/classes/Graphics/TextMask.luo:60:",
["12832"]="/src/classes/Graphics/TextMask.luo:61:",
["12833"]="/src/classes/Graphics/TextMask.luo:62:",
["12834"]="/src/classes/Graphics/TextMask.luo:63:",
["12835"]="/src/classes/Graphics/TextMask.luo:64:",
["12836"]="/src/classes/Graphics/TextMask.luo:65:",
["12837"]="/src/classes/Graphics/TextMask.luo:66:",
["12838"]="/src/classes/Graphics/TextMask.luo:67:",
["12839"]="/src/classes/Graphics/TextMask.luo:68:",
["12840"]="/src/classes/Graphics/TextMask.luo:69:",
["12841"]="/src/classes/Graphics/TextMask.luo:70:",
["12842"]="/src/classes/Graphics/TextMask.luo:71:",
["12843"]="/src/classes/Graphics/TextMask.luo:72:",
["12844"]="/src/classes/Graphics/TextMask.luo:73:",
["12845"]="/src/classes/Graphics/TextMask.luo:74:",
["12846"]="/src/classes/Graphics/TextMask.luo:75:",
["12847"]="/src/classes/Graphics/TextMask.luo:76:",
["12848"]="/src/classes/Graphics/TextMask.luo:77:",
["12849"]="/src/classes/Graphics/TextMask.luo:78:",
["12850"]="/src/classes/Graphics/TextMask.luo:79:",
["12851"]="/src/classes/Graphics/TextMask.luo:80:",
["12852"]="/src/classes/Graphics/TextMask.luo:81:",
["12853"]="/src/classes/Graphics/TextMask.luo:82:",
["12854"]="/src/classes/Graphics/SeparatorMask.luo:6:",
["12855"]="/src/classes/Graphics/SeparatorMask.luo:7:",
["12856"]="/src/classes/Graphics/SeparatorMask.luo:8:",
["12857"]="/src/classes/Graphics/SeparatorMask.luo:9:",
["12858"]="/src/classes/Graphics/SeparatorMask.luo:10:",
["12859"]="/src/classes/Graphics/SeparatorMask.luo:11:",
["12860"]="/src/classes/Graphics/SeparatorMask.luo:12:",
["12861"]="/src/classes/Graphics/SeparatorMask.luo:13:",
["12862"]="/src/classes/Graphics/SeparatorMask.luo:14:",
["12863"]="/src/classes/Graphics/SeparatorMask.luo:15:",
["12864"]="/src/classes/Graphics/SeparatorMask.luo:16:",
["12865"]="/src/classes/Graphics/SeparatorMask.luo:17:",
["12866"]="/src/classes/Graphics/SeparatorMask.luo:18:",
["12941"]="/src/classes/Views/Containers/Tree/TreeNode.luo:17:",
["12942"]="/src/classes/Views/Containers/Tree/TreeNode.luo:18:",
["12943"]="/src/classes/Views/Containers/Tree/TreeNode.luo:19:",
["12944"]="/src/classes/Views/Containers/Tree/TreeNode.luo:20:",
["12945"]="/src/classes/Views/Containers/Tree/TreeNode.luo:21:",
["12946"]="/src/classes/Views/Containers/Tree/TreeNode.luo:22:",
["12947"]="/src/classes/Views/Containers/Tree/TreeNode.luo:23:",
["12948"]="/src/classes/Views/Containers/Tree/TreeNode.luo:24:",
["12949"]="/src/classes/Views/Containers/Tree/TreeNode.luo:25:",
["12950"]="/src/classes/Views/Containers/Tree/TreeNode.luo:114:",
["12951"]="/src/classes/Views/Containers/Tree/TreeNode.luo:115:",
["12952"]="/src/classes/Views/Containers/Tree/TreeNode.luo:116:",
["12953"]="/src/classes/Views/Containers/Tree/TreeNode.luo:117:",
["12954"]="/src/classes/Views/Containers/Tree/TreeNode.luo:118:",
["12955"]="/src/classes/Views/Containers/Tree/TreeNode.luo:119:",
["12956"]="/src/classes/Views/Containers/Tree/TreeNode.luo:120:",
["12957"]="/src/classes/Views/Containers/Tree/TreeNode.luo:121:",
["12958"]="/src/classes/Views/Containers/Tree/TreeNode.luo:122:",
["12959"]="/src/classes/Views/Containers/Tree/TreeNode.luo:79:",
["12960"]="/src/classes/Views/Containers/Tree/TreeNode.luo:80:",
["12961"]="/src/classes/Views/Containers/Tree/TreeNode.luo:81:",
["12962"]="/src/classes/Views/Containers/Tree/TreeNode.luo:82:",
["12963"]="/src/classes/Views/Containers/Tree/TreeNode.luo:83:",
["12964"]="/src/classes/Views/Containers/Tree/TreeNode.luo:84:",
["12965"]="/src/classes/Views/Containers/Tree/TreeNode.luo:85:",
["12966"]="/src/classes/Views/Containers/Tree/TreeNode.luo:86:",
["12967"]="/src/classes/Views/Containers/Tree/TreeNode.luo:87:",
["12968"]="/src/classes/Views/Containers/Tree/TreeNode.luo:88:",
["12969"]="/src/classes/Views/Containers/Tree/TreeNode.luo:89:",
["12970"]="/src/classes/Views/Containers/Tree/TreeNode.luo:90:",
["12971"]="/src/classes/Views/Containers/Tree/TreeNode.luo:141:",
["12972"]="/src/classes/Views/Containers/Tree/TreeNode.luo:142:",
["12973"]="/src/classes/Views/Containers/Tree/TreeNode.luo:143:",
["12974"]="/src/classes/Views/Containers/Tree/TreeNode.luo:144:",
["12975"]="/src/classes/Views/Containers/Tree/TreeNode.luo:145:",
["12976"]="/src/classes/Views/Containers/Tree/TreeNode.luo:146:",
["12977"]="/src/classes/Views/Containers/Tree/TreeNode.luo:147:",
["12978"]="/src/classes/Views/Containers/Tree/TreeNode.luo:148:",
["12979"]="/src/classes/Views/Containers/Tree/TreeNode.luo:149:",
["12980"]="/src/classes/Views/Containers/Tree/TreeNode.luo:150:",
["12981"]="/src/classes/Views/Containers/Tree/TreeNode.luo:151:",
["12982"]="/src/classes/Views/Containers/Tree/TreeNode.luo:152:",
["12983"]="/src/classes/Views/Containers/Tree/TreeNode.luo:27:",
["12984"]="/src/classes/Views/Containers/Tree/TreeNode.luo:28:",
["12985"]="/src/classes/Views/Containers/Tree/TreeNode.luo:29:",
["12986"]="/src/classes/Views/Containers/Tree/TreeNode.luo:30:",
["12987"]="/src/classes/Views/Containers/Tree/TreeNode.luo:31:",
["12988"]="/src/classes/Views/Containers/Tree/TreeNode.luo:32:",
["12989"]="/src/classes/Views/Containers/Tree/TreeNode.luo:33:",
["12990"]="/src/classes/Views/Containers/Tree/TreeNode.luo:34:",
["12991"]="/src/classes/Views/Containers/Tree/TreeNode.luo:35:",
["12992"]="/src/classes/Views/Containers/Tree/TreeNode.luo:36:",
["12993"]="/src/classes/Views/Containers/Tree/TreeNode.luo:162:",
["12994"]="/src/classes/Views/Containers/Tree/TreeNode.luo:163:",
["12995"]="/src/classes/Views/Containers/Tree/TreeNode.luo:43:",
["12996"]="/src/classes/Views/Containers/Tree/TreeNode.luo:44:",
["12997"]="/src/classes/Views/Containers/Tree/TreeNode.luo:45:",
["12998"]="/src/classes/Views/Containers/Tree/TreeNode.luo:46:",
["12999"]="/src/classes/Views/Containers/Tree/TreeNode.luo:47:",
["13000"]="/src/classes/Views/Containers/Tree/TreeNode.luo:48:",
["13001"]="/src/classes/Views/Containers/Tree/TreeNode.luo:185:",
["13002"]="/src/classes/Views/Containers/Tree/TreeNode.luo:186:",
["13003"]="/src/classes/Views/Containers/Tree/TreeNode.luo:187:",
["13004"]="/src/classes/Views/Containers/Tree/TreeNode.luo:188:",
["13005"]="/src/classes/Views/Containers/Tree/TreeNode.luo:189:",
["13006"]="/src/classes/Views/Containers/Tree/TreeNode.luo:190:",
["13007"]="/src/classes/Views/Containers/Tree/TreeNode.luo:191:",
["13008"]="/src/classes/Views/Containers/Tree/TreeNode.luo:192:",
["13009"]="/src/classes/Views/Containers/Tree/TreeNode.luo:193:",
["13010"]="/src/classes/Views/Containers/Tree/TreeNode.luo:194:",
["13011"]="/src/classes/Views/Containers/Tree/TreeNode.luo:195:",
["13012"]="/src/classes/Views/Containers/Tree/TreeNode.luo:196:",
["13013"]="/src/classes/Views/Containers/Tree/TreeNode.luo:197:",
["13014"]="/src/classes/Views/Containers/Tree/TreeNode.luo:198:",
["13015"]="/src/classes/Views/Containers/Tree/TreeNode.luo:199:",
["13016"]="/src/classes/Views/Containers/Tree/TreeNode.luo:200:",
["13017"]="/src/classes/Views/Containers/Tree/TreeNode.luo:201:",
["13018"]="/src/classes/Views/Containers/Tree/TreeNode.luo:202:",
["13019"]="/src/classes/Views/Containers/Tree/TreeNode.luo:203:",
["13020"]="/src/classes/Views/Containers/Tree/TreeNode.luo:204:",
["13021"]="/src/classes/Views/Containers/Tree/TreeNode.luo:205:",
["13022"]="/src/classes/Views/Containers/Tree/TreeNode.luo:206:",
["13023"]="/src/classes/Views/Containers/Tree/TreeNode.luo:207:",
["13024"]="/src/classes/Views/Containers/Tree/TreeNode.luo:208:",
["13025"]="/src/classes/Views/Containers/Tree/TreeNode.luo:209:",
["13026"]="/src/classes/Views/Containers/Tree/TreeNode.luo:210:",
["13027"]="/src/classes/Views/Containers/Tree/TreeNode.luo:211:",
["13028"]="/src/classes/Views/Containers/Tree/TreeNode.luo:212:",
["13029"]="/src/classes/Views/Containers/Tree/TreeNode.luo:213:",
["13030"]="/src/classes/Views/Containers/Tree/TreeNode.luo:214:",
["13031"]="/src/classes/Views/Containers/Tree/TreeNode.luo:215:",
["13032"]="/src/classes/Views/Containers/Tree/TreeNode.luo:216:",
["13033"]="/src/classes/Views/Containers/Tree/TreeNode.luo:217:",
["13034"]="/src/classes/Views/Containers/Tree/TreeNode.luo:218:",
["13035"]="/src/classes/Views/Containers/Tree/TreeNode.luo:124:",
["13036"]="/src/classes/Views/Containers/Tree/TreeNode.luo:125:",
["13037"]="/src/classes/Views/Containers/Tree/TreeNode.luo:126:",
["13038"]="/src/classes/Views/Containers/Tree/TreeNode.luo:165:",
["13039"]="/src/classes/Views/Containers/Tree/TreeNode.luo:166:",
["13040"]="/src/classes/Views/Containers/Tree/TreeNode.luo:167:",
["13041"]="/src/classes/Views/Containers/Tree/TreeNode.luo:168:",
["13042"]="/src/classes/Views/Containers/Tree/TreeNode.luo:169:",
["13043"]="/src/classes/Views/Containers/Tree/TreeNode.luo:170:",
["13044"]="/src/classes/Views/Containers/Tree/TreeNode.luo:171:",
["13045"]="/src/classes/Views/Containers/Tree/TreeNode.luo:154:",
["13046"]="/src/classes/Views/Containers/Tree/TreeNode.luo:155:",
["13047"]="/src/classes/Views/Containers/Tree/TreeNode.luo:156:",
["13048"]="/src/classes/Views/Containers/Tree/TreeNode.luo:157:",
["13049"]="/src/classes/Views/Containers/Tree/TreeNode.luo:158:",
["13050"]="/src/classes/Views/Containers/Tree/TreeNode.luo:159:",
["13051"]="/src/classes/Views/Containers/Tree/TreeNode.luo:160:",
["13052"]="/src/classes/Views/Containers/Tree/TreeNode.luo:60:",
["13053"]="/src/classes/Views/Containers/Tree/TreeNode.luo:61:",
["13054"]="/src/classes/Views/Containers/Tree/TreeNode.luo:62:",
["13055"]="/src/classes/Views/Containers/Tree/TreeNode.luo:63:",
["13056"]="/src/classes/Views/Containers/Tree/TreeNode.luo:64:",
["13057"]="/src/classes/Views/Containers/Tree/TreeNode.luo:65:",
["13058"]="/src/classes/Views/Containers/Tree/TreeNode.luo:66:",
["13059"]="/src/classes/Views/Containers/Tree/TreeNode.luo:67:",
["13060"]="/src/classes/Views/Containers/Tree/TreeNode.luo:68:",
["13061"]="/src/classes/Views/Containers/Tree/TreeNode.luo:69:",
["13062"]="/src/classes/Views/Containers/Tree/TreeNode.luo:128:",
["13063"]="/src/classes/Views/Containers/Tree/TreeNode.luo:129:",
["13064"]="/src/classes/Views/Containers/Tree/TreeNode.luo:130:",
["13065"]="/src/classes/Views/Containers/Tree/TreeNode.luo:131:",
["13066"]="/src/classes/Views/Containers/Tree/TreeNode.luo:132:",
["13067"]="/src/classes/Views/Containers/Tree/TreeNode.luo:133:",
["13068"]="/src/classes/Views/Containers/Tree/TreeNode.luo:134:",
["13069"]="/src/classes/Views/Containers/Tree/TreeNode.luo:135:",
["13070"]="/src/classes/Views/Containers/Tree/TreeNode.luo:136:",
["13071"]="/src/classes/Views/Containers/Tree/TreeNode.luo:137:",
["13072"]="/src/classes/Views/Containers/Tree/TreeNode.luo:138:",
["13073"]="/src/classes/Views/Containers/Tree/TreeNode.luo:139:",
["13133"]="/src/classes/Graphics/ScreenCanvas.luo:7:",
["13134"]="/src/classes/Graphics/ScreenCanvas.luo:8:",
["13135"]="/src/classes/Graphics/ScreenCanvas.luo:9:",
["13136"]="/src/classes/Graphics/ScreenCanvas.luo:10:",
["13137"]="/src/classes/Graphics/ScreenCanvas.luo:12:",
["13138"]="/src/classes/Graphics/ScreenCanvas.luo:13:",
["13139"]="/src/classes/Graphics/ScreenCanvas.luo:14:",
["13140"]="/src/classes/Graphics/ScreenCanvas.luo:15:",
["13141"]="/src/classes/Graphics/ScreenCanvas.luo:16:",
["13142"]="/src/classes/Graphics/ScreenCanvas.luo:17:",
["13143"]="/src/classes/Graphics/ScreenCanvas.luo:18:",
["13144"]="/src/classes/Graphics/ScreenCanvas.luo:19:",
["13145"]="/src/classes/Graphics/ScreenCanvas.luo:20:",
["13146"]="/src/classes/Graphics/ScreenCanvas.luo:21:",
["13147"]="/src/classes/Graphics/ScreenCanvas.luo:22:",
["13148"]="/src/classes/Graphics/ScreenCanvas.luo:23:",
["13149"]="/src/classes/Graphics/ScreenCanvas.luo:24:",
["13150"]="/src/classes/Graphics/ScreenCanvas.luo:25:",
["13151"]="/src/classes/Graphics/ScreenCanvas.luo:26:",
["13152"]="/src/classes/Graphics/ScreenCanvas.luo:27:",
["13153"]="/src/classes/Graphics/ScreenCanvas.luo:28:",
["13154"]="/src/classes/Graphics/ScreenCanvas.luo:29:",
["13155"]="/src/classes/Graphics/ScreenCanvas.luo:30:",
["13156"]="/src/classes/Graphics/ScreenCanvas.luo:31:",
["13157"]="/src/classes/Graphics/ScreenCanvas.luo:32:",
["13158"]="/src/classes/Graphics/ScreenCanvas.luo:33:",
["13159"]="/src/classes/Graphics/ScreenCanvas.luo:34:",
["13160"]="/src/classes/Graphics/ScreenCanvas.luo:35:",
["13161"]="/src/classes/Graphics/ScreenCanvas.luo:36:",
["13162"]="/src/classes/Graphics/ScreenCanvas.luo:37:",
["13163"]="/src/classes/Graphics/ScreenCanvas.luo:38:",
["13164"]="/src/classes/Graphics/ScreenCanvas.luo:39:",
["13165"]="/src/classes/Graphics/ScreenCanvas.luo:40:",
["13166"]="/src/classes/Graphics/ScreenCanvas.luo:41:",
["13167"]="/src/classes/Graphics/ScreenCanvas.luo:42:",
["13168"]="/src/classes/Graphics/ScreenCanvas.luo:43:",
["13169"]="/src/classes/Graphics/ScreenCanvas.luo:44:",
["13170"]="/src/classes/Graphics/ScreenCanvas.luo:45:",
["13171"]="/src/classes/Graphics/ScreenCanvas.luo:46:",
["13172"]="/src/classes/Graphics/ScreenCanvas.luo:47:",
["13173"]="/src/classes/Graphics/ScreenCanvas.luo:48:",
["13174"]="/src/classes/Graphics/ScreenCanvas.luo:49:",
["13175"]="/src/classes/Graphics/ScreenCanvas.luo:50:",
["13176"]="/src/classes/Graphics/ScreenCanvas.luo:51:",
["13177"]="/src/classes/Graphics/ScreenCanvas.luo:52:",
["13178"]="/src/classes/Graphics/ScreenCanvas.luo:53:",
["13179"]="/src/classes/Graphics/ScreenCanvas.luo:54:",
["13180"]="/src/classes/Graphics/ScreenCanvas.luo:55:",
["13181"]="/src/classes/Graphics/ScreenCanvas.luo:56:",
["13182"]="/src/classes/Graphics/ScreenCanvas.luo:57:",
["13183"]="/src/classes/Graphics/ScreenCanvas.luo:58:",
["13184"]="/src/classes/Graphics/ScreenCanvas.luo:59:",
["13185"]="/src/classes/Graphics/ScreenCanvas.luo:60:",
["13186"]="/src/classes/Graphics/ScreenCanvas.luo:61:",
["13187"]="/src/classes/Graphics/ScreenCanvas.luo:62:",
["13188"]="/src/classes/Graphics/ScreenCanvas.luo:63:",
["13189"]="/src/classes/Graphics/ScreenCanvas.luo:64:",
["13190"]="/src/classes/Graphics/ScreenCanvas.luo:65:",
["13191"]="/src/classes/Graphics/ScreenCanvas.luo:66:",
["13192"]="/src/classes/Graphics/ScreenCanvas.luo:67:",
["13193"]="/src/classes/Graphics/ScreenCanvas.luo:68:",
["13194"]="/src/classes/Graphics/ScreenCanvas.luo:69:",
["13195"]="/src/classes/Graphics/ScreenCanvas.luo:70:",
["13196"]="/src/classes/Graphics/ScreenCanvas.luo:71:",
["13197"]="/src/classes/Graphics/ScreenCanvas.luo:72:",
["13198"]="/src/classes/Graphics/ScreenCanvas.luo:73:",
["13199"]="/src/classes/Graphics/ScreenCanvas.luo:74:",
["13200"]="/src/classes/Graphics/ScreenCanvas.luo:75:",
["13201"]="/src/classes/Graphics/ScreenCanvas.luo:76:",
["13202"]="/src/classes/Graphics/ScreenCanvas.luo:77:",
["13203"]="/src/classes/Graphics/ScreenCanvas.luo:78:",
["13204"]="/src/classes/Graphics/ScreenCanvas.luo:79:",
["13205"]="/src/classes/Graphics/ScreenCanvas.luo:80:",
["13206"]="/src/classes/Graphics/ScreenCanvas.luo:81:",
["13207"]="/src/classes/Graphics/ScreenCanvas.luo:82:",
["13208"]="/src/classes/Graphics/ScreenCanvas.luo:83:",
["13209"]="/src/classes/Graphics/ScreenCanvas.luo:84:",
["13210"]="/src/classes/Graphics/ScreenCanvas.luo:85:",
["13211"]="/src/classes/Graphics/ScreenCanvas.luo:86:",
["13212"]="/src/classes/Graphics/ScreenCanvas.luo:87:",
["13213"]="/src/classes/Graphics/ScreenCanvas.luo:88:",
["13214"]="/src/classes/Graphics/ScreenCanvas.luo:89:",
["13215"]="/src/classes/Graphics/ScreenCanvas.luo:90:",
["13216"]="/src/classes/Graphics/ScreenCanvas.luo:91:",
["13217"]="/src/classes/Graphics/ScreenCanvas.luo:92:",
["13218"]="/src/classes/Graphics/ScreenCanvas.luo:93:",
["13219"]="/src/classes/Graphics/ScreenCanvas.luo:94:",
["13220"]="/src/classes/Graphics/ScreenCanvas.luo:95:",
["13221"]="/src/classes/Graphics/ScreenCanvas.luo:96:",
["13222"]="/src/classes/Graphics/ScreenCanvas.luo:97:",
["13223"]="/src/classes/Graphics/ScreenCanvas.luo:98:",
["13224"]="/src/classes/Graphics/ScreenCanvas.luo:99:",
["13225"]="/src/classes/Graphics/ScreenCanvas.luo:100:",
["13226"]="/src/classes/Graphics/ScreenCanvas.luo:101:",
["13227"]="/src/classes/Graphics/ScreenCanvas.luo:102:",
["13228"]="/src/classes/Graphics/ScreenCanvas.luo:103:",
["13229"]="/src/classes/Graphics/ScreenCanvas.luo:104:",
["13230"]="/src/classes/Graphics/ScreenCanvas.luo:105:",
["13231"]="/src/classes/Graphics/ScreenCanvas.luo:106:",
["13271"]="/src/classes/Events/Mouse Events/MoveMouseEvent.luo:5:",
["13272"]="/src/classes/Events/Mouse Events/MoveMouseEvent.luo:6:",
["13273"]="/src/classes/Events/Mouse Events/MoveMouseEvent.luo:7:",
["13274"]="/src/classes/Events/Mouse Events/MoveMouseEvent.luo:8:",
["13275"]="/src/classes/Events/Mouse Events/MoveMouseEvent.luo:9:",
["13276"]="/src/classes/Events/Mouse Events/MoveMouseEvent.luo:10:",
["13340"]="/System/classes/Splash/SplashApplicationContainer.luo:4:",
["13341"]="/System/classes/Splash/SplashApplicationContainer.luo:5:",
["13342"]="/System/classes/Splash/SplashApplicationContainer.luo:6:",
["13343"]="/System/classes/Splash/SplashApplicationContainer.luo:7:",
["13344"]="/System/classes/Splash/SplashApplicationContainer.luo:9:",
["13345"]="/System/classes/Splash/SplashApplicationContainer.luo:10:",
["13346"]="/System/classes/Splash/SplashApplicationContainer.luo:11:",
["13347"]="/System/classes/Splash/SplashApplicationContainer.luo:12:",
["13348"]="/System/classes/Splash/SplashApplicationContainer.luo:13:",
["13349"]="/System/classes/Splash/SplashApplicationContainer.luo:14:",
["13400"]="/System/classes/Home/HomeItem.luo:7:",
["13401"]="/System/classes/Home/HomeItem.luo:8:",
["13402"]="/System/classes/Home/HomeItem.luo:9:",
["13403"]="/System/classes/Home/HomeItem.luo:10:",
["13404"]="/System/classes/Home/HomeItem.luo:11:",
["13405"]="/System/classes/Home/HomeItem.luo:25:",
["13406"]="/System/classes/Home/HomeItem.luo:26:",
["13407"]="/System/classes/Home/HomeItem.luo:27:",
["13408"]="/System/classes/Home/HomeItem.luo:13:",
["13409"]="/System/classes/Home/HomeItem.luo:14:",
["13410"]="/System/classes/Home/HomeItem.luo:15:",
["13411"]="/System/classes/Home/HomeItem.luo:17:",
["13412"]="/System/classes/Home/HomeItem.luo:18:",
["13413"]="/System/classes/Home/HomeItem.luo:19:",
["13414"]="/System/classes/Home/HomeItem.luo:20:",
["13415"]="/System/classes/Home/HomeItem.luo:21:",
["13416"]="/System/classes/Home/HomeItem.luo:22:",
["13417"]="/System/classes/Home/HomeItem.luo:23:",
["13418"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:26:",
["13419"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:27:",
["13420"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:28:",
["13421"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:29:",
["13422"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:30:",
["13423"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:95:",
["13424"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:96:",
["13425"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:97:",
["13426"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:98:",
["13427"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:99:",
["13428"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:100:",
["13429"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:101:",
["13430"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:102:",
["13431"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:103:",
["13432"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:104:",
["13433"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:105:",
["13434"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:106:",
["13435"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:107:",
["13436"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:108:",
["13437"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:109:",
["13438"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:110:",
["13439"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:111:",
["13440"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:112:",
["13441"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:113:",
["13442"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:114:",
["13443"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:115:",
["13444"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:116:",
["13445"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:117:",
["13446"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:118:",
["13447"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:119:",
["13448"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:120:",
["13449"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:121:",
["13450"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:122:",
["13451"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:123:",
["13452"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:124:",
["13453"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:125:",
["13454"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:126:",
["13455"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:127:",
["13456"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:128:",
["13457"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:129:",
["13458"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:211:",
["13459"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:212:",
["13460"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:213:",
["13461"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:214:",
["13462"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:215:",
["13463"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:216:",
["13464"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:217:",
["13465"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:218:",
["13466"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:219:",
["13467"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:220:",
["13468"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:221:",
["13469"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:222:",
["13470"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:223:",
["13471"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:224:",
["13472"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:225:",
["13473"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:226:",
["13474"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:227:",
["13475"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:228:",
["13476"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:229:",
["13477"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:230:",
["13478"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:231:",
["13479"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:232:",
["13480"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:233:",
["13481"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:234:",
["13482"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:235:",
["13483"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:236:",
["13484"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:237:",
["13485"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:238:",
["13486"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:239:",
["13487"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:240:",
["13488"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:241:",
["13489"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:242:",
["13490"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:243:",
["13491"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:244:",
["13492"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:245:",
["13493"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:246:",
["13494"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:247:",
["13495"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:248:",
["13496"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:249:",
["13497"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:250:",
["13498"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:251:",
["13499"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:252:",
["13500"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:253:",
["13501"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:254:",
["13502"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:255:",
["13503"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:256:",
["13504"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:257:",
["13505"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:258:",
["13506"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:259:",
["13507"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:260:",
["13508"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:261:",
["13509"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:262:",
["13510"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:156:",
["13511"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:157:",
["13512"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:158:",
["13513"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:159:",
["13514"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:160:",
["13515"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:161:",
["13516"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:162:",
["13517"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:163:",
["13518"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:164:",
["13519"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:165:",
["13520"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:166:",
["13521"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:167:",
["13522"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:168:",
["13523"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:169:",
["13524"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:170:",
["13525"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:171:",
["13526"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:172:",
["13527"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:173:",
["13528"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:174:",
["13529"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:175:",
["13530"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:176:",
["13531"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:177:",
["13532"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:178:",
["13533"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:179:",
["13534"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:180:",
["13535"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:181:",
["13536"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:182:",
["13537"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:183:",
["13538"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:184:",
["13539"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:185:",
["13540"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:186:",
["13541"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:187:",
["13542"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:188:",
["13543"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:189:",
["13544"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:190:",
["13545"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:191:",
["13546"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:192:",
["13547"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:193:",
["13548"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:194:",
["13549"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:195:",
["13550"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:196:",
["13551"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:197:",
["13552"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:198:",
["13553"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:199:",
["13554"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:200:",
["13555"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:201:",
["13556"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:202:",
["13557"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:203:",
["13558"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:204:",
["13559"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:205:",
["13560"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:206:",
["13561"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:41:",
["13562"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:42:",
["13563"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:43:",
["13564"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:44:",
["13565"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:45:",
["13566"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:46:",
["13567"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:47:",
["13568"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:48:",
["13569"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:49:",
["13570"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:50:",
["13571"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:51:",
["13572"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:52:",
["13573"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:53:",
["13574"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:54:",
["13575"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:55:",
["13576"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:56:",
["13577"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:57:",
["13578"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:58:",
["13579"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:59:",
["13580"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:60:",
["13581"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:61:",
["13582"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:62:",
["13583"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:63:",
["13584"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:64:",
["13585"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:65:",
["13586"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:66:",
["13587"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:67:",
["13588"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:68:",
["13589"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:69:",
["13590"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:70:",
["13591"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:71:",
["13592"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:72:",
["13593"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:73:",
["13594"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:74:",
["13595"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:75:",
["13596"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:76:",
["13597"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:77:",
["13598"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:78:",
["13599"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:79:",
["13600"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:80:",
["13601"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:81:",
["13602"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:82:",
["13603"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:83:",
["13604"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:84:",
["13605"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:85:",
["13606"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:86:",
["13607"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:87:",
["13608"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:88:",
["13609"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:89:",
["13610"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:141:",
["13611"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:142:",
["13612"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:143:",
["13613"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:144:",
["13614"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:145:",
["13615"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:146:",
["13616"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:147:",
["13617"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:148:",
["13618"]="/src/classes/Clipboard/Drag and Drop/DragDropManager.luo:149:",
["13633"]="/src/classes/Events/Interface Events/TextChangedInterfaceEvent.luo:8:",
["13634"]="/src/classes/Events/Interface Events/TextChangedInterfaceEvent.luo:9:",
["13635"]="/src/classes/Events/Interface Events/TextChangedInterfaceEvent.luo:10:",
["13636"]="/src/classes/Events/Interface Events/TextChangedInterfaceEvent.luo:11:",
["13698"]="/System/classes/TopBar/TopBarContainer.luo:14:",
["13699"]="/System/classes/TopBar/TopBarContainer.luo:15:",
["13700"]="/System/classes/TopBar/TopBarContainer.luo:16:",
["13701"]="/System/classes/TopBar/TopBarContainer.luo:17:",
["13702"]="/System/classes/TopBar/TopBarContainer.luo:18:",
["13703"]="/System/classes/TopBar/TopBarContainer.luo:19:",
["13704"]="/System/classes/TopBar/TopBarContainer.luo:20:",
["13705"]="/System/classes/TopBar/TopBarContainer.luo:21:",
["13706"]="/System/classes/TopBar/TopBarContainer.luo:22:",
["13707"]="/System/classes/TopBar/TopBarContainer.luo:155:",
["13708"]="/System/classes/TopBar/TopBarContainer.luo:156:",
["13709"]="/System/classes/TopBar/TopBarContainer.luo:157:",
["13710"]="/System/classes/TopBar/TopBarContainer.luo:158:",
["13711"]="/System/classes/TopBar/TopBarContainer.luo:159:",
["13712"]="/System/classes/TopBar/TopBarContainer.luo:160:",
["13713"]="/System/classes/TopBar/TopBarContainer.luo:161:",
["13714"]="/System/classes/TopBar/TopBarContainer.luo:162:",
["13715"]="/System/classes/TopBar/TopBarContainer.luo:163:",
["13716"]="/System/classes/TopBar/TopBarContainer.luo:164:",
["13717"]="/System/classes/TopBar/TopBarContainer.luo:165:",
["13718"]="/System/classes/TopBar/TopBarContainer.luo:166:",
["13719"]="/System/classes/TopBar/TopBarContainer.luo:167:",
["13720"]="/System/classes/TopBar/TopBarContainer.luo:168:",
["13721"]="/System/classes/TopBar/TopBarContainer.luo:169:",
["13722"]="/System/classes/TopBar/TopBarContainer.luo:170:",
["13723"]="/System/classes/TopBar/TopBarContainer.luo:171:",
["13724"]="/System/classes/TopBar/TopBarContainer.luo:151:",
["13725"]="/System/classes/TopBar/TopBarContainer.luo:152:",
["13726"]="/System/classes/TopBar/TopBarContainer.luo:153:",
["13727"]="/System/classes/TopBar/TopBarContainer.luo:46:",
["13728"]="/System/classes/TopBar/TopBarContainer.luo:47:",
["13729"]="/System/classes/TopBar/TopBarContainer.luo:48:",
["13730"]="/System/classes/TopBar/TopBarContainer.luo:49:",
["13731"]="/System/classes/TopBar/TopBarContainer.luo:50:",
["13732"]="/System/classes/TopBar/TopBarContainer.luo:51:",
["13733"]="/System/classes/TopBar/TopBarContainer.luo:52:",
["13734"]="/System/classes/TopBar/TopBarContainer.luo:53:",
["13735"]="/System/classes/TopBar/TopBarContainer.luo:54:",
["13736"]="/System/classes/TopBar/TopBarContainer.luo:55:",
["13737"]="/System/classes/TopBar/TopBarContainer.luo:56:",
["13738"]="/System/classes/TopBar/TopBarContainer.luo:57:",
["13739"]="/System/classes/TopBar/TopBarContainer.luo:58:",
["13740"]="/System/classes/TopBar/TopBarContainer.luo:59:",
["13741"]="/System/classes/TopBar/TopBarContainer.luo:60:",
["13742"]="/System/classes/TopBar/TopBarContainer.luo:61:",
["13743"]="/System/classes/TopBar/TopBarContainer.luo:62:",
["13744"]="/System/classes/TopBar/TopBarContainer.luo:63:",
["13745"]="/System/classes/TopBar/TopBarContainer.luo:64:",
["13746"]="/System/classes/TopBar/TopBarContainer.luo:65:",
["13747"]="/System/classes/TopBar/TopBarContainer.luo:66:",
["13748"]="/System/classes/TopBar/TopBarContainer.luo:67:",
["13749"]="/System/classes/TopBar/TopBarContainer.luo:68:",
["13750"]="/System/classes/TopBar/TopBarContainer.luo:69:",
["13751"]="/System/classes/TopBar/TopBarContainer.luo:70:",
["13752"]="/System/classes/TopBar/TopBarContainer.luo:71:",
["13753"]="/System/classes/TopBar/TopBarContainer.luo:72:",
["13754"]="/System/classes/TopBar/TopBarContainer.luo:73:",
["13755"]="/System/classes/TopBar/TopBarContainer.luo:74:",
["13756"]="/System/classes/TopBar/TopBarContainer.luo:75:",
["13757"]="/System/classes/TopBar/TopBarContainer.luo:76:",
["13758"]="/System/classes/TopBar/TopBarContainer.luo:77:",
["13759"]="/System/classes/TopBar/TopBarContainer.luo:78:",
["13760"]="/System/classes/TopBar/TopBarContainer.luo:79:",
["13761"]="/System/classes/TopBar/TopBarContainer.luo:80:",
["13762"]="/System/classes/TopBar/TopBarContainer.luo:81:",
["13763"]="/System/classes/TopBar/TopBarContainer.luo:82:",
["13764"]="/System/classes/TopBar/TopBarContainer.luo:83:",
["13765"]="/System/classes/TopBar/TopBarContainer.luo:84:",
["13766"]="/System/classes/TopBar/TopBarContainer.luo:85:",
["13767"]="/System/classes/TopBar/TopBarContainer.luo:86:",
["13768"]="/System/classes/TopBar/TopBarContainer.luo:87:",
["13769"]="/System/classes/TopBar/TopBarContainer.luo:88:",
["13770"]="/System/classes/TopBar/TopBarContainer.luo:89:",
["13771"]="/System/classes/TopBar/TopBarContainer.luo:90:",
["13772"]="/System/classes/TopBar/TopBarContainer.luo:91:",
["13773"]="/System/classes/TopBar/TopBarContainer.luo:92:",
["13774"]="/System/classes/TopBar/TopBarContainer.luo:93:",
["13775"]="/System/classes/TopBar/TopBarContainer.luo:94:",
["13776"]="/System/classes/TopBar/TopBarContainer.luo:95:",
["13777"]="/System/classes/TopBar/TopBarContainer.luo:96:",
["13778"]="/System/classes/TopBar/TopBarContainer.luo:97:",
["13779"]="/System/classes/TopBar/TopBarContainer.luo:98:",
["13780"]="/System/classes/TopBar/TopBarContainer.luo:99:",
["13781"]="/System/classes/TopBar/TopBarContainer.luo:100:",
["13782"]="/System/classes/TopBar/TopBarContainer.luo:101:",
["13783"]="/System/classes/TopBar/TopBarContainer.luo:102:",
["13784"]="/System/classes/TopBar/TopBarContainer.luo:103:",
["13785"]="/System/classes/TopBar/TopBarContainer.luo:104:",
["13786"]="/System/classes/TopBar/TopBarContainer.luo:105:",
["13787"]="/System/classes/TopBar/TopBarContainer.luo:106:",
["13788"]="/System/classes/TopBar/TopBarContainer.luo:107:",
["13789"]="/System/classes/TopBar/TopBarContainer.luo:108:",
["13790"]="/System/classes/TopBar/TopBarContainer.luo:109:",
["13791"]="/System/classes/TopBar/TopBarContainer.luo:110:",
["13792"]="/System/classes/TopBar/TopBarContainer.luo:111:",
["13793"]="/System/classes/TopBar/TopBarContainer.luo:112:",
["13794"]="/System/classes/TopBar/TopBarContainer.luo:113:",
["13795"]="/System/classes/TopBar/TopBarContainer.luo:24:",
["13796"]="/System/classes/TopBar/TopBarContainer.luo:25:",
["13797"]="/System/classes/TopBar/TopBarContainer.luo:26:",
["13798"]="/System/classes/TopBar/TopBarContainer.luo:27:",
["13799"]="/System/classes/TopBar/TopBarContainer.luo:28:",
["13800"]="/System/classes/TopBar/TopBarContainer.luo:129:",
["13801"]="/System/classes/TopBar/TopBarContainer.luo:130:",
["13802"]="/System/classes/TopBar/TopBarContainer.luo:131:",
["13803"]="/System/classes/TopBar/TopBarContainer.luo:132:",
["13804"]="/System/classes/TopBar/TopBarContainer.luo:122:",
["13805"]="/System/classes/TopBar/TopBarContainer.luo:123:",
["13806"]="/System/classes/TopBar/TopBarContainer.luo:124:",
["13807"]="/System/classes/TopBar/TopBarContainer.luo:125:",
["13808"]="/System/classes/TopBar/TopBarContainer.luo:126:",
["13809"]="/System/classes/TopBar/TopBarContainer.luo:127:",
["13810"]="/System/classes/TopBar/TopBarContainer.luo:138:",
["13811"]="/System/classes/TopBar/TopBarContainer.luo:139:",
["13812"]="/System/classes/TopBar/TopBarContainer.luo:140:",
["13813"]="/System/classes/TopBar/TopBarContainer.luo:141:",
["13814"]="/System/classes/TopBar/TopBarContainer.luo:142:",
["13815"]="/System/classes/TopBar/TopBarContainer.luo:143:",
["13816"]="/System/classes/TopBar/TopBarContainer.luo:144:",
["13817"]="/System/classes/TopBar/TopBarContainer.luo:145:",
["13818"]="/System/classes/TopBar/TopBarContainer.luo:146:",
["13819"]="/System/classes/TopBar/TopBarContainer.luo:147:",
["13820"]="/System/classes/TopBar/TopBarContainer.luo:148:",
["13821"]="/System/classes/TopBar/TopBarContainer.luo:149:",
["13822"]="/System/classes/TopBar/TopBarContainer.luo:115:",
["13823"]="/System/classes/TopBar/TopBarContainer.luo:116:",
["13824"]="/System/classes/TopBar/TopBarContainer.luo:117:",
["13825"]="/System/classes/TopBar/TopBarContainer.luo:118:",
["13826"]="/System/classes/TopBar/TopBarContainer.luo:119:",
["13827"]="/System/classes/TopBar/TopBarContainer.luo:120:",
["13828"]="/System/classes/TopBar/TopBarContainer.luo:134:",
["13829"]="/System/classes/TopBar/TopBarContainer.luo:135:",
["13830"]="/System/classes/TopBar/TopBarContainer.luo:136:",
["13864"]="/src/classes/Events/Interface Events/MouseEnteredInterfaceEvent.luo:10:",
["13865"]="/src/classes/Events/Interface Events/MouseEnteredInterfaceEvent.luo:11:",
["13866"]="/src/classes/Events/Interface Events/MouseEnteredInterfaceEvent.luo:12:",
["13867"]="/src/classes/Events/Interface Events/MouseEnteredInterfaceEvent.luo:13:",
["13883"]="/src/classes/Events/Interface Events/SiblingRemovedInterfaceEvent.luo:8:",
["13884"]="/src/classes/Events/Interface Events/SiblingRemovedInterfaceEvent.luo:9:",
["13885"]="/src/classes/Events/Interface Events/SiblingRemovedInterfaceEvent.luo:10:",
["13886"]="/src/classes/File System/Package.luo:107:",
["13887"]="/src/classes/File System/Package.luo:108:",
["13888"]="/src/classes/File System/Package.luo:109:",
["13889"]="/src/classes/File System/Package.luo:110:",
["13890"]="/src/classes/File System/Package.luo:111:",
["13891"]="/src/classes/File System/Package.luo:112:",
["13892"]="/src/classes/File System/Package.luo:113:",
["13893"]="/src/classes/File System/Package.luo:114:",
["13894"]="/src/classes/File System/Package.luo:115:",
["13895"]="/src/classes/File System/Package.luo:116:",
["13896"]="/src/classes/File System/Package.luo:117:",
["13897"]="/src/classes/File System/Package.luo:118:",
["13898"]="/src/classes/File System/Package.luo:119:",
["13899"]="/src/classes/File System/Package.luo:120:",
["13900"]="/src/classes/File System/Package.luo:121:",
["13901"]="/src/classes/File System/Package.luo:122:",
["13902"]="/src/classes/File System/Package.luo:123:",
["13903"]="/src/classes/File System/Package.luo:124:",
["13904"]="/src/classes/File System/Package.luo:125:",
["13905"]="/src/classes/File System/Package.luo:126:",
["13906"]="/src/classes/File System/Package.luo:127:",
["13913"]="/src/classes/Exceptions/Class System/PseudoReferenceClassException.luo:4:",
["13914"]="/src/classes/Exceptions/Class System/PseudoReferenceClassException.luo:5:",
["13915"]="/src/classes/Exceptions/Class System/PseudoReferenceClassException.luo:6:",
["13916"]="/src/classes/Exceptions/Class System/PseudoReferenceClassException.luo:7:",
["13923"]="/src/classes/Exceptions/Class System/ValueTypeClassException.luo:4:",
["13924"]="/src/classes/Exceptions/Class System/ValueTypeClassException.luo:5:",
["13925"]="/src/classes/Exceptions/Class System/ValueTypeClassException.luo:6:",
["13926"]="/src/classes/Exceptions/Class System/ValueTypeClassException.luo:7:",
["13944"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:8:",
["13945"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:9:",
["13946"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:10:",
["13947"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:11:",
["13948"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:18:",
["13949"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:19:",
["13950"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:20:",
["13951"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:27:",
["13952"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:28:",
["13953"]="/src/classes/Events/Interface Events/FocusesChangedInterfaceEvent.luo:29:",
["13977"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:14:",
["13978"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:15:",
["13979"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:16:",
["13980"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:17:",
["13981"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:18:",
["13982"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:19:",
["13983"]="/src/classes/Events/Mouse Events/UpMouseEvent.luo:20:",
["13984"]="/src/classes/Constraints/MathParser.luo:481:",
["13985"]="/src/classes/Constraints/MathParser.luo:482:",
["13986"]="/src/classes/Constraints/MathParser.luo:483:",
["13987"]="/src/classes/Constraints/MathParser.luo:484:",
["13988"]="/src/classes/Constraints/MathParser.luo:485:",
["13989"]="/src/classes/Constraints/MathParser.luo:486:",
["13990"]="/src/classes/Constraints/MathParser.luo:487:",
["13991"]="/src/classes/Constraints/MathParser.luo:488:",
["13992"]="/src/classes/Constraints/MathParser.luo:489:",
["13993"]="/src/classes/Constraints/MathParser.luo:490:",
["13994"]="/src/classes/Constraints/MathParser.luo:491:",
["13995"]="/src/classes/Constraints/MathParser.luo:492:",
["13996"]="/src/classes/Constraints/MathParser.luo:493:",
["13997"]="/src/classes/Constraints/MathParser.luo:494:",
["13998"]="/src/classes/Constraints/MathParser.luo:495:",
["13999"]="/src/classes/Constraints/MathParser.luo:496:",
["14000"]="/src/classes/Constraints/MathParser.luo:497:",
["14001"]="/src/classes/Constraints/MathParser.luo:498:",
["14002"]="/src/classes/Constraints/MathParser.luo:499:",
["14003"]="/src/classes/Constraints/MathParser.luo:500:",
["14004"]="/src/classes/Constraints/MathParser.luo:501:",
["14005"]="/src/classes/Constraints/MathParser.luo:502:",
["14006"]="/src/classes/Constraints/MathParser.luo:503:",
["14007"]="/src/classes/Constraints/MathParser.luo:504:",
["14008"]="/src/classes/Constraints/MathParser.luo:505:",
["14009"]="/src/classes/Constraints/MathParser.luo:506:",
["14010"]="/src/classes/Constraints/MathParser.luo:507:",
["14011"]="/src/classes/Constraints/MathParser.luo:508:",
["14012"]="/src/classes/Constraints/MathParser.luo:509:",
["14013"]="/src/classes/Constraints/MathParser.luo:510:",
["14014"]="/src/classes/Constraints/MathParser.luo:511:",
["14015"]="/src/classes/Constraints/MathParser.luo:512:",
["14016"]="/src/classes/Constraints/MathParser.luo:513:",
["14017"]="/src/classes/Constraints/MathParser.luo:514:",
["14018"]="/src/classes/Constraints/MathParser.luo:515:",
["14019"]="/src/classes/Constraints/MathParser.luo:516:",
["14020"]="/src/classes/Constraints/MathParser.luo:517:",
["14021"]="/src/classes/Constraints/MathParser.luo:518:",
["14022"]="/src/classes/Constraints/MathParser.luo:519:",
["14023"]="/src/classes/Constraints/MathParser.luo:520:",
["14024"]="/src/classes/Constraints/MathParser.luo:521:",
["14025"]="/src/classes/Constraints/MathParser.luo:522:",
["14026"]="/src/classes/Constraints/MathParser.luo:523:",
["14027"]="/src/classes/Constraints/MathParser.luo:524:",
["14028"]="/src/classes/Constraints/MathParser.luo:525:",
["14029"]="/src/classes/Constraints/MathParser.luo:526:",
["14030"]="/src/classes/Constraints/MathParser.luo:527:",
["14031"]="/src/classes/Constraints/MathParser.luo:528:",
["14032"]="/src/classes/Constraints/MathParser.luo:529:",
["14033"]="/src/classes/Constraints/MathParser.luo:451:",
["14034"]="/src/classes/Constraints/MathParser.luo:452:",
["14035"]="/src/classes/Constraints/MathParser.luo:453:",
["14036"]="/src/classes/Constraints/MathParser.luo:454:",
["14037"]="/src/classes/Constraints/MathParser.luo:455:",
["14038"]="/src/classes/Constraints/MathParser.luo:456:",
["14039"]="/src/classes/Constraints/MathParser.luo:457:",
["14040"]="/src/classes/Constraints/MathParser.luo:458:",
["14041"]="/src/classes/Constraints/MathParser.luo:459:",
["14042"]="/src/classes/Constraints/MathParser.luo:460:",
["14043"]="/src/classes/Constraints/MathParser.luo:461:",
["14044"]="/src/classes/Constraints/MathParser.luo:462:",
["14045"]="/src/classes/Constraints/MathParser.luo:463:",
["14046"]="/src/classes/Constraints/MathParser.luo:464:",
["14047"]="/src/classes/Constraints/MathParser.luo:465:",
["14048"]="/src/classes/Constraints/MathParser.luo:466:",
["14049"]="/src/classes/Constraints/MathParser.luo:467:",
["14050"]="/src/classes/Constraints/MathParser.luo:468:",
["14051"]="/src/classes/Constraints/MathParser.luo:469:",
["14052"]="/src/classes/Constraints/MathParser.luo:470:",
["14053"]="/src/classes/Constraints/MathParser.luo:471:",
["14054"]="/src/classes/Constraints/MathParser.luo:472:",
["14055"]="/src/classes/Constraints/MathParser.luo:473:",
["14056"]="/src/classes/Constraints/MathParser.luo:474:",
["14057"]="/src/classes/Constraints/MathParser.luo:475:",
["14058"]="/src/classes/Constraints/MathParser.luo:476:",
["14059"]="/src/classes/Constraints/MathParser.luo:477:",
["14060"]="/src/classes/Constraints/MathParser.luo:444:",
["14061"]="/src/classes/Constraints/MathParser.luo:445:",
["14062"]="/src/classes/Constraints/MathParser.luo:446:",
["14063"]="/src/classes/Constraints/MathParser.luo:447:",
["14064"]="/src/classes/Constraints/MathParser.luo:448:",
["14065"]="/src/classes/Constraints/MathParser.luo:449:",
["14066"]="/src/classes/Constraints/MathParser.luo:534:",
["14067"]="/src/classes/Constraints/MathParser.luo:535:",
["14068"]="/src/classes/Constraints/MathParser.luo:536:",
["14069"]="/src/classes/Constraints/MathParser.luo:537:",
["14085"]="/src/classes/Events/Interface Events/SiblingAddedInterfaceEvent.luo:8:",
["14086"]="/src/classes/Events/Interface Events/SiblingAddedInterfaceEvent.luo:9:",
["14087"]="/src/classes/Events/Interface Events/SiblingAddedInterfaceEvent.luo:10:",
["14111"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:14:",
["14112"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:15:",
["14113"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:16:",
["14114"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:17:",
["14115"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:18:",
["14116"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:19:",
["14117"]="/src/classes/Events/Mouse Events/DownMouseEvent.luo:20:",
["14149"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:15:",
["14150"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:16:",
["14151"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:17:",
["14152"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:18:",
["14153"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:19:",
["14154"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:20:",
["14155"]="/src/classes/Events/Mouse Events/HeldMouseEvent.luo:21:",
["14174"]="/src/classes/Events/Interface Events/ChildRemovedInterfaceEvent.luo:15:",
["14175"]="/src/classes/Events/Interface Events/ChildRemovedInterfaceEvent.luo:16:",
["14176"]="/src/classes/Events/Interface Events/ChildRemovedInterfaceEvent.luo:17:",
["14177"]="/src/classes/Events/Interface Events/ChildRemovedInterfaceEvent.luo:18:",
["14178"]="/src/classes/KeyboardShortcut.luo:39:",
["14179"]="/src/classes/KeyboardShortcut.luo:40:",
["14180"]="/src/classes/KeyboardShortcut.luo:41:",
["14181"]="/src/classes/KeyboardShortcut.luo:42:",
["14182"]="/src/classes/KeyboardShortcut.luo:43:",
["14183"]="/src/classes/KeyboardShortcut.luo:44:",
["14184"]="/src/classes/KeyboardShortcut.luo:45:",
["14185"]="/src/classes/KeyboardShortcut.luo:46:",
["14186"]="/src/classes/KeyboardShortcut.luo:47:",
["14187"]="/src/classes/KeyboardShortcut.luo:48:",
["14188"]="/src/classes/KeyboardShortcut.luo:49:",
["14189"]="/src/classes/KeyboardShortcut.luo:50:",
["14190"]="/src/classes/KeyboardShortcut.luo:51:",
["14191"]="/src/classes/KeyboardShortcut.luo:52:",
["14192"]="/src/classes/KeyboardShortcut.luo:53:",
["14193"]="/src/classes/KeyboardShortcut.luo:54:",
["14194"]="/src/classes/KeyboardShortcut.luo:55:",
["14203"]="/src/classes/KeyboardShortcut.luo:17:",
["14204"]="/src/classes/KeyboardShortcut.luo:18:",
["14205"]="/src/classes/KeyboardShortcut.luo:19:",
["14206"]="/src/classes/KeyboardShortcut.luo:62:",
["14207"]="/src/classes/KeyboardShortcut.luo:63:",
["14208"]="/src/classes/KeyboardShortcut.luo:64:",
["14209"]="/src/classes/KeyboardShortcut.luo:25:",
["14210"]="/src/classes/KeyboardShortcut.luo:26:",
["14211"]="/src/classes/KeyboardShortcut.luo:27:",
["14212"]="/src/classes/KeyboardShortcut.luo:28:",
["14213"]="/src/classes/KeyboardShortcut.luo:29:",
["14214"]="/src/classes/KeyboardShortcut.luo:30:",
["14215"]="/src/classes/KeyboardShortcut.luo:31:",
["14216"]="/src/classes/KeyboardShortcut.luo:32:",
["14237"]="/src/classes/Events/Keyboard Events/DownKeyEvent.luo:7:",
["14238"]="/src/classes/Events/Keyboard Events/DownKeyEvent.luo:8:",
["14239"]="/src/classes/Events/Keyboard Events/DownKeyEvent.luo:9:",
["14240"]="/src/classes/Events/Keyboard Events/DownKeyEvent.luo:10:",
["14313"]="/src/classes/Exceptions/Class System/StyleClassException.luo:4:",
["14314"]="/src/classes/Exceptions/Class System/StyleClassException.luo:5:",
["14315"]="/src/classes/Exceptions/Class System/StyleClassException.luo:6:",
["14316"]="/src/classes/Exceptions/Class System/StyleClassException.luo:7:",
["14327"]="/src/classes/Animation.luo:79:",
["14328"]="/src/classes/Animation.luo:80:",
["14329"]="/src/classes/Animation.luo:81:",
["14330"]="/src/classes/Animation.luo:82:",
["14331"]="/src/classes/Animation.luo:83:",
["14332"]="/src/classes/Animation.luo:84:",
["14333"]="/src/classes/Animation.luo:85:",
["14334"]="/src/classes/Animation.luo:86:",
["14335"]="/src/classes/Animation.luo:87:",
["14336"]="/src/classes/Animation.luo:117:",
["14337"]="/src/classes/Animation.luo:118:",
["14338"]="/src/classes/Animation.luo:119:",
["14339"]="/src/classes/Animation.luo:94:",
["14340"]="/src/classes/Animation.luo:95:",
["14341"]="/src/classes/Animation.luo:96:",
["14342"]="/src/classes/Animation.luo:97:",
["14343"]="/src/classes/Animation.luo:98:",
["14344"]="/src/classes/Animation.luo:99:",
["14345"]="/src/classes/Animation.luo:100:",
["14346"]="/src/classes/Animation.luo:101:",
["14347"]="/src/classes/Animation.luo:102:",
["14348"]="/src/classes/Animation.luo:103:",
["14349"]="/src/classes/Animation.luo:104:",
["14350"]="/src/classes/Animation.luo:105:",
["14351"]="/src/classes/Animation.luo:106:",
["14352"]="/src/classes/Animation.luo:107:",
["14353"]="/src/classes/Animation.luo:108:",
["14354"]="/src/classes/Animation.luo:109:",
["14355"]="/src/classes/Animation.luo:110:",
["14356"]="/src/classes/Animation.luo:111:",
["14357"]="/src/classes/Animation.luo:126:",
["14358"]="/src/classes/Animation.luo:127:",
["14359"]="/src/classes/Animation.luo:128:",
["14401"]="/src/classes/Views/Containers/Tree/TreeItem.luo:6:",
["14402"]="/src/classes/Views/Containers/Tree/TreeItem.luo:7:",
["14403"]="/src/classes/Views/Containers/Tree/TreeItem.luo:8:",
["14404"]="/src/classes/Views/Containers/Tree/TreeItem.luo:9:",
["14405"]="/src/classes/Views/Containers/Tree/TreeItem.luo:10:",
["14406"]="/src/classes/Views/Containers/Tree/TreeItem.luo:11:",
["14407"]="/src/classes/Views/Containers/Tree/TreeItem.luo:12:",
["14408"]="/src/classes/Views/Containers/Tree/TreeItem.luo:13:",
["14416"]="/src/classes/Symbols/ThumbnailSymbol.luo:5:",
["14417"]="/src/classes/Symbols/ThumbnailSymbol.luo:6:",
["14418"]="/src/classes/Symbols/ThumbnailSymbol.luo:7:",
["14419"]="/src/classes/Symbols/ThumbnailSymbol.luo:8:",
["14420"]="/src/classes/Symbols/ThumbnailSymbol.luo:9:",
["14421"]="/src/classes/Symbols/ThumbnailSymbol.luo:10:",
["14422"]="/src/classes/Symbols/ThumbnailSymbol.luo:11:",
["14423"]="/src/classes/Symbols/ThumbnailSymbol.luo:12:",
["14424"]="/src/classes/Symbols/ThumbnailSymbol.luo:13:",
["14425"]="/src/classes/Symbols/ThumbnailSymbol.luo:14:",
["14426"]="/src/classes/Symbols/ThumbnailSymbol.luo:15:",
["14427"]="/src/classes/Symbols/ThumbnailSymbol.luo:16:",
["14428"]="/src/classes/Symbols/ThumbnailSymbol.luo:17:",
["14429"]="/src/classes/Symbols/ThumbnailSymbol.luo:18:",
["14430"]="/src/classes/Symbols/ThumbnailSymbol.luo:19:",
["14431"]="/src/classes/Symbols/ThumbnailSymbol.luo:20:",
["14432"]="/src/classes/Symbols/ThumbnailSymbol.luo:21:",
["14433"]="/src/classes/Symbols/ThumbnailSymbol.luo:22:",
["14434"]="/src/classes/Symbols/ThumbnailSymbol.luo:23:",
["14435"]="/src/classes/Symbols/ThumbnailSymbol.luo:24:",
["14436"]="/src/classes/Symbols/ThumbnailSymbol.luo:25:",
["14437"]="/src/classes/Symbols/ThumbnailSymbol.luo:26:",
["14438"]="/src/classes/Symbols/ThumbnailSymbol.luo:27:",
["14439"]="/src/classes/Symbols/ThumbnailSymbol.luo:28:",
["14440"]="/src/classes/Symbols/ThumbnailSymbol.luo:29:"}local _,__t=pcall(error,"<@",2)local _C_09q=__t:match("^(.+):%d+: <@")function catchErrors(f,...)local a = {...}local r = {pcall(function()return f(unpack(a))end)}if not r[1] then local e = r[2] local n,m=e:match("^".._C_09q .. ":(%d+): (.+)$")if n then local p=_C_09p[n]if p then error(p..m,0)end end error(e,0)else table.remove(r,1)return unpack(r)end end