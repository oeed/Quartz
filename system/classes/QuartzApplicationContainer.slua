
local scaleMethods = Image.scaleMethods
local mimes = Metadata.mimes

class QuartzApplicationContainer extends ApplicationContainer {

    topBar = TopBarContainer.link;
	backgroundImage = Image;
    homeContainer = HomeContainer.link;

}

function QuartzApplicationContainer:initialise( ... )
    self:super( ... )
	self.backgroundImage = Image.static:fromPath( self.application.settings.backgroundImagePath )
    self:event( ReadyInterfaceEvent, self.onReady, Event.phases.AFTER )
end

function QuartzApplicationContainer:onReady( ReadyInterfaceEvent event, Event.phases phase )
	self:renderBootImage()
    self.homeContainer:focus()
end

function QuartzApplicationContainer:onDraw()
	self:super()
	self.canvas:image( self.backgroundImage, 1, 1, self.width, self.height, scaleMethods.COVER )
end

--[[
	@desc Renders an image to be shown at boot to have a graceful transition
]]
function QuartzApplicationContainer:renderBootImage()
	local width, height = self.width, self.height
	local canvas = Canvas( width, height )
	canvas:image( self.backgroundImage, 1, 1, width, height, scaleMethods.COVER )

	-- draw the corners
	local corner = { 
		[1] = { [1] = true, [2] = true, [3] = true, [4] = true, [height - 3] = true, [height - 2] = true, [height - 1] = true, [height] = true },
		[2] = { [1] = true, [2] = true, [height - 1] = true, [height] = true },
		[3] = { [1] = true, [height] = true },
		[4] = { [1] = true, [height] = true },
		[width - 3] = { [1] = true, [height] = true },
		[width - 2] = { [1] = true, [height] = true },
		[width - 1] = { [1] = true, [2] = true, [height - 1] = true, [height] = true },
		[width] = { [1] = true, [2] = true, [3] = true, [4] = true, [height - 3] = true, [height - 2] = true, [height - 1] = true, [height] = true },
	}
	local pixels = canvas.pixels
	local blackColour = Graphics.colours.BLACK
	for x, v in pairs( corner ) do
		for y, v in pairs( v ) do
			pixels[ ( y - 1 ) * width + x ] = blackColour
		end
	end

	local image = canvas:toImage()
	local userDataFolder = self.application.userDataFolder
	userDataFolder:makeSubfile( "bootImage.nfp", mimes.NFP, false, image:toPaintFormat() )
end

function QuartzApplicationContainer.backgroundImage:set( backgroundImage )
	self.backgroundImage = backgroundImage
	self:renderBootImage()
	self.needsDraw = true
end
